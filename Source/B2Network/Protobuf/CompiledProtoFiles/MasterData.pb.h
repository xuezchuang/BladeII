// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MasterData.proto

#ifndef PROTOBUF_MasterData_2eproto__INCLUDED
#define PROTOBUF_MasterData_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "CommonData.pb.h"
// @@protoc_insertion_point(includes)

namespace b2 {
namespace protocol {
namespace masterdata {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MasterData_2eproto();
void protobuf_AssignDesc_MasterData_2eproto();
void protobuf_ShutdownFile_MasterData_2eproto();

class mdSkillInfo;
class mdSkillOption;
class mdSkillLevelUp;
class mdItemLevelupExpFactor;
class mdItemOptionAddValue;
class mdItemLevelupCost;
class mdItemLevelupFactor;
class mdItemEnhanceCost;
class mdCostumeEnhanceCost;
class mdItemSealCost;
class mdItemEnhanceEffectInfo;
class mdItemSurpassLevel;
class mdItemDismantleInfo;
class mdResurrectionInfo;
class mdTeamBattleFormationInfo;
class mdRankInfo;
class mdMainQuestInfo;
class mdDailyQuestInfo;
class mdRewardInfo;
class mdDailyMatchReward;
class mdMatchRankingReward;
class mdStageInfo;
class mdCounterDungeon;
class mdCounterDungeonPeriod;
class mdCounterDungeonWeekReward;
class mdMissionInfo;
class mdSerialMissionInfo;
class mdMissionCompletePointInfo;
class mdWingEnhance;
class mdWingUpgrade;
class mdWingOptionValue;
class mdWingOptionOpen;
class mdWingOptionMaxLevel;
class mdHeroTowerFloor;
class mdRelicInfo;
class mdRelicGradeInfo;
class mdRelicLevelInfo;
class mdGuildBattleResultReward;
class mdGuildBattleSeasonReward;
class mdGuildBattleScheduleInfo;
class mdGuildSkill;
class mdGuildExp;
class mdGuildSupportItem;
class mdGuildMercenary;
class mdGuildMercenarySkill;
class mdGuildMercenaryMastery;
class mdGuildMercenaryDonation;
class mdStageFixedDrop;
class mdShopCashBonus;
class mdShopFundsSale;
class mdShopLotteryPrice;
class mdShopLotteryPossibleGrade;
class mdShopLotterySpecialGrade;
class mdShopLotteryDailyLimit;
class mdShopLotterySale;
class mdItemInfo;
class mdCostumeInfo;
class mdShopProduct;
class mdShopPackage;
class mdShopPackageProduct;
class mdShopMileageReward;
class mdMarketProduct;
class mdDailyAttendanceInfo;
class mdRaidInfo;
class mdMonsterInfo;
class mdGeneralLottery;
class mdFixedGradeLottery;
class mdPrefixSelectiveLottery;
class mdSelectiveLottery;
class mdAdditionalMatchCost;
class mdDuelRewardBoxInfo;
class mdRandomRewardGroupInfo;
class mdAssaultVictoryRewardInfo;
class mdAssaultMvpRewardInfo;
class mdCollectionReward;
class mdItemSet;
class mdSelectItemOption;
class mdSelectItemSealOption;
class mdEventAttendance;
class mdEventAttendanceReward;
class mdDailyPlayTimeReward;
class mdTutorialInfo;
class mdAetherOptionInfo;
class mdAetherSlotInfo;
class mdAetherEnhanceInfo;
class mdAetherEnhanceOptionInfo;
class mdAetherSetOptionInfo;
class mdDuelModeReward;
class mdRaidExp;
class mdUnitySkillMission;
class mdUnitySkillOption;
class mdUnitySkillAwakenMission;
class mdRestReward;
class mdEventInfo;
class mdPointEvent;
class mdPointEventReward;
class mdGemPurchaseEventReward;
class mdLevelUpEvent;
class mdHotTimeEvent;
class mdSeasonMissionEvent;
class mdStageClearEvent;
class mdKakaoFriendInviteReward;
class mdHotTimeProduct;
class mdMagicShopProduct;
class mdMagicShopRenewalCost;
class mdDuelModeSettleSchedule;
class mdShopLevelUpPackage;
class mdShopReachLevelPackage;
class mdShopFlatRatePackageBonus;
class mdShopPackageTab;
class mdWebUrl;
class mdTenLotteryEvent;
class mdSpendGemEvent;
class mdTenLotterySavingsEvent;
class mdDiceEventMission;
class mdDiceEventCell;
class mdDiceEventFinishReward;
class mdDiceEventBuyPoint;
class mdDiceEventMileage;
class mdDonationEventInfo;
class mdDonationPointRankingRewardInfo;
class mdDonationBundleFixedRewardInfo;
class mdDonationPointStepRewardInfo;
class mdFairyInfo;
class mdFairyLevelupCost;
class mdFairyOpenInfo;
class mdTotemInfo;
class mdSelectTotemOption;
class mdTotemRefineInfo;
class mdTotemRefineRateInfo;
class mdTotemDismantleInfo;
class mdTotemBonusOptionInfo;
class mdDimensionInfo;
class mdTotemDropGradeRate;
class mdTotemDropGroupRate;
class mdDimensionWeekReward;
class mdTotemPrefixLotteryInfo;
class mdExchangeSystemInfo;
class mdExchangeSystemCost;
class mdQualityTransRateInfo;
class mdLotteryShopRateQualityInfo;
class mdFactoryInfo;
class mdFactoryMaterialTransInfo;
class mdFactoryLimitInfo;
class mdSealBoxInfo;
class mdSealBoxRewardInfo;
class mdSealBoxRewardRateInfo;

enum mdCounterDungeon_TYPE {
  mdCounterDungeon_TYPE_ARMOR = 1,
  mdCounterDungeon_TYPE_WEAPON = 2,
  mdCounterDungeon_TYPE_ACCESSORY = 3,
  mdCounterDungeon_TYPE_GOLD = 4
};
bool mdCounterDungeon_TYPE_IsValid(int value);
const mdCounterDungeon_TYPE mdCounterDungeon_TYPE_TYPE_MIN = mdCounterDungeon_TYPE_ARMOR;
const mdCounterDungeon_TYPE mdCounterDungeon_TYPE_TYPE_MAX = mdCounterDungeon_TYPE_GOLD;
const int mdCounterDungeon_TYPE_TYPE_ARRAYSIZE = mdCounterDungeon_TYPE_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* mdCounterDungeon_TYPE_descriptor();
inline const ::std::string& mdCounterDungeon_TYPE_Name(mdCounterDungeon_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    mdCounterDungeon_TYPE_descriptor(), value);
}
inline bool mdCounterDungeon_TYPE_Parse(
    const ::std::string& name, mdCounterDungeon_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<mdCounterDungeon_TYPE>(
    mdCounterDungeon_TYPE_descriptor(), name, value);
}
enum mdCounterDungeon_DIFFICULTY {
  mdCounterDungeon_DIFFICULTY_EASY = 1,
  mdCounterDungeon_DIFFICULTY_NORMAL = 2,
  mdCounterDungeon_DIFFICULTY_HARD = 3
};
bool mdCounterDungeon_DIFFICULTY_IsValid(int value);
const mdCounterDungeon_DIFFICULTY mdCounterDungeon_DIFFICULTY_DIFFICULTY_MIN = mdCounterDungeon_DIFFICULTY_EASY;
const mdCounterDungeon_DIFFICULTY mdCounterDungeon_DIFFICULTY_DIFFICULTY_MAX = mdCounterDungeon_DIFFICULTY_HARD;
const int mdCounterDungeon_DIFFICULTY_DIFFICULTY_ARRAYSIZE = mdCounterDungeon_DIFFICULTY_DIFFICULTY_MAX + 1;

const ::google::protobuf::EnumDescriptor* mdCounterDungeon_DIFFICULTY_descriptor();
inline const ::std::string& mdCounterDungeon_DIFFICULTY_Name(mdCounterDungeon_DIFFICULTY value) {
  return ::google::protobuf::internal::NameOfEnum(
    mdCounterDungeon_DIFFICULTY_descriptor(), value);
}
inline bool mdCounterDungeon_DIFFICULTY_Parse(
    const ::std::string& name, mdCounterDungeon_DIFFICULTY* value) {
  return ::google::protobuf::internal::ParseNamedEnum<mdCounterDungeon_DIFFICULTY>(
    mdCounterDungeon_DIFFICULTY_descriptor(), name, value);
}
enum mdGuildMercenaryDonation_DonationType {
  mdGuildMercenaryDonation_DonationType_GOLD = 1,
  mdGuildMercenaryDonation_DonationType_GEM = 2
};
bool mdGuildMercenaryDonation_DonationType_IsValid(int value);
const mdGuildMercenaryDonation_DonationType mdGuildMercenaryDonation_DonationType_DonationType_MIN = mdGuildMercenaryDonation_DonationType_GOLD;
const mdGuildMercenaryDonation_DonationType mdGuildMercenaryDonation_DonationType_DonationType_MAX = mdGuildMercenaryDonation_DonationType_GEM;
const int mdGuildMercenaryDonation_DonationType_DonationType_ARRAYSIZE = mdGuildMercenaryDonation_DonationType_DonationType_MAX + 1;

const ::google::protobuf::EnumDescriptor* mdGuildMercenaryDonation_DonationType_descriptor();
inline const ::std::string& mdGuildMercenaryDonation_DonationType_Name(mdGuildMercenaryDonation_DonationType value) {
  return ::google::protobuf::internal::NameOfEnum(
    mdGuildMercenaryDonation_DonationType_descriptor(), value);
}
inline bool mdGuildMercenaryDonation_DonationType_Parse(
    const ::std::string& name, mdGuildMercenaryDonation_DonationType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<mdGuildMercenaryDonation_DonationType>(
    mdGuildMercenaryDonation_DonationType_descriptor(), name, value);
}
enum mdEventAttendance_BonusType {
  mdEventAttendance_BonusType_NONE = 0,
  mdEventAttendance_BonusType_PERIODIC_PACKAGE = 1
};
bool mdEventAttendance_BonusType_IsValid(int value);
const mdEventAttendance_BonusType mdEventAttendance_BonusType_BonusType_MIN = mdEventAttendance_BonusType_NONE;
const mdEventAttendance_BonusType mdEventAttendance_BonusType_BonusType_MAX = mdEventAttendance_BonusType_PERIODIC_PACKAGE;
const int mdEventAttendance_BonusType_BonusType_ARRAYSIZE = mdEventAttendance_BonusType_BonusType_MAX + 1;

const ::google::protobuf::EnumDescriptor* mdEventAttendance_BonusType_descriptor();
inline const ::std::string& mdEventAttendance_BonusType_Name(mdEventAttendance_BonusType value) {
  return ::google::protobuf::internal::NameOfEnum(
    mdEventAttendance_BonusType_descriptor(), value);
}
inline bool mdEventAttendance_BonusType_Parse(
    const ::std::string& name, mdEventAttendance_BonusType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<mdEventAttendance_BonusType>(
    mdEventAttendance_BonusType_descriptor(), name, value);
}
// ===================================================================

class mdSkillInfo : public ::google::protobuf::Message {
 public:
  mdSkillInfo();
  virtual ~mdSkillInfo();

  mdSkillInfo(const mdSkillInfo& from);

  inline mdSkillInfo& operator=(const mdSkillInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdSkillInfo& default_instance();

  void Swap(mdSkillInfo* other);

  // implements Message ----------------------------------------------

  mdSkillInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdSkillInfo& from);
  void MergeFrom(const mdSkillInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 skill_id = 1;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::int32 skill_id() const;
  inline void set_skill_id(::google::protobuf::int32 value);

  // required .b2.protocol.commondata.Character.TYPE character_type = 2;
  inline bool has_character_type() const;
  inline void clear_character_type();
  static const int kCharacterTypeFieldNumber = 2;
  inline ::b2::protocol::commondata::Character_TYPE character_type() const;
  inline void set_character_type(::b2::protocol::commondata::Character_TYPE value);

  // required int32 learn_level = 3;
  inline bool has_learn_level() const;
  inline void clear_learn_level();
  static const int kLearnLevelFieldNumber = 3;
  inline ::google::protobuf::int32 learn_level() const;
  inline void set_learn_level(::google::protobuf::int32 value);

  // required int32 max_skill_level = 4;
  inline bool has_max_skill_level() const;
  inline void clear_max_skill_level();
  static const int kMaxSkillLevelFieldNumber = 4;
  inline ::google::protobuf::int32 max_skill_level() const;
  inline void set_max_skill_level(::google::protobuf::int32 value);

  // required bool usable = 5;
  inline bool has_usable() const;
  inline void clear_usable();
  static const int kUsableFieldNumber = 5;
  inline bool usable() const;
  inline void set_usable(bool value);

  // required int32 level_up_cost_factor = 6;
  inline bool has_level_up_cost_factor() const;
  inline void clear_level_up_cost_factor();
  static const int kLevelUpCostFactorFieldNumber = 6;
  inline ::google::protobuf::int32 level_up_cost_factor() const;
  inline void set_level_up_cost_factor(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdSkillInfo)
 private:
  inline void set_has_skill_id();
  inline void clear_has_skill_id();
  inline void set_has_character_type();
  inline void clear_has_character_type();
  inline void set_has_learn_level();
  inline void clear_has_learn_level();
  inline void set_has_max_skill_level();
  inline void clear_has_max_skill_level();
  inline void set_has_usable();
  inline void clear_has_usable();
  inline void set_has_level_up_cost_factor();
  inline void clear_has_level_up_cost_factor();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 skill_id_;
  int character_type_;
  ::google::protobuf::int32 learn_level_;
  ::google::protobuf::int32 max_skill_level_;
  bool usable_;
  ::google::protobuf::int32 level_up_cost_factor_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdSkillInfo* default_instance_;
};
// -------------------------------------------------------------------

class mdSkillOption : public ::google::protobuf::Message {
 public:
  mdSkillOption();
  virtual ~mdSkillOption();

  mdSkillOption(const mdSkillOption& from);

  inline mdSkillOption& operator=(const mdSkillOption& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdSkillOption& default_instance();

  void Swap(mdSkillOption* other);

  // implements Message ----------------------------------------------

  mdSkillOption* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdSkillOption& from);
  void MergeFrom(const mdSkillOption& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 skill_id = 1;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::int32 skill_id() const;
  inline void set_skill_id(::google::protobuf::int32 value);

  // required int32 skill_level = 2;
  inline bool has_skill_level() const;
  inline void clear_skill_level();
  static const int kSkillLevelFieldNumber = 2;
  inline ::google::protobuf::int32 skill_level() const;
  inline void set_skill_level(::google::protobuf::int32 value);

  // required int32 option_id = 3;
  inline bool has_option_id() const;
  inline void clear_option_id();
  static const int kOptionIdFieldNumber = 3;
  inline ::google::protobuf::int32 option_id() const;
  inline void set_option_id(::google::protobuf::int32 value);

  // required float option_value = 4;
  inline bool has_option_value() const;
  inline void clear_option_value();
  static const int kOptionValueFieldNumber = 4;
  inline float option_value() const;
  inline void set_option_value(float value);

  // required float power = 5;
  inline bool has_power() const;
  inline void clear_power();
  static const int kPowerFieldNumber = 5;
  inline float power() const;
  inline void set_power(float value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdSkillOption)
 private:
  inline void set_has_skill_id();
  inline void clear_has_skill_id();
  inline void set_has_skill_level();
  inline void clear_has_skill_level();
  inline void set_has_option_id();
  inline void clear_has_option_id();
  inline void set_has_option_value();
  inline void clear_has_option_value();
  inline void set_has_power();
  inline void clear_has_power();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 skill_id_;
  ::google::protobuf::int32 skill_level_;
  ::google::protobuf::int32 option_id_;
  float option_value_;
  float power_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdSkillOption* default_instance_;
};
// -------------------------------------------------------------------

class mdSkillLevelUp : public ::google::protobuf::Message {
 public:
  mdSkillLevelUp();
  virtual ~mdSkillLevelUp();

  mdSkillLevelUp(const mdSkillLevelUp& from);

  inline mdSkillLevelUp& operator=(const mdSkillLevelUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdSkillLevelUp& default_instance();

  void Swap(mdSkillLevelUp* other);

  // implements Message ----------------------------------------------

  mdSkillLevelUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdSkillLevelUp& from);
  void MergeFrom(const mdSkillLevelUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 skill_id = 1;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::int32 skill_id() const;
  inline void set_skill_id(::google::protobuf::int32 value);

  // required int32 skill_level = 2;
  inline bool has_skill_level() const;
  inline void clear_skill_level();
  static const int kSkillLevelFieldNumber = 2;
  inline ::google::protobuf::int32 skill_level() const;
  inline void set_skill_level(::google::protobuf::int32 value);

  // required int32 req_skill_point = 3;
  inline bool has_req_skill_point() const;
  inline void clear_req_skill_point();
  static const int kReqSkillPointFieldNumber = 3;
  inline ::google::protobuf::int32 req_skill_point() const;
  inline void set_req_skill_point(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdSkillLevelUp)
 private:
  inline void set_has_skill_id();
  inline void clear_has_skill_id();
  inline void set_has_skill_level();
  inline void clear_has_skill_level();
  inline void set_has_req_skill_point();
  inline void clear_has_req_skill_point();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 skill_id_;
  ::google::protobuf::int32 skill_level_;
  ::google::protobuf::int32 req_skill_point_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdSkillLevelUp* default_instance_;
};
// -------------------------------------------------------------------

class mdItemLevelupExpFactor : public ::google::protobuf::Message {
 public:
  mdItemLevelupExpFactor();
  virtual ~mdItemLevelupExpFactor();

  mdItemLevelupExpFactor(const mdItemLevelupExpFactor& from);

  inline mdItemLevelupExpFactor& operator=(const mdItemLevelupExpFactor& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdItemLevelupExpFactor& default_instance();

  void Swap(mdItemLevelupExpFactor* other);

  // implements Message ----------------------------------------------

  mdItemLevelupExpFactor* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdItemLevelupExpFactor& from);
  void MergeFrom(const mdItemLevelupExpFactor& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string type_name = 1;
  inline bool has_type_name() const;
  inline void clear_type_name();
  static const int kTypeNameFieldNumber = 1;
  inline const ::std::string& type_name() const;
  inline void set_type_name(const ::std::string& value);
  inline void set_type_name(const char* value);
  inline void set_type_name(const char* value, size_t size);
  inline ::std::string* mutable_type_name();
  inline ::std::string* release_type_name();
  inline void set_allocated_type_name(::std::string* type_name);

  // required int32 key_code = 2;
  inline bool has_key_code() const;
  inline void clear_key_code();
  static const int kKeyCodeFieldNumber = 2;
  inline ::google::protobuf::int32 key_code() const;
  inline void set_key_code(::google::protobuf::int32 value);

  // required double factor = 3;
  inline bool has_factor() const;
  inline void clear_factor();
  static const int kFactorFieldNumber = 3;
  inline double factor() const;
  inline void set_factor(double value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdItemLevelupExpFactor)
 private:
  inline void set_has_type_name();
  inline void clear_has_type_name();
  inline void set_has_key_code();
  inline void clear_has_key_code();
  inline void set_has_factor();
  inline void clear_has_factor();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* type_name_;
  double factor_;
  ::google::protobuf::int32 key_code_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdItemLevelupExpFactor* default_instance_;
};
// -------------------------------------------------------------------

class mdItemOptionAddValue : public ::google::protobuf::Message {
 public:
  mdItemOptionAddValue();
  virtual ~mdItemOptionAddValue();

  mdItemOptionAddValue(const mdItemOptionAddValue& from);

  inline mdItemOptionAddValue& operator=(const mdItemOptionAddValue& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdItemOptionAddValue& default_instance();

  void Swap(mdItemOptionAddValue* other);

  // implements Message ----------------------------------------------

  mdItemOptionAddValue* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdItemOptionAddValue& from);
  void MergeFrom(const mdItemOptionAddValue& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 option_id = 1;
  inline bool has_option_id() const;
  inline void clear_option_id();
  static const int kOptionIdFieldNumber = 1;
  inline ::google::protobuf::int32 option_id() const;
  inline void set_option_id(::google::protobuf::int32 value);

  // required float add_value = 2;
  inline bool has_add_value() const;
  inline void clear_add_value();
  static const int kAddValueFieldNumber = 2;
  inline float add_value() const;
  inline void set_add_value(float value);

  // required float power_factor = 3;
  inline bool has_power_factor() const;
  inline void clear_power_factor();
  static const int kPowerFactorFieldNumber = 3;
  inline float power_factor() const;
  inline void set_power_factor(float value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdItemOptionAddValue)
 private:
  inline void set_has_option_id();
  inline void clear_has_option_id();
  inline void set_has_add_value();
  inline void clear_has_add_value();
  inline void set_has_power_factor();
  inline void clear_has_power_factor();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 option_id_;
  float add_value_;
  float power_factor_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdItemOptionAddValue* default_instance_;
};
// -------------------------------------------------------------------

class mdItemLevelupCost : public ::google::protobuf::Message {
 public:
  mdItemLevelupCost();
  virtual ~mdItemLevelupCost();

  mdItemLevelupCost(const mdItemLevelupCost& from);

  inline mdItemLevelupCost& operator=(const mdItemLevelupCost& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdItemLevelupCost& default_instance();

  void Swap(mdItemLevelupCost* other);

  // implements Message ----------------------------------------------

  mdItemLevelupCost* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdItemLevelupCost& from);
  void MergeFrom(const mdItemLevelupCost& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .b2.protocol.commondata.Inventory.TYPE inventory_type = 1;
  inline bool has_inventory_type() const;
  inline void clear_inventory_type();
  static const int kInventoryTypeFieldNumber = 1;
  inline ::b2::protocol::commondata::Inventory_TYPE inventory_type() const;
  inline void set_inventory_type(::b2::protocol::commondata::Inventory_TYPE value);

  // required int32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // required int32 price_grade1 = 3;
  inline bool has_price_grade1() const;
  inline void clear_price_grade1();
  static const int kPriceGrade1FieldNumber = 3;
  inline ::google::protobuf::int32 price_grade1() const;
  inline void set_price_grade1(::google::protobuf::int32 value);

  // required int32 price_grade2 = 4;
  inline bool has_price_grade2() const;
  inline void clear_price_grade2();
  static const int kPriceGrade2FieldNumber = 4;
  inline ::google::protobuf::int32 price_grade2() const;
  inline void set_price_grade2(::google::protobuf::int32 value);

  // required int32 price_grade3 = 5;
  inline bool has_price_grade3() const;
  inline void clear_price_grade3();
  static const int kPriceGrade3FieldNumber = 5;
  inline ::google::protobuf::int32 price_grade3() const;
  inline void set_price_grade3(::google::protobuf::int32 value);

  // required int32 price_grade4 = 6;
  inline bool has_price_grade4() const;
  inline void clear_price_grade4();
  static const int kPriceGrade4FieldNumber = 6;
  inline ::google::protobuf::int32 price_grade4() const;
  inline void set_price_grade4(::google::protobuf::int32 value);

  // required int32 price_grade5 = 7;
  inline bool has_price_grade5() const;
  inline void clear_price_grade5();
  static const int kPriceGrade5FieldNumber = 7;
  inline ::google::protobuf::int32 price_grade5() const;
  inline void set_price_grade5(::google::protobuf::int32 value);

  // required int32 price_grade6 = 8;
  inline bool has_price_grade6() const;
  inline void clear_price_grade6();
  static const int kPriceGrade6FieldNumber = 8;
  inline ::google::protobuf::int32 price_grade6() const;
  inline void set_price_grade6(::google::protobuf::int32 value);

  // required int32 price_grade7 = 9;
  inline bool has_price_grade7() const;
  inline void clear_price_grade7();
  static const int kPriceGrade7FieldNumber = 9;
  inline ::google::protobuf::int32 price_grade7() const;
  inline void set_price_grade7(::google::protobuf::int32 value);

  // required int32 price_grade8 = 10;
  inline bool has_price_grade8() const;
  inline void clear_price_grade8();
  static const int kPriceGrade8FieldNumber = 10;
  inline ::google::protobuf::int32 price_grade8() const;
  inline void set_price_grade8(::google::protobuf::int32 value);

  // required int32 price_grade9 = 11;
  inline bool has_price_grade9() const;
  inline void clear_price_grade9();
  static const int kPriceGrade9FieldNumber = 11;
  inline ::google::protobuf::int32 price_grade9() const;
  inline void set_price_grade9(::google::protobuf::int32 value);

  // required int32 price_grade10 = 12;
  inline bool has_price_grade10() const;
  inline void clear_price_grade10();
  static const int kPriceGrade10FieldNumber = 12;
  inline ::google::protobuf::int32 price_grade10() const;
  inline void set_price_grade10(::google::protobuf::int32 value);

  // required int32 price_grade11 = 13;
  inline bool has_price_grade11() const;
  inline void clear_price_grade11();
  static const int kPriceGrade11FieldNumber = 13;
  inline ::google::protobuf::int32 price_grade11() const;
  inline void set_price_grade11(::google::protobuf::int32 value);

  // required int32 price_grade12 = 14;
  inline bool has_price_grade12() const;
  inline void clear_price_grade12();
  static const int kPriceGrade12FieldNumber = 14;
  inline ::google::protobuf::int32 price_grade12() const;
  inline void set_price_grade12(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdItemLevelupCost)
 private:
  inline void set_has_inventory_type();
  inline void clear_has_inventory_type();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_price_grade1();
  inline void clear_has_price_grade1();
  inline void set_has_price_grade2();
  inline void clear_has_price_grade2();
  inline void set_has_price_grade3();
  inline void clear_has_price_grade3();
  inline void set_has_price_grade4();
  inline void clear_has_price_grade4();
  inline void set_has_price_grade5();
  inline void clear_has_price_grade5();
  inline void set_has_price_grade6();
  inline void clear_has_price_grade6();
  inline void set_has_price_grade7();
  inline void clear_has_price_grade7();
  inline void set_has_price_grade8();
  inline void clear_has_price_grade8();
  inline void set_has_price_grade9();
  inline void clear_has_price_grade9();
  inline void set_has_price_grade10();
  inline void clear_has_price_grade10();
  inline void set_has_price_grade11();
  inline void clear_has_price_grade11();
  inline void set_has_price_grade12();
  inline void clear_has_price_grade12();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int inventory_type_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 price_grade1_;
  ::google::protobuf::int32 price_grade2_;
  ::google::protobuf::int32 price_grade3_;
  ::google::protobuf::int32 price_grade4_;
  ::google::protobuf::int32 price_grade5_;
  ::google::protobuf::int32 price_grade6_;
  ::google::protobuf::int32 price_grade7_;
  ::google::protobuf::int32 price_grade8_;
  ::google::protobuf::int32 price_grade9_;
  ::google::protobuf::int32 price_grade10_;
  ::google::protobuf::int32 price_grade11_;
  ::google::protobuf::int32 price_grade12_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdItemLevelupCost* default_instance_;
};
// -------------------------------------------------------------------

class mdItemLevelupFactor : public ::google::protobuf::Message {
 public:
  mdItemLevelupFactor();
  virtual ~mdItemLevelupFactor();

  mdItemLevelupFactor(const mdItemLevelupFactor& from);

  inline mdItemLevelupFactor& operator=(const mdItemLevelupFactor& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdItemLevelupFactor& default_instance();

  void Swap(mdItemLevelupFactor* other);

  // implements Message ----------------------------------------------

  mdItemLevelupFactor* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdItemLevelupFactor& from);
  void MergeFrom(const mdItemLevelupFactor& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // required double factor = 2;
  inline bool has_factor() const;
  inline void clear_factor();
  static const int kFactorFieldNumber = 2;
  inline double factor() const;
  inline void set_factor(double value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdItemLevelupFactor)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_factor();
  inline void clear_has_factor();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double factor_;
  ::google::protobuf::int32 level_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdItemLevelupFactor* default_instance_;
};
// -------------------------------------------------------------------

class mdItemEnhanceCost : public ::google::protobuf::Message {
 public:
  mdItemEnhanceCost();
  virtual ~mdItemEnhanceCost();

  mdItemEnhanceCost(const mdItemEnhanceCost& from);

  inline mdItemEnhanceCost& operator=(const mdItemEnhanceCost& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdItemEnhanceCost& default_instance();

  void Swap(mdItemEnhanceCost* other);

  // implements Message ----------------------------------------------

  mdItemEnhanceCost* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdItemEnhanceCost& from);
  void MergeFrom(const mdItemEnhanceCost& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 enhance_level = 1;
  inline bool has_enhance_level() const;
  inline void clear_enhance_level();
  static const int kEnhanceLevelFieldNumber = 1;
  inline ::google::protobuf::int32 enhance_level() const;
  inline void set_enhance_level(::google::protobuf::int32 value);

  // required int32 enhance_rate = 2;
  inline bool has_enhance_rate() const;
  inline void clear_enhance_rate();
  static const int kEnhanceRateFieldNumber = 2;
  inline ::google::protobuf::int32 enhance_rate() const;
  inline void set_enhance_rate(::google::protobuf::int32 value);

  // required int32 enhance_scroll_cost = 3;
  inline bool has_enhance_scroll_cost() const;
  inline void clear_enhance_scroll_cost();
  static const int kEnhanceScrollCostFieldNumber = 3;
  inline ::google::protobuf::int32 enhance_scroll_cost() const;
  inline void set_enhance_scroll_cost(::google::protobuf::int32 value);

  // required int32 protection_scroll_cost = 4;
  inline bool has_protection_scroll_cost() const;
  inline void clear_protection_scroll_cost();
  static const int kProtectionScrollCostFieldNumber = 4;
  inline ::google::protobuf::int32 protection_scroll_cost() const;
  inline void set_protection_scroll_cost(::google::protobuf::int32 value);

  // required int32 money_cost = 5;
  inline bool has_money_cost() const;
  inline void clear_money_cost();
  static const int kMoneyCostFieldNumber = 5;
  inline ::google::protobuf::int32 money_cost() const;
  inline void set_money_cost(::google::protobuf::int32 value);

  // required int32 exchange_cost_dary_crystal = 6;
  inline bool has_exchange_cost_dary_crystal() const;
  inline void clear_exchange_cost_dary_crystal();
  static const int kExchangeCostDaryCrystalFieldNumber = 6;
  inline ::google::protobuf::int32 exchange_cost_dary_crystal() const;
  inline void set_exchange_cost_dary_crystal(::google::protobuf::int32 value);

  // required int32 exchange_cost_gem = 7;
  inline bool has_exchange_cost_gem() const;
  inline void clear_exchange_cost_gem();
  static const int kExchangeCostGemFieldNumber = 7;
  inline ::google::protobuf::int32 exchange_cost_gem() const;
  inline void set_exchange_cost_gem(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdItemEnhanceCost)
 private:
  inline void set_has_enhance_level();
  inline void clear_has_enhance_level();
  inline void set_has_enhance_rate();
  inline void clear_has_enhance_rate();
  inline void set_has_enhance_scroll_cost();
  inline void clear_has_enhance_scroll_cost();
  inline void set_has_protection_scroll_cost();
  inline void clear_has_protection_scroll_cost();
  inline void set_has_money_cost();
  inline void clear_has_money_cost();
  inline void set_has_exchange_cost_dary_crystal();
  inline void clear_has_exchange_cost_dary_crystal();
  inline void set_has_exchange_cost_gem();
  inline void clear_has_exchange_cost_gem();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 enhance_level_;
  ::google::protobuf::int32 enhance_rate_;
  ::google::protobuf::int32 enhance_scroll_cost_;
  ::google::protobuf::int32 protection_scroll_cost_;
  ::google::protobuf::int32 money_cost_;
  ::google::protobuf::int32 exchange_cost_dary_crystal_;
  ::google::protobuf::int32 exchange_cost_gem_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdItemEnhanceCost* default_instance_;
};
// -------------------------------------------------------------------

class mdCostumeEnhanceCost : public ::google::protobuf::Message {
 public:
  mdCostumeEnhanceCost();
  virtual ~mdCostumeEnhanceCost();

  mdCostumeEnhanceCost(const mdCostumeEnhanceCost& from);

  inline mdCostumeEnhanceCost& operator=(const mdCostumeEnhanceCost& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdCostumeEnhanceCost& default_instance();

  void Swap(mdCostumeEnhanceCost* other);

  // implements Message ----------------------------------------------

  mdCostumeEnhanceCost* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdCostumeEnhanceCost& from);
  void MergeFrom(const mdCostumeEnhanceCost& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 grade = 1;
  inline bool has_grade() const;
  inline void clear_grade();
  static const int kGradeFieldNumber = 1;
  inline ::google::protobuf::int32 grade() const;
  inline void set_grade(::google::protobuf::int32 value);

  // required int32 enhance_level = 2;
  inline bool has_enhance_level() const;
  inline void clear_enhance_level();
  static const int kEnhanceLevelFieldNumber = 2;
  inline ::google::protobuf::int32 enhance_level() const;
  inline void set_enhance_level(::google::protobuf::int32 value);

  // required int32 money_cost = 3;
  inline bool has_money_cost() const;
  inline void clear_money_cost();
  static const int kMoneyCostFieldNumber = 3;
  inline ::google::protobuf::int32 money_cost() const;
  inline void set_money_cost(::google::protobuf::int32 value);

  // required int32 weapon_material_id = 4;
  inline bool has_weapon_material_id() const;
  inline void clear_weapon_material_id();
  static const int kWeaponMaterialIdFieldNumber = 4;
  inline ::google::protobuf::int32 weapon_material_id() const;
  inline void set_weapon_material_id(::google::protobuf::int32 value);

  // required int32 weapon_amount = 5;
  inline bool has_weapon_amount() const;
  inline void clear_weapon_amount();
  static const int kWeaponAmountFieldNumber = 5;
  inline ::google::protobuf::int32 weapon_amount() const;
  inline void set_weapon_amount(::google::protobuf::int32 value);

  // required int32 weapon_restore_amount = 6;
  inline bool has_weapon_restore_amount() const;
  inline void clear_weapon_restore_amount();
  static const int kWeaponRestoreAmountFieldNumber = 6;
  inline ::google::protobuf::int32 weapon_restore_amount() const;
  inline void set_weapon_restore_amount(::google::protobuf::int32 value);

  // required int32 armor_material_id = 7;
  inline bool has_armor_material_id() const;
  inline void clear_armor_material_id();
  static const int kArmorMaterialIdFieldNumber = 7;
  inline ::google::protobuf::int32 armor_material_id() const;
  inline void set_armor_material_id(::google::protobuf::int32 value);

  // required int32 armor_amount = 8;
  inline bool has_armor_amount() const;
  inline void clear_armor_amount();
  static const int kArmorAmountFieldNumber = 8;
  inline ::google::protobuf::int32 armor_amount() const;
  inline void set_armor_amount(::google::protobuf::int32 value);

  // required int32 armor_restore_amount = 9;
  inline bool has_armor_restore_amount() const;
  inline void clear_armor_restore_amount();
  static const int kArmorRestoreAmountFieldNumber = 9;
  inline ::google::protobuf::int32 armor_restore_amount() const;
  inline void set_armor_restore_amount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdCostumeEnhanceCost)
 private:
  inline void set_has_grade();
  inline void clear_has_grade();
  inline void set_has_enhance_level();
  inline void clear_has_enhance_level();
  inline void set_has_money_cost();
  inline void clear_has_money_cost();
  inline void set_has_weapon_material_id();
  inline void clear_has_weapon_material_id();
  inline void set_has_weapon_amount();
  inline void clear_has_weapon_amount();
  inline void set_has_weapon_restore_amount();
  inline void clear_has_weapon_restore_amount();
  inline void set_has_armor_material_id();
  inline void clear_has_armor_material_id();
  inline void set_has_armor_amount();
  inline void clear_has_armor_amount();
  inline void set_has_armor_restore_amount();
  inline void clear_has_armor_restore_amount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 grade_;
  ::google::protobuf::int32 enhance_level_;
  ::google::protobuf::int32 money_cost_;
  ::google::protobuf::int32 weapon_material_id_;
  ::google::protobuf::int32 weapon_amount_;
  ::google::protobuf::int32 weapon_restore_amount_;
  ::google::protobuf::int32 armor_material_id_;
  ::google::protobuf::int32 armor_amount_;
  ::google::protobuf::int32 armor_restore_amount_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdCostumeEnhanceCost* default_instance_;
};
// -------------------------------------------------------------------

class mdItemSealCost : public ::google::protobuf::Message {
 public:
  mdItemSealCost();
  virtual ~mdItemSealCost();

  mdItemSealCost(const mdItemSealCost& from);

  inline mdItemSealCost& operator=(const mdItemSealCost& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdItemSealCost& default_instance();

  void Swap(mdItemSealCost* other);

  // implements Message ----------------------------------------------

  mdItemSealCost* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdItemSealCost& from);
  void MergeFrom(const mdItemSealCost& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 slot = 1;
  inline bool has_slot() const;
  inline void clear_slot();
  static const int kSlotFieldNumber = 1;
  inline ::google::protobuf::int32 slot() const;
  inline void set_slot(::google::protobuf::int32 value);

  // required int32 open_price_type = 2;
  inline bool has_open_price_type() const;
  inline void clear_open_price_type();
  static const int kOpenPriceTypeFieldNumber = 2;
  inline ::google::protobuf::int32 open_price_type() const;
  inline void set_open_price_type(::google::protobuf::int32 value);

  // required int32 open_price = 3;
  inline bool has_open_price() const;
  inline void clear_open_price();
  static const int kOpenPriceFieldNumber = 3;
  inline ::google::protobuf::int32 open_price() const;
  inline void set_open_price(::google::protobuf::int32 value);

  // required int32 template_id1 = 4;
  inline bool has_template_id1() const;
  inline void clear_template_id1();
  static const int kTemplateId1FieldNumber = 4;
  inline ::google::protobuf::int32 template_id1() const;
  inline void set_template_id1(::google::protobuf::int32 value);

  // required int32 amount1 = 5;
  inline bool has_amount1() const;
  inline void clear_amount1();
  static const int kAmount1FieldNumber = 5;
  inline ::google::protobuf::int32 amount1() const;
  inline void set_amount1(::google::protobuf::int32 value);

  // required int32 template_id2 = 6;
  inline bool has_template_id2() const;
  inline void clear_template_id2();
  static const int kTemplateId2FieldNumber = 6;
  inline ::google::protobuf::int32 template_id2() const;
  inline void set_template_id2(::google::protobuf::int32 value);

  // required int32 amount2 = 7;
  inline bool has_amount2() const;
  inline void clear_amount2();
  static const int kAmount2FieldNumber = 7;
  inline ::google::protobuf::int32 amount2() const;
  inline void set_amount2(::google::protobuf::int32 value);

  // required int32 template_id3 = 8;
  inline bool has_template_id3() const;
  inline void clear_template_id3();
  static const int kTemplateId3FieldNumber = 8;
  inline ::google::protobuf::int32 template_id3() const;
  inline void set_template_id3(::google::protobuf::int32 value);

  // required int32 amount3 = 9;
  inline bool has_amount3() const;
  inline void clear_amount3();
  static const int kAmount3FieldNumber = 9;
  inline ::google::protobuf::int32 amount3() const;
  inline void set_amount3(::google::protobuf::int32 value);

  // required int32 template_id4 = 10;
  inline bool has_template_id4() const;
  inline void clear_template_id4();
  static const int kTemplateId4FieldNumber = 10;
  inline ::google::protobuf::int32 template_id4() const;
  inline void set_template_id4(::google::protobuf::int32 value);

  // required int32 amount4 = 11;
  inline bool has_amount4() const;
  inline void clear_amount4();
  static const int kAmount4FieldNumber = 11;
  inline ::google::protobuf::int32 amount4() const;
  inline void set_amount4(::google::protobuf::int32 value);

  // required int32 seal_price_type = 12;
  inline bool has_seal_price_type() const;
  inline void clear_seal_price_type();
  static const int kSealPriceTypeFieldNumber = 12;
  inline ::google::protobuf::int32 seal_price_type() const;
  inline void set_seal_price_type(::google::protobuf::int32 value);

  // required int32 seal_price = 13;
  inline bool has_seal_price() const;
  inline void clear_seal_price();
  static const int kSealPriceFieldNumber = 13;
  inline ::google::protobuf::int32 seal_price() const;
  inline void set_seal_price(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdItemSealCost)
 private:
  inline void set_has_slot();
  inline void clear_has_slot();
  inline void set_has_open_price_type();
  inline void clear_has_open_price_type();
  inline void set_has_open_price();
  inline void clear_has_open_price();
  inline void set_has_template_id1();
  inline void clear_has_template_id1();
  inline void set_has_amount1();
  inline void clear_has_amount1();
  inline void set_has_template_id2();
  inline void clear_has_template_id2();
  inline void set_has_amount2();
  inline void clear_has_amount2();
  inline void set_has_template_id3();
  inline void clear_has_template_id3();
  inline void set_has_amount3();
  inline void clear_has_amount3();
  inline void set_has_template_id4();
  inline void clear_has_template_id4();
  inline void set_has_amount4();
  inline void clear_has_amount4();
  inline void set_has_seal_price_type();
  inline void clear_has_seal_price_type();
  inline void set_has_seal_price();
  inline void clear_has_seal_price();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 slot_;
  ::google::protobuf::int32 open_price_type_;
  ::google::protobuf::int32 open_price_;
  ::google::protobuf::int32 template_id1_;
  ::google::protobuf::int32 amount1_;
  ::google::protobuf::int32 template_id2_;
  ::google::protobuf::int32 amount2_;
  ::google::protobuf::int32 template_id3_;
  ::google::protobuf::int32 amount3_;
  ::google::protobuf::int32 template_id4_;
  ::google::protobuf::int32 amount4_;
  ::google::protobuf::int32 seal_price_type_;
  ::google::protobuf::int32 seal_price_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdItemSealCost* default_instance_;
};
// -------------------------------------------------------------------

class mdItemEnhanceEffectInfo : public ::google::protobuf::Message {
 public:
  mdItemEnhanceEffectInfo();
  virtual ~mdItemEnhanceEffectInfo();

  mdItemEnhanceEffectInfo(const mdItemEnhanceEffectInfo& from);

  inline mdItemEnhanceEffectInfo& operator=(const mdItemEnhanceEffectInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdItemEnhanceEffectInfo& default_instance();

  void Swap(mdItemEnhanceEffectInfo* other);

  // implements Message ----------------------------------------------

  mdItemEnhanceEffectInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdItemEnhanceEffectInfo& from);
  void MergeFrom(const mdItemEnhanceEffectInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 enhance_level = 1;
  inline bool has_enhance_level() const;
  inline void clear_enhance_level();
  static const int kEnhanceLevelFieldNumber = 1;
  inline ::google::protobuf::int32 enhance_level() const;
  inline void set_enhance_level(::google::protobuf::int32 value);

  // required double set_effect = 2;
  inline bool has_set_effect() const;
  inline void clear_set_effect();
  static const int kSetEffectFieldNumber = 2;
  inline double set_effect() const;
  inline void set_set_effect(double value);

  // required int32 item_aura = 3;
  inline bool has_item_aura() const;
  inline void clear_item_aura();
  static const int kItemAuraFieldNumber = 3;
  inline ::google::protobuf::int32 item_aura() const;
  inline void set_item_aura(::google::protobuf::int32 value);

  // required float channel_alpha = 4;
  inline bool has_channel_alpha() const;
  inline void clear_channel_alpha();
  static const int kChannelAlphaFieldNumber = 4;
  inline float channel_alpha() const;
  inline void set_channel_alpha(float value);

  // required float channel_red = 5;
  inline bool has_channel_red() const;
  inline void clear_channel_red();
  static const int kChannelRedFieldNumber = 5;
  inline float channel_red() const;
  inline void set_channel_red(float value);

  // required float channel_green = 6;
  inline bool has_channel_green() const;
  inline void clear_channel_green();
  static const int kChannelGreenFieldNumber = 6;
  inline float channel_green() const;
  inline void set_channel_green(float value);

  // required float channel_blue = 7;
  inline bool has_channel_blue() const;
  inline void clear_channel_blue();
  static const int kChannelBlueFieldNumber = 7;
  inline float channel_blue() const;
  inline void set_channel_blue(float value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdItemEnhanceEffectInfo)
 private:
  inline void set_has_enhance_level();
  inline void clear_has_enhance_level();
  inline void set_has_set_effect();
  inline void clear_has_set_effect();
  inline void set_has_item_aura();
  inline void clear_has_item_aura();
  inline void set_has_channel_alpha();
  inline void clear_has_channel_alpha();
  inline void set_has_channel_red();
  inline void clear_has_channel_red();
  inline void set_has_channel_green();
  inline void clear_has_channel_green();
  inline void set_has_channel_blue();
  inline void clear_has_channel_blue();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double set_effect_;
  ::google::protobuf::int32 enhance_level_;
  ::google::protobuf::int32 item_aura_;
  float channel_alpha_;
  float channel_red_;
  float channel_green_;
  float channel_blue_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdItemEnhanceEffectInfo* default_instance_;
};
// -------------------------------------------------------------------

class mdItemSurpassLevel : public ::google::protobuf::Message {
 public:
  mdItemSurpassLevel();
  virtual ~mdItemSurpassLevel();

  mdItemSurpassLevel(const mdItemSurpassLevel& from);

  inline mdItemSurpassLevel& operator=(const mdItemSurpassLevel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdItemSurpassLevel& default_instance();

  void Swap(mdItemSurpassLevel* other);

  // implements Message ----------------------------------------------

  mdItemSurpassLevel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdItemSurpassLevel& from);
  void MergeFrom(const mdItemSurpassLevel& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 grade = 1;
  inline bool has_grade() const;
  inline void clear_grade();
  static const int kGradeFieldNumber = 1;
  inline ::google::protobuf::int32 grade() const;
  inline void set_grade(::google::protobuf::int32 value);

  // required int32 increase_level = 2;
  inline bool has_increase_level() const;
  inline void clear_increase_level();
  static const int kIncreaseLevelFieldNumber = 2;
  inline ::google::protobuf::int32 increase_level() const;
  inline void set_increase_level(::google::protobuf::int32 value);

  // required int32 max_surpass_level = 3;
  inline bool has_max_surpass_level() const;
  inline void clear_max_surpass_level();
  static const int kMaxSurpassLevelFieldNumber = 3;
  inline ::google::protobuf::int32 max_surpass_level() const;
  inline void set_max_surpass_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdItemSurpassLevel)
 private:
  inline void set_has_grade();
  inline void clear_has_grade();
  inline void set_has_increase_level();
  inline void clear_has_increase_level();
  inline void set_has_max_surpass_level();
  inline void clear_has_max_surpass_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 grade_;
  ::google::protobuf::int32 increase_level_;
  ::google::protobuf::int32 max_surpass_level_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdItemSurpassLevel* default_instance_;
};
// -------------------------------------------------------------------

class mdItemDismantleInfo : public ::google::protobuf::Message {
 public:
  mdItemDismantleInfo();
  virtual ~mdItemDismantleInfo();

  mdItemDismantleInfo(const mdItemDismantleInfo& from);

  inline mdItemDismantleInfo& operator=(const mdItemDismantleInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdItemDismantleInfo& default_instance();

  void Swap(mdItemDismantleInfo* other);

  // implements Message ----------------------------------------------

  mdItemDismantleInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdItemDismantleInfo& from);
  void MergeFrom(const mdItemDismantleInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .b2.protocol.commondata.Inventory.TYPE inventory_type = 1;
  inline bool has_inventory_type() const;
  inline void clear_inventory_type();
  static const int kInventoryTypeFieldNumber = 1;
  inline ::b2::protocol::commondata::Inventory_TYPE inventory_type() const;
  inline void set_inventory_type(::b2::protocol::commondata::Inventory_TYPE value);

  // required int32 grade = 2;
  inline bool has_grade() const;
  inline void clear_grade();
  static const int kGradeFieldNumber = 2;
  inline ::google::protobuf::int32 grade() const;
  inline void set_grade(::google::protobuf::int32 value);

  // required int32 material1 = 3;
  inline bool has_material1() const;
  inline void clear_material1();
  static const int kMaterial1FieldNumber = 3;
  inline ::google::protobuf::int32 material1() const;
  inline void set_material1(::google::protobuf::int32 value);

  // required int32 material_amount1 = 4;
  inline bool has_material_amount1() const;
  inline void clear_material_amount1();
  static const int kMaterialAmount1FieldNumber = 4;
  inline ::google::protobuf::int32 material_amount1() const;
  inline void set_material_amount1(::google::protobuf::int32 value);

  // required int32 material2 = 5;
  inline bool has_material2() const;
  inline void clear_material2();
  static const int kMaterial2FieldNumber = 5;
  inline ::google::protobuf::int32 material2() const;
  inline void set_material2(::google::protobuf::int32 value);

  // required int32 material_amount2 = 6;
  inline bool has_material_amount2() const;
  inline void clear_material_amount2();
  static const int kMaterialAmount2FieldNumber = 6;
  inline ::google::protobuf::int32 material_amount2() const;
  inline void set_material_amount2(::google::protobuf::int32 value);

  // required int32 material3 = 7;
  inline bool has_material3() const;
  inline void clear_material3();
  static const int kMaterial3FieldNumber = 7;
  inline ::google::protobuf::int32 material3() const;
  inline void set_material3(::google::protobuf::int32 value);

  // required int32 material_amount3 = 8;
  inline bool has_material_amount3() const;
  inline void clear_material_amount3();
  static const int kMaterialAmount3FieldNumber = 8;
  inline ::google::protobuf::int32 material_amount3() const;
  inline void set_material_amount3(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdItemDismantleInfo)
 private:
  inline void set_has_inventory_type();
  inline void clear_has_inventory_type();
  inline void set_has_grade();
  inline void clear_has_grade();
  inline void set_has_material1();
  inline void clear_has_material1();
  inline void set_has_material_amount1();
  inline void clear_has_material_amount1();
  inline void set_has_material2();
  inline void clear_has_material2();
  inline void set_has_material_amount2();
  inline void clear_has_material_amount2();
  inline void set_has_material3();
  inline void clear_has_material3();
  inline void set_has_material_amount3();
  inline void clear_has_material_amount3();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int inventory_type_;
  ::google::protobuf::int32 grade_;
  ::google::protobuf::int32 material1_;
  ::google::protobuf::int32 material_amount1_;
  ::google::protobuf::int32 material2_;
  ::google::protobuf::int32 material_amount2_;
  ::google::protobuf::int32 material3_;
  ::google::protobuf::int32 material_amount3_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdItemDismantleInfo* default_instance_;
};
// -------------------------------------------------------------------

class mdResurrectionInfo : public ::google::protobuf::Message {
 public:
  mdResurrectionInfo();
  virtual ~mdResurrectionInfo();

  mdResurrectionInfo(const mdResurrectionInfo& from);

  inline mdResurrectionInfo& operator=(const mdResurrectionInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdResurrectionInfo& default_instance();

  void Swap(mdResurrectionInfo* other);

  // implements Message ----------------------------------------------

  mdResurrectionInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdResurrectionInfo& from);
  void MergeFrom(const mdResurrectionInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .b2.protocol.commondata.ModeType mode_type = 1;
  inline bool has_mode_type() const;
  inline void clear_mode_type();
  static const int kModeTypeFieldNumber = 1;
  inline ::b2::protocol::commondata::ModeType mode_type() const;
  inline void set_mode_type(::b2::protocol::commondata::ModeType value);

  // required int32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // required int32 price = 3;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 3;
  inline ::google::protobuf::int32 price() const;
  inline void set_price(::google::protobuf::int32 value);

  // required .b2.protocol.commondata.AttributeChange attribute_change1 = 4;
  inline bool has_attribute_change1() const;
  inline void clear_attribute_change1();
  static const int kAttributeChange1FieldNumber = 4;
  inline ::b2::protocol::commondata::AttributeChange attribute_change1() const;
  inline void set_attribute_change1(::b2::protocol::commondata::AttributeChange value);

  // required int32 change_value1 = 5;
  inline bool has_change_value1() const;
  inline void clear_change_value1();
  static const int kChangeValue1FieldNumber = 5;
  inline ::google::protobuf::int32 change_value1() const;
  inline void set_change_value1(::google::protobuf::int32 value);

  // required .b2.protocol.commondata.AttributeChange attribute_change2 = 6;
  inline bool has_attribute_change2() const;
  inline void clear_attribute_change2();
  static const int kAttributeChange2FieldNumber = 6;
  inline ::b2::protocol::commondata::AttributeChange attribute_change2() const;
  inline void set_attribute_change2(::b2::protocol::commondata::AttributeChange value);

  // required int32 change_value2 = 7;
  inline bool has_change_value2() const;
  inline void clear_change_value2();
  static const int kChangeValue2FieldNumber = 7;
  inline ::google::protobuf::int32 change_value2() const;
  inline void set_change_value2(::google::protobuf::int32 value);

  // required .b2.protocol.commondata.AttributeChange attribute_change3 = 8;
  inline bool has_attribute_change3() const;
  inline void clear_attribute_change3();
  static const int kAttributeChange3FieldNumber = 8;
  inline ::b2::protocol::commondata::AttributeChange attribute_change3() const;
  inline void set_attribute_change3(::b2::protocol::commondata::AttributeChange value);

  // required int32 change_value3 = 9;
  inline bool has_change_value3() const;
  inline void clear_change_value3();
  static const int kChangeValue3FieldNumber = 9;
  inline ::google::protobuf::int32 change_value3() const;
  inline void set_change_value3(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdResurrectionInfo)
 private:
  inline void set_has_mode_type();
  inline void clear_has_mode_type();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_price();
  inline void clear_has_price();
  inline void set_has_attribute_change1();
  inline void clear_has_attribute_change1();
  inline void set_has_change_value1();
  inline void clear_has_change_value1();
  inline void set_has_attribute_change2();
  inline void clear_has_attribute_change2();
  inline void set_has_change_value2();
  inline void clear_has_change_value2();
  inline void set_has_attribute_change3();
  inline void clear_has_attribute_change3();
  inline void set_has_change_value3();
  inline void clear_has_change_value3();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int mode_type_;
  ::google::protobuf::int32 count_;
  ::google::protobuf::int32 price_;
  int attribute_change1_;
  ::google::protobuf::int32 change_value1_;
  int attribute_change2_;
  ::google::protobuf::int32 change_value2_;
  int attribute_change3_;
  ::google::protobuf::int32 change_value3_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdResurrectionInfo* default_instance_;
};
// -------------------------------------------------------------------

class mdTeamBattleFormationInfo : public ::google::protobuf::Message {
 public:
  mdTeamBattleFormationInfo();
  virtual ~mdTeamBattleFormationInfo();

  mdTeamBattleFormationInfo(const mdTeamBattleFormationInfo& from);

  inline mdTeamBattleFormationInfo& operator=(const mdTeamBattleFormationInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdTeamBattleFormationInfo& default_instance();

  void Swap(mdTeamBattleFormationInfo* other);

  // implements Message ----------------------------------------------

  mdTeamBattleFormationInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdTeamBattleFormationInfo& from);
  void MergeFrom(const mdTeamBattleFormationInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .b2.protocol.commondata.BattleFormation.TYPE formation_type = 1;
  inline bool has_formation_type() const;
  inline void clear_formation_type();
  static const int kFormationTypeFieldNumber = 1;
  inline ::b2::protocol::commondata::BattleFormation_TYPE formation_type() const;
  inline void set_formation_type(::b2::protocol::commondata::BattleFormation_TYPE value);

  // required int32 formation_level = 2;
  inline bool has_formation_level() const;
  inline void clear_formation_level();
  static const int kFormationLevelFieldNumber = 2;
  inline ::google::protobuf::int32 formation_level() const;
  inline void set_formation_level(::google::protobuf::int32 value);

  // required int32 enhance_gold_cost = 3;
  inline bool has_enhance_gold_cost() const;
  inline void clear_enhance_gold_cost();
  static const int kEnhanceGoldCostFieldNumber = 3;
  inline ::google::protobuf::int32 enhance_gold_cost() const;
  inline void set_enhance_gold_cost(::google::protobuf::int32 value);

  // repeated .b2.protocol.commondata.BattleFormationBuff buffs = 4;
  inline int buffs_size() const;
  inline void clear_buffs();
  static const int kBuffsFieldNumber = 4;
  inline const ::b2::protocol::commondata::BattleFormationBuff& buffs(int index) const;
  inline ::b2::protocol::commondata::BattleFormationBuff* mutable_buffs(int index);
  inline ::b2::protocol::commondata::BattleFormationBuff* add_buffs();
  inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::BattleFormationBuff >&
      buffs() const;
  inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::BattleFormationBuff >*
      mutable_buffs();

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdTeamBattleFormationInfo)
 private:
  inline void set_has_formation_type();
  inline void clear_has_formation_type();
  inline void set_has_formation_level();
  inline void clear_has_formation_level();
  inline void set_has_enhance_gold_cost();
  inline void clear_has_enhance_gold_cost();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int formation_type_;
  ::google::protobuf::int32 formation_level_;
  ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::BattleFormationBuff > buffs_;
  ::google::protobuf::int32 enhance_gold_cost_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdTeamBattleFormationInfo* default_instance_;
};
// -------------------------------------------------------------------

class mdRankInfo : public ::google::protobuf::Message {
 public:
  mdRankInfo();
  virtual ~mdRankInfo();

  mdRankInfo(const mdRankInfo& from);

  inline mdRankInfo& operator=(const mdRankInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdRankInfo& default_instance();

  void Swap(mdRankInfo* other);

  // implements Message ----------------------------------------------

  mdRankInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdRankInfo& from);
  void MergeFrom(const mdRankInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 rank = 1;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 1;
  inline ::google::protobuf::int32 rank() const;
  inline void set_rank(::google::protobuf::int32 value);

  // required int32 node_index = 2;
  inline bool has_node_index() const;
  inline void clear_node_index();
  static const int kNodeIndexFieldNumber = 2;
  inline ::google::protobuf::int32 node_index() const;
  inline void set_node_index(::google::protobuf::int32 value);

  // required int32 open_level = 3;
  inline bool has_open_level() const;
  inline void clear_open_level();
  static const int kOpenLevelFieldNumber = 3;
  inline ::google::protobuf::int32 open_level() const;
  inline void set_open_level(::google::protobuf::int32 value);

  // required .b2.protocol.commondata.AttributeChange attribute_change = 4;
  inline bool has_attribute_change() const;
  inline void clear_attribute_change();
  static const int kAttributeChangeFieldNumber = 4;
  inline ::b2::protocol::commondata::AttributeChange attribute_change() const;
  inline void set_attribute_change(::b2::protocol::commondata::AttributeChange value);

  // required float change_value = 5;
  inline bool has_change_value() const;
  inline void clear_change_value();
  static const int kChangeValueFieldNumber = 5;
  inline float change_value() const;
  inline void set_change_value(float value);

  // required int32 need_rank_promotion_point = 6;
  inline bool has_need_rank_promotion_point() const;
  inline void clear_need_rank_promotion_point();
  static const int kNeedRankPromotionPointFieldNumber = 6;
  inline ::google::protobuf::int32 need_rank_promotion_point() const;
  inline void set_need_rank_promotion_point(::google::protobuf::int32 value);

  // required int32 need_activate_gold = 7;
  inline bool has_need_activate_gold() const;
  inline void clear_need_activate_gold();
  static const int kNeedActivateGoldFieldNumber = 7;
  inline ::google::protobuf::int32 need_activate_gold() const;
  inline void set_need_activate_gold(::google::protobuf::int32 value);

  // required int32 rate = 8;
  inline bool has_rate() const;
  inline void clear_rate();
  static const int kRateFieldNumber = 8;
  inline ::google::protobuf::int32 rate() const;
  inline void set_rate(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdRankInfo)
 private:
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_node_index();
  inline void clear_has_node_index();
  inline void set_has_open_level();
  inline void clear_has_open_level();
  inline void set_has_attribute_change();
  inline void clear_has_attribute_change();
  inline void set_has_change_value();
  inline void clear_has_change_value();
  inline void set_has_need_rank_promotion_point();
  inline void clear_has_need_rank_promotion_point();
  inline void set_has_need_activate_gold();
  inline void clear_has_need_activate_gold();
  inline void set_has_rate();
  inline void clear_has_rate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 rank_;
  ::google::protobuf::int32 node_index_;
  ::google::protobuf::int32 open_level_;
  int attribute_change_;
  float change_value_;
  ::google::protobuf::int32 need_rank_promotion_point_;
  ::google::protobuf::int32 need_activate_gold_;
  ::google::protobuf::int32 rate_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdRankInfo* default_instance_;
};
// -------------------------------------------------------------------

class mdMainQuestInfo : public ::google::protobuf::Message {
 public:
  mdMainQuestInfo();
  virtual ~mdMainQuestInfo();

  mdMainQuestInfo(const mdMainQuestInfo& from);

  inline mdMainQuestInfo& operator=(const mdMainQuestInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdMainQuestInfo& default_instance();

  void Swap(mdMainQuestInfo* other);

  // implements Message ----------------------------------------------

  mdMainQuestInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdMainQuestInfo& from);
  void MergeFrom(const mdMainQuestInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required .b2.protocol.commondata.MainQuestType main_quest_type = 2;
  inline bool has_main_quest_type() const;
  inline void clear_main_quest_type();
  static const int kMainQuestTypeFieldNumber = 2;
  inline ::b2::protocol::commondata::MainQuestType main_quest_type() const;
  inline void set_main_quest_type(::b2::protocol::commondata::MainQuestType value);

  // required int32 act_id = 3;
  inline bool has_act_id() const;
  inline void clear_act_id();
  static const int kActIdFieldNumber = 3;
  inline ::google::protobuf::int32 act_id() const;
  inline void set_act_id(::google::protobuf::int32 value);

  // required .b2.protocol.commondata.StageDifficulty difficulty = 4;
  inline bool has_difficulty() const;
  inline void clear_difficulty();
  static const int kDifficultyFieldNumber = 4;
  inline ::b2::protocol::commondata::StageDifficulty difficulty() const;
  inline void set_difficulty(::b2::protocol::commondata::StageDifficulty value);

  // required int32 event_type = 5;
  inline bool has_event_type() const;
  inline void clear_event_type();
  static const int kEventTypeFieldNumber = 5;
  inline ::google::protobuf::int32 event_type() const;
  inline void set_event_type(::google::protobuf::int32 value);

  // required int32 main_view_condition = 6;
  inline bool has_main_view_condition() const;
  inline void clear_main_view_condition();
  static const int kMainViewConditionFieldNumber = 6;
  inline ::google::protobuf::int32 main_view_condition() const;
  inline void set_main_view_condition(::google::protobuf::int32 value);

  // required int32 condition_1 = 7;
  inline bool has_condition_1() const;
  inline void clear_condition_1();
  static const int kCondition1FieldNumber = 7;
  inline ::google::protobuf::int32 condition_1() const;
  inline void set_condition_1(::google::protobuf::int32 value);

  // required int32 condition_2 = 8;
  inline bool has_condition_2() const;
  inline void clear_condition_2();
  static const int kCondition2FieldNumber = 8;
  inline ::google::protobuf::int32 condition_2() const;
  inline void set_condition_2(::google::protobuf::int32 value);

  // required int32 condition_3 = 9;
  inline bool has_condition_3() const;
  inline void clear_condition_3();
  static const int kCondition3FieldNumber = 9;
  inline ::google::protobuf::int32 condition_3() const;
  inline void set_condition_3(::google::protobuf::int32 value);

  // required int32 condition_4 = 10;
  inline bool has_condition_4() const;
  inline void clear_condition_4();
  static const int kCondition4FieldNumber = 10;
  inline ::google::protobuf::int32 condition_4() const;
  inline void set_condition_4(::google::protobuf::int32 value);

  // required int32 goal_count = 11;
  inline bool has_goal_count() const;
  inline void clear_goal_count();
  static const int kGoalCountFieldNumber = 11;
  inline ::google::protobuf::int32 goal_count() const;
  inline void set_goal_count(::google::protobuf::int32 value);

  // repeated .b2.protocol.commondata.Reward rewards = 12;
  inline int rewards_size() const;
  inline void clear_rewards();
  static const int kRewardsFieldNumber = 12;
  inline const ::b2::protocol::commondata::Reward& rewards(int index) const;
  inline ::b2::protocol::commondata::Reward* mutable_rewards(int index);
  inline ::b2::protocol::commondata::Reward* add_rewards();
  inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward >&
      rewards() const;
  inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward >*
      mutable_rewards();

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdMainQuestInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_main_quest_type();
  inline void clear_has_main_quest_type();
  inline void set_has_act_id();
  inline void clear_has_act_id();
  inline void set_has_difficulty();
  inline void clear_has_difficulty();
  inline void set_has_event_type();
  inline void clear_has_event_type();
  inline void set_has_main_view_condition();
  inline void clear_has_main_view_condition();
  inline void set_has_condition_1();
  inline void clear_has_condition_1();
  inline void set_has_condition_2();
  inline void clear_has_condition_2();
  inline void set_has_condition_3();
  inline void clear_has_condition_3();
  inline void set_has_condition_4();
  inline void clear_has_condition_4();
  inline void set_has_goal_count();
  inline void clear_has_goal_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  int main_quest_type_;
  ::google::protobuf::int32 act_id_;
  int difficulty_;
  ::google::protobuf::int32 event_type_;
  ::google::protobuf::int32 main_view_condition_;
  ::google::protobuf::int32 condition_1_;
  ::google::protobuf::int32 condition_2_;
  ::google::protobuf::int32 condition_3_;
  ::google::protobuf::int32 condition_4_;
  ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward > rewards_;
  ::google::protobuf::int32 goal_count_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdMainQuestInfo* default_instance_;
};
// -------------------------------------------------------------------

class mdDailyQuestInfo : public ::google::protobuf::Message {
 public:
  mdDailyQuestInfo();
  virtual ~mdDailyQuestInfo();

  mdDailyQuestInfo(const mdDailyQuestInfo& from);

  inline mdDailyQuestInfo& operator=(const mdDailyQuestInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdDailyQuestInfo& default_instance();

  void Swap(mdDailyQuestInfo* other);

  // implements Message ----------------------------------------------

  mdDailyQuestInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdDailyQuestInfo& from);
  void MergeFrom(const mdDailyQuestInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 event_type = 2;
  inline bool has_event_type() const;
  inline void clear_event_type();
  static const int kEventTypeFieldNumber = 2;
  inline ::google::protobuf::int32 event_type() const;
  inline void set_event_type(::google::protobuf::int32 value);

  // required int32 condition_1 = 3;
  inline bool has_condition_1() const;
  inline void clear_condition_1();
  static const int kCondition1FieldNumber = 3;
  inline ::google::protobuf::int32 condition_1() const;
  inline void set_condition_1(::google::protobuf::int32 value);

  // required int32 condition_2 = 4;
  inline bool has_condition_2() const;
  inline void clear_condition_2();
  static const int kCondition2FieldNumber = 4;
  inline ::google::protobuf::int32 condition_2() const;
  inline void set_condition_2(::google::protobuf::int32 value);

  // required int32 condition_3 = 5;
  inline bool has_condition_3() const;
  inline void clear_condition_3();
  static const int kCondition3FieldNumber = 5;
  inline ::google::protobuf::int32 condition_3() const;
  inline void set_condition_3(::google::protobuf::int32 value);

  // required int32 condition_4 = 6;
  inline bool has_condition_4() const;
  inline void clear_condition_4();
  static const int kCondition4FieldNumber = 6;
  inline ::google::protobuf::int32 condition_4() const;
  inline void set_condition_4(::google::protobuf::int32 value);

  // required int32 goal_count = 7;
  inline bool has_goal_count() const;
  inline void clear_goal_count();
  static const int kGoalCountFieldNumber = 7;
  inline ::google::protobuf::int32 goal_count() const;
  inline void set_goal_count(::google::protobuf::int32 value);

  // repeated .b2.protocol.commondata.Reward rewards = 8;
  inline int rewards_size() const;
  inline void clear_rewards();
  static const int kRewardsFieldNumber = 8;
  inline const ::b2::protocol::commondata::Reward& rewards(int index) const;
  inline ::b2::protocol::commondata::Reward* mutable_rewards(int index);
  inline ::b2::protocol::commondata::Reward* add_rewards();
  inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward >&
      rewards() const;
  inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward >*
      mutable_rewards();

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdDailyQuestInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_event_type();
  inline void clear_has_event_type();
  inline void set_has_condition_1();
  inline void clear_has_condition_1();
  inline void set_has_condition_2();
  inline void clear_has_condition_2();
  inline void set_has_condition_3();
  inline void clear_has_condition_3();
  inline void set_has_condition_4();
  inline void clear_has_condition_4();
  inline void set_has_goal_count();
  inline void clear_has_goal_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 event_type_;
  ::google::protobuf::int32 condition_1_;
  ::google::protobuf::int32 condition_2_;
  ::google::protobuf::int32 condition_3_;
  ::google::protobuf::int32 condition_4_;
  ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward > rewards_;
  ::google::protobuf::int32 goal_count_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdDailyQuestInfo* default_instance_;
};
// -------------------------------------------------------------------

class mdRewardInfo : public ::google::protobuf::Message {
 public:
  mdRewardInfo();
  virtual ~mdRewardInfo();

  mdRewardInfo(const mdRewardInfo& from);

  inline mdRewardInfo& operator=(const mdRewardInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdRewardInfo& default_instance();

  void Swap(mdRewardInfo* other);

  // implements Message ----------------------------------------------

  mdRewardInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdRewardInfo& from);
  void MergeFrom(const mdRewardInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required .b2.protocol.commondata.RewardType reward_type = 2;
  inline bool has_reward_type() const;
  inline void clear_reward_type();
  static const int kRewardTypeFieldNumber = 2;
  inline ::b2::protocol::commondata::RewardType reward_type() const;
  inline void set_reward_type(::b2::protocol::commondata::RewardType value);

  // required int64 reward_id = 3;
  inline bool has_reward_id() const;
  inline void clear_reward_id();
  static const int kRewardIdFieldNumber = 3;
  inline ::google::protobuf::int64 reward_id() const;
  inline void set_reward_id(::google::protobuf::int64 value);

  // required .b2.protocol.commondata.RewardPushType reward_push_type = 4;
  inline bool has_reward_push_type() const;
  inline void clear_reward_push_type();
  static const int kRewardPushTypeFieldNumber = 4;
  inline ::b2::protocol::commondata::RewardPushType reward_push_type() const;
  inline void set_reward_push_type(::b2::protocol::commondata::RewardPushType value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdRewardInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_reward_type();
  inline void clear_has_reward_type();
  inline void set_has_reward_id();
  inline void clear_has_reward_id();
  inline void set_has_reward_push_type();
  inline void clear_has_reward_push_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  int reward_type_;
  ::google::protobuf::int64 reward_id_;
  int reward_push_type_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdRewardInfo* default_instance_;
};
// -------------------------------------------------------------------

class mdDailyMatchReward : public ::google::protobuf::Message {
 public:
  mdDailyMatchReward();
  virtual ~mdDailyMatchReward();

  mdDailyMatchReward(const mdDailyMatchReward& from);

  inline mdDailyMatchReward& operator=(const mdDailyMatchReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdDailyMatchReward& default_instance();

  void Swap(mdDailyMatchReward* other);

  // implements Message ----------------------------------------------

  mdDailyMatchReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdDailyMatchReward& from);
  void MergeFrom(const mdDailyMatchReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .b2.protocol.commondata.MatchInfo.TYPE match_type = 1;
  inline bool has_match_type() const;
  inline void clear_match_type();
  static const int kMatchTypeFieldNumber = 1;
  inline ::b2::protocol::commondata::MatchInfo_TYPE match_type() const;
  inline void set_match_type(::b2::protocol::commondata::MatchInfo_TYPE value);

  // required int32 require_count = 2;
  inline bool has_require_count() const;
  inline void clear_require_count();
  static const int kRequireCountFieldNumber = 2;
  inline ::google::protobuf::int32 require_count() const;
  inline void set_require_count(::google::protobuf::int32 value);

  // required int32 reward_gold = 3;
  inline bool has_reward_gold() const;
  inline void clear_reward_gold();
  static const int kRewardGoldFieldNumber = 3;
  inline ::google::protobuf::int32 reward_gold() const;
  inline void set_reward_gold(::google::protobuf::int32 value);

  // required int32 reward_bladepoint = 4;
  inline bool has_reward_bladepoint() const;
  inline void clear_reward_bladepoint();
  static const int kRewardBladepointFieldNumber = 4;
  inline ::google::protobuf::int32 reward_bladepoint() const;
  inline void set_reward_bladepoint(::google::protobuf::int32 value);

  // required int32 reward_gem = 5;
  inline bool has_reward_gem() const;
  inline void clear_reward_gem();
  static const int kRewardGemFieldNumber = 5;
  inline ::google::protobuf::int32 reward_gem() const;
  inline void set_reward_gem(::google::protobuf::int32 value);

  // required int32 reward_item_template_id = 6;
  inline bool has_reward_item_template_id() const;
  inline void clear_reward_item_template_id();
  static const int kRewardItemTemplateIdFieldNumber = 6;
  inline ::google::protobuf::int32 reward_item_template_id() const;
  inline void set_reward_item_template_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdDailyMatchReward)
 private:
  inline void set_has_match_type();
  inline void clear_has_match_type();
  inline void set_has_require_count();
  inline void clear_has_require_count();
  inline void set_has_reward_gold();
  inline void clear_has_reward_gold();
  inline void set_has_reward_bladepoint();
  inline void clear_has_reward_bladepoint();
  inline void set_has_reward_gem();
  inline void clear_has_reward_gem();
  inline void set_has_reward_item_template_id();
  inline void clear_has_reward_item_template_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int match_type_;
  ::google::protobuf::int32 require_count_;
  ::google::protobuf::int32 reward_gold_;
  ::google::protobuf::int32 reward_bladepoint_;
  ::google::protobuf::int32 reward_gem_;
  ::google::protobuf::int32 reward_item_template_id_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdDailyMatchReward* default_instance_;
};
// -------------------------------------------------------------------

class mdMatchRankingReward : public ::google::protobuf::Message {
 public:
  mdMatchRankingReward();
  virtual ~mdMatchRankingReward();

  mdMatchRankingReward(const mdMatchRankingReward& from);

  inline mdMatchRankingReward& operator=(const mdMatchRankingReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdMatchRankingReward& default_instance();

  void Swap(mdMatchRankingReward* other);

  // implements Message ----------------------------------------------

  mdMatchRankingReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdMatchRankingReward& from);
  void MergeFrom(const mdMatchRankingReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 grade = 1;
  inline bool has_grade() const;
  inline void clear_grade();
  static const int kGradeFieldNumber = 1;
  inline ::google::protobuf::int32 grade() const;
  inline void set_grade(::google::protobuf::int32 value);

  // required int32 ranking_min = 2;
  inline bool has_ranking_min() const;
  inline void clear_ranking_min();
  static const int kRankingMinFieldNumber = 2;
  inline ::google::protobuf::int32 ranking_min() const;
  inline void set_ranking_min(::google::protobuf::int32 value);

  // required int32 ranking_max = 3;
  inline bool has_ranking_max() const;
  inline void clear_ranking_max();
  static const int kRankingMaxFieldNumber = 3;
  inline ::google::protobuf::int32 ranking_max() const;
  inline void set_ranking_max(::google::protobuf::int32 value);

  // repeated .b2.protocol.commondata.Reward rewards = 4;
  inline int rewards_size() const;
  inline void clear_rewards();
  static const int kRewardsFieldNumber = 4;
  inline const ::b2::protocol::commondata::Reward& rewards(int index) const;
  inline ::b2::protocol::commondata::Reward* mutable_rewards(int index);
  inline ::b2::protocol::commondata::Reward* add_rewards();
  inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward >&
      rewards() const;
  inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward >*
      mutable_rewards();

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdMatchRankingReward)
 private:
  inline void set_has_grade();
  inline void clear_has_grade();
  inline void set_has_ranking_min();
  inline void clear_has_ranking_min();
  inline void set_has_ranking_max();
  inline void clear_has_ranking_max();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 grade_;
  ::google::protobuf::int32 ranking_min_;
  ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward > rewards_;
  ::google::protobuf::int32 ranking_max_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdMatchRankingReward* default_instance_;
};
// -------------------------------------------------------------------

class mdStageInfo : public ::google::protobuf::Message {
 public:
  mdStageInfo();
  virtual ~mdStageInfo();

  mdStageInfo(const mdStageInfo& from);

  inline mdStageInfo& operator=(const mdStageInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdStageInfo& default_instance();

  void Swap(mdStageInfo* other);

  // implements Message ----------------------------------------------

  mdStageInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdStageInfo& from);
  void MergeFrom(const mdStageInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 stage_id = 1;
  inline bool has_stage_id() const;
  inline void clear_stage_id();
  static const int kStageIdFieldNumber = 1;
  inline ::google::protobuf::int32 stage_id() const;
  inline void set_stage_id(::google::protobuf::int32 value);

  // required .b2.protocol.commondata.StageDifficulty difficulty = 2;
  inline bool has_difficulty() const;
  inline void clear_difficulty();
  static const int kDifficultyFieldNumber = 2;
  inline ::b2::protocol::commondata::StageDifficulty difficulty() const;
  inline void set_difficulty(::b2::protocol::commondata::StageDifficulty value);

  // required int32 difficulty_scale = 3;
  inline bool has_difficulty_scale() const;
  inline void clear_difficulty_scale();
  static const int kDifficultyScaleFieldNumber = 3;
  inline ::google::protobuf::int32 difficulty_scale() const;
  inline void set_difficulty_scale(::google::protobuf::int32 value);

  // required int32 map_id = 4;
  inline bool has_map_id() const;
  inline void clear_map_id();
  static const int kMapIdFieldNumber = 4;
  inline ::google::protobuf::int32 map_id() const;
  inline void set_map_id(::google::protobuf::int32 value);

  // required int32 clear_time_grade_high = 5;
  inline bool has_clear_time_grade_high() const;
  inline void clear_clear_time_grade_high();
  static const int kClearTimeGradeHighFieldNumber = 5;
  inline ::google::protobuf::int32 clear_time_grade_high() const;
  inline void set_clear_time_grade_high(::google::protobuf::int32 value);

  // required int32 clear_time_grade_medium = 6;
  inline bool has_clear_time_grade_medium() const;
  inline void clear_clear_time_grade_medium();
  static const int kClearTimeGradeMediumFieldNumber = 6;
  inline ::google::protobuf::int32 clear_time_grade_medium() const;
  inline void set_clear_time_grade_medium(::google::protobuf::int32 value);

  // required int32 recommend_power = 7;
  inline bool has_recommend_power() const;
  inline void clear_recommend_power();
  static const int kRecommendPowerFieldNumber = 7;
  inline ::google::protobuf::int32 recommend_power() const;
  inline void set_recommend_power(::google::protobuf::int32 value);

  // required int32 recommend_attack = 8;
  inline bool has_recommend_attack() const;
  inline void clear_recommend_attack();
  static const int kRecommendAttackFieldNumber = 8;
  inline ::google::protobuf::int32 recommend_attack() const;
  inline void set_recommend_attack(::google::protobuf::int32 value);

  // required int32 recommend_defense = 9;
  inline bool has_recommend_defense() const;
  inline void clear_recommend_defense();
  static const int kRecommendDefenseFieldNumber = 9;
  inline ::google::protobuf::int32 recommend_defense() const;
  inline void set_recommend_defense(::google::protobuf::int32 value);

  // required int32 gold_cost_exp_buff = 10;
  inline bool has_gold_cost_exp_buff() const;
  inline void clear_gold_cost_exp_buff();
  static const int kGoldCostExpBuffFieldNumber = 10;
  inline ::google::protobuf::int32 gold_cost_exp_buff() const;
  inline void set_gold_cost_exp_buff(::google::protobuf::int32 value);

  // required int32 gold_cost_gold_buff = 11;
  inline bool has_gold_cost_gold_buff() const;
  inline void clear_gold_cost_gold_buff();
  static const int kGoldCostGoldBuffFieldNumber = 11;
  inline ::google::protobuf::int32 gold_cost_gold_buff() const;
  inline void set_gold_cost_gold_buff(::google::protobuf::int32 value);

  // required int32 gold_cost_auto_skill_buff = 12;
  inline bool has_gold_cost_auto_skill_buff() const;
  inline void clear_gold_cost_auto_skill_buff();
  static const int kGoldCostAutoSkillBuffFieldNumber = 12;
  inline ::google::protobuf::int32 gold_cost_auto_skill_buff() const;
  inline void set_gold_cost_auto_skill_buff(::google::protobuf::int32 value);

  // required int32 gold_cost_boost_buff = 13;
  inline bool has_gold_cost_boost_buff() const;
  inline void clear_gold_cost_boost_buff();
  static const int kGoldCostBoostBuffFieldNumber = 13;
  inline ::google::protobuf::int32 gold_cost_boost_buff() const;
  inline void set_gold_cost_boost_buff(::google::protobuf::int32 value);

  // required .b2.protocol.commondata.Aether.TYPE aether_type = 14;
  inline bool has_aether_type() const;
  inline void clear_aether_type();
  static const int kAetherTypeFieldNumber = 14;
  inline ::b2::protocol::commondata::Aether_TYPE aether_type() const;
  inline void set_aether_type(::b2::protocol::commondata::Aether_TYPE value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdStageInfo)
 private:
  inline void set_has_stage_id();
  inline void clear_has_stage_id();
  inline void set_has_difficulty();
  inline void clear_has_difficulty();
  inline void set_has_difficulty_scale();
  inline void clear_has_difficulty_scale();
  inline void set_has_map_id();
  inline void clear_has_map_id();
  inline void set_has_clear_time_grade_high();
  inline void clear_has_clear_time_grade_high();
  inline void set_has_clear_time_grade_medium();
  inline void clear_has_clear_time_grade_medium();
  inline void set_has_recommend_power();
  inline void clear_has_recommend_power();
  inline void set_has_recommend_attack();
  inline void clear_has_recommend_attack();
  inline void set_has_recommend_defense();
  inline void clear_has_recommend_defense();
  inline void set_has_gold_cost_exp_buff();
  inline void clear_has_gold_cost_exp_buff();
  inline void set_has_gold_cost_gold_buff();
  inline void clear_has_gold_cost_gold_buff();
  inline void set_has_gold_cost_auto_skill_buff();
  inline void clear_has_gold_cost_auto_skill_buff();
  inline void set_has_gold_cost_boost_buff();
  inline void clear_has_gold_cost_boost_buff();
  inline void set_has_aether_type();
  inline void clear_has_aether_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 stage_id_;
  int difficulty_;
  ::google::protobuf::int32 difficulty_scale_;
  ::google::protobuf::int32 map_id_;
  ::google::protobuf::int32 clear_time_grade_high_;
  ::google::protobuf::int32 clear_time_grade_medium_;
  ::google::protobuf::int32 recommend_power_;
  ::google::protobuf::int32 recommend_attack_;
  ::google::protobuf::int32 recommend_defense_;
  ::google::protobuf::int32 gold_cost_exp_buff_;
  ::google::protobuf::int32 gold_cost_gold_buff_;
  ::google::protobuf::int32 gold_cost_auto_skill_buff_;
  ::google::protobuf::int32 gold_cost_boost_buff_;
  int aether_type_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdStageInfo* default_instance_;
};
// -------------------------------------------------------------------

class mdCounterDungeon : public ::google::protobuf::Message {
 public:
  mdCounterDungeon();
  virtual ~mdCounterDungeon();

  mdCounterDungeon(const mdCounterDungeon& from);

  inline mdCounterDungeon& operator=(const mdCounterDungeon& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdCounterDungeon& default_instance();

  void Swap(mdCounterDungeon* other);

  // implements Message ----------------------------------------------

  mdCounterDungeon* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdCounterDungeon& from);
  void MergeFrom(const mdCounterDungeon& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef mdCounterDungeon_TYPE TYPE;
  static const TYPE ARMOR = mdCounterDungeon_TYPE_ARMOR;
  static const TYPE WEAPON = mdCounterDungeon_TYPE_WEAPON;
  static const TYPE ACCESSORY = mdCounterDungeon_TYPE_ACCESSORY;
  static const TYPE GOLD = mdCounterDungeon_TYPE_GOLD;
  static inline bool TYPE_IsValid(int value) {
    return mdCounterDungeon_TYPE_IsValid(value);
  }
  static const TYPE TYPE_MIN =
    mdCounterDungeon_TYPE_TYPE_MIN;
  static const TYPE TYPE_MAX =
    mdCounterDungeon_TYPE_TYPE_MAX;
  static const int TYPE_ARRAYSIZE =
    mdCounterDungeon_TYPE_TYPE_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  TYPE_descriptor() {
    return mdCounterDungeon_TYPE_descriptor();
  }
  static inline const ::std::string& TYPE_Name(TYPE value) {
    return mdCounterDungeon_TYPE_Name(value);
  }
  static inline bool TYPE_Parse(const ::std::string& name,
      TYPE* value) {
    return mdCounterDungeon_TYPE_Parse(name, value);
  }

  typedef mdCounterDungeon_DIFFICULTY DIFFICULTY;
  static const DIFFICULTY EASY = mdCounterDungeon_DIFFICULTY_EASY;
  static const DIFFICULTY NORMAL = mdCounterDungeon_DIFFICULTY_NORMAL;
  static const DIFFICULTY HARD = mdCounterDungeon_DIFFICULTY_HARD;
  static inline bool DIFFICULTY_IsValid(int value) {
    return mdCounterDungeon_DIFFICULTY_IsValid(value);
  }
  static const DIFFICULTY DIFFICULTY_MIN =
    mdCounterDungeon_DIFFICULTY_DIFFICULTY_MIN;
  static const DIFFICULTY DIFFICULTY_MAX =
    mdCounterDungeon_DIFFICULTY_DIFFICULTY_MAX;
  static const int DIFFICULTY_ARRAYSIZE =
    mdCounterDungeon_DIFFICULTY_DIFFICULTY_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  DIFFICULTY_descriptor() {
    return mdCounterDungeon_DIFFICULTY_descriptor();
  }
  static inline const ::std::string& DIFFICULTY_Name(DIFFICULTY value) {
    return mdCounterDungeon_DIFFICULTY_Name(value);
  }
  static inline bool DIFFICULTY_Parse(const ::std::string& name,
      DIFFICULTY* value) {
    return mdCounterDungeon_DIFFICULTY_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int32 dungeon_id = 1;
  inline bool has_dungeon_id() const;
  inline void clear_dungeon_id();
  static const int kDungeonIdFieldNumber = 1;
  inline ::google::protobuf::int32 dungeon_id() const;
  inline void set_dungeon_id(::google::protobuf::int32 value);

  // required .b2.protocol.masterdata.mdCounterDungeon.TYPE dungeon_type = 2;
  inline bool has_dungeon_type() const;
  inline void clear_dungeon_type();
  static const int kDungeonTypeFieldNumber = 2;
  inline ::b2::protocol::masterdata::mdCounterDungeon_TYPE dungeon_type() const;
  inline void set_dungeon_type(::b2::protocol::masterdata::mdCounterDungeon_TYPE value);

  // required .b2.protocol.masterdata.mdCounterDungeon.DIFFICULTY difficulty = 3;
  inline bool has_difficulty() const;
  inline void clear_difficulty();
  static const int kDifficultyFieldNumber = 3;
  inline ::b2::protocol::masterdata::mdCounterDungeon_DIFFICULTY difficulty() const;
  inline void set_difficulty(::b2::protocol::masterdata::mdCounterDungeon_DIFFICULTY value);

  // required int32 difficulty_level = 4;
  inline bool has_difficulty_level() const;
  inline void clear_difficulty_level();
  static const int kDifficultyLevelFieldNumber = 4;
  inline ::google::protobuf::int32 difficulty_level() const;
  inline void set_difficulty_level(::google::protobuf::int32 value);

  // required int32 difficulty_scale = 5;
  inline bool has_difficulty_scale() const;
  inline void clear_difficulty_scale();
  static const int kDifficultyScaleFieldNumber = 5;
  inline ::google::protobuf::int32 difficulty_scale() const;
  inline void set_difficulty_scale(::google::protobuf::int32 value);

  // required int32 recommend_power = 6;
  inline bool has_recommend_power() const;
  inline void clear_recommend_power();
  static const int kRecommendPowerFieldNumber = 6;
  inline ::google::protobuf::int32 recommend_power() const;
  inline void set_recommend_power(::google::protobuf::int32 value);

  // required int32 recommend_attack = 7;
  inline bool has_recommend_attack() const;
  inline void clear_recommend_attack();
  static const int kRecommendAttackFieldNumber = 7;
  inline ::google::protobuf::int32 recommend_attack() const;
  inline void set_recommend_attack(::google::protobuf::int32 value);

  // required int32 recommend_defense = 8;
  inline bool has_recommend_defense() const;
  inline void clear_recommend_defense();
  static const int kRecommendDefenseFieldNumber = 8;
  inline ::google::protobuf::int32 recommend_defense() const;
  inline void set_recommend_defense(::google::protobuf::int32 value);

  // repeated .b2.protocol.commondata.RewardRandomCount rewards = 10;
  inline int rewards_size() const;
  inline void clear_rewards();
  static const int kRewardsFieldNumber = 10;
  inline const ::b2::protocol::commondata::RewardRandomCount& rewards(int index) const;
  inline ::b2::protocol::commondata::RewardRandomCount* mutable_rewards(int index);
  inline ::b2::protocol::commondata::RewardRandomCount* add_rewards();
  inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::RewardRandomCount >&
      rewards() const;
  inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::RewardRandomCount >*
      mutable_rewards();

  // required int32 drop_gold_min = 11;
  inline bool has_drop_gold_min() const;
  inline void clear_drop_gold_min();
  static const int kDropGoldMinFieldNumber = 11;
  inline ::google::protobuf::int32 drop_gold_min() const;
  inline void set_drop_gold_min(::google::protobuf::int32 value);

  // required int32 drop_gold_max = 12;
  inline bool has_drop_gold_max() const;
  inline void clear_drop_gold_max();
  static const int kDropGoldMaxFieldNumber = 12;
  inline ::google::protobuf::int32 drop_gold_max() const;
  inline void set_drop_gold_max(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdCounterDungeon)
 private:
  inline void set_has_dungeon_id();
  inline void clear_has_dungeon_id();
  inline void set_has_dungeon_type();
  inline void clear_has_dungeon_type();
  inline void set_has_difficulty();
  inline void clear_has_difficulty();
  inline void set_has_difficulty_level();
  inline void clear_has_difficulty_level();
  inline void set_has_difficulty_scale();
  inline void clear_has_difficulty_scale();
  inline void set_has_recommend_power();
  inline void clear_has_recommend_power();
  inline void set_has_recommend_attack();
  inline void clear_has_recommend_attack();
  inline void set_has_recommend_defense();
  inline void clear_has_recommend_defense();
  inline void set_has_drop_gold_min();
  inline void clear_has_drop_gold_min();
  inline void set_has_drop_gold_max();
  inline void clear_has_drop_gold_max();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 dungeon_id_;
  int dungeon_type_;
  int difficulty_;
  ::google::protobuf::int32 difficulty_level_;
  ::google::protobuf::int32 difficulty_scale_;
  ::google::protobuf::int32 recommend_power_;
  ::google::protobuf::int32 recommend_attack_;
  ::google::protobuf::int32 recommend_defense_;
  ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::RewardRandomCount > rewards_;
  ::google::protobuf::int32 drop_gold_min_;
  ::google::protobuf::int32 drop_gold_max_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdCounterDungeon* default_instance_;
};
// -------------------------------------------------------------------

class mdCounterDungeonPeriod : public ::google::protobuf::Message {
 public:
  mdCounterDungeonPeriod();
  virtual ~mdCounterDungeonPeriod();

  mdCounterDungeonPeriod(const mdCounterDungeonPeriod& from);

  inline mdCounterDungeonPeriod& operator=(const mdCounterDungeonPeriod& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdCounterDungeonPeriod& default_instance();

  void Swap(mdCounterDungeonPeriod* other);

  // implements Message ----------------------------------------------

  mdCounterDungeonPeriod* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdCounterDungeonPeriod& from);
  void MergeFrom(const mdCounterDungeonPeriod& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .b2.protocol.masterdata.mdCounterDungeon.TYPE dungeon_type = 1;
  inline bool has_dungeon_type() const;
  inline void clear_dungeon_type();
  static const int kDungeonTypeFieldNumber = 1;
  inline ::b2::protocol::masterdata::mdCounterDungeon_TYPE dungeon_type() const;
  inline void set_dungeon_type(::b2::protocol::masterdata::mdCounterDungeon_TYPE value);

  // required .b2.protocol.commondata.DayOfWeek day_of_week = 2;
  inline bool has_day_of_week() const;
  inline void clear_day_of_week();
  static const int kDayOfWeekFieldNumber = 2;
  inline ::b2::protocol::commondata::DayOfWeek day_of_week() const;
  inline void set_day_of_week(::b2::protocol::commondata::DayOfWeek value);

  // required int32 begin_hour = 3;
  inline bool has_begin_hour() const;
  inline void clear_begin_hour();
  static const int kBeginHourFieldNumber = 3;
  inline ::google::protobuf::int32 begin_hour() const;
  inline void set_begin_hour(::google::protobuf::int32 value);

  // required int32 begin_min = 4;
  inline bool has_begin_min() const;
  inline void clear_begin_min();
  static const int kBeginMinFieldNumber = 4;
  inline ::google::protobuf::int32 begin_min() const;
  inline void set_begin_min(::google::protobuf::int32 value);

  // required int32 end_hour = 5;
  inline bool has_end_hour() const;
  inline void clear_end_hour();
  static const int kEndHourFieldNumber = 5;
  inline ::google::protobuf::int32 end_hour() const;
  inline void set_end_hour(::google::protobuf::int32 value);

  // required int32 end_min = 6;
  inline bool has_end_min() const;
  inline void clear_end_min();
  static const int kEndMinFieldNumber = 6;
  inline ::google::protobuf::int32 end_min() const;
  inline void set_end_min(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdCounterDungeonPeriod)
 private:
  inline void set_has_dungeon_type();
  inline void clear_has_dungeon_type();
  inline void set_has_day_of_week();
  inline void clear_has_day_of_week();
  inline void set_has_begin_hour();
  inline void clear_has_begin_hour();
  inline void set_has_begin_min();
  inline void clear_has_begin_min();
  inline void set_has_end_hour();
  inline void clear_has_end_hour();
  inline void set_has_end_min();
  inline void clear_has_end_min();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int dungeon_type_;
  int day_of_week_;
  ::google::protobuf::int32 begin_hour_;
  ::google::protobuf::int32 begin_min_;
  ::google::protobuf::int32 end_hour_;
  ::google::protobuf::int32 end_min_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdCounterDungeonPeriod* default_instance_;
};
// -------------------------------------------------------------------

class mdCounterDungeonWeekReward : public ::google::protobuf::Message {
 public:
  mdCounterDungeonWeekReward();
  virtual ~mdCounterDungeonWeekReward();

  mdCounterDungeonWeekReward(const mdCounterDungeonWeekReward& from);

  inline mdCounterDungeonWeekReward& operator=(const mdCounterDungeonWeekReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdCounterDungeonWeekReward& default_instance();

  void Swap(mdCounterDungeonWeekReward* other);

  // implements Message ----------------------------------------------

  mdCounterDungeonWeekReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdCounterDungeonWeekReward& from);
  void MergeFrom(const mdCounterDungeonWeekReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // required int32 require_count = 2;
  inline bool has_require_count() const;
  inline void clear_require_count();
  static const int kRequireCountFieldNumber = 2;
  inline ::google::protobuf::int32 require_count() const;
  inline void set_require_count(::google::protobuf::int32 value);

  // repeated .b2.protocol.commondata.Reward rewards = 3;
  inline int rewards_size() const;
  inline void clear_rewards();
  static const int kRewardsFieldNumber = 3;
  inline const ::b2::protocol::commondata::Reward& rewards(int index) const;
  inline ::b2::protocol::commondata::Reward* mutable_rewards(int index);
  inline ::b2::protocol::commondata::Reward* add_rewards();
  inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward >&
      rewards() const;
  inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward >*
      mutable_rewards();

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdCounterDungeonWeekReward)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_require_count();
  inline void clear_has_require_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 require_count_;
  ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward > rewards_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdCounterDungeonWeekReward* default_instance_;
};
// -------------------------------------------------------------------

class mdMissionInfo : public ::google::protobuf::Message {
 public:
  mdMissionInfo();
  virtual ~mdMissionInfo();

  mdMissionInfo(const mdMissionInfo& from);

  inline mdMissionInfo& operator=(const mdMissionInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdMissionInfo& default_instance();

  void Swap(mdMissionInfo* other);

  // implements Message ----------------------------------------------

  mdMissionInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdMissionInfo& from);
  void MergeFrom(const mdMissionInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 mission_id = 1;
  inline bool has_mission_id() const;
  inline void clear_mission_id();
  static const int kMissionIdFieldNumber = 1;
  inline ::google::protobuf::int32 mission_id() const;
  inline void set_mission_id(::google::protobuf::int32 value);

  // required .b2.protocol.commondata.MissionInfo.MissionType mission_type = 2;
  inline bool has_mission_type() const;
  inline void clear_mission_type();
  static const int kMissionTypeFieldNumber = 2;
  inline ::b2::protocol::commondata::MissionInfo_MissionType mission_type() const;
  inline void set_mission_type(::b2::protocol::commondata::MissionInfo_MissionType value);

  // required int32 event_type = 3;
  inline bool has_event_type() const;
  inline void clear_event_type();
  static const int kEventTypeFieldNumber = 3;
  inline ::google::protobuf::int32 event_type() const;
  inline void set_event_type(::google::protobuf::int32 value);

  // required int32 condition1 = 4;
  inline bool has_condition1() const;
  inline void clear_condition1();
  static const int kCondition1FieldNumber = 4;
  inline ::google::protobuf::int32 condition1() const;
  inline void set_condition1(::google::protobuf::int32 value);

  // required int32 condition2 = 5;
  inline bool has_condition2() const;
  inline void clear_condition2();
  static const int kCondition2FieldNumber = 5;
  inline ::google::protobuf::int32 condition2() const;
  inline void set_condition2(::google::protobuf::int32 value);

  // required int32 condition3 = 6;
  inline bool has_condition3() const;
  inline void clear_condition3();
  static const int kCondition3FieldNumber = 6;
  inline ::google::protobuf::int32 condition3() const;
  inline void set_condition3(::google::protobuf::int32 value);

  // required int32 condition4 = 7;
  inline bool has_condition4() const;
  inline void clear_condition4();
  static const int kCondition4FieldNumber = 7;
  inline ::google::protobuf::int32 condition4() const;
  inline void set_condition4(::google::protobuf::int32 value);

  // required int32 goal_count = 8;
  inline bool has_goal_count() const;
  inline void clear_goal_count();
  static const int kGoalCountFieldNumber = 8;
  inline ::google::protobuf::int32 goal_count() const;
  inline void set_goal_count(::google::protobuf::int32 value);

  // required int32 complete_point = 9;
  inline bool has_complete_point() const;
  inline void clear_complete_point();
  static const int kCompletePointFieldNumber = 9;
  inline ::google::protobuf::int32 complete_point() const;
  inline void set_complete_point(::google::protobuf::int32 value);

  // required int32 reward_id = 10;
  inline bool has_reward_id() const;
  inline void clear_reward_id();
  static const int kRewardIdFieldNumber = 10;
  inline ::google::protobuf::int32 reward_id() const;
  inline void set_reward_id(::google::protobuf::int32 value);

  // required int32 reward_count = 11;
  inline bool has_reward_count() const;
  inline void clear_reward_count();
  static const int kRewardCountFieldNumber = 11;
  inline ::google::protobuf::int32 reward_count() const;
  inline void set_reward_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdMissionInfo)
 private:
  inline void set_has_mission_id();
  inline void clear_has_mission_id();
  inline void set_has_mission_type();
  inline void clear_has_mission_type();
  inline void set_has_event_type();
  inline void clear_has_event_type();
  inline void set_has_condition1();
  inline void clear_has_condition1();
  inline void set_has_condition2();
  inline void clear_has_condition2();
  inline void set_has_condition3();
  inline void clear_has_condition3();
  inline void set_has_condition4();
  inline void clear_has_condition4();
  inline void set_has_goal_count();
  inline void clear_has_goal_count();
  inline void set_has_complete_point();
  inline void clear_has_complete_point();
  inline void set_has_reward_id();
  inline void clear_has_reward_id();
  inline void set_has_reward_count();
  inline void clear_has_reward_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 mission_id_;
  int mission_type_;
  ::google::protobuf::int32 event_type_;
  ::google::protobuf::int32 condition1_;
  ::google::protobuf::int32 condition2_;
  ::google::protobuf::int32 condition3_;
  ::google::protobuf::int32 condition4_;
  ::google::protobuf::int32 goal_count_;
  ::google::protobuf::int32 complete_point_;
  ::google::protobuf::int32 reward_id_;
  ::google::protobuf::int32 reward_count_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdMissionInfo* default_instance_;
};
// -------------------------------------------------------------------

class mdSerialMissionInfo : public ::google::protobuf::Message {
 public:
  mdSerialMissionInfo();
  virtual ~mdSerialMissionInfo();

  mdSerialMissionInfo(const mdSerialMissionInfo& from);

  inline mdSerialMissionInfo& operator=(const mdSerialMissionInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdSerialMissionInfo& default_instance();

  void Swap(mdSerialMissionInfo* other);

  // implements Message ----------------------------------------------

  mdSerialMissionInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdSerialMissionInfo& from);
  void MergeFrom(const mdSerialMissionInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 mission_id = 1;
  inline bool has_mission_id() const;
  inline void clear_mission_id();
  static const int kMissionIdFieldNumber = 1;
  inline ::google::protobuf::int32 mission_id() const;
  inline void set_mission_id(::google::protobuf::int32 value);

  // required int32 mission_step = 2;
  inline bool has_mission_step() const;
  inline void clear_mission_step();
  static const int kMissionStepFieldNumber = 2;
  inline ::google::protobuf::int32 mission_step() const;
  inline void set_mission_step(::google::protobuf::int32 value);

  // required int32 event_type = 3;
  inline bool has_event_type() const;
  inline void clear_event_type();
  static const int kEventTypeFieldNumber = 3;
  inline ::google::protobuf::int32 event_type() const;
  inline void set_event_type(::google::protobuf::int32 value);

  // required int32 condition1 = 4;
  inline bool has_condition1() const;
  inline void clear_condition1();
  static const int kCondition1FieldNumber = 4;
  inline ::google::protobuf::int32 condition1() const;
  inline void set_condition1(::google::protobuf::int32 value);

  // required int32 condition2 = 5;
  inline bool has_condition2() const;
  inline void clear_condition2();
  static const int kCondition2FieldNumber = 5;
  inline ::google::protobuf::int32 condition2() const;
  inline void set_condition2(::google::protobuf::int32 value);

  // required int32 condition3 = 6;
  inline bool has_condition3() const;
  inline void clear_condition3();
  static const int kCondition3FieldNumber = 6;
  inline ::google::protobuf::int32 condition3() const;
  inline void set_condition3(::google::protobuf::int32 value);

  // required int32 condition4 = 7;
  inline bool has_condition4() const;
  inline void clear_condition4();
  static const int kCondition4FieldNumber = 7;
  inline ::google::protobuf::int32 condition4() const;
  inline void set_condition4(::google::protobuf::int32 value);

  // required int32 goal_count = 8;
  inline bool has_goal_count() const;
  inline void clear_goal_count();
  static const int kGoalCountFieldNumber = 8;
  inline ::google::protobuf::int32 goal_count() const;
  inline void set_goal_count(::google::protobuf::int32 value);

  // required int32 reward_id = 9;
  inline bool has_reward_id() const;
  inline void clear_reward_id();
  static const int kRewardIdFieldNumber = 9;
  inline ::google::protobuf::int32 reward_id() const;
  inline void set_reward_id(::google::protobuf::int32 value);

  // required int32 reward_count = 10;
  inline bool has_reward_count() const;
  inline void clear_reward_count();
  static const int kRewardCountFieldNumber = 10;
  inline ::google::protobuf::int32 reward_count() const;
  inline void set_reward_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdSerialMissionInfo)
 private:
  inline void set_has_mission_id();
  inline void clear_has_mission_id();
  inline void set_has_mission_step();
  inline void clear_has_mission_step();
  inline void set_has_event_type();
  inline void clear_has_event_type();
  inline void set_has_condition1();
  inline void clear_has_condition1();
  inline void set_has_condition2();
  inline void clear_has_condition2();
  inline void set_has_condition3();
  inline void clear_has_condition3();
  inline void set_has_condition4();
  inline void clear_has_condition4();
  inline void set_has_goal_count();
  inline void clear_has_goal_count();
  inline void set_has_reward_id();
  inline void clear_has_reward_id();
  inline void set_has_reward_count();
  inline void clear_has_reward_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 mission_id_;
  ::google::protobuf::int32 mission_step_;
  ::google::protobuf::int32 event_type_;
  ::google::protobuf::int32 condition1_;
  ::google::protobuf::int32 condition2_;
  ::google::protobuf::int32 condition3_;
  ::google::protobuf::int32 condition4_;
  ::google::protobuf::int32 goal_count_;
  ::google::protobuf::int32 reward_id_;
  ::google::protobuf::int32 reward_count_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdSerialMissionInfo* default_instance_;
};
// -------------------------------------------------------------------

class mdMissionCompletePointInfo : public ::google::protobuf::Message {
 public:
  mdMissionCompletePointInfo();
  virtual ~mdMissionCompletePointInfo();

  mdMissionCompletePointInfo(const mdMissionCompletePointInfo& from);

  inline mdMissionCompletePointInfo& operator=(const mdMissionCompletePointInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdMissionCompletePointInfo& default_instance();

  void Swap(mdMissionCompletePointInfo* other);

  // implements Message ----------------------------------------------

  mdMissionCompletePointInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdMissionCompletePointInfo& from);
  void MergeFrom(const mdMissionCompletePointInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .b2.protocol.commondata.MissionInfo.MissionType mission_type = 1;
  inline bool has_mission_type() const;
  inline void clear_mission_type();
  static const int kMissionTypeFieldNumber = 1;
  inline ::b2::protocol::commondata::MissionInfo_MissionType mission_type() const;
  inline void set_mission_type(::b2::protocol::commondata::MissionInfo_MissionType value);

  // required int32 index = 2;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 2;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // required int32 require_point = 3;
  inline bool has_require_point() const;
  inline void clear_require_point();
  static const int kRequirePointFieldNumber = 3;
  inline ::google::protobuf::int32 require_point() const;
  inline void set_require_point(::google::protobuf::int32 value);

  // repeated .b2.protocol.commondata.Reward rewards = 4;
  inline int rewards_size() const;
  inline void clear_rewards();
  static const int kRewardsFieldNumber = 4;
  inline const ::b2::protocol::commondata::Reward& rewards(int index) const;
  inline ::b2::protocol::commondata::Reward* mutable_rewards(int index);
  inline ::b2::protocol::commondata::Reward* add_rewards();
  inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward >&
      rewards() const;
  inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward >*
      mutable_rewards();

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdMissionCompletePointInfo)
 private:
  inline void set_has_mission_type();
  inline void clear_has_mission_type();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_require_point();
  inline void clear_has_require_point();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int mission_type_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward > rewards_;
  ::google::protobuf::int32 require_point_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdMissionCompletePointInfo* default_instance_;
};
// -------------------------------------------------------------------

class mdWingEnhance : public ::google::protobuf::Message {
 public:
  mdWingEnhance();
  virtual ~mdWingEnhance();

  mdWingEnhance(const mdWingEnhance& from);

  inline mdWingEnhance& operator=(const mdWingEnhance& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdWingEnhance& default_instance();

  void Swap(mdWingEnhance* other);

  // implements Message ----------------------------------------------

  mdWingEnhance* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdWingEnhance& from);
  void MergeFrom(const mdWingEnhance& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 grade = 1;
  inline bool has_grade() const;
  inline void clear_grade();
  static const int kGradeFieldNumber = 1;
  inline ::google::protobuf::int32 grade() const;
  inline void set_grade(::google::protobuf::int32 value);

  // required int32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // required int32 need_item_template_id = 3;
  inline bool has_need_item_template_id() const;
  inline void clear_need_item_template_id();
  static const int kNeedItemTemplateIdFieldNumber = 3;
  inline ::google::protobuf::int32 need_item_template_id() const;
  inline void set_need_item_template_id(::google::protobuf::int32 value);

  // required int32 need_item_count = 4;
  inline bool has_need_item_count() const;
  inline void clear_need_item_count();
  static const int kNeedItemCountFieldNumber = 4;
  inline ::google::protobuf::int32 need_item_count() const;
  inline void set_need_item_count(::google::protobuf::int32 value);

  // required int32 enhance_point = 5;
  inline bool has_enhance_point() const;
  inline void clear_enhance_point();
  static const int kEnhancePointFieldNumber = 5;
  inline ::google::protobuf::int32 enhance_point() const;
  inline void set_enhance_point(::google::protobuf::int32 value);

  // required int32 need_enhance_point = 6;
  inline bool has_need_enhance_point() const;
  inline void clear_need_enhance_point();
  static const int kNeedEnhancePointFieldNumber = 6;
  inline ::google::protobuf::int32 need_enhance_point() const;
  inline void set_need_enhance_point(::google::protobuf::int32 value);

  // required int32 gold_cost = 7;
  inline bool has_gold_cost() const;
  inline void clear_gold_cost();
  static const int kGoldCostFieldNumber = 7;
  inline ::google::protobuf::int32 gold_cost() const;
  inline void set_gold_cost(::google::protobuf::int32 value);

  // required int32 option_type1 = 8;
  inline bool has_option_type1() const;
  inline void clear_option_type1();
  static const int kOptionType1FieldNumber = 8;
  inline ::google::protobuf::int32 option_type1() const;
  inline void set_option_type1(::google::protobuf::int32 value);

  // required float option_value1 = 9;
  inline bool has_option_value1() const;
  inline void clear_option_value1();
  static const int kOptionValue1FieldNumber = 9;
  inline float option_value1() const;
  inline void set_option_value1(float value);

  // required int32 option_type2 = 10;
  inline bool has_option_type2() const;
  inline void clear_option_type2();
  static const int kOptionType2FieldNumber = 10;
  inline ::google::protobuf::int32 option_type2() const;
  inline void set_option_type2(::google::protobuf::int32 value);

  // required float option_value2 = 11;
  inline bool has_option_value2() const;
  inline void clear_option_value2();
  static const int kOptionValue2FieldNumber = 11;
  inline float option_value2() const;
  inline void set_option_value2(float value);

  // required int32 option_type3 = 12;
  inline bool has_option_type3() const;
  inline void clear_option_type3();
  static const int kOptionType3FieldNumber = 12;
  inline ::google::protobuf::int32 option_type3() const;
  inline void set_option_type3(::google::protobuf::int32 value);

  // required float option_value3 = 13;
  inline bool has_option_value3() const;
  inline void clear_option_value3();
  static const int kOptionValue3FieldNumber = 13;
  inline float option_value3() const;
  inline void set_option_value3(float value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdWingEnhance)
 private:
  inline void set_has_grade();
  inline void clear_has_grade();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_need_item_template_id();
  inline void clear_has_need_item_template_id();
  inline void set_has_need_item_count();
  inline void clear_has_need_item_count();
  inline void set_has_enhance_point();
  inline void clear_has_enhance_point();
  inline void set_has_need_enhance_point();
  inline void clear_has_need_enhance_point();
  inline void set_has_gold_cost();
  inline void clear_has_gold_cost();
  inline void set_has_option_type1();
  inline void clear_has_option_type1();
  inline void set_has_option_value1();
  inline void clear_has_option_value1();
  inline void set_has_option_type2();
  inline void clear_has_option_type2();
  inline void set_has_option_value2();
  inline void clear_has_option_value2();
  inline void set_has_option_type3();
  inline void clear_has_option_type3();
  inline void set_has_option_value3();
  inline void clear_has_option_value3();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 grade_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 need_item_template_id_;
  ::google::protobuf::int32 need_item_count_;
  ::google::protobuf::int32 enhance_point_;
  ::google::protobuf::int32 need_enhance_point_;
  ::google::protobuf::int32 gold_cost_;
  ::google::protobuf::int32 option_type1_;
  float option_value1_;
  ::google::protobuf::int32 option_type2_;
  float option_value2_;
  ::google::protobuf::int32 option_type3_;
  float option_value3_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdWingEnhance* default_instance_;
};
// -------------------------------------------------------------------

class mdWingUpgrade : public ::google::protobuf::Message {
 public:
  mdWingUpgrade();
  virtual ~mdWingUpgrade();

  mdWingUpgrade(const mdWingUpgrade& from);

  inline mdWingUpgrade& operator=(const mdWingUpgrade& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdWingUpgrade& default_instance();

  void Swap(mdWingUpgrade* other);

  // implements Message ----------------------------------------------

  mdWingUpgrade* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdWingUpgrade& from);
  void MergeFrom(const mdWingUpgrade& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 grade = 1;
  inline bool has_grade() const;
  inline void clear_grade();
  static const int kGradeFieldNumber = 1;
  inline ::google::protobuf::int32 grade() const;
  inline void set_grade(::google::protobuf::int32 value);

  // required int32 need_item_template_id = 2;
  inline bool has_need_item_template_id() const;
  inline void clear_need_item_template_id();
  static const int kNeedItemTemplateIdFieldNumber = 2;
  inline ::google::protobuf::int32 need_item_template_id() const;
  inline void set_need_item_template_id(::google::protobuf::int32 value);

  // required int32 need_item_count = 3;
  inline bool has_need_item_count() const;
  inline void clear_need_item_count();
  static const int kNeedItemCountFieldNumber = 3;
  inline ::google::protobuf::int32 need_item_count() const;
  inline void set_need_item_count(::google::protobuf::int32 value);

  // required int32 rate = 4;
  inline bool has_rate() const;
  inline void clear_rate();
  static const int kRateFieldNumber = 4;
  inline ::google::protobuf::int32 rate() const;
  inline void set_rate(::google::protobuf::int32 value);

  // required int32 gold_cost = 5;
  inline bool has_gold_cost() const;
  inline void clear_gold_cost();
  static const int kGoldCostFieldNumber = 5;
  inline ::google::protobuf::int32 gold_cost() const;
  inline void set_gold_cost(::google::protobuf::int32 value);

  // required int32 fail_point_max = 6;
  inline bool has_fail_point_max() const;
  inline void clear_fail_point_max();
  static const int kFailPointMaxFieldNumber = 6;
  inline ::google::protobuf::int32 fail_point_max() const;
  inline void set_fail_point_max(::google::protobuf::int32 value);

  // required int32 option_type1 = 7;
  inline bool has_option_type1() const;
  inline void clear_option_type1();
  static const int kOptionType1FieldNumber = 7;
  inline ::google::protobuf::int32 option_type1() const;
  inline void set_option_type1(::google::protobuf::int32 value);

  // required float option_value1 = 8;
  inline bool has_option_value1() const;
  inline void clear_option_value1();
  static const int kOptionValue1FieldNumber = 8;
  inline float option_value1() const;
  inline void set_option_value1(float value);

  // required int32 option_type2 = 9;
  inline bool has_option_type2() const;
  inline void clear_option_type2();
  static const int kOptionType2FieldNumber = 9;
  inline ::google::protobuf::int32 option_type2() const;
  inline void set_option_type2(::google::protobuf::int32 value);

  // required float option_value2 = 10;
  inline bool has_option_value2() const;
  inline void clear_option_value2();
  static const int kOptionValue2FieldNumber = 10;
  inline float option_value2() const;
  inline void set_option_value2(float value);

  // required int32 option_type3 = 11;
  inline bool has_option_type3() const;
  inline void clear_option_type3();
  static const int kOptionType3FieldNumber = 11;
  inline ::google::protobuf::int32 option_type3() const;
  inline void set_option_type3(::google::protobuf::int32 value);

  // required float option_value3 = 12;
  inline bool has_option_value3() const;
  inline void clear_option_value3();
  static const int kOptionValue3FieldNumber = 12;
  inline float option_value3() const;
  inline void set_option_value3(float value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdWingUpgrade)
 private:
  inline void set_has_grade();
  inline void clear_has_grade();
  inline void set_has_need_item_template_id();
  inline void clear_has_need_item_template_id();
  inline void set_has_need_item_count();
  inline void clear_has_need_item_count();
  inline void set_has_rate();
  inline void clear_has_rate();
  inline void set_has_gold_cost();
  inline void clear_has_gold_cost();
  inline void set_has_fail_point_max();
  inline void clear_has_fail_point_max();
  inline void set_has_option_type1();
  inline void clear_has_option_type1();
  inline void set_has_option_value1();
  inline void clear_has_option_value1();
  inline void set_has_option_type2();
  inline void clear_has_option_type2();
  inline void set_has_option_value2();
  inline void clear_has_option_value2();
  inline void set_has_option_type3();
  inline void clear_has_option_type3();
  inline void set_has_option_value3();
  inline void clear_has_option_value3();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 grade_;
  ::google::protobuf::int32 need_item_template_id_;
  ::google::protobuf::int32 need_item_count_;
  ::google::protobuf::int32 rate_;
  ::google::protobuf::int32 gold_cost_;
  ::google::protobuf::int32 fail_point_max_;
  ::google::protobuf::int32 option_type1_;
  float option_value1_;
  ::google::protobuf::int32 option_type2_;
  float option_value2_;
  ::google::protobuf::int32 option_type3_;
  float option_value3_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdWingUpgrade* default_instance_;
};
// -------------------------------------------------------------------

class mdWingOptionValue : public ::google::protobuf::Message {
 public:
  mdWingOptionValue();
  virtual ~mdWingOptionValue();

  mdWingOptionValue(const mdWingOptionValue& from);

  inline mdWingOptionValue& operator=(const mdWingOptionValue& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdWingOptionValue& default_instance();

  void Swap(mdWingOptionValue* other);

  // implements Message ----------------------------------------------

  mdWingOptionValue* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdWingOptionValue& from);
  void MergeFrom(const mdWingOptionValue& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 character_type = 1;
  inline bool has_character_type() const;
  inline void clear_character_type();
  static const int kCharacterTypeFieldNumber = 1;
  inline ::google::protobuf::int32 character_type() const;
  inline void set_character_type(::google::protobuf::int32 value);

  // required int32 option_index = 2;
  inline bool has_option_index() const;
  inline void clear_option_index();
  static const int kOptionIndexFieldNumber = 2;
  inline ::google::protobuf::int32 option_index() const;
  inline void set_option_index(::google::protobuf::int32 value);

  // required int32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // required int32 option_type = 4;
  inline bool has_option_type() const;
  inline void clear_option_type();
  static const int kOptionTypeFieldNumber = 4;
  inline ::google::protobuf::int32 option_type() const;
  inline void set_option_type(::google::protobuf::int32 value);

  // required float option_value = 5;
  inline bool has_option_value() const;
  inline void clear_option_value();
  static const int kOptionValueFieldNumber = 5;
  inline float option_value() const;
  inline void set_option_value(float value);

  // required int32 need_item_template_id = 6;
  inline bool has_need_item_template_id() const;
  inline void clear_need_item_template_id();
  static const int kNeedItemTemplateIdFieldNumber = 6;
  inline ::google::protobuf::int32 need_item_template_id() const;
  inline void set_need_item_template_id(::google::protobuf::int32 value);

  // required int32 need_item_count = 7;
  inline bool has_need_item_count() const;
  inline void clear_need_item_count();
  static const int kNeedItemCountFieldNumber = 7;
  inline ::google::protobuf::int32 need_item_count() const;
  inline void set_need_item_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdWingOptionValue)
 private:
  inline void set_has_character_type();
  inline void clear_has_character_type();
  inline void set_has_option_index();
  inline void clear_has_option_index();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_option_type();
  inline void clear_has_option_type();
  inline void set_has_option_value();
  inline void clear_has_option_value();
  inline void set_has_need_item_template_id();
  inline void clear_has_need_item_template_id();
  inline void set_has_need_item_count();
  inline void clear_has_need_item_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 character_type_;
  ::google::protobuf::int32 option_index_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 option_type_;
  float option_value_;
  ::google::protobuf::int32 need_item_template_id_;
  ::google::protobuf::int32 need_item_count_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdWingOptionValue* default_instance_;
};
// -------------------------------------------------------------------

class mdWingOptionOpen : public ::google::protobuf::Message {
 public:
  mdWingOptionOpen();
  virtual ~mdWingOptionOpen();

  mdWingOptionOpen(const mdWingOptionOpen& from);

  inline mdWingOptionOpen& operator=(const mdWingOptionOpen& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdWingOptionOpen& default_instance();

  void Swap(mdWingOptionOpen* other);

  // implements Message ----------------------------------------------

  mdWingOptionOpen* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdWingOptionOpen& from);
  void MergeFrom(const mdWingOptionOpen& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 character_type = 1;
  inline bool has_character_type() const;
  inline void clear_character_type();
  static const int kCharacterTypeFieldNumber = 1;
  inline ::google::protobuf::int32 character_type() const;
  inline void set_character_type(::google::protobuf::int32 value);

  // required int32 option_index = 2;
  inline bool has_option_index() const;
  inline void clear_option_index();
  static const int kOptionIndexFieldNumber = 2;
  inline ::google::protobuf::int32 option_index() const;
  inline void set_option_index(::google::protobuf::int32 value);

  // required int32 need_grade = 3;
  inline bool has_need_grade() const;
  inline void clear_need_grade();
  static const int kNeedGradeFieldNumber = 3;
  inline ::google::protobuf::int32 need_grade() const;
  inline void set_need_grade(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdWingOptionOpen)
 private:
  inline void set_has_character_type();
  inline void clear_has_character_type();
  inline void set_has_option_index();
  inline void clear_has_option_index();
  inline void set_has_need_grade();
  inline void clear_has_need_grade();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 character_type_;
  ::google::protobuf::int32 option_index_;
  ::google::protobuf::int32 need_grade_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdWingOptionOpen* default_instance_;
};
// -------------------------------------------------------------------

class mdWingOptionMaxLevel : public ::google::protobuf::Message {
 public:
  mdWingOptionMaxLevel();
  virtual ~mdWingOptionMaxLevel();

  mdWingOptionMaxLevel(const mdWingOptionMaxLevel& from);

  inline mdWingOptionMaxLevel& operator=(const mdWingOptionMaxLevel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdWingOptionMaxLevel& default_instance();

  void Swap(mdWingOptionMaxLevel* other);

  // implements Message ----------------------------------------------

  mdWingOptionMaxLevel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdWingOptionMaxLevel& from);
  void MergeFrom(const mdWingOptionMaxLevel& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 character_type = 1;
  inline bool has_character_type() const;
  inline void clear_character_type();
  static const int kCharacterTypeFieldNumber = 1;
  inline ::google::protobuf::int32 character_type() const;
  inline void set_character_type(::google::protobuf::int32 value);

  // required int32 option_index = 2;
  inline bool has_option_index() const;
  inline void clear_option_index();
  static const int kOptionIndexFieldNumber = 2;
  inline ::google::protobuf::int32 option_index() const;
  inline void set_option_index(::google::protobuf::int32 value);

  // required int32 wing_grade = 3;
  inline bool has_wing_grade() const;
  inline void clear_wing_grade();
  static const int kWingGradeFieldNumber = 3;
  inline ::google::protobuf::int32 wing_grade() const;
  inline void set_wing_grade(::google::protobuf::int32 value);

  // required int32 max_level = 4;
  inline bool has_max_level() const;
  inline void clear_max_level();
  static const int kMaxLevelFieldNumber = 4;
  inline ::google::protobuf::int32 max_level() const;
  inline void set_max_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdWingOptionMaxLevel)
 private:
  inline void set_has_character_type();
  inline void clear_has_character_type();
  inline void set_has_option_index();
  inline void clear_has_option_index();
  inline void set_has_wing_grade();
  inline void clear_has_wing_grade();
  inline void set_has_max_level();
  inline void clear_has_max_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 character_type_;
  ::google::protobuf::int32 option_index_;
  ::google::protobuf::int32 wing_grade_;
  ::google::protobuf::int32 max_level_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdWingOptionMaxLevel* default_instance_;
};
// -------------------------------------------------------------------

class mdHeroTowerFloor : public ::google::protobuf::Message {
 public:
  mdHeroTowerFloor();
  virtual ~mdHeroTowerFloor();

  mdHeroTowerFloor(const mdHeroTowerFloor& from);

  inline mdHeroTowerFloor& operator=(const mdHeroTowerFloor& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdHeroTowerFloor& default_instance();

  void Swap(mdHeroTowerFloor* other);

  // implements Message ----------------------------------------------

  mdHeroTowerFloor* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdHeroTowerFloor& from);
  void MergeFrom(const mdHeroTowerFloor& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 floor = 1;
  inline bool has_floor() const;
  inline void clear_floor();
  static const int kFloorFieldNumber = 1;
  inline ::google::protobuf::int32 floor() const;
  inline void set_floor(::google::protobuf::int32 value);

  // required int32 recommend_power = 2;
  inline bool has_recommend_power() const;
  inline void clear_recommend_power();
  static const int kRecommendPowerFieldNumber = 2;
  inline ::google::protobuf::int32 recommend_power() const;
  inline void set_recommend_power(::google::protobuf::int32 value);

  // required int32 recommend_attack = 3;
  inline bool has_recommend_attack() const;
  inline void clear_recommend_attack();
  static const int kRecommendAttackFieldNumber = 3;
  inline ::google::protobuf::int32 recommend_attack() const;
  inline void set_recommend_attack(::google::protobuf::int32 value);

  // required int32 recommend_defense = 4;
  inline bool has_recommend_defense() const;
  inline void clear_recommend_defense();
  static const int kRecommendDefenseFieldNumber = 4;
  inline ::google::protobuf::int32 recommend_defense() const;
  inline void set_recommend_defense(::google::protobuf::int32 value);

  // required int32 clear_limit_time = 5;
  inline bool has_clear_limit_time() const;
  inline void clear_clear_limit_time();
  static const int kClearLimitTimeFieldNumber = 5;
  inline ::google::protobuf::int32 clear_limit_time() const;
  inline void set_clear_limit_time(::google::protobuf::int32 value);

  // required int32 map_id = 6;
  inline bool has_map_id() const;
  inline void clear_map_id();
  static const int kMapIdFieldNumber = 6;
  inline ::google::protobuf::int32 map_id() const;
  inline void set_map_id(::google::protobuf::int32 value);

  // required int32 difficulty_scale = 7;
  inline bool has_difficulty_scale() const;
  inline void clear_difficulty_scale();
  static const int kDifficultyScaleFieldNumber = 7;
  inline ::google::protobuf::int32 difficulty_scale() const;
  inline void set_difficulty_scale(::google::protobuf::int32 value);

  // required int32 monster_level = 8;
  inline bool has_monster_level() const;
  inline void clear_monster_level();
  static const int kMonsterLevelFieldNumber = 8;
  inline ::google::protobuf::int32 monster_level() const;
  inline void set_monster_level(::google::protobuf::int32 value);

  // repeated .b2.protocol.commondata.Reward first_rewards = 9;
  inline int first_rewards_size() const;
  inline void clear_first_rewards();
  static const int kFirstRewardsFieldNumber = 9;
  inline const ::b2::protocol::commondata::Reward& first_rewards(int index) const;
  inline ::b2::protocol::commondata::Reward* mutable_first_rewards(int index);
  inline ::b2::protocol::commondata::Reward* add_first_rewards();
  inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward >&
      first_rewards() const;
  inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward >*
      mutable_first_rewards();

  // repeated .b2.protocol.commondata.Reward rewards = 10;
  inline int rewards_size() const;
  inline void clear_rewards();
  static const int kRewardsFieldNumber = 10;
  inline const ::b2::protocol::commondata::Reward& rewards(int index) const;
  inline ::b2::protocol::commondata::Reward* mutable_rewards(int index);
  inline ::b2::protocol::commondata::Reward* add_rewards();
  inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward >&
      rewards() const;
  inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward >*
      mutable_rewards();

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdHeroTowerFloor)
 private:
  inline void set_has_floor();
  inline void clear_has_floor();
  inline void set_has_recommend_power();
  inline void clear_has_recommend_power();
  inline void set_has_recommend_attack();
  inline void clear_has_recommend_attack();
  inline void set_has_recommend_defense();
  inline void clear_has_recommend_defense();
  inline void set_has_clear_limit_time();
  inline void clear_has_clear_limit_time();
  inline void set_has_map_id();
  inline void clear_has_map_id();
  inline void set_has_difficulty_scale();
  inline void clear_has_difficulty_scale();
  inline void set_has_monster_level();
  inline void clear_has_monster_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 floor_;
  ::google::protobuf::int32 recommend_power_;
  ::google::protobuf::int32 recommend_attack_;
  ::google::protobuf::int32 recommend_defense_;
  ::google::protobuf::int32 clear_limit_time_;
  ::google::protobuf::int32 map_id_;
  ::google::protobuf::int32 difficulty_scale_;
  ::google::protobuf::int32 monster_level_;
  ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward > first_rewards_;
  ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward > rewards_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdHeroTowerFloor* default_instance_;
};
// -------------------------------------------------------------------

class mdRelicInfo : public ::google::protobuf::Message {
 public:
  mdRelicInfo();
  virtual ~mdRelicInfo();

  mdRelicInfo(const mdRelicInfo& from);

  inline mdRelicInfo& operator=(const mdRelicInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdRelicInfo& default_instance();

  void Swap(mdRelicInfo* other);

  // implements Message ----------------------------------------------

  mdRelicInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdRelicInfo& from);
  void MergeFrom(const mdRelicInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 relic_id = 1;
  inline bool has_relic_id() const;
  inline void clear_relic_id();
  static const int kRelicIdFieldNumber = 1;
  inline ::google::protobuf::int32 relic_id() const;
  inline void set_relic_id(::google::protobuf::int32 value);

  // required int32 open_stage_id = 2;
  inline bool has_open_stage_id() const;
  inline void clear_open_stage_id();
  static const int kOpenStageIdFieldNumber = 2;
  inline ::google::protobuf::int32 open_stage_id() const;
  inline void set_open_stage_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdRelicInfo)
 private:
  inline void set_has_relic_id();
  inline void clear_has_relic_id();
  inline void set_has_open_stage_id();
  inline void clear_has_open_stage_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 relic_id_;
  ::google::protobuf::int32 open_stage_id_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdRelicInfo* default_instance_;
};
// -------------------------------------------------------------------

class mdRelicGradeInfo : public ::google::protobuf::Message {
 public:
  mdRelicGradeInfo();
  virtual ~mdRelicGradeInfo();

  mdRelicGradeInfo(const mdRelicGradeInfo& from);

  inline mdRelicGradeInfo& operator=(const mdRelicGradeInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdRelicGradeInfo& default_instance();

  void Swap(mdRelicGradeInfo* other);

  // implements Message ----------------------------------------------

  mdRelicGradeInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdRelicGradeInfo& from);
  void MergeFrom(const mdRelicGradeInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 relic_id = 1;
  inline bool has_relic_id() const;
  inline void clear_relic_id();
  static const int kRelicIdFieldNumber = 1;
  inline ::google::protobuf::int32 relic_id() const;
  inline void set_relic_id(::google::protobuf::int32 value);

  // required int32 grade = 2;
  inline bool has_grade() const;
  inline void clear_grade();
  static const int kGradeFieldNumber = 2;
  inline ::google::protobuf::int32 grade() const;
  inline void set_grade(::google::protobuf::int32 value);

  // required int32 option_id_1 = 3;
  inline bool has_option_id_1() const;
  inline void clear_option_id_1();
  static const int kOptionId1FieldNumber = 3;
  inline ::google::protobuf::int32 option_id_1() const;
  inline void set_option_id_1(::google::protobuf::int32 value);

  // required int32 option_value_1 = 4;
  inline bool has_option_value_1() const;
  inline void clear_option_value_1();
  static const int kOptionValue1FieldNumber = 4;
  inline ::google::protobuf::int32 option_value_1() const;
  inline void set_option_value_1(::google::protobuf::int32 value);

  // required int32 option_id_2 = 5;
  inline bool has_option_id_2() const;
  inline void clear_option_id_2();
  static const int kOptionId2FieldNumber = 5;
  inline ::google::protobuf::int32 option_id_2() const;
  inline void set_option_id_2(::google::protobuf::int32 value);

  // required int32 option_value_2 = 6;
  inline bool has_option_value_2() const;
  inline void clear_option_value_2();
  static const int kOptionValue2FieldNumber = 6;
  inline ::google::protobuf::int32 option_value_2() const;
  inline void set_option_value_2(::google::protobuf::int32 value);

  // required int32 option_id_3 = 7;
  inline bool has_option_id_3() const;
  inline void clear_option_id_3();
  static const int kOptionId3FieldNumber = 7;
  inline ::google::protobuf::int32 option_id_3() const;
  inline void set_option_id_3(::google::protobuf::int32 value);

  // required int32 option_value_3 = 8;
  inline bool has_option_value_3() const;
  inline void clear_option_value_3();
  static const int kOptionValue3FieldNumber = 8;
  inline ::google::protobuf::int32 option_value_3() const;
  inline void set_option_value_3(::google::protobuf::int32 value);

  // required int32 promotion_rate = 9;
  inline bool has_promotion_rate() const;
  inline void clear_promotion_rate();
  static const int kPromotionRateFieldNumber = 9;
  inline ::google::protobuf::int32 promotion_rate() const;
  inline void set_promotion_rate(::google::protobuf::int32 value);

  // required int32 promotion_gold = 10;
  inline bool has_promotion_gold() const;
  inline void clear_promotion_gold();
  static const int kPromotionGoldFieldNumber = 10;
  inline ::google::protobuf::int32 promotion_gold() const;
  inline void set_promotion_gold(::google::protobuf::int32 value);

  // required int32 promotion_boss_piece = 11;
  inline bool has_promotion_boss_piece() const;
  inline void clear_promotion_boss_piece();
  static const int kPromotionBossPieceFieldNumber = 11;
  inline ::google::protobuf::int32 promotion_boss_piece() const;
  inline void set_promotion_boss_piece(::google::protobuf::int32 value);

  // required int32 boss_piece_id = 12;
  inline bool has_boss_piece_id() const;
  inline void clear_boss_piece_id();
  static const int kBossPieceIdFieldNumber = 12;
  inline ::google::protobuf::int32 boss_piece_id() const;
  inline void set_boss_piece_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdRelicGradeInfo)
 private:
  inline void set_has_relic_id();
  inline void clear_has_relic_id();
  inline void set_has_grade();
  inline void clear_has_grade();
  inline void set_has_option_id_1();
  inline void clear_has_option_id_1();
  inline void set_has_option_value_1();
  inline void clear_has_option_value_1();
  inline void set_has_option_id_2();
  inline void clear_has_option_id_2();
  inline void set_has_option_value_2();
  inline void clear_has_option_value_2();
  inline void set_has_option_id_3();
  inline void clear_has_option_id_3();
  inline void set_has_option_value_3();
  inline void clear_has_option_value_3();
  inline void set_has_promotion_rate();
  inline void clear_has_promotion_rate();
  inline void set_has_promotion_gold();
  inline void clear_has_promotion_gold();
  inline void set_has_promotion_boss_piece();
  inline void clear_has_promotion_boss_piece();
  inline void set_has_boss_piece_id();
  inline void clear_has_boss_piece_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 relic_id_;
  ::google::protobuf::int32 grade_;
  ::google::protobuf::int32 option_id_1_;
  ::google::protobuf::int32 option_value_1_;
  ::google::protobuf::int32 option_id_2_;
  ::google::protobuf::int32 option_value_2_;
  ::google::protobuf::int32 option_id_3_;
  ::google::protobuf::int32 option_value_3_;
  ::google::protobuf::int32 promotion_rate_;
  ::google::protobuf::int32 promotion_gold_;
  ::google::protobuf::int32 promotion_boss_piece_;
  ::google::protobuf::int32 boss_piece_id_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdRelicGradeInfo* default_instance_;
};
// -------------------------------------------------------------------

class mdRelicLevelInfo : public ::google::protobuf::Message {
 public:
  mdRelicLevelInfo();
  virtual ~mdRelicLevelInfo();

  mdRelicLevelInfo(const mdRelicLevelInfo& from);

  inline mdRelicLevelInfo& operator=(const mdRelicLevelInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdRelicLevelInfo& default_instance();

  void Swap(mdRelicLevelInfo* other);

  // implements Message ----------------------------------------------

  mdRelicLevelInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdRelicLevelInfo& from);
  void MergeFrom(const mdRelicLevelInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 relic_id = 1;
  inline bool has_relic_id() const;
  inline void clear_relic_id();
  static const int kRelicIdFieldNumber = 1;
  inline ::google::protobuf::int32 relic_id() const;
  inline void set_relic_id(::google::protobuf::int32 value);

  // required int32 enhance_level = 2;
  inline bool has_enhance_level() const;
  inline void clear_enhance_level();
  static const int kEnhanceLevelFieldNumber = 2;
  inline ::google::protobuf::int32 enhance_level() const;
  inline void set_enhance_level(::google::protobuf::int32 value);

  // required int32 mode_option_id_1 = 3;
  inline bool has_mode_option_id_1() const;
  inline void clear_mode_option_id_1();
  static const int kModeOptionId1FieldNumber = 3;
  inline ::google::protobuf::int32 mode_option_id_1() const;
  inline void set_mode_option_id_1(::google::protobuf::int32 value);

  // required int32 mode_option_value_1 = 4;
  inline bool has_mode_option_value_1() const;
  inline void clear_mode_option_value_1();
  static const int kModeOptionValue1FieldNumber = 4;
  inline ::google::protobuf::int32 mode_option_value_1() const;
  inline void set_mode_option_value_1(::google::protobuf::int32 value);

  // required int32 mode_option_id_2 = 5;
  inline bool has_mode_option_id_2() const;
  inline void clear_mode_option_id_2();
  static const int kModeOptionId2FieldNumber = 5;
  inline ::google::protobuf::int32 mode_option_id_2() const;
  inline void set_mode_option_id_2(::google::protobuf::int32 value);

  // required int32 mode_option_value_2 = 6;
  inline bool has_mode_option_value_2() const;
  inline void clear_mode_option_value_2();
  static const int kModeOptionValue2FieldNumber = 6;
  inline ::google::protobuf::int32 mode_option_value_2() const;
  inline void set_mode_option_value_2(::google::protobuf::int32 value);

  // required int32 mode_option_id_3 = 7;
  inline bool has_mode_option_id_3() const;
  inline void clear_mode_option_id_3();
  static const int kModeOptionId3FieldNumber = 7;
  inline ::google::protobuf::int32 mode_option_id_3() const;
  inline void set_mode_option_id_3(::google::protobuf::int32 value);

  // required int32 mode_option_value_3 = 8;
  inline bool has_mode_option_value_3() const;
  inline void clear_mode_option_value_3();
  static const int kModeOptionValue3FieldNumber = 8;
  inline ::google::protobuf::int32 mode_option_value_3() const;
  inline void set_mode_option_value_3(::google::protobuf::int32 value);

  // required int32 enhance_rate = 9;
  inline bool has_enhance_rate() const;
  inline void clear_enhance_rate();
  static const int kEnhanceRateFieldNumber = 9;
  inline ::google::protobuf::int32 enhance_rate() const;
  inline void set_enhance_rate(::google::protobuf::int32 value);

  // required int32 need_gold = 10;
  inline bool has_need_gold() const;
  inline void clear_need_gold();
  static const int kNeedGoldFieldNumber = 10;
  inline ::google::protobuf::int32 need_gold() const;
  inline void set_need_gold(::google::protobuf::int32 value);

  // required int32 need_hero_piece = 11;
  inline bool has_need_hero_piece() const;
  inline void clear_need_hero_piece();
  static const int kNeedHeroPieceFieldNumber = 11;
  inline ::google::protobuf::int32 need_hero_piece() const;
  inline void set_need_hero_piece(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdRelicLevelInfo)
 private:
  inline void set_has_relic_id();
  inline void clear_has_relic_id();
  inline void set_has_enhance_level();
  inline void clear_has_enhance_level();
  inline void set_has_mode_option_id_1();
  inline void clear_has_mode_option_id_1();
  inline void set_has_mode_option_value_1();
  inline void clear_has_mode_option_value_1();
  inline void set_has_mode_option_id_2();
  inline void clear_has_mode_option_id_2();
  inline void set_has_mode_option_value_2();
  inline void clear_has_mode_option_value_2();
  inline void set_has_mode_option_id_3();
  inline void clear_has_mode_option_id_3();
  inline void set_has_mode_option_value_3();
  inline void clear_has_mode_option_value_3();
  inline void set_has_enhance_rate();
  inline void clear_has_enhance_rate();
  inline void set_has_need_gold();
  inline void clear_has_need_gold();
  inline void set_has_need_hero_piece();
  inline void clear_has_need_hero_piece();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 relic_id_;
  ::google::protobuf::int32 enhance_level_;
  ::google::protobuf::int32 mode_option_id_1_;
  ::google::protobuf::int32 mode_option_value_1_;
  ::google::protobuf::int32 mode_option_id_2_;
  ::google::protobuf::int32 mode_option_value_2_;
  ::google::protobuf::int32 mode_option_id_3_;
  ::google::protobuf::int32 mode_option_value_3_;
  ::google::protobuf::int32 enhance_rate_;
  ::google::protobuf::int32 need_gold_;
  ::google::protobuf::int32 need_hero_piece_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdRelicLevelInfo* default_instance_;
};
// -------------------------------------------------------------------

class mdGuildBattleResultReward : public ::google::protobuf::Message {
 public:
  mdGuildBattleResultReward();
  virtual ~mdGuildBattleResultReward();

  mdGuildBattleResultReward(const mdGuildBattleResultReward& from);

  inline mdGuildBattleResultReward& operator=(const mdGuildBattleResultReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdGuildBattleResultReward& default_instance();

  void Swap(mdGuildBattleResultReward* other);

  // implements Message ----------------------------------------------

  mdGuildBattleResultReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdGuildBattleResultReward& from);
  void MergeFrom(const mdGuildBattleResultReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 reward_grade = 1;
  inline bool has_reward_grade() const;
  inline void clear_reward_grade();
  static const int kRewardGradeFieldNumber = 1;
  inline ::google::protobuf::int32 reward_grade() const;
  inline void set_reward_grade(::google::protobuf::int32 value);

  // required int32 req_count_min = 2;
  inline bool has_req_count_min() const;
  inline void clear_req_count_min();
  static const int kReqCountMinFieldNumber = 2;
  inline ::google::protobuf::int32 req_count_min() const;
  inline void set_req_count_min(::google::protobuf::int32 value);

  // required int32 req_count_max = 3;
  inline bool has_req_count_max() const;
  inline void clear_req_count_max();
  static const int kReqCountMaxFieldNumber = 3;
  inline ::google::protobuf::int32 req_count_max() const;
  inline void set_req_count_max(::google::protobuf::int32 value);

  // repeated .b2.protocol.commondata.Reward rewards = 4;
  inline int rewards_size() const;
  inline void clear_rewards();
  static const int kRewardsFieldNumber = 4;
  inline const ::b2::protocol::commondata::Reward& rewards(int index) const;
  inline ::b2::protocol::commondata::Reward* mutable_rewards(int index);
  inline ::b2::protocol::commondata::Reward* add_rewards();
  inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward >&
      rewards() const;
  inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward >*
      mutable_rewards();

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdGuildBattleResultReward)
 private:
  inline void set_has_reward_grade();
  inline void clear_has_reward_grade();
  inline void set_has_req_count_min();
  inline void clear_has_req_count_min();
  inline void set_has_req_count_max();
  inline void clear_has_req_count_max();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 reward_grade_;
  ::google::protobuf::int32 req_count_min_;
  ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward > rewards_;
  ::google::protobuf::int32 req_count_max_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdGuildBattleResultReward* default_instance_;
};
// -------------------------------------------------------------------

class mdGuildBattleSeasonReward : public ::google::protobuf::Message {
 public:
  mdGuildBattleSeasonReward();
  virtual ~mdGuildBattleSeasonReward();

  mdGuildBattleSeasonReward(const mdGuildBattleSeasonReward& from);

  inline mdGuildBattleSeasonReward& operator=(const mdGuildBattleSeasonReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdGuildBattleSeasonReward& default_instance();

  void Swap(mdGuildBattleSeasonReward* other);

  // implements Message ----------------------------------------------

  mdGuildBattleSeasonReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdGuildBattleSeasonReward& from);
  void MergeFrom(const mdGuildBattleSeasonReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 order = 1;
  inline bool has_order() const;
  inline void clear_order();
  static const int kOrderFieldNumber = 1;
  inline ::google::protobuf::int32 order() const;
  inline void set_order(::google::protobuf::int32 value);

  // required int32 ranking_min = 2;
  inline bool has_ranking_min() const;
  inline void clear_ranking_min();
  static const int kRankingMinFieldNumber = 2;
  inline ::google::protobuf::int32 ranking_min() const;
  inline void set_ranking_min(::google::protobuf::int32 value);

  // required int32 ranking_max = 3;
  inline bool has_ranking_max() const;
  inline void clear_ranking_max();
  static const int kRankingMaxFieldNumber = 3;
  inline ::google::protobuf::int32 ranking_max() const;
  inline void set_ranking_max(::google::protobuf::int32 value);

  // required float ranking_rate_min = 4;
  inline bool has_ranking_rate_min() const;
  inline void clear_ranking_rate_min();
  static const int kRankingRateMinFieldNumber = 4;
  inline float ranking_rate_min() const;
  inline void set_ranking_rate_min(float value);

  // required float ranking_rate_max = 5;
  inline bool has_ranking_rate_max() const;
  inline void clear_ranking_rate_max();
  static const int kRankingRateMaxFieldNumber = 5;
  inline float ranking_rate_max() const;
  inline void set_ranking_rate_max(float value);

  // repeated .b2.protocol.commondata.Reward rewards = 6;
  inline int rewards_size() const;
  inline void clear_rewards();
  static const int kRewardsFieldNumber = 6;
  inline const ::b2::protocol::commondata::Reward& rewards(int index) const;
  inline ::b2::protocol::commondata::Reward* mutable_rewards(int index);
  inline ::b2::protocol::commondata::Reward* add_rewards();
  inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward >&
      rewards() const;
  inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward >*
      mutable_rewards();

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdGuildBattleSeasonReward)
 private:
  inline void set_has_order();
  inline void clear_has_order();
  inline void set_has_ranking_min();
  inline void clear_has_ranking_min();
  inline void set_has_ranking_max();
  inline void clear_has_ranking_max();
  inline void set_has_ranking_rate_min();
  inline void clear_has_ranking_rate_min();
  inline void set_has_ranking_rate_max();
  inline void clear_has_ranking_rate_max();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 order_;
  ::google::protobuf::int32 ranking_min_;
  ::google::protobuf::int32 ranking_max_;
  float ranking_rate_min_;
  ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward > rewards_;
  float ranking_rate_max_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdGuildBattleSeasonReward* default_instance_;
};
// -------------------------------------------------------------------

class mdGuildBattleScheduleInfo : public ::google::protobuf::Message {
 public:
  mdGuildBattleScheduleInfo();
  virtual ~mdGuildBattleScheduleInfo();

  mdGuildBattleScheduleInfo(const mdGuildBattleScheduleInfo& from);

  inline mdGuildBattleScheduleInfo& operator=(const mdGuildBattleScheduleInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdGuildBattleScheduleInfo& default_instance();

  void Swap(mdGuildBattleScheduleInfo* other);

  // implements Message ----------------------------------------------

  mdGuildBattleScheduleInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdGuildBattleScheduleInfo& from);
  void MergeFrom(const mdGuildBattleScheduleInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 turn = 1;
  inline bool has_turn() const;
  inline void clear_turn();
  static const int kTurnFieldNumber = 1;
  inline ::google::protobuf::int32 turn() const;
  inline void set_turn(::google::protobuf::int32 value);

  // required int32 state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // required int32 start_day = 3;
  inline bool has_start_day() const;
  inline void clear_start_day();
  static const int kStartDayFieldNumber = 3;
  inline ::google::protobuf::int32 start_day() const;
  inline void set_start_day(::google::protobuf::int32 value);

  // required int32 start_hour = 4;
  inline bool has_start_hour() const;
  inline void clear_start_hour();
  static const int kStartHourFieldNumber = 4;
  inline ::google::protobuf::int32 start_hour() const;
  inline void set_start_hour(::google::protobuf::int32 value);

  // required int32 start_min = 5;
  inline bool has_start_min() const;
  inline void clear_start_min();
  static const int kStartMinFieldNumber = 5;
  inline ::google::protobuf::int32 start_min() const;
  inline void set_start_min(::google::protobuf::int32 value);

  // required int32 end_day = 6;
  inline bool has_end_day() const;
  inline void clear_end_day();
  static const int kEndDayFieldNumber = 6;
  inline ::google::protobuf::int32 end_day() const;
  inline void set_end_day(::google::protobuf::int32 value);

  // required int32 end_hour = 7;
  inline bool has_end_hour() const;
  inline void clear_end_hour();
  static const int kEndHourFieldNumber = 7;
  inline ::google::protobuf::int32 end_hour() const;
  inline void set_end_hour(::google::protobuf::int32 value);

  // required int32 end_min = 8;
  inline bool has_end_min() const;
  inline void clear_end_min();
  static const int kEndMinFieldNumber = 8;
  inline ::google::protobuf::int32 end_min() const;
  inline void set_end_min(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdGuildBattleScheduleInfo)
 private:
  inline void set_has_turn();
  inline void clear_has_turn();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_start_day();
  inline void clear_has_start_day();
  inline void set_has_start_hour();
  inline void clear_has_start_hour();
  inline void set_has_start_min();
  inline void clear_has_start_min();
  inline void set_has_end_day();
  inline void clear_has_end_day();
  inline void set_has_end_hour();
  inline void clear_has_end_hour();
  inline void set_has_end_min();
  inline void clear_has_end_min();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 turn_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int32 start_day_;
  ::google::protobuf::int32 start_hour_;
  ::google::protobuf::int32 start_min_;
  ::google::protobuf::int32 end_day_;
  ::google::protobuf::int32 end_hour_;
  ::google::protobuf::int32 end_min_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdGuildBattleScheduleInfo* default_instance_;
};
// -------------------------------------------------------------------

class mdGuildSkill : public ::google::protobuf::Message {
 public:
  mdGuildSkill();
  virtual ~mdGuildSkill();

  mdGuildSkill(const mdGuildSkill& from);

  inline mdGuildSkill& operator=(const mdGuildSkill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdGuildSkill& default_instance();

  void Swap(mdGuildSkill* other);

  // implements Message ----------------------------------------------

  mdGuildSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdGuildSkill& from);
  void MergeFrom(const mdGuildSkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // required int32 upgrade_cost_gold = 3;
  inline bool has_upgrade_cost_gold() const;
  inline void clear_upgrade_cost_gold();
  static const int kUpgradeCostGoldFieldNumber = 3;
  inline ::google::protobuf::int32 upgrade_cost_gold() const;
  inline void set_upgrade_cost_gold(::google::protobuf::int32 value);

  // required int32 upgrade_req_guild_level = 4;
  inline bool has_upgrade_req_guild_level() const;
  inline void clear_upgrade_req_guild_level();
  static const int kUpgradeReqGuildLevelFieldNumber = 4;
  inline ::google::protobuf::int32 upgrade_req_guild_level() const;
  inline void set_upgrade_req_guild_level(::google::protobuf::int32 value);

  // required int32 buy_cost_gold = 5;
  inline bool has_buy_cost_gold() const;
  inline void clear_buy_cost_gold();
  static const int kBuyCostGoldFieldNumber = 5;
  inline ::google::protobuf::int32 buy_cost_gold() const;
  inline void set_buy_cost_gold(::google::protobuf::int32 value);

  // required int32 buff_option_type = 6;
  inline bool has_buff_option_type() const;
  inline void clear_buff_option_type();
  static const int kBuffOptionTypeFieldNumber = 6;
  inline ::google::protobuf::int32 buff_option_type() const;
  inline void set_buff_option_type(::google::protobuf::int32 value);

  // required float buff_option_value = 7;
  inline bool has_buff_option_value() const;
  inline void clear_buff_option_value();
  static const int kBuffOptionValueFieldNumber = 7;
  inline float buff_option_value() const;
  inline void set_buff_option_value(float value);

  // required int32 buff_time_sec = 8;
  inline bool has_buff_time_sec() const;
  inline void clear_buff_time_sec();
  static const int kBuffTimeSecFieldNumber = 8;
  inline ::google::protobuf::int32 buff_time_sec() const;
  inline void set_buff_time_sec(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdGuildSkill)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_upgrade_cost_gold();
  inline void clear_has_upgrade_cost_gold();
  inline void set_has_upgrade_req_guild_level();
  inline void clear_has_upgrade_req_guild_level();
  inline void set_has_buy_cost_gold();
  inline void clear_has_buy_cost_gold();
  inline void set_has_buff_option_type();
  inline void clear_has_buff_option_type();
  inline void set_has_buff_option_value();
  inline void clear_has_buff_option_value();
  inline void set_has_buff_time_sec();
  inline void clear_has_buff_time_sec();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 upgrade_cost_gold_;
  ::google::protobuf::int32 upgrade_req_guild_level_;
  ::google::protobuf::int32 buy_cost_gold_;
  ::google::protobuf::int32 buff_option_type_;
  float buff_option_value_;
  ::google::protobuf::int32 buff_time_sec_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdGuildSkill* default_instance_;
};
// -------------------------------------------------------------------

class mdGuildExp : public ::google::protobuf::Message {
 public:
  mdGuildExp();
  virtual ~mdGuildExp();

  mdGuildExp(const mdGuildExp& from);

  inline mdGuildExp& operator=(const mdGuildExp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdGuildExp& default_instance();

  void Swap(mdGuildExp* other);

  // implements Message ----------------------------------------------

  mdGuildExp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdGuildExp& from);
  void MergeFrom(const mdGuildExp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // required int32 exp_max = 2;
  inline bool has_exp_max() const;
  inline void clear_exp_max();
  static const int kExpMaxFieldNumber = 2;
  inline ::google::protobuf::int32 exp_max() const;
  inline void set_exp_max(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdGuildExp)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_exp_max();
  inline void clear_has_exp_max();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 exp_max_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdGuildExp* default_instance_;
};
// -------------------------------------------------------------------

class mdGuildSupportItem : public ::google::protobuf::Message {
 public:
  mdGuildSupportItem();
  virtual ~mdGuildSupportItem();

  mdGuildSupportItem(const mdGuildSupportItem& from);

  inline mdGuildSupportItem& operator=(const mdGuildSupportItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdGuildSupportItem& default_instance();

  void Swap(mdGuildSupportItem* other);

  // implements Message ----------------------------------------------

  mdGuildSupportItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdGuildSupportItem& from);
  void MergeFrom(const mdGuildSupportItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 item_template_id = 1;
  inline bool has_item_template_id() const;
  inline void clear_item_template_id();
  static const int kItemTemplateIdFieldNumber = 1;
  inline ::google::protobuf::int32 item_template_id() const;
  inline void set_item_template_id(::google::protobuf::int32 value);

  // required int32 support_max_count = 2;
  inline bool has_support_max_count() const;
  inline void clear_support_max_count();
  static const int kSupportMaxCountFieldNumber = 2;
  inline ::google::protobuf::int32 support_max_count() const;
  inline void set_support_max_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdGuildSupportItem)
 private:
  inline void set_has_item_template_id();
  inline void clear_has_item_template_id();
  inline void set_has_support_max_count();
  inline void clear_has_support_max_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 item_template_id_;
  ::google::protobuf::int32 support_max_count_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdGuildSupportItem* default_instance_;
};
// -------------------------------------------------------------------

class mdGuildMercenary : public ::google::protobuf::Message {
 public:
  mdGuildMercenary();
  virtual ~mdGuildMercenary();

  mdGuildMercenary(const mdGuildMercenary& from);

  inline mdGuildMercenary& operator=(const mdGuildMercenary& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdGuildMercenary& default_instance();

  void Swap(mdGuildMercenary* other);

  // implements Message ----------------------------------------------

  mdGuildMercenary* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdGuildMercenary& from);
  void MergeFrom(const mdGuildMercenary& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 mastery_type = 2;
  inline bool has_mastery_type() const;
  inline void clear_mastery_type();
  static const int kMasteryTypeFieldNumber = 2;
  inline ::google::protobuf::int32 mastery_type() const;
  inline void set_mastery_type(::google::protobuf::int32 value);

  // required int32 max_armor_override = 3;
  inline bool has_max_armor_override() const;
  inline void clear_max_armor_override();
  static const int kMaxArmorOverrideFieldNumber = 3;
  inline ::google::protobuf::int32 max_armor_override() const;
  inline void set_max_armor_override(::google::protobuf::int32 value);

  // required int32 skill_id_1 = 4;
  inline bool has_skill_id_1() const;
  inline void clear_skill_id_1();
  static const int kSkillId1FieldNumber = 4;
  inline ::google::protobuf::int32 skill_id_1() const;
  inline void set_skill_id_1(::google::protobuf::int32 value);

  // required int32 skill_id_2 = 5;
  inline bool has_skill_id_2() const;
  inline void clear_skill_id_2();
  static const int kSkillId2FieldNumber = 5;
  inline ::google::protobuf::int32 skill_id_2() const;
  inline void set_skill_id_2(::google::protobuf::int32 value);

  // required int32 skill_id_3 = 6;
  inline bool has_skill_id_3() const;
  inline void clear_skill_id_3();
  static const int kSkillId3FieldNumber = 6;
  inline ::google::protobuf::int32 skill_id_3() const;
  inline void set_skill_id_3(::google::protobuf::int32 value);

  // required int32 max_use_count = 7;
  inline bool has_max_use_count() const;
  inline void clear_max_use_count();
  static const int kMaxUseCountFieldNumber = 7;
  inline ::google::protobuf::int32 max_use_count() const;
  inline void set_max_use_count(::google::protobuf::int32 value);

  // required bool is_usable = 8;
  inline bool has_is_usable() const;
  inline void clear_is_usable();
  static const int kIsUsableFieldNumber = 8;
  inline bool is_usable() const;
  inline void set_is_usable(bool value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdGuildMercenary)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_mastery_type();
  inline void clear_has_mastery_type();
  inline void set_has_max_armor_override();
  inline void clear_has_max_armor_override();
  inline void set_has_skill_id_1();
  inline void clear_has_skill_id_1();
  inline void set_has_skill_id_2();
  inline void clear_has_skill_id_2();
  inline void set_has_skill_id_3();
  inline void clear_has_skill_id_3();
  inline void set_has_max_use_count();
  inline void clear_has_max_use_count();
  inline void set_has_is_usable();
  inline void clear_has_is_usable();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 mastery_type_;
  ::google::protobuf::int32 max_armor_override_;
  ::google::protobuf::int32 skill_id_1_;
  ::google::protobuf::int32 skill_id_2_;
  ::google::protobuf::int32 skill_id_3_;
  ::google::protobuf::int32 max_use_count_;
  bool is_usable_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdGuildMercenary* default_instance_;
};
// -------------------------------------------------------------------

class mdGuildMercenarySkill : public ::google::protobuf::Message {
 public:
  mdGuildMercenarySkill();
  virtual ~mdGuildMercenarySkill();

  mdGuildMercenarySkill(const mdGuildMercenarySkill& from);

  inline mdGuildMercenarySkill& operator=(const mdGuildMercenarySkill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdGuildMercenarySkill& default_instance();

  void Swap(mdGuildMercenarySkill* other);

  // implements Message ----------------------------------------------

  mdGuildMercenarySkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdGuildMercenarySkill& from);
  void MergeFrom(const mdGuildMercenarySkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 skill_id = 1;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::int32 skill_id() const;
  inline void set_skill_id(::google::protobuf::int32 value);

  // required int32 require_mercenary_level = 2;
  inline bool has_require_mercenary_level() const;
  inline void clear_require_mercenary_level();
  static const int kRequireMercenaryLevelFieldNumber = 2;
  inline ::google::protobuf::int32 require_mercenary_level() const;
  inline void set_require_mercenary_level(::google::protobuf::int32 value);

  // required int32 cool_time_sec = 3;
  inline bool has_cool_time_sec() const;
  inline void clear_cool_time_sec();
  static const int kCoolTimeSecFieldNumber = 3;
  inline ::google::protobuf::int32 cool_time_sec() const;
  inline void set_cool_time_sec(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdGuildMercenarySkill)
 private:
  inline void set_has_skill_id();
  inline void clear_has_skill_id();
  inline void set_has_require_mercenary_level();
  inline void clear_has_require_mercenary_level();
  inline void set_has_cool_time_sec();
  inline void clear_has_cool_time_sec();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 skill_id_;
  ::google::protobuf::int32 require_mercenary_level_;
  ::google::protobuf::int32 cool_time_sec_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdGuildMercenarySkill* default_instance_;
};
// -------------------------------------------------------------------

class mdGuildMercenaryMastery : public ::google::protobuf::Message {
 public:
  mdGuildMercenaryMastery();
  virtual ~mdGuildMercenaryMastery();

  mdGuildMercenaryMastery(const mdGuildMercenaryMastery& from);

  inline mdGuildMercenaryMastery& operator=(const mdGuildMercenaryMastery& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdGuildMercenaryMastery& default_instance();

  void Swap(mdGuildMercenaryMastery* other);

  // implements Message ----------------------------------------------

  mdGuildMercenaryMastery* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdGuildMercenaryMastery& from);
  void MergeFrom(const mdGuildMercenaryMastery& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // required int32 max_exp = 3;
  inline bool has_max_exp() const;
  inline void clear_max_exp();
  static const int kMaxExpFieldNumber = 3;
  inline ::google::protobuf::int32 max_exp() const;
  inline void set_max_exp(::google::protobuf::int32 value);

  // required int32 option_id_1 = 10;
  inline bool has_option_id_1() const;
  inline void clear_option_id_1();
  static const int kOptionId1FieldNumber = 10;
  inline ::google::protobuf::int32 option_id_1() const;
  inline void set_option_id_1(::google::protobuf::int32 value);

  // required float option_value_1 = 11;
  inline bool has_option_value_1() const;
  inline void clear_option_value_1();
  static const int kOptionValue1FieldNumber = 11;
  inline float option_value_1() const;
  inline void set_option_value_1(float value);

  // required int32 option_id_2 = 12;
  inline bool has_option_id_2() const;
  inline void clear_option_id_2();
  static const int kOptionId2FieldNumber = 12;
  inline ::google::protobuf::int32 option_id_2() const;
  inline void set_option_id_2(::google::protobuf::int32 value);

  // required float option_value_2 = 13;
  inline bool has_option_value_2() const;
  inline void clear_option_value_2();
  static const int kOptionValue2FieldNumber = 13;
  inline float option_value_2() const;
  inline void set_option_value_2(float value);

  // required int32 option_id_3 = 14;
  inline bool has_option_id_3() const;
  inline void clear_option_id_3();
  static const int kOptionId3FieldNumber = 14;
  inline ::google::protobuf::int32 option_id_3() const;
  inline void set_option_id_3(::google::protobuf::int32 value);

  // required float option_value_3 = 15;
  inline bool has_option_value_3() const;
  inline void clear_option_value_3();
  static const int kOptionValue3FieldNumber = 15;
  inline float option_value_3() const;
  inline void set_option_value_3(float value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdGuildMercenaryMastery)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_max_exp();
  inline void clear_has_max_exp();
  inline void set_has_option_id_1();
  inline void clear_has_option_id_1();
  inline void set_has_option_value_1();
  inline void clear_has_option_value_1();
  inline void set_has_option_id_2();
  inline void clear_has_option_id_2();
  inline void set_has_option_value_2();
  inline void clear_has_option_value_2();
  inline void set_has_option_id_3();
  inline void clear_has_option_id_3();
  inline void set_has_option_value_3();
  inline void clear_has_option_value_3();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 max_exp_;
  ::google::protobuf::int32 option_id_1_;
  float option_value_1_;
  ::google::protobuf::int32 option_id_2_;
  float option_value_2_;
  ::google::protobuf::int32 option_id_3_;
  float option_value_3_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdGuildMercenaryMastery* default_instance_;
};
// -------------------------------------------------------------------

class mdGuildMercenaryDonation : public ::google::protobuf::Message {
 public:
  mdGuildMercenaryDonation();
  virtual ~mdGuildMercenaryDonation();

  mdGuildMercenaryDonation(const mdGuildMercenaryDonation& from);

  inline mdGuildMercenaryDonation& operator=(const mdGuildMercenaryDonation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdGuildMercenaryDonation& default_instance();

  void Swap(mdGuildMercenaryDonation* other);

  // implements Message ----------------------------------------------

  mdGuildMercenaryDonation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdGuildMercenaryDonation& from);
  void MergeFrom(const mdGuildMercenaryDonation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef mdGuildMercenaryDonation_DonationType DonationType;
  static const DonationType GOLD = mdGuildMercenaryDonation_DonationType_GOLD;
  static const DonationType GEM = mdGuildMercenaryDonation_DonationType_GEM;
  static inline bool DonationType_IsValid(int value) {
    return mdGuildMercenaryDonation_DonationType_IsValid(value);
  }
  static const DonationType DonationType_MIN =
    mdGuildMercenaryDonation_DonationType_DonationType_MIN;
  static const DonationType DonationType_MAX =
    mdGuildMercenaryDonation_DonationType_DonationType_MAX;
  static const int DonationType_ARRAYSIZE =
    mdGuildMercenaryDonation_DonationType_DonationType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  DonationType_descriptor() {
    return mdGuildMercenaryDonation_DonationType_descriptor();
  }
  static inline const ::std::string& DonationType_Name(DonationType value) {
    return mdGuildMercenaryDonation_DonationType_Name(value);
  }
  static inline bool DonationType_Parse(const ::std::string& name,
      DonationType* value) {
    return mdGuildMercenaryDonation_DonationType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .b2.protocol.masterdata.mdGuildMercenaryDonation.DonationType donation_type = 1;
  inline bool has_donation_type() const;
  inline void clear_donation_type();
  static const int kDonationTypeFieldNumber = 1;
  inline ::b2::protocol::masterdata::mdGuildMercenaryDonation_DonationType donation_type() const;
  inline void set_donation_type(::b2::protocol::masterdata::mdGuildMercenaryDonation_DonationType value);

  // required int32 item_template_id = 2;
  inline bool has_item_template_id() const;
  inline void clear_item_template_id();
  static const int kItemTemplateIdFieldNumber = 2;
  inline ::google::protobuf::int32 item_template_id() const;
  inline void set_item_template_id(::google::protobuf::int32 value);

  // required int32 donation_amount = 3;
  inline bool has_donation_amount() const;
  inline void clear_donation_amount();
  static const int kDonationAmountFieldNumber = 3;
  inline ::google::protobuf::int32 donation_amount() const;
  inline void set_donation_amount(::google::protobuf::int32 value);

  // required int32 exp_increment = 4;
  inline bool has_exp_increment() const;
  inline void clear_exp_increment();
  static const int kExpIncrementFieldNumber = 4;
  inline ::google::protobuf::int32 exp_increment() const;
  inline void set_exp_increment(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdGuildMercenaryDonation)
 private:
  inline void set_has_donation_type();
  inline void clear_has_donation_type();
  inline void set_has_item_template_id();
  inline void clear_has_item_template_id();
  inline void set_has_donation_amount();
  inline void clear_has_donation_amount();
  inline void set_has_exp_increment();
  inline void clear_has_exp_increment();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int donation_type_;
  ::google::protobuf::int32 item_template_id_;
  ::google::protobuf::int32 donation_amount_;
  ::google::protobuf::int32 exp_increment_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdGuildMercenaryDonation* default_instance_;
};
// -------------------------------------------------------------------

class mdStageFixedDrop : public ::google::protobuf::Message {
 public:
  mdStageFixedDrop();
  virtual ~mdStageFixedDrop();

  mdStageFixedDrop(const mdStageFixedDrop& from);

  inline mdStageFixedDrop& operator=(const mdStageFixedDrop& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdStageFixedDrop& default_instance();

  void Swap(mdStageFixedDrop* other);

  // implements Message ----------------------------------------------

  mdStageFixedDrop* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdStageFixedDrop& from);
  void MergeFrom(const mdStageFixedDrop& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 stage_id = 1;
  inline bool has_stage_id() const;
  inline void clear_stage_id();
  static const int kStageIdFieldNumber = 1;
  inline ::google::protobuf::int32 stage_id() const;
  inline void set_stage_id(::google::protobuf::int32 value);

  // required int32 idx = 2;
  inline bool has_idx() const;
  inline void clear_idx();
  static const int kIdxFieldNumber = 2;
  inline ::google::protobuf::int32 idx() const;
  inline void set_idx(::google::protobuf::int32 value);

  // required int32 template_id = 3;
  inline bool has_template_id() const;
  inline void clear_template_id();
  static const int kTemplateIdFieldNumber = 3;
  inline ::google::protobuf::int32 template_id() const;
  inline void set_template_id(::google::protobuf::int32 value);

  // required int32 min = 4;
  inline bool has_min() const;
  inline void clear_min();
  static const int kMinFieldNumber = 4;
  inline ::google::protobuf::int32 min() const;
  inline void set_min(::google::protobuf::int32 value);

  // required int32 max = 5;
  inline bool has_max() const;
  inline void clear_max();
  static const int kMaxFieldNumber = 5;
  inline ::google::protobuf::int32 max() const;
  inline void set_max(::google::protobuf::int32 value);

  // required int32 rate = 6;
  inline bool has_rate() const;
  inline void clear_rate();
  static const int kRateFieldNumber = 6;
  inline ::google::protobuf::int32 rate() const;
  inline void set_rate(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdStageFixedDrop)
 private:
  inline void set_has_stage_id();
  inline void clear_has_stage_id();
  inline void set_has_idx();
  inline void clear_has_idx();
  inline void set_has_template_id();
  inline void clear_has_template_id();
  inline void set_has_min();
  inline void clear_has_min();
  inline void set_has_max();
  inline void clear_has_max();
  inline void set_has_rate();
  inline void clear_has_rate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 stage_id_;
  ::google::protobuf::int32 idx_;
  ::google::protobuf::int32 template_id_;
  ::google::protobuf::int32 min_;
  ::google::protobuf::int32 max_;
  ::google::protobuf::int32 rate_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdStageFixedDrop* default_instance_;
};
// -------------------------------------------------------------------

class mdShopCashBonus : public ::google::protobuf::Message {
 public:
  mdShopCashBonus();
  virtual ~mdShopCashBonus();

  mdShopCashBonus(const mdShopCashBonus& from);

  inline mdShopCashBonus& operator=(const mdShopCashBonus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdShopCashBonus& default_instance();

  void Swap(mdShopCashBonus* other);

  // implements Message ----------------------------------------------

  mdShopCashBonus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdShopCashBonus& from);
  void MergeFrom(const mdShopCashBonus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 increase_rate = 2;
  inline bool has_increase_rate() const;
  inline void clear_increase_rate();
  static const int kIncreaseRateFieldNumber = 2;
  inline ::google::protobuf::int32 increase_rate() const;
  inline void set_increase_rate(::google::protobuf::int32 value);

  // required int64 start_time = 4;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 4;
  inline ::google::protobuf::int64 start_time() const;
  inline void set_start_time(::google::protobuf::int64 value);

  // required int64 end_time = 5;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 5;
  inline ::google::protobuf::int64 end_time() const;
  inline void set_end_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdShopCashBonus)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_increase_rate();
  inline void clear_has_increase_rate();
  inline void set_has_start_time();
  inline void clear_has_start_time();
  inline void set_has_end_time();
  inline void clear_has_end_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 increase_rate_;
  ::google::protobuf::int64 start_time_;
  ::google::protobuf::int64 end_time_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdShopCashBonus* default_instance_;
};
// -------------------------------------------------------------------

class mdShopFundsSale : public ::google::protobuf::Message {
 public:
  mdShopFundsSale();
  virtual ~mdShopFundsSale();

  mdShopFundsSale(const mdShopFundsSale& from);

  inline mdShopFundsSale& operator=(const mdShopFundsSale& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdShopFundsSale& default_instance();

  void Swap(mdShopFundsSale* other);

  // implements Message ----------------------------------------------

  mdShopFundsSale* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdShopFundsSale& from);
  void MergeFrom(const mdShopFundsSale& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 discount_rate = 2;
  inline bool has_discount_rate() const;
  inline void clear_discount_rate();
  static const int kDiscountRateFieldNumber = 2;
  inline ::google::protobuf::int32 discount_rate() const;
  inline void set_discount_rate(::google::protobuf::int32 value);

  // required int64 start_time = 4;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 4;
  inline ::google::protobuf::int64 start_time() const;
  inline void set_start_time(::google::protobuf::int64 value);

  // required int64 end_time = 5;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 5;
  inline ::google::protobuf::int64 end_time() const;
  inline void set_end_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdShopFundsSale)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_discount_rate();
  inline void clear_has_discount_rate();
  inline void set_has_start_time();
  inline void clear_has_start_time();
  inline void set_has_end_time();
  inline void clear_has_end_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 discount_rate_;
  ::google::protobuf::int64 start_time_;
  ::google::protobuf::int64 end_time_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdShopFundsSale* default_instance_;
};
// -------------------------------------------------------------------

class mdShopLotteryPrice : public ::google::protobuf::Message {
 public:
  mdShopLotteryPrice();
  virtual ~mdShopLotteryPrice();

  mdShopLotteryPrice(const mdShopLotteryPrice& from);

  inline mdShopLotteryPrice& operator=(const mdShopLotteryPrice& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdShopLotteryPrice& default_instance();

  void Swap(mdShopLotteryPrice* other);

  // implements Message ----------------------------------------------

  mdShopLotteryPrice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdShopLotteryPrice& from);
  void MergeFrom(const mdShopLotteryPrice& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool continuous = 1;
  inline bool has_continuous() const;
  inline void clear_continuous();
  static const int kContinuousFieldNumber = 1;
  inline bool continuous() const;
  inline void set_continuous(bool value);

  // required bool is_again = 2;
  inline bool has_is_again() const;
  inline void clear_is_again();
  static const int kIsAgainFieldNumber = 2;
  inline bool is_again() const;
  inline void set_is_again(bool value);

  // required int32 gem = 3;
  inline bool has_gem() const;
  inline void clear_gem();
  static const int kGemFieldNumber = 3;
  inline ::google::protobuf::int32 gem() const;
  inline void set_gem(::google::protobuf::int32 value);

  // required int32 calculated_gem = 4;
  inline bool has_calculated_gem() const;
  inline void clear_calculated_gem();
  static const int kCalculatedGemFieldNumber = 4;
  inline ::google::protobuf::int32 calculated_gem() const;
  inline void set_calculated_gem(::google::protobuf::int32 value);

  // required int32 social_point = 5;
  inline bool has_social_point() const;
  inline void clear_social_point();
  static const int kSocialPointFieldNumber = 5;
  inline ::google::protobuf::int32 social_point() const;
  inline void set_social_point(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdShopLotteryPrice)
 private:
  inline void set_has_continuous();
  inline void clear_has_continuous();
  inline void set_has_is_again();
  inline void clear_has_is_again();
  inline void set_has_gem();
  inline void clear_has_gem();
  inline void set_has_calculated_gem();
  inline void clear_has_calculated_gem();
  inline void set_has_social_point();
  inline void clear_has_social_point();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool continuous_;
  bool is_again_;
  ::google::protobuf::int32 gem_;
  ::google::protobuf::int32 calculated_gem_;
  ::google::protobuf::int32 social_point_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdShopLotteryPrice* default_instance_;
};
// -------------------------------------------------------------------

class mdShopLotteryPossibleGrade : public ::google::protobuf::Message {
 public:
  mdShopLotteryPossibleGrade();
  virtual ~mdShopLotteryPossibleGrade();

  mdShopLotteryPossibleGrade(const mdShopLotteryPossibleGrade& from);

  inline mdShopLotteryPossibleGrade& operator=(const mdShopLotteryPossibleGrade& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdShopLotteryPossibleGrade& default_instance();

  void Swap(mdShopLotteryPossibleGrade* other);

  // implements Message ----------------------------------------------

  mdShopLotteryPossibleGrade* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdShopLotteryPossibleGrade& from);
  void MergeFrom(const mdShopLotteryPossibleGrade& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .b2.protocol.commondata.Shop.DrawPriceType draw_price_type = 1;
  inline bool has_draw_price_type() const;
  inline void clear_draw_price_type();
  static const int kDrawPriceTypeFieldNumber = 1;
  inline ::b2::protocol::commondata::Shop_DrawPriceType draw_price_type() const;
  inline void set_draw_price_type(::b2::protocol::commondata::Shop_DrawPriceType value);

  // required bool is_continuous = 2;
  inline bool has_is_continuous() const;
  inline void clear_is_continuous();
  static const int kIsContinuousFieldNumber = 2;
  inline bool is_continuous() const;
  inline void set_is_continuous(bool value);

  // required int32 min_grade = 3;
  inline bool has_min_grade() const;
  inline void clear_min_grade();
  static const int kMinGradeFieldNumber = 3;
  inline ::google::protobuf::int32 min_grade() const;
  inline void set_min_grade(::google::protobuf::int32 value);

  // required int32 max_grade = 4;
  inline bool has_max_grade() const;
  inline void clear_max_grade();
  static const int kMaxGradeFieldNumber = 4;
  inline ::google::protobuf::int32 max_grade() const;
  inline void set_max_grade(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdShopLotteryPossibleGrade)
 private:
  inline void set_has_draw_price_type();
  inline void clear_has_draw_price_type();
  inline void set_has_is_continuous();
  inline void clear_has_is_continuous();
  inline void set_has_min_grade();
  inline void clear_has_min_grade();
  inline void set_has_max_grade();
  inline void clear_has_max_grade();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int draw_price_type_;
  bool is_continuous_;
  ::google::protobuf::int32 min_grade_;
  ::google::protobuf::int32 max_grade_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdShopLotteryPossibleGrade* default_instance_;
};
// -------------------------------------------------------------------

class mdShopLotterySpecialGrade : public ::google::protobuf::Message {
 public:
  mdShopLotterySpecialGrade();
  virtual ~mdShopLotterySpecialGrade();

  mdShopLotterySpecialGrade(const mdShopLotterySpecialGrade& from);

  inline mdShopLotterySpecialGrade& operator=(const mdShopLotterySpecialGrade& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdShopLotterySpecialGrade& default_instance();

  void Swap(mdShopLotterySpecialGrade* other);

  // implements Message ----------------------------------------------

  mdShopLotterySpecialGrade* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdShopLotterySpecialGrade& from);
  void MergeFrom(const mdShopLotterySpecialGrade& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 min_grade = 1;
  inline bool has_min_grade() const;
  inline void clear_min_grade();
  static const int kMinGradeFieldNumber = 1;
  inline ::google::protobuf::int32 min_grade() const;
  inline void set_min_grade(::google::protobuf::int32 value);

  // required int32 max_grade = 2;
  inline bool has_max_grade() const;
  inline void clear_max_grade();
  static const int kMaxGradeFieldNumber = 2;
  inline ::google::protobuf::int32 max_grade() const;
  inline void set_max_grade(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdShopLotterySpecialGrade)
 private:
  inline void set_has_min_grade();
  inline void clear_has_min_grade();
  inline void set_has_max_grade();
  inline void clear_has_max_grade();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 min_grade_;
  ::google::protobuf::int32 max_grade_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdShopLotterySpecialGrade* default_instance_;
};
// -------------------------------------------------------------------

class mdShopLotteryDailyLimit : public ::google::protobuf::Message {
 public:
  mdShopLotteryDailyLimit();
  virtual ~mdShopLotteryDailyLimit();

  mdShopLotteryDailyLimit(const mdShopLotteryDailyLimit& from);

  inline mdShopLotteryDailyLimit& operator=(const mdShopLotteryDailyLimit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdShopLotteryDailyLimit& default_instance();

  void Swap(mdShopLotteryDailyLimit* other);

  // implements Message ----------------------------------------------

  mdShopLotteryDailyLimit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdShopLotteryDailyLimit& from);
  void MergeFrom(const mdShopLotteryDailyLimit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .b2.protocol.commondata.Shop.DrawPriceType draw_price_type = 1;
  inline bool has_draw_price_type() const;
  inline void clear_draw_price_type();
  static const int kDrawPriceTypeFieldNumber = 1;
  inline ::b2::protocol::commondata::Shop_DrawPriceType draw_price_type() const;
  inline void set_draw_price_type(::b2::protocol::commondata::Shop_DrawPriceType value);

  // required bool is_continuous = 2;
  inline bool has_is_continuous() const;
  inline void clear_is_continuous();
  static const int kIsContinuousFieldNumber = 2;
  inline bool is_continuous() const;
  inline void set_is_continuous(bool value);

  // required int32 limit_count = 3;
  inline bool has_limit_count() const;
  inline void clear_limit_count();
  static const int kLimitCountFieldNumber = 3;
  inline ::google::protobuf::int32 limit_count() const;
  inline void set_limit_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdShopLotteryDailyLimit)
 private:
  inline void set_has_draw_price_type();
  inline void clear_has_draw_price_type();
  inline void set_has_is_continuous();
  inline void clear_has_is_continuous();
  inline void set_has_limit_count();
  inline void clear_has_limit_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int draw_price_type_;
  bool is_continuous_;
  ::google::protobuf::int32 limit_count_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdShopLotteryDailyLimit* default_instance_;
};
// -------------------------------------------------------------------

class mdShopLotterySale : public ::google::protobuf::Message {
 public:
  mdShopLotterySale();
  virtual ~mdShopLotterySale();

  mdShopLotterySale(const mdShopLotterySale& from);

  inline mdShopLotterySale& operator=(const mdShopLotterySale& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdShopLotterySale& default_instance();

  void Swap(mdShopLotterySale* other);

  // implements Message ----------------------------------------------

  mdShopLotterySale* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdShopLotterySale& from);
  void MergeFrom(const mdShopLotterySale& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .b2.protocol.commondata.Shop.DrawPriceType draw_price_type = 1;
  inline bool has_draw_price_type() const;
  inline void clear_draw_price_type();
  static const int kDrawPriceTypeFieldNumber = 1;
  inline ::b2::protocol::commondata::Shop_DrawPriceType draw_price_type() const;
  inline void set_draw_price_type(::b2::protocol::commondata::Shop_DrawPriceType value);

  // required bool is_continuous = 2;
  inline bool has_is_continuous() const;
  inline void clear_is_continuous();
  static const int kIsContinuousFieldNumber = 2;
  inline bool is_continuous() const;
  inline void set_is_continuous(bool value);

  // required int32 discount_rate = 3;
  inline bool has_discount_rate() const;
  inline void clear_discount_rate();
  static const int kDiscountRateFieldNumber = 3;
  inline ::google::protobuf::int32 discount_rate() const;
  inline void set_discount_rate(::google::protobuf::int32 value);

  // required int64 start_time = 5;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 5;
  inline ::google::protobuf::int64 start_time() const;
  inline void set_start_time(::google::protobuf::int64 value);

  // required int64 end_time = 6;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 6;
  inline ::google::protobuf::int64 end_time() const;
  inline void set_end_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdShopLotterySale)
 private:
  inline void set_has_draw_price_type();
  inline void clear_has_draw_price_type();
  inline void set_has_is_continuous();
  inline void clear_has_is_continuous();
  inline void set_has_discount_rate();
  inline void clear_has_discount_rate();
  inline void set_has_start_time();
  inline void clear_has_start_time();
  inline void set_has_end_time();
  inline void clear_has_end_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int draw_price_type_;
  bool is_continuous_;
  ::google::protobuf::int64 start_time_;
  ::google::protobuf::int64 end_time_;
  ::google::protobuf::int32 discount_rate_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdShopLotterySale* default_instance_;
};
// -------------------------------------------------------------------

class mdItemInfo : public ::google::protobuf::Message {
 public:
  mdItemInfo();
  virtual ~mdItemInfo();

  mdItemInfo(const mdItemInfo& from);

  inline mdItemInfo& operator=(const mdItemInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdItemInfo& default_instance();

  void Swap(mdItemInfo* other);

  // implements Message ----------------------------------------------

  mdItemInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdItemInfo& from);
  void MergeFrom(const mdItemInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 md_template_id = 1;
  inline bool has_md_template_id() const;
  inline void clear_md_template_id();
  static const int kMdTemplateIdFieldNumber = 1;
  inline ::google::protobuf::int32 md_template_id() const;
  inline void set_md_template_id(::google::protobuf::int32 value);

  // required .b2.protocol.commondata.GroupPrefix md_group_id = 2;
  inline bool has_md_group_id() const;
  inline void clear_md_group_id();
  static const int kMdGroupIdFieldNumber = 2;
  inline ::b2::protocol::commondata::GroupPrefix md_group_id() const;
  inline void set_md_group_id(::b2::protocol::commondata::GroupPrefix value);

  // required int32 md_set_id = 3;
  inline bool has_md_set_id() const;
  inline void clear_md_set_id();
  static const int kMdSetIdFieldNumber = 3;
  inline ::google::protobuf::int32 md_set_id() const;
  inline void set_md_set_id(::google::protobuf::int32 value);

  // required .b2.protocol.commondata.Item.TYPE md_type = 4;
  inline bool has_md_type() const;
  inline void clear_md_type();
  static const int kMdTypeFieldNumber = 4;
  inline ::b2::protocol::commondata::Item_TYPE md_type() const;
  inline void set_md_type(::b2::protocol::commondata::Item_TYPE value);

  // required int32 md_grade = 5;
  inline bool has_md_grade() const;
  inline void clear_md_grade();
  static const int kMdGradeFieldNumber = 5;
  inline ::google::protobuf::int32 md_grade() const;
  inline void set_md_grade(::google::protobuf::int32 value);

  // required .b2.protocol.commondata.Inventory.TYPE md_inventory_type = 6;
  inline bool has_md_inventory_type() const;
  inline void clear_md_inventory_type();
  static const int kMdInventoryTypeFieldNumber = 6;
  inline ::b2::protocol::commondata::Inventory_TYPE md_inventory_type() const;
  inline void set_md_inventory_type(::b2::protocol::commondata::Inventory_TYPE value);

  // required .b2.protocol.commondata.EquipPosition md_equip_position = 7;
  inline bool has_md_equip_position() const;
  inline void clear_md_equip_position();
  static const int kMdEquipPositionFieldNumber = 7;
  inline ::b2::protocol::commondata::EquipPosition md_equip_position() const;
  inline void set_md_equip_position(::b2::protocol::commondata::EquipPosition value);

  // required int32 md_max_levelup = 8;
  inline bool has_md_max_levelup() const;
  inline void clear_md_max_levelup();
  static const int kMdMaxLevelupFieldNumber = 8;
  inline ::google::protobuf::int32 md_max_levelup() const;
  inline void set_md_max_levelup(::google::protobuf::int32 value);

  // required int32 md_main_attribute = 9;
  inline bool has_md_main_attribute() const;
  inline void clear_md_main_attribute();
  static const int kMdMainAttributeFieldNumber = 9;
  inline ::google::protobuf::int32 md_main_attribute() const;
  inline void set_md_main_attribute(::google::protobuf::int32 value);

  // required float md_level_factor = 10;
  inline bool has_md_level_factor() const;
  inline void clear_md_level_factor();
  static const int kMdLevelFactorFieldNumber = 10;
  inline float md_level_factor() const;
  inline void set_md_level_factor(float value);

  // required int32 md_unique_option_id1 = 11;
  inline bool has_md_unique_option_id1() const;
  inline void clear_md_unique_option_id1();
  static const int kMdUniqueOptionId1FieldNumber = 11;
  inline ::google::protobuf::int32 md_unique_option_id1() const;
  inline void set_md_unique_option_id1(::google::protobuf::int32 value);

  // required float md_unique_option_value1 = 12;
  inline bool has_md_unique_option_value1() const;
  inline void clear_md_unique_option_value1();
  static const int kMdUniqueOptionValue1FieldNumber = 12;
  inline float md_unique_option_value1() const;
  inline void set_md_unique_option_value1(float value);

  // required int32 md_unique_option_id2 = 13;
  inline bool has_md_unique_option_id2() const;
  inline void clear_md_unique_option_id2();
  static const int kMdUniqueOptionId2FieldNumber = 13;
  inline ::google::protobuf::int32 md_unique_option_id2() const;
  inline void set_md_unique_option_id2(::google::protobuf::int32 value);

  // required float md_unique_option_value2 = 14;
  inline bool has_md_unique_option_value2() const;
  inline void clear_md_unique_option_value2();
  static const int kMdUniqueOptionValue2FieldNumber = 14;
  inline float md_unique_option_value2() const;
  inline void set_md_unique_option_value2(float value);

  // required int32 md_unique_option_id3 = 15;
  inline bool has_md_unique_option_id3() const;
  inline void clear_md_unique_option_id3();
  static const int kMdUniqueOptionId3FieldNumber = 15;
  inline ::google::protobuf::int32 md_unique_option_id3() const;
  inline void set_md_unique_option_id3(::google::protobuf::int32 value);

  // required float md_unique_option_value3 = 16;
  inline bool has_md_unique_option_value3() const;
  inline void clear_md_unique_option_value3();
  static const int kMdUniqueOptionValue3FieldNumber = 16;
  inline float md_unique_option_value3() const;
  inline void set_md_unique_option_value3(float value);

  // required int32 md_unique_option_id4 = 17;
  inline bool has_md_unique_option_id4() const;
  inline void clear_md_unique_option_id4();
  static const int kMdUniqueOptionId4FieldNumber = 17;
  inline ::google::protobuf::int32 md_unique_option_id4() const;
  inline void set_md_unique_option_id4(::google::protobuf::int32 value);

  // required float md_unique_option_value4 = 18;
  inline bool has_md_unique_option_value4() const;
  inline void clear_md_unique_option_value4();
  static const int kMdUniqueOptionValue4FieldNumber = 18;
  inline float md_unique_option_value4() const;
  inline void set_md_unique_option_value4(float value);

  // required int32 md_unique_skill_id = 19;
  inline bool has_md_unique_skill_id() const;
  inline void clear_md_unique_skill_id();
  static const int kMdUniqueSkillIdFieldNumber = 19;
  inline ::google::protobuf::int32 md_unique_skill_id() const;
  inline void set_md_unique_skill_id(::google::protobuf::int32 value);

  // required int32 seal_slot = 20;
  inline bool has_seal_slot() const;
  inline void clear_seal_slot();
  static const int kSealSlotFieldNumber = 20;
  inline ::google::protobuf::int32 seal_slot() const;
  inline void set_seal_slot(::google::protobuf::int32 value);

  // required int32 seal_slot_open = 21;
  inline bool has_seal_slot_open() const;
  inline void clear_seal_slot_open();
  static const int kSealSlotOpenFieldNumber = 21;
  inline ::google::protobuf::int32 seal_slot_open() const;
  inline void set_seal_slot_open(::google::protobuf::int32 value);

  // required int32 md_max_grade = 22;
  inline bool has_md_max_grade() const;
  inline void clear_md_max_grade();
  static const int kMdMaxGradeFieldNumber = 22;
  inline ::google::protobuf::int32 md_max_grade() const;
  inline void set_md_max_grade(::google::protobuf::int32 value);

  // required int32 md_random_option_count = 23;
  inline bool has_md_random_option_count() const;
  inline void clear_md_random_option_count();
  static const int kMdRandomOptionCountFieldNumber = 23;
  inline ::google::protobuf::int32 md_random_option_count() const;
  inline void set_md_random_option_count(::google::protobuf::int32 value);

  // required int32 md_next_grade_template_id = 24;
  inline bool has_md_next_grade_template_id() const;
  inline void clear_md_next_grade_template_id();
  static const int kMdNextGradeTemplateIdFieldNumber = 24;
  inline ::google::protobuf::int32 md_next_grade_template_id() const;
  inline void set_md_next_grade_template_id(::google::protobuf::int32 value);

  // required int32 md_buy_price = 25;
  inline bool has_md_buy_price() const;
  inline void clear_md_buy_price();
  static const int kMdBuyPriceFieldNumber = 25;
  inline ::google::protobuf::int32 md_buy_price() const;
  inline void set_md_buy_price(::google::protobuf::int32 value);

  // required int32 md_sell_price = 26;
  inline bool has_md_sell_price() const;
  inline void clear_md_sell_price();
  static const int kMdSellPriceFieldNumber = 26;
  inline ::google::protobuf::int32 md_sell_price() const;
  inline void set_md_sell_price(::google::protobuf::int32 value);

  // required bool is_stackable = 27;
  inline bool has_is_stackable() const;
  inline void clear_is_stackable();
  static const int kIsStackableFieldNumber = 27;
  inline bool is_stackable() const;
  inline void set_is_stackable(bool value);

  // required bool is_saleable = 28;
  inline bool has_is_saleable() const;
  inline void clear_is_saleable();
  static const int kIsSaleableFieldNumber = 28;
  inline bool is_saleable() const;
  inline void set_is_saleable(bool value);

  // required bool is_equipable = 29;
  inline bool has_is_equipable() const;
  inline void clear_is_equipable();
  static const int kIsEquipableFieldNumber = 29;
  inline bool is_equipable() const;
  inline void set_is_equipable(bool value);

  // required bool is_levelupable = 30;
  inline bool has_is_levelupable() const;
  inline void clear_is_levelupable();
  static const int kIsLevelupableFieldNumber = 30;
  inline bool is_levelupable() const;
  inline void set_is_levelupable(bool value);

  // required bool is_enhanceable = 31;
  inline bool has_is_enhanceable() const;
  inline void clear_is_enhanceable();
  static const int kIsEnhanceableFieldNumber = 31;
  inline bool is_enhanceable() const;
  inline void set_is_enhanceable(bool value);

  // required bool is_upgradable = 32;
  inline bool has_is_upgradable() const;
  inline void clear_is_upgradable();
  static const int kIsUpgradableFieldNumber = 32;
  inline bool is_upgradable() const;
  inline void set_is_upgradable(bool value);

  // required bool is_composable = 33;
  inline bool has_is_composable() const;
  inline void clear_is_composable();
  static const int kIsComposableFieldNumber = 33;
  inline bool is_composable() const;
  inline void set_is_composable(bool value);

  // required bool is_surpassable = 34;
  inline bool has_is_surpassable() const;
  inline void clear_is_surpassable();
  static const int kIsSurpassableFieldNumber = 34;
  inline bool is_surpassable() const;
  inline void set_is_surpassable(bool value);

  // required bool is_sealable = 35;
  inline bool has_is_sealable() const;
  inline void clear_is_sealable();
  static const int kIsSealableFieldNumber = 35;
  inline bool is_sealable() const;
  inline void set_is_sealable(bool value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdItemInfo)
 private:
  inline void set_has_md_template_id();
  inline void clear_has_md_template_id();
  inline void set_has_md_group_id();
  inline void clear_has_md_group_id();
  inline void set_has_md_set_id();
  inline void clear_has_md_set_id();
  inline void set_has_md_type();
  inline void clear_has_md_type();
  inline void set_has_md_grade();
  inline void clear_has_md_grade();
  inline void set_has_md_inventory_type();
  inline void clear_has_md_inventory_type();
  inline void set_has_md_equip_position();
  inline void clear_has_md_equip_position();
  inline void set_has_md_max_levelup();
  inline void clear_has_md_max_levelup();
  inline void set_has_md_main_attribute();
  inline void clear_has_md_main_attribute();
  inline void set_has_md_level_factor();
  inline void clear_has_md_level_factor();
  inline void set_has_md_unique_option_id1();
  inline void clear_has_md_unique_option_id1();
  inline void set_has_md_unique_option_value1();
  inline void clear_has_md_unique_option_value1();
  inline void set_has_md_unique_option_id2();
  inline void clear_has_md_unique_option_id2();
  inline void set_has_md_unique_option_value2();
  inline void clear_has_md_unique_option_value2();
  inline void set_has_md_unique_option_id3();
  inline void clear_has_md_unique_option_id3();
  inline void set_has_md_unique_option_value3();
  inline void clear_has_md_unique_option_value3();
  inline void set_has_md_unique_option_id4();
  inline void clear_has_md_unique_option_id4();
  inline void set_has_md_unique_option_value4();
  inline void clear_has_md_unique_option_value4();
  inline void set_has_md_unique_skill_id();
  inline void clear_has_md_unique_skill_id();
  inline void set_has_seal_slot();
  inline void clear_has_seal_slot();
  inline void set_has_seal_slot_open();
  inline void clear_has_seal_slot_open();
  inline void set_has_md_max_grade();
  inline void clear_has_md_max_grade();
  inline void set_has_md_random_option_count();
  inline void clear_has_md_random_option_count();
  inline void set_has_md_next_grade_template_id();
  inline void clear_has_md_next_grade_template_id();
  inline void set_has_md_buy_price();
  inline void clear_has_md_buy_price();
  inline void set_has_md_sell_price();
  inline void clear_has_md_sell_price();
  inline void set_has_is_stackable();
  inline void clear_has_is_stackable();
  inline void set_has_is_saleable();
  inline void clear_has_is_saleable();
  inline void set_has_is_equipable();
  inline void clear_has_is_equipable();
  inline void set_has_is_levelupable();
  inline void clear_has_is_levelupable();
  inline void set_has_is_enhanceable();
  inline void clear_has_is_enhanceable();
  inline void set_has_is_upgradable();
  inline void clear_has_is_upgradable();
  inline void set_has_is_composable();
  inline void clear_has_is_composable();
  inline void set_has_is_surpassable();
  inline void clear_has_is_surpassable();
  inline void set_has_is_sealable();
  inline void clear_has_is_sealable();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[2];
  ::google::protobuf::int32 md_template_id_;
  int md_group_id_;
  ::google::protobuf::int32 md_set_id_;
  int md_type_;
  ::google::protobuf::int32 md_grade_;
  int md_inventory_type_;
  int md_equip_position_;
  ::google::protobuf::int32 md_max_levelup_;
  ::google::protobuf::int32 md_main_attribute_;
  float md_level_factor_;
  ::google::protobuf::int32 md_unique_option_id1_;
  float md_unique_option_value1_;
  ::google::protobuf::int32 md_unique_option_id2_;
  float md_unique_option_value2_;
  ::google::protobuf::int32 md_unique_option_id3_;
  float md_unique_option_value3_;
  ::google::protobuf::int32 md_unique_option_id4_;
  float md_unique_option_value4_;
  ::google::protobuf::int32 md_unique_skill_id_;
  ::google::protobuf::int32 seal_slot_;
  ::google::protobuf::int32 seal_slot_open_;
  ::google::protobuf::int32 md_max_grade_;
  ::google::protobuf::int32 md_random_option_count_;
  ::google::protobuf::int32 md_next_grade_template_id_;
  ::google::protobuf::int32 md_buy_price_;
  ::google::protobuf::int32 md_sell_price_;
  bool is_stackable_;
  bool is_saleable_;
  bool is_equipable_;
  bool is_levelupable_;
  bool is_enhanceable_;
  bool is_upgradable_;
  bool is_composable_;
  bool is_surpassable_;
  bool is_sealable_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdItemInfo* default_instance_;
};
// -------------------------------------------------------------------

class mdCostumeInfo : public ::google::protobuf::Message {
 public:
  mdCostumeInfo();
  virtual ~mdCostumeInfo();

  mdCostumeInfo(const mdCostumeInfo& from);

  inline mdCostumeInfo& operator=(const mdCostumeInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdCostumeInfo& default_instance();

  void Swap(mdCostumeInfo* other);

  // implements Message ----------------------------------------------

  mdCostumeInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdCostumeInfo& from);
  void MergeFrom(const mdCostumeInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 md_template_id = 1;
  inline bool has_md_template_id() const;
  inline void clear_md_template_id();
  static const int kMdTemplateIdFieldNumber = 1;
  inline ::google::protobuf::int32 md_template_id() const;
  inline void set_md_template_id(::google::protobuf::int32 value);

  // required .b2.protocol.commondata.GroupPrefix md_group_id = 2;
  inline bool has_md_group_id() const;
  inline void clear_md_group_id();
  static const int kMdGroupIdFieldNumber = 2;
  inline ::b2::protocol::commondata::GroupPrefix md_group_id() const;
  inline void set_md_group_id(::b2::protocol::commondata::GroupPrefix value);

  // required int32 md_set_id = 3;
  inline bool has_md_set_id() const;
  inline void clear_md_set_id();
  static const int kMdSetIdFieldNumber = 3;
  inline ::google::protobuf::int32 md_set_id() const;
  inline void set_md_set_id(::google::protobuf::int32 value);

  // required .b2.protocol.commondata.Costume.TYPE md_type = 4;
  inline bool has_md_type() const;
  inline void clear_md_type();
  static const int kMdTypeFieldNumber = 4;
  inline ::b2::protocol::commondata::Costume_TYPE md_type() const;
  inline void set_md_type(::b2::protocol::commondata::Costume_TYPE value);

  // required int32 md_grade = 5;
  inline bool has_md_grade() const;
  inline void clear_md_grade();
  static const int kMdGradeFieldNumber = 5;
  inline ::google::protobuf::int32 md_grade() const;
  inline void set_md_grade(::google::protobuf::int32 value);

  // required .b2.protocol.commondata.Inventory.TYPE md_inventory_type = 6;
  inline bool has_md_inventory_type() const;
  inline void clear_md_inventory_type();
  static const int kMdInventoryTypeFieldNumber = 6;
  inline ::b2::protocol::commondata::Inventory_TYPE md_inventory_type() const;
  inline void set_md_inventory_type(::b2::protocol::commondata::Inventory_TYPE value);

  // required .b2.protocol.commondata.EquipPosition md_equip_position = 7;
  inline bool has_md_equip_position() const;
  inline void clear_md_equip_position();
  static const int kMdEquipPositionFieldNumber = 7;
  inline ::b2::protocol::commondata::EquipPosition md_equip_position() const;
  inline void set_md_equip_position(::b2::protocol::commondata::EquipPosition value);

  // required int32 md_max_levelup = 8;
  inline bool has_md_max_levelup() const;
  inline void clear_md_max_levelup();
  static const int kMdMaxLevelupFieldNumber = 8;
  inline ::google::protobuf::int32 md_max_levelup() const;
  inline void set_md_max_levelup(::google::protobuf::int32 value);

  // required int32 md_main_attribute = 9;
  inline bool has_md_main_attribute() const;
  inline void clear_md_main_attribute();
  static const int kMdMainAttributeFieldNumber = 9;
  inline ::google::protobuf::int32 md_main_attribute() const;
  inline void set_md_main_attribute(::google::protobuf::int32 value);

  // required float md_level_factor = 10;
  inline bool has_md_level_factor() const;
  inline void clear_md_level_factor();
  static const int kMdLevelFactorFieldNumber = 10;
  inline float md_level_factor() const;
  inline void set_md_level_factor(float value);

  // required int32 md_unique_option_id1 = 11;
  inline bool has_md_unique_option_id1() const;
  inline void clear_md_unique_option_id1();
  static const int kMdUniqueOptionId1FieldNumber = 11;
  inline ::google::protobuf::int32 md_unique_option_id1() const;
  inline void set_md_unique_option_id1(::google::protobuf::int32 value);

  // required float md_unique_option_value1 = 12;
  inline bool has_md_unique_option_value1() const;
  inline void clear_md_unique_option_value1();
  static const int kMdUniqueOptionValue1FieldNumber = 12;
  inline float md_unique_option_value1() const;
  inline void set_md_unique_option_value1(float value);

  // required int32 md_unique_option_id2 = 13;
  inline bool has_md_unique_option_id2() const;
  inline void clear_md_unique_option_id2();
  static const int kMdUniqueOptionId2FieldNumber = 13;
  inline ::google::protobuf::int32 md_unique_option_id2() const;
  inline void set_md_unique_option_id2(::google::protobuf::int32 value);

  // required float md_unique_option_value2 = 14;
  inline bool has_md_unique_option_value2() const;
  inline void clear_md_unique_option_value2();
  static const int kMdUniqueOptionValue2FieldNumber = 14;
  inline float md_unique_option_value2() const;
  inline void set_md_unique_option_value2(float value);

  // required int32 md_unique_option_id3 = 15;
  inline bool has_md_unique_option_id3() const;
  inline void clear_md_unique_option_id3();
  static const int kMdUniqueOptionId3FieldNumber = 15;
  inline ::google::protobuf::int32 md_unique_option_id3() const;
  inline void set_md_unique_option_id3(::google::protobuf::int32 value);

  // required float md_unique_option_value3 = 16;
  inline bool has_md_unique_option_value3() const;
  inline void clear_md_unique_option_value3();
  static const int kMdUniqueOptionValue3FieldNumber = 16;
  inline float md_unique_option_value3() const;
  inline void set_md_unique_option_value3(float value);

  // required int32 md_unique_option_id4 = 17;
  inline bool has_md_unique_option_id4() const;
  inline void clear_md_unique_option_id4();
  static const int kMdUniqueOptionId4FieldNumber = 17;
  inline ::google::protobuf::int32 md_unique_option_id4() const;
  inline void set_md_unique_option_id4(::google::protobuf::int32 value);

  // required float md_unique_option_value4 = 18;
  inline bool has_md_unique_option_value4() const;
  inline void clear_md_unique_option_value4();
  static const int kMdUniqueOptionValue4FieldNumber = 18;
  inline float md_unique_option_value4() const;
  inline void set_md_unique_option_value4(float value);

  // required int32 md_unique_skill_id = 19;
  inline bool has_md_unique_skill_id() const;
  inline void clear_md_unique_skill_id();
  static const int kMdUniqueSkillIdFieldNumber = 19;
  inline ::google::protobuf::int32 md_unique_skill_id() const;
  inline void set_md_unique_skill_id(::google::protobuf::int32 value);

  // required int32 md_max_grade = 20;
  inline bool has_md_max_grade() const;
  inline void clear_md_max_grade();
  static const int kMdMaxGradeFieldNumber = 20;
  inline ::google::protobuf::int32 md_max_grade() const;
  inline void set_md_max_grade(::google::protobuf::int32 value);

  // required int32 md_random_option_count = 21;
  inline bool has_md_random_option_count() const;
  inline void clear_md_random_option_count();
  static const int kMdRandomOptionCountFieldNumber = 21;
  inline ::google::protobuf::int32 md_random_option_count() const;
  inline void set_md_random_option_count(::google::protobuf::int32 value);

  // required int32 md_next_grade_template_id = 22;
  inline bool has_md_next_grade_template_id() const;
  inline void clear_md_next_grade_template_id();
  static const int kMdNextGradeTemplateIdFieldNumber = 22;
  inline ::google::protobuf::int32 md_next_grade_template_id() const;
  inline void set_md_next_grade_template_id(::google::protobuf::int32 value);

  // required int32 md_buy_price = 23;
  inline bool has_md_buy_price() const;
  inline void clear_md_buy_price();
  static const int kMdBuyPriceFieldNumber = 23;
  inline ::google::protobuf::int32 md_buy_price() const;
  inline void set_md_buy_price(::google::protobuf::int32 value);

  // required int32 md_sell_price = 24;
  inline bool has_md_sell_price() const;
  inline void clear_md_sell_price();
  static const int kMdSellPriceFieldNumber = 24;
  inline ::google::protobuf::int32 md_sell_price() const;
  inline void set_md_sell_price(::google::protobuf::int32 value);

  // required bool is_stackable = 25;
  inline bool has_is_stackable() const;
  inline void clear_is_stackable();
  static const int kIsStackableFieldNumber = 25;
  inline bool is_stackable() const;
  inline void set_is_stackable(bool value);

  // required bool is_saleable = 26;
  inline bool has_is_saleable() const;
  inline void clear_is_saleable();
  static const int kIsSaleableFieldNumber = 26;
  inline bool is_saleable() const;
  inline void set_is_saleable(bool value);

  // required bool is_equipable = 27;
  inline bool has_is_equipable() const;
  inline void clear_is_equipable();
  static const int kIsEquipableFieldNumber = 27;
  inline bool is_equipable() const;
  inline void set_is_equipable(bool value);

  // required bool is_levelupable = 28;
  inline bool has_is_levelupable() const;
  inline void clear_is_levelupable();
  static const int kIsLevelupableFieldNumber = 28;
  inline bool is_levelupable() const;
  inline void set_is_levelupable(bool value);

  // required bool is_enhanceable = 29;
  inline bool has_is_enhanceable() const;
  inline void clear_is_enhanceable();
  static const int kIsEnhanceableFieldNumber = 29;
  inline bool is_enhanceable() const;
  inline void set_is_enhanceable(bool value);

  // required bool is_upgradable = 30;
  inline bool has_is_upgradable() const;
  inline void clear_is_upgradable();
  static const int kIsUpgradableFieldNumber = 30;
  inline bool is_upgradable() const;
  inline void set_is_upgradable(bool value);

  // required bool is_composable = 31;
  inline bool has_is_composable() const;
  inline void clear_is_composable();
  static const int kIsComposableFieldNumber = 31;
  inline bool is_composable() const;
  inline void set_is_composable(bool value);

  // required bool is_surpassable = 32;
  inline bool has_is_surpassable() const;
  inline void clear_is_surpassable();
  static const int kIsSurpassableFieldNumber = 32;
  inline bool is_surpassable() const;
  inline void set_is_surpassable(bool value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdCostumeInfo)
 private:
  inline void set_has_md_template_id();
  inline void clear_has_md_template_id();
  inline void set_has_md_group_id();
  inline void clear_has_md_group_id();
  inline void set_has_md_set_id();
  inline void clear_has_md_set_id();
  inline void set_has_md_type();
  inline void clear_has_md_type();
  inline void set_has_md_grade();
  inline void clear_has_md_grade();
  inline void set_has_md_inventory_type();
  inline void clear_has_md_inventory_type();
  inline void set_has_md_equip_position();
  inline void clear_has_md_equip_position();
  inline void set_has_md_max_levelup();
  inline void clear_has_md_max_levelup();
  inline void set_has_md_main_attribute();
  inline void clear_has_md_main_attribute();
  inline void set_has_md_level_factor();
  inline void clear_has_md_level_factor();
  inline void set_has_md_unique_option_id1();
  inline void clear_has_md_unique_option_id1();
  inline void set_has_md_unique_option_value1();
  inline void clear_has_md_unique_option_value1();
  inline void set_has_md_unique_option_id2();
  inline void clear_has_md_unique_option_id2();
  inline void set_has_md_unique_option_value2();
  inline void clear_has_md_unique_option_value2();
  inline void set_has_md_unique_option_id3();
  inline void clear_has_md_unique_option_id3();
  inline void set_has_md_unique_option_value3();
  inline void clear_has_md_unique_option_value3();
  inline void set_has_md_unique_option_id4();
  inline void clear_has_md_unique_option_id4();
  inline void set_has_md_unique_option_value4();
  inline void clear_has_md_unique_option_value4();
  inline void set_has_md_unique_skill_id();
  inline void clear_has_md_unique_skill_id();
  inline void set_has_md_max_grade();
  inline void clear_has_md_max_grade();
  inline void set_has_md_random_option_count();
  inline void clear_has_md_random_option_count();
  inline void set_has_md_next_grade_template_id();
  inline void clear_has_md_next_grade_template_id();
  inline void set_has_md_buy_price();
  inline void clear_has_md_buy_price();
  inline void set_has_md_sell_price();
  inline void clear_has_md_sell_price();
  inline void set_has_is_stackable();
  inline void clear_has_is_stackable();
  inline void set_has_is_saleable();
  inline void clear_has_is_saleable();
  inline void set_has_is_equipable();
  inline void clear_has_is_equipable();
  inline void set_has_is_levelupable();
  inline void clear_has_is_levelupable();
  inline void set_has_is_enhanceable();
  inline void clear_has_is_enhanceable();
  inline void set_has_is_upgradable();
  inline void clear_has_is_upgradable();
  inline void set_has_is_composable();
  inline void clear_has_is_composable();
  inline void set_has_is_surpassable();
  inline void clear_has_is_surpassable();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 md_template_id_;
  int md_group_id_;
  ::google::protobuf::int32 md_set_id_;
  int md_type_;
  ::google::protobuf::int32 md_grade_;
  int md_inventory_type_;
  int md_equip_position_;
  ::google::protobuf::int32 md_max_levelup_;
  ::google::protobuf::int32 md_main_attribute_;
  float md_level_factor_;
  ::google::protobuf::int32 md_unique_option_id1_;
  float md_unique_option_value1_;
  ::google::protobuf::int32 md_unique_option_id2_;
  float md_unique_option_value2_;
  ::google::protobuf::int32 md_unique_option_id3_;
  float md_unique_option_value3_;
  ::google::protobuf::int32 md_unique_option_id4_;
  float md_unique_option_value4_;
  ::google::protobuf::int32 md_unique_skill_id_;
  ::google::protobuf::int32 md_max_grade_;
  ::google::protobuf::int32 md_random_option_count_;
  ::google::protobuf::int32 md_next_grade_template_id_;
  ::google::protobuf::int32 md_buy_price_;
  ::google::protobuf::int32 md_sell_price_;
  bool is_stackable_;
  bool is_saleable_;
  bool is_equipable_;
  bool is_levelupable_;
  bool is_enhanceable_;
  bool is_upgradable_;
  bool is_composable_;
  bool is_surpassable_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdCostumeInfo* default_instance_;
};
// -------------------------------------------------------------------

class mdShopProduct : public ::google::protobuf::Message {
 public:
  mdShopProduct();
  virtual ~mdShopProduct();

  mdShopProduct(const mdShopProduct& from);

  inline mdShopProduct& operator=(const mdShopProduct& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdShopProduct& default_instance();

  void Swap(mdShopProduct* other);

  // implements Message ----------------------------------------------

  mdShopProduct* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdShopProduct& from);
  void MergeFrom(const mdShopProduct& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required .b2.protocol.commondata.Shop.ShopType shop_type = 2;
  inline bool has_shop_type() const;
  inline void clear_shop_type();
  static const int kShopTypeFieldNumber = 2;
  inline ::b2::protocol::commondata::Shop_ShopType shop_type() const;
  inline void set_shop_type(::b2::protocol::commondata::Shop_ShopType value);

  // required int32 shop_order = 3;
  inline bool has_shop_order() const;
  inline void clear_shop_order();
  static const int kShopOrderFieldNumber = 3;
  inline ::google::protobuf::int32 shop_order() const;
  inline void set_shop_order(::google::protobuf::int32 value);

  // required .b2.protocol.commondata.Shop.ProductType product_type = 4;
  inline bool has_product_type() const;
  inline void clear_product_type();
  static const int kProductTypeFieldNumber = 4;
  inline ::b2::protocol::commondata::Shop_ProductType product_type() const;
  inline void set_product_type(::b2::protocol::commondata::Shop_ProductType value);

  // required int32 product_order = 5;
  inline bool has_product_order() const;
  inline void clear_product_order();
  static const int kProductOrderFieldNumber = 5;
  inline ::google::protobuf::int32 product_order() const;
  inline void set_product_order(::google::protobuf::int32 value);

  // required int32 product_id = 6;
  inline bool has_product_id() const;
  inline void clear_product_id();
  static const int kProductIdFieldNumber = 6;
  inline ::google::protobuf::int32 product_id() const;
  inline void set_product_id(::google::protobuf::int32 value);

  // required int32 product_count = 7;
  inline bool has_product_count() const;
  inline void clear_product_count();
  static const int kProductCountFieldNumber = 7;
  inline ::google::protobuf::int32 product_count() const;
  inline void set_product_count(::google::protobuf::int32 value);

  // required .b2.protocol.commondata.Shop.ProductType bonus_product_type = 8;
  inline bool has_bonus_product_type() const;
  inline void clear_bonus_product_type();
  static const int kBonusProductTypeFieldNumber = 8;
  inline ::b2::protocol::commondata::Shop_ProductType bonus_product_type() const;
  inline void set_bonus_product_type(::b2::protocol::commondata::Shop_ProductType value);

  // required int32 bonus_product_id = 9;
  inline bool has_bonus_product_id() const;
  inline void clear_bonus_product_id();
  static const int kBonusProductIdFieldNumber = 9;
  inline ::google::protobuf::int32 bonus_product_id() const;
  inline void set_bonus_product_id(::google::protobuf::int32 value);

  // required int32 bonus_product_count = 10;
  inline bool has_bonus_product_count() const;
  inline void clear_bonus_product_count();
  static const int kBonusProductCountFieldNumber = 10;
  inline ::google::protobuf::int32 bonus_product_count() const;
  inline void set_bonus_product_count(::google::protobuf::int32 value);

  // required int32 calculated_bonus_count = 11;
  inline bool has_calculated_bonus_count() const;
  inline void clear_calculated_bonus_count();
  static const int kCalculatedBonusCountFieldNumber = 11;
  inline ::google::protobuf::int32 calculated_bonus_count() const;
  inline void set_calculated_bonus_count(::google::protobuf::int32 value);

  // required .b2.protocol.commondata.Shop.BuyPriceType buy_price_type = 12;
  inline bool has_buy_price_type() const;
  inline void clear_buy_price_type();
  static const int kBuyPriceTypeFieldNumber = 12;
  inline ::b2::protocol::commondata::Shop_BuyPriceType buy_price_type() const;
  inline void set_buy_price_type(::b2::protocol::commondata::Shop_BuyPriceType value);

  // required int32 price = 13;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 13;
  inline ::google::protobuf::int32 price() const;
  inline void set_price(::google::protobuf::int32 value);

  // required int32 calculated_price = 14;
  inline bool has_calculated_price() const;
  inline void clear_calculated_price();
  static const int kCalculatedPriceFieldNumber = 14;
  inline ::google::protobuf::int32 calculated_price() const;
  inline void set_calculated_price(::google::protobuf::int32 value);

  // required .b2.protocol.commondata.Shop.RestrictType restric_type = 15;
  inline bool has_restric_type() const;
  inline void clear_restric_type();
  static const int kRestricTypeFieldNumber = 15;
  inline ::b2::protocol::commondata::Shop_RestrictType restric_type() const;
  inline void set_restric_type(::b2::protocol::commondata::Shop_RestrictType value);

  // required int32 buy_limit_count = 16;
  inline bool has_buy_limit_count() const;
  inline void clear_buy_limit_count();
  static const int kBuyLimitCountFieldNumber = 16;
  inline ::google::protobuf::int32 buy_limit_count() const;
  inline void set_buy_limit_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdShopProduct)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_shop_type();
  inline void clear_has_shop_type();
  inline void set_has_shop_order();
  inline void clear_has_shop_order();
  inline void set_has_product_type();
  inline void clear_has_product_type();
  inline void set_has_product_order();
  inline void clear_has_product_order();
  inline void set_has_product_id();
  inline void clear_has_product_id();
  inline void set_has_product_count();
  inline void clear_has_product_count();
  inline void set_has_bonus_product_type();
  inline void clear_has_bonus_product_type();
  inline void set_has_bonus_product_id();
  inline void clear_has_bonus_product_id();
  inline void set_has_bonus_product_count();
  inline void clear_has_bonus_product_count();
  inline void set_has_calculated_bonus_count();
  inline void clear_has_calculated_bonus_count();
  inline void set_has_buy_price_type();
  inline void clear_has_buy_price_type();
  inline void set_has_price();
  inline void clear_has_price();
  inline void set_has_calculated_price();
  inline void clear_has_calculated_price();
  inline void set_has_restric_type();
  inline void clear_has_restric_type();
  inline void set_has_buy_limit_count();
  inline void clear_has_buy_limit_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  int shop_type_;
  ::google::protobuf::int32 shop_order_;
  int product_type_;
  ::google::protobuf::int32 product_order_;
  ::google::protobuf::int32 product_id_;
  ::google::protobuf::int32 product_count_;
  int bonus_product_type_;
  ::google::protobuf::int32 bonus_product_id_;
  ::google::protobuf::int32 bonus_product_count_;
  ::google::protobuf::int32 calculated_bonus_count_;
  int buy_price_type_;
  ::google::protobuf::int32 price_;
  ::google::protobuf::int32 calculated_price_;
  int restric_type_;
  ::google::protobuf::int32 buy_limit_count_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdShopProduct* default_instance_;
};
// -------------------------------------------------------------------

class mdShopPackage : public ::google::protobuf::Message {
 public:
  mdShopPackage();
  virtual ~mdShopPackage();

  mdShopPackage(const mdShopPackage& from);

  inline mdShopPackage& operator=(const mdShopPackage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdShopPackage& default_instance();

  void Swap(mdShopPackage* other);

  // implements Message ----------------------------------------------

  mdShopPackage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdShopPackage& from);
  void MergeFrom(const mdShopPackage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 category = 2;
  inline bool has_category() const;
  inline void clear_category();
  static const int kCategoryFieldNumber = 2;
  inline ::google::protobuf::int32 category() const;
  inline void set_category(::google::protobuf::int32 value);

  // required int32 tab_type = 3;
  inline bool has_tab_type() const;
  inline void clear_tab_type();
  static const int kTabTypeFieldNumber = 3;
  inline ::google::protobuf::int32 tab_type() const;
  inline void set_tab_type(::google::protobuf::int32 value);

  // required string name = 4;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 4;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required int32 pay_period = 5;
  inline bool has_pay_period() const;
  inline void clear_pay_period();
  static const int kPayPeriodFieldNumber = 5;
  inline ::google::protobuf::int32 pay_period() const;
  inline void set_pay_period(::google::protobuf::int32 value);

  // required int32 period_bonus_reward_id = 6;
  inline bool has_period_bonus_reward_id() const;
  inline void clear_period_bonus_reward_id();
  static const int kPeriodBonusRewardIdFieldNumber = 6;
  inline ::google::protobuf::int32 period_bonus_reward_id() const;
  inline void set_period_bonus_reward_id(::google::protobuf::int32 value);

  // required int32 period_bonus_reward_count = 7;
  inline bool has_period_bonus_reward_count() const;
  inline void clear_period_bonus_reward_count();
  static const int kPeriodBonusRewardCountFieldNumber = 7;
  inline ::google::protobuf::int32 period_bonus_reward_count() const;
  inline void set_period_bonus_reward_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdShopPackage)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_category();
  inline void clear_has_category();
  inline void set_has_tab_type();
  inline void clear_has_tab_type();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_pay_period();
  inline void clear_has_pay_period();
  inline void set_has_period_bonus_reward_id();
  inline void clear_has_period_bonus_reward_id();
  inline void set_has_period_bonus_reward_count();
  inline void clear_has_period_bonus_reward_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 category_;
  ::std::string* name_;
  ::google::protobuf::int32 tab_type_;
  ::google::protobuf::int32 pay_period_;
  ::google::protobuf::int32 period_bonus_reward_id_;
  ::google::protobuf::int32 period_bonus_reward_count_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdShopPackage* default_instance_;
};
// -------------------------------------------------------------------

class mdShopPackageProduct : public ::google::protobuf::Message {
 public:
  mdShopPackageProduct();
  virtual ~mdShopPackageProduct();

  mdShopPackageProduct(const mdShopPackageProduct& from);

  inline mdShopPackageProduct& operator=(const mdShopPackageProduct& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdShopPackageProduct& default_instance();

  void Swap(mdShopPackageProduct* other);

  // implements Message ----------------------------------------------

  mdShopPackageProduct* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdShopPackageProduct& from);
  void MergeFrom(const mdShopPackageProduct& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 package_id = 1;
  inline bool has_package_id() const;
  inline void clear_package_id();
  static const int kPackageIdFieldNumber = 1;
  inline ::google::protobuf::int32 package_id() const;
  inline void set_package_id(::google::protobuf::int32 value);

  // required int32 index = 2;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 2;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // required .b2.protocol.commondata.ShopProduct product = 3;
  inline bool has_product() const;
  inline void clear_product();
  static const int kProductFieldNumber = 3;
  inline const ::b2::protocol::commondata::ShopProduct& product() const;
  inline ::b2::protocol::commondata::ShopProduct* mutable_product();
  inline ::b2::protocol::commondata::ShopProduct* release_product();
  inline void set_allocated_product(::b2::protocol::commondata::ShopProduct* product);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdShopPackageProduct)
 private:
  inline void set_has_package_id();
  inline void clear_has_package_id();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_product();
  inline void clear_has_product();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 package_id_;
  ::google::protobuf::int32 index_;
  ::b2::protocol::commondata::ShopProduct* product_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdShopPackageProduct* default_instance_;
};
// -------------------------------------------------------------------

class mdShopMileageReward : public ::google::protobuf::Message {
 public:
  mdShopMileageReward();
  virtual ~mdShopMileageReward();

  mdShopMileageReward(const mdShopMileageReward& from);

  inline mdShopMileageReward& operator=(const mdShopMileageReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdShopMileageReward& default_instance();

  void Swap(mdShopMileageReward* other);

  // implements Message ----------------------------------------------

  mdShopMileageReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdShopMileageReward& from);
  void MergeFrom(const mdShopMileageReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .b2.protocol.commondata.Shop.MileageType mileage_type = 1;
  inline bool has_mileage_type() const;
  inline void clear_mileage_type();
  static const int kMileageTypeFieldNumber = 1;
  inline ::b2::protocol::commondata::Shop_MileageType mileage_type() const;
  inline void set_mileage_type(::b2::protocol::commondata::Shop_MileageType value);

  // required int32 index = 2;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 2;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // required int32 mileage = 3;
  inline bool has_mileage() const;
  inline void clear_mileage();
  static const int kMileageFieldNumber = 3;
  inline ::google::protobuf::int32 mileage() const;
  inline void set_mileage(::google::protobuf::int32 value);

  // repeated .b2.protocol.commondata.Reward rewards = 4;
  inline int rewards_size() const;
  inline void clear_rewards();
  static const int kRewardsFieldNumber = 4;
  inline const ::b2::protocol::commondata::Reward& rewards(int index) const;
  inline ::b2::protocol::commondata::Reward* mutable_rewards(int index);
  inline ::b2::protocol::commondata::Reward* add_rewards();
  inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward >&
      rewards() const;
  inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward >*
      mutable_rewards();

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdShopMileageReward)
 private:
  inline void set_has_mileage_type();
  inline void clear_has_mileage_type();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_mileage();
  inline void clear_has_mileage();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int mileage_type_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward > rewards_;
  ::google::protobuf::int32 mileage_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdShopMileageReward* default_instance_;
};
// -------------------------------------------------------------------

class mdMarketProduct : public ::google::protobuf::Message {
 public:
  mdMarketProduct();
  virtual ~mdMarketProduct();

  mdMarketProduct(const mdMarketProduct& from);

  inline mdMarketProduct& operator=(const mdMarketProduct& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdMarketProduct& default_instance();

  void Swap(mdMarketProduct* other);

  // implements Message ----------------------------------------------

  mdMarketProduct* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdMarketProduct& from);
  void MergeFrom(const mdMarketProduct& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 shop_product_id = 1;
  inline bool has_shop_product_id() const;
  inline void clear_shop_product_id();
  static const int kShopProductIdFieldNumber = 1;
  inline ::google::protobuf::int32 shop_product_id() const;
  inline void set_shop_product_id(::google::protobuf::int32 value);

  // required string market_product_id = 2;
  inline bool has_market_product_id() const;
  inline void clear_market_product_id();
  static const int kMarketProductIdFieldNumber = 2;
  inline const ::std::string& market_product_id() const;
  inline void set_market_product_id(const ::std::string& value);
  inline void set_market_product_id(const char* value);
  inline void set_market_product_id(const char* value, size_t size);
  inline ::std::string* mutable_market_product_id();
  inline ::std::string* release_market_product_id();
  inline void set_allocated_market_product_id(::std::string* market_product_id);

  // required string currency_code = 3;
  inline bool has_currency_code() const;
  inline void clear_currency_code();
  static const int kCurrencyCodeFieldNumber = 3;
  inline const ::std::string& currency_code() const;
  inline void set_currency_code(const ::std::string& value);
  inline void set_currency_code(const char* value);
  inline void set_currency_code(const char* value, size_t size);
  inline ::std::string* mutable_currency_code();
  inline ::std::string* release_currency_code();
  inline void set_allocated_currency_code(::std::string* currency_code);

  // required float price = 12;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 12;
  inline float price() const;
  inline void set_price(float value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdMarketProduct)
 private:
  inline void set_has_shop_product_id();
  inline void clear_has_shop_product_id();
  inline void set_has_market_product_id();
  inline void clear_has_market_product_id();
  inline void set_has_currency_code();
  inline void clear_has_currency_code();
  inline void set_has_price();
  inline void clear_has_price();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* market_product_id_;
  ::google::protobuf::int32 shop_product_id_;
  float price_;
  ::std::string* currency_code_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdMarketProduct* default_instance_;
};
// -------------------------------------------------------------------

class mdDailyAttendanceInfo : public ::google::protobuf::Message {
 public:
  mdDailyAttendanceInfo();
  virtual ~mdDailyAttendanceInfo();

  mdDailyAttendanceInfo(const mdDailyAttendanceInfo& from);

  inline mdDailyAttendanceInfo& operator=(const mdDailyAttendanceInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdDailyAttendanceInfo& default_instance();

  void Swap(mdDailyAttendanceInfo* other);

  // implements Message ----------------------------------------------

  mdDailyAttendanceInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdDailyAttendanceInfo& from);
  void MergeFrom(const mdDailyAttendanceInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .b2.protocol.commondata.DailyAttendanceType attendance_type = 1;
  inline bool has_attendance_type() const;
  inline void clear_attendance_type();
  static const int kAttendanceTypeFieldNumber = 1;
  inline ::b2::protocol::commondata::DailyAttendanceType attendance_type() const;
  inline void set_attendance_type(::b2::protocol::commondata::DailyAttendanceType value);

  // required int32 day = 2;
  inline bool has_day() const;
  inline void clear_day();
  static const int kDayFieldNumber = 2;
  inline ::google::protobuf::int32 day() const;
  inline void set_day(::google::protobuf::int32 value);

  // required int32 reward_id = 3;
  inline bool has_reward_id() const;
  inline void clear_reward_id();
  static const int kRewardIdFieldNumber = 3;
  inline ::google::protobuf::int32 reward_id() const;
  inline void set_reward_id(::google::protobuf::int32 value);

  // required int32 reward_count = 4;
  inline bool has_reward_count() const;
  inline void clear_reward_count();
  static const int kRewardCountFieldNumber = 4;
  inline ::google::protobuf::int32 reward_count() const;
  inline void set_reward_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdDailyAttendanceInfo)
 private:
  inline void set_has_attendance_type();
  inline void clear_has_attendance_type();
  inline void set_has_day();
  inline void clear_has_day();
  inline void set_has_reward_id();
  inline void clear_has_reward_id();
  inline void set_has_reward_count();
  inline void clear_has_reward_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int attendance_type_;
  ::google::protobuf::int32 day_;
  ::google::protobuf::int32 reward_id_;
  ::google::protobuf::int32 reward_count_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdDailyAttendanceInfo* default_instance_;
};
// -------------------------------------------------------------------

class mdRaidInfo : public ::google::protobuf::Message {
 public:
  mdRaidInfo();
  virtual ~mdRaidInfo();

  mdRaidInfo(const mdRaidInfo& from);

  inline mdRaidInfo& operator=(const mdRaidInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdRaidInfo& default_instance();

  void Swap(mdRaidInfo* other);

  // implements Message ----------------------------------------------

  mdRaidInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdRaidInfo& from);
  void MergeFrom(const mdRaidInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 raid_type = 1;
  inline bool has_raid_type() const;
  inline void clear_raid_type();
  static const int kRaidTypeFieldNumber = 1;
  inline ::google::protobuf::int32 raid_type() const;
  inline void set_raid_type(::google::protobuf::int32 value);

  // required int32 step = 2;
  inline bool has_step() const;
  inline void clear_step();
  static const int kStepFieldNumber = 2;
  inline ::google::protobuf::int32 step() const;
  inline void set_step(::google::protobuf::int32 value);

  // required int32 difficulty_scale = 3;
  inline bool has_difficulty_scale() const;
  inline void clear_difficulty_scale();
  static const int kDifficultyScaleFieldNumber = 3;
  inline ::google::protobuf::int32 difficulty_scale() const;
  inline void set_difficulty_scale(::google::protobuf::int32 value);

  // required int32 recommend_power = 4;
  inline bool has_recommend_power() const;
  inline void clear_recommend_power();
  static const int kRecommendPowerFieldNumber = 4;
  inline ::google::protobuf::int32 recommend_power() const;
  inline void set_recommend_power(::google::protobuf::int32 value);

  // required int32 recommend_attack = 5;
  inline bool has_recommend_attack() const;
  inline void clear_recommend_attack();
  static const int kRecommendAttackFieldNumber = 5;
  inline ::google::protobuf::int32 recommend_attack() const;
  inline void set_recommend_attack(::google::protobuf::int32 value);

  // required int32 recommend_defense = 6;
  inline bool has_recommend_defense() const;
  inline void clear_recommend_defense();
  static const int kRecommendDefenseFieldNumber = 6;
  inline ::google::protobuf::int32 recommend_defense() const;
  inline void set_recommend_defense(::google::protobuf::int32 value);

  // required int32 reward_id = 7;
  inline bool has_reward_id() const;
  inline void clear_reward_id();
  static const int kRewardIdFieldNumber = 7;
  inline ::google::protobuf::int32 reward_id() const;
  inline void set_reward_id(::google::protobuf::int32 value);

  // required int32 reward_min_count = 8;
  inline bool has_reward_min_count() const;
  inline void clear_reward_min_count();
  static const int kRewardMinCountFieldNumber = 8;
  inline ::google::protobuf::int32 reward_min_count() const;
  inline void set_reward_min_count(::google::protobuf::int32 value);

  // required int32 reward_max_count = 9;
  inline bool has_reward_max_count() const;
  inline void clear_reward_max_count();
  static const int kRewardMaxCountFieldNumber = 9;
  inline ::google::protobuf::int32 reward_max_count() const;
  inline void set_reward_max_count(::google::protobuf::int32 value);

  // required int32 main_reward_id = 10;
  inline bool has_main_reward_id() const;
  inline void clear_main_reward_id();
  static const int kMainRewardIdFieldNumber = 10;
  inline ::google::protobuf::int32 main_reward_id() const;
  inline void set_main_reward_id(::google::protobuf::int32 value);

  // required int32 main_reward_min_count = 11;
  inline bool has_main_reward_min_count() const;
  inline void clear_main_reward_min_count();
  static const int kMainRewardMinCountFieldNumber = 11;
  inline ::google::protobuf::int32 main_reward_min_count() const;
  inline void set_main_reward_min_count(::google::protobuf::int32 value);

  // required int32 main_reward_max_count = 12;
  inline bool has_main_reward_max_count() const;
  inline void clear_main_reward_max_count();
  static const int kMainRewardMaxCountFieldNumber = 12;
  inline ::google::protobuf::int32 main_reward_max_count() const;
  inline void set_main_reward_max_count(::google::protobuf::int32 value);

  // required int32 reward_item_min_grade = 20;
  inline bool has_reward_item_min_grade() const;
  inline void clear_reward_item_min_grade();
  static const int kRewardItemMinGradeFieldNumber = 20;
  inline ::google::protobuf::int32 reward_item_min_grade() const;
  inline void set_reward_item_min_grade(::google::protobuf::int32 value);

  // required int32 reward_item_max_grade = 21;
  inline bool has_reward_item_max_grade() const;
  inline void clear_reward_item_max_grade();
  static const int kRewardItemMaxGradeFieldNumber = 21;
  inline ::google::protobuf::int32 reward_item_max_grade() const;
  inline void set_reward_item_max_grade(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdRaidInfo)
 private:
  inline void set_has_raid_type();
  inline void clear_has_raid_type();
  inline void set_has_step();
  inline void clear_has_step();
  inline void set_has_difficulty_scale();
  inline void clear_has_difficulty_scale();
  inline void set_has_recommend_power();
  inline void clear_has_recommend_power();
  inline void set_has_recommend_attack();
  inline void clear_has_recommend_attack();
  inline void set_has_recommend_defense();
  inline void clear_has_recommend_defense();
  inline void set_has_reward_id();
  inline void clear_has_reward_id();
  inline void set_has_reward_min_count();
  inline void clear_has_reward_min_count();
  inline void set_has_reward_max_count();
  inline void clear_has_reward_max_count();
  inline void set_has_main_reward_id();
  inline void clear_has_main_reward_id();
  inline void set_has_main_reward_min_count();
  inline void clear_has_main_reward_min_count();
  inline void set_has_main_reward_max_count();
  inline void clear_has_main_reward_max_count();
  inline void set_has_reward_item_min_grade();
  inline void clear_has_reward_item_min_grade();
  inline void set_has_reward_item_max_grade();
  inline void clear_has_reward_item_max_grade();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 raid_type_;
  ::google::protobuf::int32 step_;
  ::google::protobuf::int32 difficulty_scale_;
  ::google::protobuf::int32 recommend_power_;
  ::google::protobuf::int32 recommend_attack_;
  ::google::protobuf::int32 recommend_defense_;
  ::google::protobuf::int32 reward_id_;
  ::google::protobuf::int32 reward_min_count_;
  ::google::protobuf::int32 reward_max_count_;
  ::google::protobuf::int32 main_reward_id_;
  ::google::protobuf::int32 main_reward_min_count_;
  ::google::protobuf::int32 main_reward_max_count_;
  ::google::protobuf::int32 reward_item_min_grade_;
  ::google::protobuf::int32 reward_item_max_grade_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdRaidInfo* default_instance_;
};
// -------------------------------------------------------------------

class mdMonsterInfo : public ::google::protobuf::Message {
 public:
  mdMonsterInfo();
  virtual ~mdMonsterInfo();

  mdMonsterInfo(const mdMonsterInfo& from);

  inline mdMonsterInfo& operator=(const mdMonsterInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdMonsterInfo& default_instance();

  void Swap(mdMonsterInfo* other);

  // implements Message ----------------------------------------------

  mdMonsterInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdMonsterInfo& from);
  void MergeFrom(const mdMonsterInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required string symbol = 3;
  inline bool has_symbol() const;
  inline void clear_symbol();
  static const int kSymbolFieldNumber = 3;
  inline const ::std::string& symbol() const;
  inline void set_symbol(const ::std::string& value);
  inline void set_symbol(const char* value);
  inline void set_symbol(const char* value, size_t size);
  inline ::std::string* mutable_symbol();
  inline ::std::string* release_symbol();
  inline void set_allocated_symbol(::std::string* symbol);

  // required string grade = 4;
  inline bool has_grade() const;
  inline void clear_grade();
  static const int kGradeFieldNumber = 4;
  inline const ::std::string& grade() const;
  inline void set_grade(const ::std::string& value);
  inline void set_grade(const char* value);
  inline void set_grade(const char* value, size_t size);
  inline ::std::string* mutable_grade();
  inline ::std::string* release_grade();
  inline void set_allocated_grade(::std::string* grade);

  // required string type = 5;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 5;
  inline const ::std::string& type() const;
  inline void set_type(const ::std::string& value);
  inline void set_type(const char* value);
  inline void set_type(const char* value, size_t size);
  inline ::std::string* mutable_type();
  inline ::std::string* release_type();
  inline void set_allocated_type(::std::string* type);

  // required string desc = 6;
  inline bool has_desc() const;
  inline void clear_desc();
  static const int kDescFieldNumber = 6;
  inline const ::std::string& desc() const;
  inline void set_desc(const ::std::string& value);
  inline void set_desc(const char* value);
  inline void set_desc(const char* value, size_t size);
  inline ::std::string* mutable_desc();
  inline ::std::string* release_desc();
  inline void set_allocated_desc(::std::string* desc);

  // required int32 hp_scale = 7;
  inline bool has_hp_scale() const;
  inline void clear_hp_scale();
  static const int kHpScaleFieldNumber = 7;
  inline ::google::protobuf::int32 hp_scale() const;
  inline void set_hp_scale(::google::protobuf::int32 value);

  // required int32 attack_defense_level_scale = 8;
  inline bool has_attack_defense_level_scale() const;
  inline void clear_attack_defense_level_scale();
  static const int kAttackDefenseLevelScaleFieldNumber = 8;
  inline ::google::protobuf::int32 attack_defense_level_scale() const;
  inline void set_attack_defense_level_scale(::google::protobuf::int32 value);

  // required int32 max_armor_override = 9;
  inline bool has_max_armor_override() const;
  inline void clear_max_armor_override();
  static const int kMaxArmorOverrideFieldNumber = 9;
  inline ::google::protobuf::int32 max_armor_override() const;
  inline void set_max_armor_override(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdMonsterInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_symbol();
  inline void clear_has_symbol();
  inline void set_has_grade();
  inline void clear_has_grade();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_desc();
  inline void clear_has_desc();
  inline void set_has_hp_scale();
  inline void clear_has_hp_scale();
  inline void set_has_attack_defense_level_scale();
  inline void clear_has_attack_defense_level_scale();
  inline void set_has_max_armor_override();
  inline void clear_has_max_armor_override();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::std::string* symbol_;
  ::std::string* grade_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 hp_scale_;
  ::std::string* type_;
  ::std::string* desc_;
  ::google::protobuf::int32 attack_defense_level_scale_;
  ::google::protobuf::int32 max_armor_override_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdMonsterInfo* default_instance_;
};
// -------------------------------------------------------------------

class mdGeneralLottery : public ::google::protobuf::Message {
 public:
  mdGeneralLottery();
  virtual ~mdGeneralLottery();

  mdGeneralLottery(const mdGeneralLottery& from);

  inline mdGeneralLottery& operator=(const mdGeneralLottery& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdGeneralLottery& default_instance();

  void Swap(mdGeneralLottery* other);

  // implements Message ----------------------------------------------

  mdGeneralLottery* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdGeneralLottery& from);
  void MergeFrom(const mdGeneralLottery& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required .b2.protocol.commondata.LotteryGrade grade = 2;
  inline bool has_grade() const;
  inline void clear_grade();
  static const int kGradeFieldNumber = 2;
  inline ::b2::protocol::commondata::LotteryGrade grade() const;
  inline void set_grade(::b2::protocol::commondata::LotteryGrade value);

  // required .b2.protocol.commondata.Item.CharacterType character_type = 3;
  inline bool has_character_type() const;
  inline void clear_character_type();
  static const int kCharacterTypeFieldNumber = 3;
  inline ::b2::protocol::commondata::Item_CharacterType character_type() const;
  inline void set_character_type(::b2::protocol::commondata::Item_CharacterType value);

  // required .b2.protocol.commondata.EquipCategory equip_category = 4;
  inline bool has_equip_category() const;
  inline void clear_equip_category();
  static const int kEquipCategoryFieldNumber = 4;
  inline ::b2::protocol::commondata::EquipCategory equip_category() const;
  inline void set_equip_category(::b2::protocol::commondata::EquipCategory value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdGeneralLottery)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_grade();
  inline void clear_has_grade();
  inline void set_has_character_type();
  inline void clear_has_character_type();
  inline void set_has_equip_category();
  inline void clear_has_equip_category();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  int grade_;
  int character_type_;
  int equip_category_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdGeneralLottery* default_instance_;
};
// -------------------------------------------------------------------

class mdFixedGradeLottery : public ::google::protobuf::Message {
 public:
  mdFixedGradeLottery();
  virtual ~mdFixedGradeLottery();

  mdFixedGradeLottery(const mdFixedGradeLottery& from);

  inline mdFixedGradeLottery& operator=(const mdFixedGradeLottery& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdFixedGradeLottery& default_instance();

  void Swap(mdFixedGradeLottery* other);

  // implements Message ----------------------------------------------

  mdFixedGradeLottery* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdFixedGradeLottery& from);
  void MergeFrom(const mdFixedGradeLottery& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required .b2.protocol.commondata.Item.CharacterType character_type = 2;
  inline bool has_character_type() const;
  inline void clear_character_type();
  static const int kCharacterTypeFieldNumber = 2;
  inline ::b2::protocol::commondata::Item_CharacterType character_type() const;
  inline void set_character_type(::b2::protocol::commondata::Item_CharacterType value);

  // required .b2.protocol.commondata.EquipCategory equip_category = 3;
  inline bool has_equip_category() const;
  inline void clear_equip_category();
  static const int kEquipCategoryFieldNumber = 3;
  inline ::b2::protocol::commondata::EquipCategory equip_category() const;
  inline void set_equip_category(::b2::protocol::commondata::EquipCategory value);

  // required int32 item_grade = 4;
  inline bool has_item_grade() const;
  inline void clear_item_grade();
  static const int kItemGradeFieldNumber = 4;
  inline ::google::protobuf::int32 item_grade() const;
  inline void set_item_grade(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdFixedGradeLottery)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_character_type();
  inline void clear_has_character_type();
  inline void set_has_equip_category();
  inline void clear_has_equip_category();
  inline void set_has_item_grade();
  inline void clear_has_item_grade();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  int character_type_;
  int equip_category_;
  ::google::protobuf::int32 item_grade_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdFixedGradeLottery* default_instance_;
};
// -------------------------------------------------------------------

class mdPrefixSelectiveLottery : public ::google::protobuf::Message {
 public:
  mdPrefixSelectiveLottery();
  virtual ~mdPrefixSelectiveLottery();

  mdPrefixSelectiveLottery(const mdPrefixSelectiveLottery& from);

  inline mdPrefixSelectiveLottery& operator=(const mdPrefixSelectiveLottery& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdPrefixSelectiveLottery& default_instance();

  void Swap(mdPrefixSelectiveLottery* other);

  // implements Message ----------------------------------------------

  mdPrefixSelectiveLottery* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdPrefixSelectiveLottery& from);
  void MergeFrom(const mdPrefixSelectiveLottery& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required .b2.protocol.commondata.Item.CharacterType character_type = 2;
  inline bool has_character_type() const;
  inline void clear_character_type();
  static const int kCharacterTypeFieldNumber = 2;
  inline ::b2::protocol::commondata::Item_CharacterType character_type() const;
  inline void set_character_type(::b2::protocol::commondata::Item_CharacterType value);

  // required .b2.protocol.commondata.GroupPrefix group_id = 3;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 3;
  inline ::b2::protocol::commondata::GroupPrefix group_id() const;
  inline void set_group_id(::b2::protocol::commondata::GroupPrefix value);

  // required .b2.protocol.commondata.EquipCategory equip_category = 4;
  inline bool has_equip_category() const;
  inline void clear_equip_category();
  static const int kEquipCategoryFieldNumber = 4;
  inline ::b2::protocol::commondata::EquipCategory equip_category() const;
  inline void set_equip_category(::b2::protocol::commondata::EquipCategory value);

  // required int32 item_grade = 5;
  inline bool has_item_grade() const;
  inline void clear_item_grade();
  static const int kItemGradeFieldNumber = 5;
  inline ::google::protobuf::int32 item_grade() const;
  inline void set_item_grade(::google::protobuf::int32 value);

  // required int32 surpass_level = 6;
  inline bool has_surpass_level() const;
  inline void clear_surpass_level();
  static const int kSurpassLevelFieldNumber = 6;
  inline ::google::protobuf::int32 surpass_level() const;
  inline void set_surpass_level(::google::protobuf::int32 value);

  // required int32 quality = 7;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 7;
  inline ::google::protobuf::int32 quality() const;
  inline void set_quality(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdPrefixSelectiveLottery)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_character_type();
  inline void clear_has_character_type();
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_equip_category();
  inline void clear_has_equip_category();
  inline void set_has_item_grade();
  inline void clear_has_item_grade();
  inline void set_has_surpass_level();
  inline void clear_has_surpass_level();
  inline void set_has_quality();
  inline void clear_has_quality();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  int character_type_;
  int group_id_;
  int equip_category_;
  ::google::protobuf::int32 item_grade_;
  ::google::protobuf::int32 surpass_level_;
  ::google::protobuf::int32 quality_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdPrefixSelectiveLottery* default_instance_;
};
// -------------------------------------------------------------------

class mdSelectiveLottery : public ::google::protobuf::Message {
 public:
  mdSelectiveLottery();
  virtual ~mdSelectiveLottery();

  mdSelectiveLottery(const mdSelectiveLottery& from);

  inline mdSelectiveLottery& operator=(const mdSelectiveLottery& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdSelectiveLottery& default_instance();

  void Swap(mdSelectiveLottery* other);

  // implements Message ----------------------------------------------

  mdSelectiveLottery* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdSelectiveLottery& from);
  void MergeFrom(const mdSelectiveLottery& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required .b2.protocol.commondata.Item.CharacterType character_type = 2;
  inline bool has_character_type() const;
  inline void clear_character_type();
  static const int kCharacterTypeFieldNumber = 2;
  inline ::b2::protocol::commondata::Item_CharacterType character_type() const;
  inline void set_character_type(::b2::protocol::commondata::Item_CharacterType value);

  // required .b2.protocol.commondata.EquipCategory equip_category = 3;
  inline bool has_equip_category() const;
  inline void clear_equip_category();
  static const int kEquipCategoryFieldNumber = 3;
  inline ::b2::protocol::commondata::EquipCategory equip_category() const;
  inline void set_equip_category(::b2::protocol::commondata::EquipCategory value);

  // required int32 item_grade = 4;
  inline bool has_item_grade() const;
  inline void clear_item_grade();
  static const int kItemGradeFieldNumber = 4;
  inline ::google::protobuf::int32 item_grade() const;
  inline void set_item_grade(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdSelectiveLottery)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_character_type();
  inline void clear_has_character_type();
  inline void set_has_equip_category();
  inline void clear_has_equip_category();
  inline void set_has_item_grade();
  inline void clear_has_item_grade();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  int character_type_;
  int equip_category_;
  ::google::protobuf::int32 item_grade_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdSelectiveLottery* default_instance_;
};
// -------------------------------------------------------------------

class mdAdditionalMatchCost : public ::google::protobuf::Message {
 public:
  mdAdditionalMatchCost();
  virtual ~mdAdditionalMatchCost();

  mdAdditionalMatchCost(const mdAdditionalMatchCost& from);

  inline mdAdditionalMatchCost& operator=(const mdAdditionalMatchCost& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdAdditionalMatchCost& default_instance();

  void Swap(mdAdditionalMatchCost* other);

  // implements Message ----------------------------------------------

  mdAdditionalMatchCost* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdAdditionalMatchCost& from);
  void MergeFrom(const mdAdditionalMatchCost& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 count = 1;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 1;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // required int32 cost = 2;
  inline bool has_cost() const;
  inline void clear_cost();
  static const int kCostFieldNumber = 2;
  inline ::google::protobuf::int32 cost() const;
  inline void set_cost(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdAdditionalMatchCost)
 private:
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_cost();
  inline void clear_has_cost();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 count_;
  ::google::protobuf::int32 cost_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdAdditionalMatchCost* default_instance_;
};
// -------------------------------------------------------------------

class mdDuelRewardBoxInfo : public ::google::protobuf::Message {
 public:
  mdDuelRewardBoxInfo();
  virtual ~mdDuelRewardBoxInfo();

  mdDuelRewardBoxInfo(const mdDuelRewardBoxInfo& from);

  inline mdDuelRewardBoxInfo& operator=(const mdDuelRewardBoxInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdDuelRewardBoxInfo& default_instance();

  void Swap(mdDuelRewardBoxInfo* other);

  // implements Message ----------------------------------------------

  mdDuelRewardBoxInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdDuelRewardBoxInfo& from);
  void MergeFrom(const mdDuelRewardBoxInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .b2.protocol.commondata.DuelMode duel_mode = 1;
  inline bool has_duel_mode() const;
  inline void clear_duel_mode();
  static const int kDuelModeFieldNumber = 1;
  inline ::b2::protocol::commondata::DuelMode duel_mode() const;
  inline void set_duel_mode(::b2::protocol::commondata::DuelMode value);

  // required .b2.protocol.commondata.RewardBoxGrade grade = 2;
  inline bool has_grade() const;
  inline void clear_grade();
  static const int kGradeFieldNumber = 2;
  inline ::b2::protocol::commondata::RewardBoxGrade grade() const;
  inline void set_grade(::b2::protocol::commondata::RewardBoxGrade value);

  // required int32 win_count = 3;
  inline bool has_win_count() const;
  inline void clear_win_count();
  static const int kWinCountFieldNumber = 3;
  inline ::google::protobuf::int32 win_count() const;
  inline void set_win_count(::google::protobuf::int32 value);

  // repeated int32 reward_group_ids = 10;
  inline int reward_group_ids_size() const;
  inline void clear_reward_group_ids();
  static const int kRewardGroupIdsFieldNumber = 10;
  inline ::google::protobuf::int32 reward_group_ids(int index) const;
  inline void set_reward_group_ids(int index, ::google::protobuf::int32 value);
  inline void add_reward_group_ids(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      reward_group_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_reward_group_ids();

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdDuelRewardBoxInfo)
 private:
  inline void set_has_duel_mode();
  inline void clear_has_duel_mode();
  inline void set_has_grade();
  inline void clear_has_grade();
  inline void set_has_win_count();
  inline void clear_has_win_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int duel_mode_;
  int grade_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > reward_group_ids_;
  ::google::protobuf::int32 win_count_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdDuelRewardBoxInfo* default_instance_;
};
// -------------------------------------------------------------------

class mdRandomRewardGroupInfo : public ::google::protobuf::Message {
 public:
  mdRandomRewardGroupInfo();
  virtual ~mdRandomRewardGroupInfo();

  mdRandomRewardGroupInfo(const mdRandomRewardGroupInfo& from);

  inline mdRandomRewardGroupInfo& operator=(const mdRandomRewardGroupInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdRandomRewardGroupInfo& default_instance();

  void Swap(mdRandomRewardGroupInfo* other);

  // implements Message ----------------------------------------------

  mdRandomRewardGroupInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdRandomRewardGroupInfo& from);
  void MergeFrom(const mdRandomRewardGroupInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 group_id = 1;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 1;
  inline ::google::protobuf::int32 group_id() const;
  inline void set_group_id(::google::protobuf::int32 value);

  // required int32 index = 2;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 2;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // required int32 reward_id = 3;
  inline bool has_reward_id() const;
  inline void clear_reward_id();
  static const int kRewardIdFieldNumber = 3;
  inline ::google::protobuf::int32 reward_id() const;
  inline void set_reward_id(::google::protobuf::int32 value);

  // required int32 rate = 4;
  inline bool has_rate() const;
  inline void clear_rate();
  static const int kRateFieldNumber = 4;
  inline ::google::protobuf::int32 rate() const;
  inline void set_rate(::google::protobuf::int32 value);

  // required int32 min_count = 5;
  inline bool has_min_count() const;
  inline void clear_min_count();
  static const int kMinCountFieldNumber = 5;
  inline ::google::protobuf::int32 min_count() const;
  inline void set_min_count(::google::protobuf::int32 value);

  // required int32 max_count = 6;
  inline bool has_max_count() const;
  inline void clear_max_count();
  static const int kMaxCountFieldNumber = 6;
  inline ::google::protobuf::int32 max_count() const;
  inline void set_max_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdRandomRewardGroupInfo)
 private:
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_reward_id();
  inline void clear_has_reward_id();
  inline void set_has_rate();
  inline void clear_has_rate();
  inline void set_has_min_count();
  inline void clear_has_min_count();
  inline void set_has_max_count();
  inline void clear_has_max_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 group_id_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 reward_id_;
  ::google::protobuf::int32 rate_;
  ::google::protobuf::int32 min_count_;
  ::google::protobuf::int32 max_count_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdRandomRewardGroupInfo* default_instance_;
};
// -------------------------------------------------------------------

class mdAssaultVictoryRewardInfo : public ::google::protobuf::Message {
 public:
  mdAssaultVictoryRewardInfo();
  virtual ~mdAssaultVictoryRewardInfo();

  mdAssaultVictoryRewardInfo(const mdAssaultVictoryRewardInfo& from);

  inline mdAssaultVictoryRewardInfo& operator=(const mdAssaultVictoryRewardInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdAssaultVictoryRewardInfo& default_instance();

  void Swap(mdAssaultVictoryRewardInfo* other);

  // implements Message ----------------------------------------------

  mdAssaultVictoryRewardInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdAssaultVictoryRewardInfo& from);
  void MergeFrom(const mdAssaultVictoryRewardInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .b2.protocol.commondata.MatchResult.TYPE match_result = 1;
  inline bool has_match_result() const;
  inline void clear_match_result();
  static const int kMatchResultFieldNumber = 1;
  inline ::b2::protocol::commondata::MatchResult_TYPE match_result() const;
  inline void set_match_result(::b2::protocol::commondata::MatchResult_TYPE value);

  // required int32 reward_id = 2;
  inline bool has_reward_id() const;
  inline void clear_reward_id();
  static const int kRewardIdFieldNumber = 2;
  inline ::google::protobuf::int32 reward_id() const;
  inline void set_reward_id(::google::protobuf::int32 value);

  // required int32 reward_count = 3;
  inline bool has_reward_count() const;
  inline void clear_reward_count();
  static const int kRewardCountFieldNumber = 3;
  inline ::google::protobuf::int32 reward_count() const;
  inline void set_reward_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdAssaultVictoryRewardInfo)
 private:
  inline void set_has_match_result();
  inline void clear_has_match_result();
  inline void set_has_reward_id();
  inline void clear_has_reward_id();
  inline void set_has_reward_count();
  inline void clear_has_reward_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int match_result_;
  ::google::protobuf::int32 reward_id_;
  ::google::protobuf::int32 reward_count_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdAssaultVictoryRewardInfo* default_instance_;
};
// -------------------------------------------------------------------

class mdAssaultMvpRewardInfo : public ::google::protobuf::Message {
 public:
  mdAssaultMvpRewardInfo();
  virtual ~mdAssaultMvpRewardInfo();

  mdAssaultMvpRewardInfo(const mdAssaultMvpRewardInfo& from);

  inline mdAssaultMvpRewardInfo& operator=(const mdAssaultMvpRewardInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdAssaultMvpRewardInfo& default_instance();

  void Swap(mdAssaultMvpRewardInfo* other);

  // implements Message ----------------------------------------------

  mdAssaultMvpRewardInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdAssaultMvpRewardInfo& from);
  void MergeFrom(const mdAssaultMvpRewardInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 reward_id = 1;
  inline bool has_reward_id() const;
  inline void clear_reward_id();
  static const int kRewardIdFieldNumber = 1;
  inline ::google::protobuf::int32 reward_id() const;
  inline void set_reward_id(::google::protobuf::int32 value);

  // required int32 reward_min_count = 2;
  inline bool has_reward_min_count() const;
  inline void clear_reward_min_count();
  static const int kRewardMinCountFieldNumber = 2;
  inline ::google::protobuf::int32 reward_min_count() const;
  inline void set_reward_min_count(::google::protobuf::int32 value);

  // required int32 reward_max_count = 3;
  inline bool has_reward_max_count() const;
  inline void clear_reward_max_count();
  static const int kRewardMaxCountFieldNumber = 3;
  inline ::google::protobuf::int32 reward_max_count() const;
  inline void set_reward_max_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdAssaultMvpRewardInfo)
 private:
  inline void set_has_reward_id();
  inline void clear_has_reward_id();
  inline void set_has_reward_min_count();
  inline void clear_has_reward_min_count();
  inline void set_has_reward_max_count();
  inline void clear_has_reward_max_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 reward_id_;
  ::google::protobuf::int32 reward_min_count_;
  ::google::protobuf::int32 reward_max_count_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdAssaultMvpRewardInfo* default_instance_;
};
// -------------------------------------------------------------------

class mdCollectionReward : public ::google::protobuf::Message {
 public:
  mdCollectionReward();
  virtual ~mdCollectionReward();

  mdCollectionReward(const mdCollectionReward& from);

  inline mdCollectionReward& operator=(const mdCollectionReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdCollectionReward& default_instance();

  void Swap(mdCollectionReward* other);

  // implements Message ----------------------------------------------

  mdCollectionReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdCollectionReward& from);
  void MergeFrom(const mdCollectionReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .b2.protocol.commondata.CollectionCategory collection_category = 1;
  inline bool has_collection_category() const;
  inline void clear_collection_category();
  static const int kCollectionCategoryFieldNumber = 1;
  inline ::b2::protocol::commondata::CollectionCategory collection_category() const;
  inline void set_collection_category(::b2::protocol::commondata::CollectionCategory value);

  // required int32 grade = 2;
  inline bool has_grade() const;
  inline void clear_grade();
  static const int kGradeFieldNumber = 2;
  inline ::google::protobuf::int32 grade() const;
  inline void set_grade(::google::protobuf::int32 value);

  // required int32 reward_id = 3;
  inline bool has_reward_id() const;
  inline void clear_reward_id();
  static const int kRewardIdFieldNumber = 3;
  inline ::google::protobuf::int32 reward_id() const;
  inline void set_reward_id(::google::protobuf::int32 value);

  // required int32 reward_count = 4;
  inline bool has_reward_count() const;
  inline void clear_reward_count();
  static const int kRewardCountFieldNumber = 4;
  inline ::google::protobuf::int32 reward_count() const;
  inline void set_reward_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdCollectionReward)
 private:
  inline void set_has_collection_category();
  inline void clear_has_collection_category();
  inline void set_has_grade();
  inline void clear_has_grade();
  inline void set_has_reward_id();
  inline void clear_has_reward_id();
  inline void set_has_reward_count();
  inline void clear_has_reward_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int collection_category_;
  ::google::protobuf::int32 grade_;
  ::google::protobuf::int32 reward_id_;
  ::google::protobuf::int32 reward_count_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdCollectionReward* default_instance_;
};
// -------------------------------------------------------------------

class mdItemSet : public ::google::protobuf::Message {
 public:
  mdItemSet();
  virtual ~mdItemSet();

  mdItemSet(const mdItemSet& from);

  inline mdItemSet& operator=(const mdItemSet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdItemSet& default_instance();

  void Swap(mdItemSet* other);

  // implements Message ----------------------------------------------

  mdItemSet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdItemSet& from);
  void MergeFrom(const mdItemSet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 set_id = 1;
  inline bool has_set_id() const;
  inline void clear_set_id();
  static const int kSetIdFieldNumber = 1;
  inline ::google::protobuf::int32 set_id() const;
  inline void set_set_id(::google::protobuf::int32 value);

  // required string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required int32 set_option_id_set2 = 3;
  inline bool has_set_option_id_set2() const;
  inline void clear_set_option_id_set2();
  static const int kSetOptionIdSet2FieldNumber = 3;
  inline ::google::protobuf::int32 set_option_id_set2() const;
  inline void set_set_option_id_set2(::google::protobuf::int32 value);

  // required float set_value_set2 = 4;
  inline bool has_set_value_set2() const;
  inline void clear_set_value_set2();
  static const int kSetValueSet2FieldNumber = 4;
  inline float set_value_set2() const;
  inline void set_set_value_set2(float value);

  // required int32 set_option_id_set3 = 5;
  inline bool has_set_option_id_set3() const;
  inline void clear_set_option_id_set3();
  static const int kSetOptionIdSet3FieldNumber = 5;
  inline ::google::protobuf::int32 set_option_id_set3() const;
  inline void set_set_option_id_set3(::google::protobuf::int32 value);

  // required float set_value_set3 = 6;
  inline bool has_set_value_set3() const;
  inline void clear_set_value_set3();
  static const int kSetValueSet3FieldNumber = 6;
  inline float set_value_set3() const;
  inline void set_set_value_set3(float value);

  // required int32 set_option_id_set4 = 7;
  inline bool has_set_option_id_set4() const;
  inline void clear_set_option_id_set4();
  static const int kSetOptionIdSet4FieldNumber = 7;
  inline ::google::protobuf::int32 set_option_id_set4() const;
  inline void set_set_option_id_set4(::google::protobuf::int32 value);

  // required float set_value_set4 = 8;
  inline bool has_set_value_set4() const;
  inline void clear_set_value_set4();
  static const int kSetValueSet4FieldNumber = 8;
  inline float set_value_set4() const;
  inline void set_set_value_set4(float value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdItemSet)
 private:
  inline void set_has_set_id();
  inline void clear_has_set_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_set_option_id_set2();
  inline void clear_has_set_option_id_set2();
  inline void set_has_set_value_set2();
  inline void clear_has_set_value_set2();
  inline void set_has_set_option_id_set3();
  inline void clear_has_set_option_id_set3();
  inline void set_has_set_value_set3();
  inline void clear_has_set_value_set3();
  inline void set_has_set_option_id_set4();
  inline void clear_has_set_option_id_set4();
  inline void set_has_set_value_set4();
  inline void clear_has_set_value_set4();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::google::protobuf::int32 set_id_;
  ::google::protobuf::int32 set_option_id_set2_;
  float set_value_set2_;
  ::google::protobuf::int32 set_option_id_set3_;
  float set_value_set3_;
  ::google::protobuf::int32 set_option_id_set4_;
  float set_value_set4_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdItemSet* default_instance_;
};
// -------------------------------------------------------------------

class mdSelectItemOption : public ::google::protobuf::Message {
 public:
  mdSelectItemOption();
  virtual ~mdSelectItemOption();

  mdSelectItemOption(const mdSelectItemOption& from);

  inline mdSelectItemOption& operator=(const mdSelectItemOption& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdSelectItemOption& default_instance();

  void Swap(mdSelectItemOption* other);

  // implements Message ----------------------------------------------

  mdSelectItemOption* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdSelectItemOption& from);
  void MergeFrom(const mdSelectItemOption& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 option_id = 1;
  inline bool has_option_id() const;
  inline void clear_option_id();
  static const int kOptionIdFieldNumber = 1;
  inline ::google::protobuf::int32 option_id() const;
  inline void set_option_id(::google::protobuf::int32 value);

  // required int32 grade = 2;
  inline bool has_grade() const;
  inline void clear_grade();
  static const int kGradeFieldNumber = 2;
  inline ::google::protobuf::int32 grade() const;
  inline void set_grade(::google::protobuf::int32 value);

  // required int32 equip_position = 3;
  inline bool has_equip_position() const;
  inline void clear_equip_position();
  static const int kEquipPositionFieldNumber = 3;
  inline ::google::protobuf::int32 equip_position() const;
  inline void set_equip_position(::google::protobuf::int32 value);

  // required float prob = 4;
  inline bool has_prob() const;
  inline void clear_prob();
  static const int kProbFieldNumber = 4;
  inline float prob() const;
  inline void set_prob(float value);

  // required int32 decimal_point = 5;
  inline bool has_decimal_point() const;
  inline void clear_decimal_point();
  static const int kDecimalPointFieldNumber = 5;
  inline ::google::protobuf::int32 decimal_point() const;
  inline void set_decimal_point(::google::protobuf::int32 value);

  // required float min = 6;
  inline bool has_min() const;
  inline void clear_min();
  static const int kMinFieldNumber = 6;
  inline float min() const;
  inline void set_min(float value);

  // required float max = 7;
  inline bool has_max() const;
  inline void clear_max();
  static const int kMaxFieldNumber = 7;
  inline float max() const;
  inline void set_max(float value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdSelectItemOption)
 private:
  inline void set_has_option_id();
  inline void clear_has_option_id();
  inline void set_has_grade();
  inline void clear_has_grade();
  inline void set_has_equip_position();
  inline void clear_has_equip_position();
  inline void set_has_prob();
  inline void clear_has_prob();
  inline void set_has_decimal_point();
  inline void clear_has_decimal_point();
  inline void set_has_min();
  inline void clear_has_min();
  inline void set_has_max();
  inline void clear_has_max();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 option_id_;
  ::google::protobuf::int32 grade_;
  ::google::protobuf::int32 equip_position_;
  float prob_;
  ::google::protobuf::int32 decimal_point_;
  float min_;
  float max_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdSelectItemOption* default_instance_;
};
// -------------------------------------------------------------------

class mdSelectItemSealOption : public ::google::protobuf::Message {
 public:
  mdSelectItemSealOption();
  virtual ~mdSelectItemSealOption();

  mdSelectItemSealOption(const mdSelectItemSealOption& from);

  inline mdSelectItemSealOption& operator=(const mdSelectItemSealOption& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdSelectItemSealOption& default_instance();

  void Swap(mdSelectItemSealOption* other);

  // implements Message ----------------------------------------------

  mdSelectItemSealOption* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdSelectItemSealOption& from);
  void MergeFrom(const mdSelectItemSealOption& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 option_id = 1;
  inline bool has_option_id() const;
  inline void clear_option_id();
  static const int kOptionIdFieldNumber = 1;
  inline ::google::protobuf::int32 option_id() const;
  inline void set_option_id(::google::protobuf::int32 value);

  // required int32 slot = 2;
  inline bool has_slot() const;
  inline void clear_slot();
  static const int kSlotFieldNumber = 2;
  inline ::google::protobuf::int32 slot() const;
  inline void set_slot(::google::protobuf::int32 value);

  // required float prob = 3;
  inline bool has_prob() const;
  inline void clear_prob();
  static const int kProbFieldNumber = 3;
  inline float prob() const;
  inline void set_prob(float value);

  // required int32 decimal_point = 4;
  inline bool has_decimal_point() const;
  inline void clear_decimal_point();
  static const int kDecimalPointFieldNumber = 4;
  inline ::google::protobuf::int32 decimal_point() const;
  inline void set_decimal_point(::google::protobuf::int32 value);

  // required float min = 5;
  inline bool has_min() const;
  inline void clear_min();
  static const int kMinFieldNumber = 5;
  inline float min() const;
  inline void set_min(float value);

  // required float max = 6;
  inline bool has_max() const;
  inline void clear_max();
  static const int kMaxFieldNumber = 6;
  inline float max() const;
  inline void set_max(float value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdSelectItemSealOption)
 private:
  inline void set_has_option_id();
  inline void clear_has_option_id();
  inline void set_has_slot();
  inline void clear_has_slot();
  inline void set_has_prob();
  inline void clear_has_prob();
  inline void set_has_decimal_point();
  inline void clear_has_decimal_point();
  inline void set_has_min();
  inline void clear_has_min();
  inline void set_has_max();
  inline void clear_has_max();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 option_id_;
  ::google::protobuf::int32 slot_;
  float prob_;
  ::google::protobuf::int32 decimal_point_;
  float min_;
  float max_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdSelectItemSealOption* default_instance_;
};
// -------------------------------------------------------------------

class mdEventAttendance : public ::google::protobuf::Message {
 public:
  mdEventAttendance();
  virtual ~mdEventAttendance();

  mdEventAttendance(const mdEventAttendance& from);

  inline mdEventAttendance& operator=(const mdEventAttendance& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdEventAttendance& default_instance();

  void Swap(mdEventAttendance* other);

  // implements Message ----------------------------------------------

  mdEventAttendance* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdEventAttendance& from);
  void MergeFrom(const mdEventAttendance& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef mdEventAttendance_BonusType BonusType;
  static const BonusType NONE = mdEventAttendance_BonusType_NONE;
  static const BonusType PERIODIC_PACKAGE = mdEventAttendance_BonusType_PERIODIC_PACKAGE;
  static inline bool BonusType_IsValid(int value) {
    return mdEventAttendance_BonusType_IsValid(value);
  }
  static const BonusType BonusType_MIN =
    mdEventAttendance_BonusType_BonusType_MIN;
  static const BonusType BonusType_MAX =
    mdEventAttendance_BonusType_BonusType_MAX;
  static const int BonusType_ARRAYSIZE =
    mdEventAttendance_BonusType_BonusType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  BonusType_descriptor() {
    return mdEventAttendance_BonusType_descriptor();
  }
  static inline const ::std::string& BonusType_Name(BonusType value) {
    return mdEventAttendance_BonusType_Name(value);
  }
  static inline bool BonusType_Parse(const ::std::string& name,
      BonusType* value) {
    return mdEventAttendance_BonusType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int32 event_id = 1;
  inline bool has_event_id() const;
  inline void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  inline ::google::protobuf::int32 event_id() const;
  inline void set_event_id(::google::protobuf::int32 value);

  // required string title = 2;
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 2;
  inline const ::std::string& title() const;
  inline void set_title(const ::std::string& value);
  inline void set_title(const char* value);
  inline void set_title(const char* value, size_t size);
  inline ::std::string* mutable_title();
  inline ::std::string* release_title();
  inline void set_allocated_title(::std::string* title);

  // required int32 total_attendance_days = 3;
  inline bool has_total_attendance_days() const;
  inline void clear_total_attendance_days();
  static const int kTotalAttendanceDaysFieldNumber = 3;
  inline ::google::protobuf::int32 total_attendance_days() const;
  inline void set_total_attendance_days(::google::protobuf::int32 value);

  // required int64 start_time = 4;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 4;
  inline ::google::protobuf::int64 start_time() const;
  inline void set_start_time(::google::protobuf::int64 value);

  // required int64 end_time = 5;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 5;
  inline ::google::protobuf::int64 end_time() const;
  inline void set_end_time(::google::protobuf::int64 value);

  // required string explain = 6;
  inline bool has_explain() const;
  inline void clear_explain();
  static const int kExplainFieldNumber = 6;
  inline const ::std::string& explain() const;
  inline void set_explain(const ::std::string& value);
  inline void set_explain(const char* value);
  inline void set_explain(const char* value, size_t size);
  inline ::std::string* mutable_explain();
  inline ::std::string* release_explain();
  inline void set_allocated_explain(::std::string* explain);

  // required string event_url = 7;
  inline bool has_event_url() const;
  inline void clear_event_url();
  static const int kEventUrlFieldNumber = 7;
  inline const ::std::string& event_url() const;
  inline void set_event_url(const ::std::string& value);
  inline void set_event_url(const char* value);
  inline void set_event_url(const char* value, size_t size);
  inline ::std::string* mutable_event_url();
  inline ::std::string* release_event_url();
  inline void set_allocated_event_url(::std::string* event_url);

  // required .b2.protocol.masterdata.mdEventAttendance.BonusType bonus_type = 8;
  inline bool has_bonus_type() const;
  inline void clear_bonus_type();
  static const int kBonusTypeFieldNumber = 8;
  inline ::b2::protocol::masterdata::mdEventAttendance_BonusType bonus_type() const;
  inline void set_bonus_type(::b2::protocol::masterdata::mdEventAttendance_BonusType value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdEventAttendance)
 private:
  inline void set_has_event_id();
  inline void clear_has_event_id();
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_total_attendance_days();
  inline void clear_has_total_attendance_days();
  inline void set_has_start_time();
  inline void clear_has_start_time();
  inline void set_has_end_time();
  inline void clear_has_end_time();
  inline void set_has_explain();
  inline void clear_has_explain();
  inline void set_has_event_url();
  inline void clear_has_event_url();
  inline void set_has_bonus_type();
  inline void clear_has_bonus_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* title_;
  ::google::protobuf::int32 event_id_;
  ::google::protobuf::int32 total_attendance_days_;
  ::google::protobuf::int64 start_time_;
  ::google::protobuf::int64 end_time_;
  ::std::string* explain_;
  ::std::string* event_url_;
  int bonus_type_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdEventAttendance* default_instance_;
};
// -------------------------------------------------------------------

class mdEventAttendanceReward : public ::google::protobuf::Message {
 public:
  mdEventAttendanceReward();
  virtual ~mdEventAttendanceReward();

  mdEventAttendanceReward(const mdEventAttendanceReward& from);

  inline mdEventAttendanceReward& operator=(const mdEventAttendanceReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdEventAttendanceReward& default_instance();

  void Swap(mdEventAttendanceReward* other);

  // implements Message ----------------------------------------------

  mdEventAttendanceReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdEventAttendanceReward& from);
  void MergeFrom(const mdEventAttendanceReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 event_id = 1;
  inline bool has_event_id() const;
  inline void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  inline ::google::protobuf::int32 event_id() const;
  inline void set_event_id(::google::protobuf::int32 value);

  // required int32 day = 2;
  inline bool has_day() const;
  inline void clear_day();
  static const int kDayFieldNumber = 2;
  inline ::google::protobuf::int32 day() const;
  inline void set_day(::google::protobuf::int32 value);

  // required int32 reward_id = 3;
  inline bool has_reward_id() const;
  inline void clear_reward_id();
  static const int kRewardIdFieldNumber = 3;
  inline ::google::protobuf::int32 reward_id() const;
  inline void set_reward_id(::google::protobuf::int32 value);

  // required int32 reward_count = 4;
  inline bool has_reward_count() const;
  inline void clear_reward_count();
  static const int kRewardCountFieldNumber = 4;
  inline ::google::protobuf::int32 reward_count() const;
  inline void set_reward_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdEventAttendanceReward)
 private:
  inline void set_has_event_id();
  inline void clear_has_event_id();
  inline void set_has_day();
  inline void clear_has_day();
  inline void set_has_reward_id();
  inline void clear_has_reward_id();
  inline void set_has_reward_count();
  inline void clear_has_reward_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 event_id_;
  ::google::protobuf::int32 day_;
  ::google::protobuf::int32 reward_id_;
  ::google::protobuf::int32 reward_count_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdEventAttendanceReward* default_instance_;
};
// -------------------------------------------------------------------

class mdDailyPlayTimeReward : public ::google::protobuf::Message {
 public:
  mdDailyPlayTimeReward();
  virtual ~mdDailyPlayTimeReward();

  mdDailyPlayTimeReward(const mdDailyPlayTimeReward& from);

  inline mdDailyPlayTimeReward& operator=(const mdDailyPlayTimeReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdDailyPlayTimeReward& default_instance();

  void Swap(mdDailyPlayTimeReward* other);

  // implements Message ----------------------------------------------

  mdDailyPlayTimeReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdDailyPlayTimeReward& from);
  void MergeFrom(const mdDailyPlayTimeReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 reward_index = 1;
  inline bool has_reward_index() const;
  inline void clear_reward_index();
  static const int kRewardIndexFieldNumber = 1;
  inline ::google::protobuf::int32 reward_index() const;
  inline void set_reward_index(::google::protobuf::int32 value);

  // required int32 play_time_inmin = 2;
  inline bool has_play_time_inmin() const;
  inline void clear_play_time_inmin();
  static const int kPlayTimeInminFieldNumber = 2;
  inline ::google::protobuf::int32 play_time_inmin() const;
  inline void set_play_time_inmin(::google::protobuf::int32 value);

  // required int32 reward_id = 3;
  inline bool has_reward_id() const;
  inline void clear_reward_id();
  static const int kRewardIdFieldNumber = 3;
  inline ::google::protobuf::int32 reward_id() const;
  inline void set_reward_id(::google::protobuf::int32 value);

  // required int32 reward_count = 4;
  inline bool has_reward_count() const;
  inline void clear_reward_count();
  static const int kRewardCountFieldNumber = 4;
  inline ::google::protobuf::int32 reward_count() const;
  inline void set_reward_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdDailyPlayTimeReward)
 private:
  inline void set_has_reward_index();
  inline void clear_has_reward_index();
  inline void set_has_play_time_inmin();
  inline void clear_has_play_time_inmin();
  inline void set_has_reward_id();
  inline void clear_has_reward_id();
  inline void set_has_reward_count();
  inline void clear_has_reward_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 reward_index_;
  ::google::protobuf::int32 play_time_inmin_;
  ::google::protobuf::int32 reward_id_;
  ::google::protobuf::int32 reward_count_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdDailyPlayTimeReward* default_instance_;
};
// -------------------------------------------------------------------

class mdTutorialInfo : public ::google::protobuf::Message {
 public:
  mdTutorialInfo();
  virtual ~mdTutorialInfo();

  mdTutorialInfo(const mdTutorialInfo& from);

  inline mdTutorialInfo& operator=(const mdTutorialInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdTutorialInfo& default_instance();

  void Swap(mdTutorialInfo* other);

  // implements Message ----------------------------------------------

  mdTutorialInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdTutorialInfo& from);
  void MergeFrom(const mdTutorialInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 tutorial_id = 1;
  inline bool has_tutorial_id() const;
  inline void clear_tutorial_id();
  static const int kTutorialIdFieldNumber = 1;
  inline ::google::protobuf::int32 tutorial_id() const;
  inline void set_tutorial_id(::google::protobuf::int32 value);

  // required int32 prev_tutorial_id = 2;
  inline bool has_prev_tutorial_id() const;
  inline void clear_prev_tutorial_id();
  static const int kPrevTutorialIdFieldNumber = 2;
  inline ::google::protobuf::int32 prev_tutorial_id() const;
  inline void set_prev_tutorial_id(::google::protobuf::int32 value);

  // required int32 character_level = 3;
  inline bool has_character_level() const;
  inline void clear_character_level();
  static const int kCharacterLevelFieldNumber = 3;
  inline ::google::protobuf::int32 character_level() const;
  inline void set_character_level(::google::protobuf::int32 value);

  // required int32 act_cleared = 4;
  inline bool has_act_cleared() const;
  inline void clear_act_cleared();
  static const int kActClearedFieldNumber = 4;
  inline ::google::protobuf::int32 act_cleared() const;
  inline void set_act_cleared(::google::protobuf::int32 value);

  // required int32 cash = 5;
  inline bool has_cash() const;
  inline void clear_cash();
  static const int kCashFieldNumber = 5;
  inline ::google::protobuf::int32 cash() const;
  inline void set_cash(::google::protobuf::int32 value);

  // required int32 gold = 6;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 6;
  inline ::google::protobuf::int32 gold() const;
  inline void set_gold(::google::protobuf::int32 value);

  // required int32 reward_id1 = 7;
  inline bool has_reward_id1() const;
  inline void clear_reward_id1();
  static const int kRewardId1FieldNumber = 7;
  inline ::google::protobuf::int32 reward_id1() const;
  inline void set_reward_id1(::google::protobuf::int32 value);

  // required int32 reward_count1 = 8;
  inline bool has_reward_count1() const;
  inline void clear_reward_count1();
  static const int kRewardCount1FieldNumber = 8;
  inline ::google::protobuf::int32 reward_count1() const;
  inline void set_reward_count1(::google::protobuf::int32 value);

  // required int32 reward_id2 = 9;
  inline bool has_reward_id2() const;
  inline void clear_reward_id2();
  static const int kRewardId2FieldNumber = 9;
  inline ::google::protobuf::int32 reward_id2() const;
  inline void set_reward_id2(::google::protobuf::int32 value);

  // required int32 reward_count2 = 10;
  inline bool has_reward_count2() const;
  inline void clear_reward_count2();
  static const int kRewardCount2FieldNumber = 10;
  inline ::google::protobuf::int32 reward_count2() const;
  inline void set_reward_count2(::google::protobuf::int32 value);

  // required int32 reward_id3 = 11;
  inline bool has_reward_id3() const;
  inline void clear_reward_id3();
  static const int kRewardId3FieldNumber = 11;
  inline ::google::protobuf::int32 reward_id3() const;
  inline void set_reward_id3(::google::protobuf::int32 value);

  // required int32 reward_count3 = 12;
  inline bool has_reward_count3() const;
  inline void clear_reward_count3();
  static const int kRewardCount3FieldNumber = 12;
  inline ::google::protobuf::int32 reward_count3() const;
  inline void set_reward_count3(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdTutorialInfo)
 private:
  inline void set_has_tutorial_id();
  inline void clear_has_tutorial_id();
  inline void set_has_prev_tutorial_id();
  inline void clear_has_prev_tutorial_id();
  inline void set_has_character_level();
  inline void clear_has_character_level();
  inline void set_has_act_cleared();
  inline void clear_has_act_cleared();
  inline void set_has_cash();
  inline void clear_has_cash();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_reward_id1();
  inline void clear_has_reward_id1();
  inline void set_has_reward_count1();
  inline void clear_has_reward_count1();
  inline void set_has_reward_id2();
  inline void clear_has_reward_id2();
  inline void set_has_reward_count2();
  inline void clear_has_reward_count2();
  inline void set_has_reward_id3();
  inline void clear_has_reward_id3();
  inline void set_has_reward_count3();
  inline void clear_has_reward_count3();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 tutorial_id_;
  ::google::protobuf::int32 prev_tutorial_id_;
  ::google::protobuf::int32 character_level_;
  ::google::protobuf::int32 act_cleared_;
  ::google::protobuf::int32 cash_;
  ::google::protobuf::int32 gold_;
  ::google::protobuf::int32 reward_id1_;
  ::google::protobuf::int32 reward_count1_;
  ::google::protobuf::int32 reward_id2_;
  ::google::protobuf::int32 reward_count2_;
  ::google::protobuf::int32 reward_id3_;
  ::google::protobuf::int32 reward_count3_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdTutorialInfo* default_instance_;
};
// -------------------------------------------------------------------

class mdAetherOptionInfo : public ::google::protobuf::Message {
 public:
  mdAetherOptionInfo();
  virtual ~mdAetherOptionInfo();

  mdAetherOptionInfo(const mdAetherOptionInfo& from);

  inline mdAetherOptionInfo& operator=(const mdAetherOptionInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdAetherOptionInfo& default_instance();

  void Swap(mdAetherOptionInfo* other);

  // implements Message ----------------------------------------------

  mdAetherOptionInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdAetherOptionInfo& from);
  void MergeFrom(const mdAetherOptionInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 option_id = 1;
  inline bool has_option_id() const;
  inline void clear_option_id();
  static const int kOptionIdFieldNumber = 1;
  inline ::google::protobuf::int32 option_id() const;
  inline void set_option_id(::google::protobuf::int32 value);

  // required int32 option_group = 2;
  inline bool has_option_group() const;
  inline void clear_option_group();
  static const int kOptionGroupFieldNumber = 2;
  inline ::google::protobuf::int32 option_group() const;
  inline void set_option_group(::google::protobuf::int32 value);

  // required int32 grade = 3;
  inline bool has_grade() const;
  inline void clear_grade();
  static const int kGradeFieldNumber = 3;
  inline ::google::protobuf::int32 grade() const;
  inline void set_grade(::google::protobuf::int32 value);

  // required float default_value = 4;
  inline bool has_default_value() const;
  inline void clear_default_value();
  static const int kDefaultValueFieldNumber = 4;
  inline float default_value() const;
  inline void set_default_value(float value);

  // required float increase_value_per_level = 5;
  inline bool has_increase_value_per_level() const;
  inline void clear_increase_value_per_level();
  static const int kIncreaseValuePerLevelFieldNumber = 5;
  inline float increase_value_per_level() const;
  inline void set_increase_value_per_level(float value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdAetherOptionInfo)
 private:
  inline void set_has_option_id();
  inline void clear_has_option_id();
  inline void set_has_option_group();
  inline void clear_has_option_group();
  inline void set_has_grade();
  inline void clear_has_grade();
  inline void set_has_default_value();
  inline void clear_has_default_value();
  inline void set_has_increase_value_per_level();
  inline void clear_has_increase_value_per_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 option_id_;
  ::google::protobuf::int32 option_group_;
  ::google::protobuf::int32 grade_;
  float default_value_;
  float increase_value_per_level_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdAetherOptionInfo* default_instance_;
};
// -------------------------------------------------------------------

class mdAetherSlotInfo : public ::google::protobuf::Message {
 public:
  mdAetherSlotInfo();
  virtual ~mdAetherSlotInfo();

  mdAetherSlotInfo(const mdAetherSlotInfo& from);

  inline mdAetherSlotInfo& operator=(const mdAetherSlotInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdAetherSlotInfo& default_instance();

  void Swap(mdAetherSlotInfo* other);

  // implements Message ----------------------------------------------

  mdAetherSlotInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdAetherSlotInfo& from);
  void MergeFrom(const mdAetherSlotInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 slot_id = 1;
  inline bool has_slot_id() const;
  inline void clear_slot_id();
  static const int kSlotIdFieldNumber = 1;
  inline ::google::protobuf::int32 slot_id() const;
  inline void set_slot_id(::google::protobuf::int32 value);

  // required int32 option_id = 2;
  inline bool has_option_id() const;
  inline void clear_option_id();
  static const int kOptionIdFieldNumber = 2;
  inline ::google::protobuf::int32 option_id() const;
  inline void set_option_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdAetherSlotInfo)
 private:
  inline void set_has_slot_id();
  inline void clear_has_slot_id();
  inline void set_has_option_id();
  inline void clear_has_option_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 slot_id_;
  ::google::protobuf::int32 option_id_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdAetherSlotInfo* default_instance_;
};
// -------------------------------------------------------------------

class mdAetherEnhanceInfo : public ::google::protobuf::Message {
 public:
  mdAetherEnhanceInfo();
  virtual ~mdAetherEnhanceInfo();

  mdAetherEnhanceInfo(const mdAetherEnhanceInfo& from);

  inline mdAetherEnhanceInfo& operator=(const mdAetherEnhanceInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdAetherEnhanceInfo& default_instance();

  void Swap(mdAetherEnhanceInfo* other);

  // implements Message ----------------------------------------------

  mdAetherEnhanceInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdAetherEnhanceInfo& from);
  void MergeFrom(const mdAetherEnhanceInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 enhance_level = 1;
  inline bool has_enhance_level() const;
  inline void clear_enhance_level();
  static const int kEnhanceLevelFieldNumber = 1;
  inline ::google::protobuf::int32 enhance_level() const;
  inline void set_enhance_level(::google::protobuf::int32 value);

  // required int32 grade = 2;
  inline bool has_grade() const;
  inline void clear_grade();
  static const int kGradeFieldNumber = 2;
  inline ::google::protobuf::int32 grade() const;
  inline void set_grade(::google::protobuf::int32 value);

  // required int32 aether_piece_cost = 3;
  inline bool has_aether_piece_cost() const;
  inline void clear_aether_piece_cost();
  static const int kAetherPieceCostFieldNumber = 3;
  inline ::google::protobuf::int32 aether_piece_cost() const;
  inline void set_aether_piece_cost(::google::protobuf::int32 value);

  // required int32 enhance_rate = 4;
  inline bool has_enhance_rate() const;
  inline void clear_enhance_rate();
  static const int kEnhanceRateFieldNumber = 4;
  inline ::google::protobuf::int32 enhance_rate() const;
  inline void set_enhance_rate(::google::protobuf::int32 value);

  // required int32 dismantle_amount = 5;
  inline bool has_dismantle_amount() const;
  inline void clear_dismantle_amount();
  static const int kDismantleAmountFieldNumber = 5;
  inline ::google::protobuf::int32 dismantle_amount() const;
  inline void set_dismantle_amount(::google::protobuf::int32 value);

  // required int32 sell_price = 6;
  inline bool has_sell_price() const;
  inline void clear_sell_price();
  static const int kSellPriceFieldNumber = 6;
  inline ::google::protobuf::int32 sell_price() const;
  inline void set_sell_price(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdAetherEnhanceInfo)
 private:
  inline void set_has_enhance_level();
  inline void clear_has_enhance_level();
  inline void set_has_grade();
  inline void clear_has_grade();
  inline void set_has_aether_piece_cost();
  inline void clear_has_aether_piece_cost();
  inline void set_has_enhance_rate();
  inline void clear_has_enhance_rate();
  inline void set_has_dismantle_amount();
  inline void clear_has_dismantle_amount();
  inline void set_has_sell_price();
  inline void clear_has_sell_price();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 enhance_level_;
  ::google::protobuf::int32 grade_;
  ::google::protobuf::int32 aether_piece_cost_;
  ::google::protobuf::int32 enhance_rate_;
  ::google::protobuf::int32 dismantle_amount_;
  ::google::protobuf::int32 sell_price_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdAetherEnhanceInfo* default_instance_;
};
// -------------------------------------------------------------------

class mdAetherEnhanceOptionInfo : public ::google::protobuf::Message {
 public:
  mdAetherEnhanceOptionInfo();
  virtual ~mdAetherEnhanceOptionInfo();

  mdAetherEnhanceOptionInfo(const mdAetherEnhanceOptionInfo& from);

  inline mdAetherEnhanceOptionInfo& operator=(const mdAetherEnhanceOptionInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdAetherEnhanceOptionInfo& default_instance();

  void Swap(mdAetherEnhanceOptionInfo* other);

  // implements Message ----------------------------------------------

  mdAetherEnhanceOptionInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdAetherEnhanceOptionInfo& from);
  void MergeFrom(const mdAetherEnhanceOptionInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 enhance_level = 1;
  inline bool has_enhance_level() const;
  inline void clear_enhance_level();
  static const int kEnhanceLevelFieldNumber = 1;
  inline ::google::protobuf::int32 enhance_level() const;
  inline void set_enhance_level(::google::protobuf::int32 value);

  // required int32 tier = 2;
  inline bool has_tier() const;
  inline void clear_tier();
  static const int kTierFieldNumber = 2;
  inline ::google::protobuf::int32 tier() const;
  inline void set_tier(::google::protobuf::int32 value);

  // required int32 state_main_option = 3;
  inline bool has_state_main_option() const;
  inline void clear_state_main_option();
  static const int kStateMainOptionFieldNumber = 3;
  inline ::google::protobuf::int32 state_main_option() const;
  inline void set_state_main_option(::google::protobuf::int32 value);

  // required int32 state_sub_option = 4;
  inline bool has_state_sub_option() const;
  inline void clear_state_sub_option();
  static const int kStateSubOptionFieldNumber = 4;
  inline ::google::protobuf::int32 state_sub_option() const;
  inline void set_state_sub_option(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdAetherEnhanceOptionInfo)
 private:
  inline void set_has_enhance_level();
  inline void clear_has_enhance_level();
  inline void set_has_tier();
  inline void clear_has_tier();
  inline void set_has_state_main_option();
  inline void clear_has_state_main_option();
  inline void set_has_state_sub_option();
  inline void clear_has_state_sub_option();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 enhance_level_;
  ::google::protobuf::int32 tier_;
  ::google::protobuf::int32 state_main_option_;
  ::google::protobuf::int32 state_sub_option_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdAetherEnhanceOptionInfo* default_instance_;
};
// -------------------------------------------------------------------

class mdAetherSetOptionInfo : public ::google::protobuf::Message {
 public:
  mdAetherSetOptionInfo();
  virtual ~mdAetherSetOptionInfo();

  mdAetherSetOptionInfo(const mdAetherSetOptionInfo& from);

  inline mdAetherSetOptionInfo& operator=(const mdAetherSetOptionInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdAetherSetOptionInfo& default_instance();

  void Swap(mdAetherSetOptionInfo* other);

  // implements Message ----------------------------------------------

  mdAetherSetOptionInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdAetherSetOptionInfo& from);
  void MergeFrom(const mdAetherSetOptionInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // required int32 tier = 2;
  inline bool has_tier() const;
  inline void clear_tier();
  static const int kTierFieldNumber = 2;
  inline ::google::protobuf::int32 tier() const;
  inline void set_tier(::google::protobuf::int32 value);

  // required int32 set_option_id = 3;
  inline bool has_set_option_id() const;
  inline void clear_set_option_id();
  static const int kSetOptionIdFieldNumber = 3;
  inline ::google::protobuf::int32 set_option_id() const;
  inline void set_set_option_id(::google::protobuf::int32 value);

  // required int32 min_apply_count = 4;
  inline bool has_min_apply_count() const;
  inline void clear_min_apply_count();
  static const int kMinApplyCountFieldNumber = 4;
  inline ::google::protobuf::int32 min_apply_count() const;
  inline void set_min_apply_count(::google::protobuf::int32 value);

  // required int32 trigger_rate = 5;
  inline bool has_trigger_rate() const;
  inline void clear_trigger_rate();
  static const int kTriggerRateFieldNumber = 5;
  inline ::google::protobuf::int32 trigger_rate() const;
  inline void set_trigger_rate(::google::protobuf::int32 value);

  // required int32 cooldown_second = 6;
  inline bool has_cooldown_second() const;
  inline void clear_cooldown_second();
  static const int kCooldownSecondFieldNumber = 6;
  inline ::google::protobuf::int32 cooldown_second() const;
  inline void set_cooldown_second(::google::protobuf::int32 value);

  // required int32 damage_rate = 7;
  inline bool has_damage_rate() const;
  inline void clear_damage_rate();
  static const int kDamageRateFieldNumber = 7;
  inline ::google::protobuf::int32 damage_rate() const;
  inline void set_damage_rate(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdAetherSetOptionInfo)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_tier();
  inline void clear_has_tier();
  inline void set_has_set_option_id();
  inline void clear_has_set_option_id();
  inline void set_has_min_apply_count();
  inline void clear_has_min_apply_count();
  inline void set_has_trigger_rate();
  inline void clear_has_trigger_rate();
  inline void set_has_cooldown_second();
  inline void clear_has_cooldown_second();
  inline void set_has_damage_rate();
  inline void clear_has_damage_rate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 tier_;
  ::google::protobuf::int32 set_option_id_;
  ::google::protobuf::int32 min_apply_count_;
  ::google::protobuf::int32 trigger_rate_;
  ::google::protobuf::int32 cooldown_second_;
  ::google::protobuf::int32 damage_rate_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdAetherSetOptionInfo* default_instance_;
};
// -------------------------------------------------------------------

class mdDuelModeReward : public ::google::protobuf::Message {
 public:
  mdDuelModeReward();
  virtual ~mdDuelModeReward();

  mdDuelModeReward(const mdDuelModeReward& from);

  inline mdDuelModeReward& operator=(const mdDuelModeReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdDuelModeReward& default_instance();

  void Swap(mdDuelModeReward* other);

  // implements Message ----------------------------------------------

  mdDuelModeReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdDuelModeReward& from);
  void MergeFrom(const mdDuelModeReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .b2.protocol.commondata.DuelMode duel_mode = 1;
  inline bool has_duel_mode() const;
  inline void clear_duel_mode();
  static const int kDuelModeFieldNumber = 1;
  inline ::b2::protocol::commondata::DuelMode duel_mode() const;
  inline void set_duel_mode(::b2::protocol::commondata::DuelMode value);

  // required .b2.protocol.commondata.MatchResult.TYPE match_result = 2;
  inline bool has_match_result() const;
  inline void clear_match_result();
  static const int kMatchResultFieldNumber = 2;
  inline ::b2::protocol::commondata::MatchResult_TYPE match_result() const;
  inline void set_match_result(::b2::protocol::commondata::MatchResult_TYPE value);

  // repeated .b2.protocol.commondata.Reward rewards = 3;
  inline int rewards_size() const;
  inline void clear_rewards();
  static const int kRewardsFieldNumber = 3;
  inline const ::b2::protocol::commondata::Reward& rewards(int index) const;
  inline ::b2::protocol::commondata::Reward* mutable_rewards(int index);
  inline ::b2::protocol::commondata::Reward* add_rewards();
  inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward >&
      rewards() const;
  inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward >*
      mutable_rewards();

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdDuelModeReward)
 private:
  inline void set_has_duel_mode();
  inline void clear_has_duel_mode();
  inline void set_has_match_result();
  inline void clear_has_match_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int duel_mode_;
  int match_result_;
  ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward > rewards_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdDuelModeReward* default_instance_;
};
// -------------------------------------------------------------------

class mdRaidExp : public ::google::protobuf::Message {
 public:
  mdRaidExp();
  virtual ~mdRaidExp();

  mdRaidExp(const mdRaidExp& from);

  inline mdRaidExp& operator=(const mdRaidExp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdRaidExp& default_instance();

  void Swap(mdRaidExp* other);

  // implements Message ----------------------------------------------

  mdRaidExp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdRaidExp& from);
  void MergeFrom(const mdRaidExp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 raid_type = 1;
  inline bool has_raid_type() const;
  inline void clear_raid_type();
  static const int kRaidTypeFieldNumber = 1;
  inline ::google::protobuf::int32 raid_type() const;
  inline void set_raid_type(::google::protobuf::int32 value);

  // required int32 step = 2;
  inline bool has_step() const;
  inline void clear_step();
  static const int kStepFieldNumber = 2;
  inline ::google::protobuf::int32 step() const;
  inline void set_step(::google::protobuf::int32 value);

  // required int32 exp = 3;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 3;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdRaidExp)
 private:
  inline void set_has_raid_type();
  inline void clear_has_raid_type();
  inline void set_has_step();
  inline void clear_has_step();
  inline void set_has_exp();
  inline void clear_has_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 raid_type_;
  ::google::protobuf::int32 step_;
  ::google::protobuf::int32 exp_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdRaidExp* default_instance_;
};
// -------------------------------------------------------------------

class mdUnitySkillMission : public ::google::protobuf::Message {
 public:
  mdUnitySkillMission();
  virtual ~mdUnitySkillMission();

  mdUnitySkillMission(const mdUnitySkillMission& from);

  inline mdUnitySkillMission& operator=(const mdUnitySkillMission& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdUnitySkillMission& default_instance();

  void Swap(mdUnitySkillMission* other);

  // implements Message ----------------------------------------------

  mdUnitySkillMission* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdUnitySkillMission& from);
  void MergeFrom(const mdUnitySkillMission& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .b2.protocol.commondata.Character.TYPE main_character_type = 1;
  inline bool has_main_character_type() const;
  inline void clear_main_character_type();
  static const int kMainCharacterTypeFieldNumber = 1;
  inline ::b2::protocol::commondata::Character_TYPE main_character_type() const;
  inline void set_main_character_type(::b2::protocol::commondata::Character_TYPE value);

  // required .b2.protocol.commondata.Character.TYPE unity_character_type = 2;
  inline bool has_unity_character_type() const;
  inline void clear_unity_character_type();
  static const int kUnityCharacterTypeFieldNumber = 2;
  inline ::b2::protocol::commondata::Character_TYPE unity_character_type() const;
  inline void set_unity_character_type(::b2::protocol::commondata::Character_TYPE value);

  // required int32 step = 3;
  inline bool has_step() const;
  inline void clear_step();
  static const int kStepFieldNumber = 3;
  inline ::google::protobuf::int32 step() const;
  inline void set_step(::google::protobuf::int32 value);

  // required int32 index = 4;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 4;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // required .b2.protocol.commondata.UnitySkillEventType event_type = 5;
  inline bool has_event_type() const;
  inline void clear_event_type();
  static const int kEventTypeFieldNumber = 5;
  inline ::b2::protocol::commondata::UnitySkillEventType event_type() const;
  inline void set_event_type(::b2::protocol::commondata::UnitySkillEventType value);

  // required int32 condition1 = 6;
  inline bool has_condition1() const;
  inline void clear_condition1();
  static const int kCondition1FieldNumber = 6;
  inline ::google::protobuf::int32 condition1() const;
  inline void set_condition1(::google::protobuf::int32 value);

  // required int32 condition2 = 7;
  inline bool has_condition2() const;
  inline void clear_condition2();
  static const int kCondition2FieldNumber = 7;
  inline ::google::protobuf::int32 condition2() const;
  inline void set_condition2(::google::protobuf::int32 value);

  // required int32 condition3 = 8;
  inline bool has_condition3() const;
  inline void clear_condition3();
  static const int kCondition3FieldNumber = 8;
  inline ::google::protobuf::int32 condition3() const;
  inline void set_condition3(::google::protobuf::int32 value);

  // required int32 condition4 = 9;
  inline bool has_condition4() const;
  inline void clear_condition4();
  static const int kCondition4FieldNumber = 9;
  inline ::google::protobuf::int32 condition4() const;
  inline void set_condition4(::google::protobuf::int32 value);

  // required int32 goal_count = 10;
  inline bool has_goal_count() const;
  inline void clear_goal_count();
  static const int kGoalCountFieldNumber = 10;
  inline ::google::protobuf::int32 goal_count() const;
  inline void set_goal_count(::google::protobuf::int32 value);

  // required int32 reward_id = 11;
  inline bool has_reward_id() const;
  inline void clear_reward_id();
  static const int kRewardIdFieldNumber = 11;
  inline ::google::protobuf::int32 reward_id() const;
  inline void set_reward_id(::google::protobuf::int32 value);

  // required int32 reward_count = 12;
  inline bool has_reward_count() const;
  inline void clear_reward_count();
  static const int kRewardCountFieldNumber = 12;
  inline ::google::protobuf::int32 reward_count() const;
  inline void set_reward_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdUnitySkillMission)
 private:
  inline void set_has_main_character_type();
  inline void clear_has_main_character_type();
  inline void set_has_unity_character_type();
  inline void clear_has_unity_character_type();
  inline void set_has_step();
  inline void clear_has_step();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_event_type();
  inline void clear_has_event_type();
  inline void set_has_condition1();
  inline void clear_has_condition1();
  inline void set_has_condition2();
  inline void clear_has_condition2();
  inline void set_has_condition3();
  inline void clear_has_condition3();
  inline void set_has_condition4();
  inline void clear_has_condition4();
  inline void set_has_goal_count();
  inline void clear_has_goal_count();
  inline void set_has_reward_id();
  inline void clear_has_reward_id();
  inline void set_has_reward_count();
  inline void clear_has_reward_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int main_character_type_;
  int unity_character_type_;
  ::google::protobuf::int32 step_;
  ::google::protobuf::int32 index_;
  int event_type_;
  ::google::protobuf::int32 condition1_;
  ::google::protobuf::int32 condition2_;
  ::google::protobuf::int32 condition3_;
  ::google::protobuf::int32 condition4_;
  ::google::protobuf::int32 goal_count_;
  ::google::protobuf::int32 reward_id_;
  ::google::protobuf::int32 reward_count_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdUnitySkillMission* default_instance_;
};
// -------------------------------------------------------------------

class mdUnitySkillOption : public ::google::protobuf::Message {
 public:
  mdUnitySkillOption();
  virtual ~mdUnitySkillOption();

  mdUnitySkillOption(const mdUnitySkillOption& from);

  inline mdUnitySkillOption& operator=(const mdUnitySkillOption& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdUnitySkillOption& default_instance();

  void Swap(mdUnitySkillOption* other);

  // implements Message ----------------------------------------------

  mdUnitySkillOption* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdUnitySkillOption& from);
  void MergeFrom(const mdUnitySkillOption& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .b2.protocol.commondata.Character.TYPE main_character_type = 1;
  inline bool has_main_character_type() const;
  inline void clear_main_character_type();
  static const int kMainCharacterTypeFieldNumber = 1;
  inline ::b2::protocol::commondata::Character_TYPE main_character_type() const;
  inline void set_main_character_type(::b2::protocol::commondata::Character_TYPE value);

  // required .b2.protocol.commondata.Character.TYPE unity_character_type = 2;
  inline bool has_unity_character_type() const;
  inline void clear_unity_character_type();
  static const int kUnityCharacterTypeFieldNumber = 2;
  inline ::b2::protocol::commondata::Character_TYPE unity_character_type() const;
  inline void set_unity_character_type(::b2::protocol::commondata::Character_TYPE value);

  // required int32 step = 3;
  inline bool has_step() const;
  inline void clear_step();
  static const int kStepFieldNumber = 3;
  inline ::google::protobuf::int32 step() const;
  inline void set_step(::google::protobuf::int32 value);

  // required int32 option_id = 4;
  inline bool has_option_id() const;
  inline void clear_option_id();
  static const int kOptionIdFieldNumber = 4;
  inline ::google::protobuf::int32 option_id() const;
  inline void set_option_id(::google::protobuf::int32 value);

  // required double option_value = 5;
  inline bool has_option_value() const;
  inline void clear_option_value();
  static const int kOptionValueFieldNumber = 5;
  inline double option_value() const;
  inline void set_option_value(double value);

  // required double power = 6;
  inline bool has_power() const;
  inline void clear_power();
  static const int kPowerFieldNumber = 6;
  inline double power() const;
  inline void set_power(double value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdUnitySkillOption)
 private:
  inline void set_has_main_character_type();
  inline void clear_has_main_character_type();
  inline void set_has_unity_character_type();
  inline void clear_has_unity_character_type();
  inline void set_has_step();
  inline void clear_has_step();
  inline void set_has_option_id();
  inline void clear_has_option_id();
  inline void set_has_option_value();
  inline void clear_has_option_value();
  inline void set_has_power();
  inline void clear_has_power();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int main_character_type_;
  int unity_character_type_;
  ::google::protobuf::int32 step_;
  ::google::protobuf::int32 option_id_;
  double option_value_;
  double power_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdUnitySkillOption* default_instance_;
};
// -------------------------------------------------------------------

class mdUnitySkillAwakenMission : public ::google::protobuf::Message {
 public:
  mdUnitySkillAwakenMission();
  virtual ~mdUnitySkillAwakenMission();

  mdUnitySkillAwakenMission(const mdUnitySkillAwakenMission& from);

  inline mdUnitySkillAwakenMission& operator=(const mdUnitySkillAwakenMission& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdUnitySkillAwakenMission& default_instance();

  void Swap(mdUnitySkillAwakenMission* other);

  // implements Message ----------------------------------------------

  mdUnitySkillAwakenMission* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdUnitySkillAwakenMission& from);
  void MergeFrom(const mdUnitySkillAwakenMission& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .b2.protocol.commondata.Character.TYPE character_type = 1;
  inline bool has_character_type() const;
  inline void clear_character_type();
  static const int kCharacterTypeFieldNumber = 1;
  inline ::b2::protocol::commondata::Character_TYPE character_type() const;
  inline void set_character_type(::b2::protocol::commondata::Character_TYPE value);

  // required int32 mission_id = 2;
  inline bool has_mission_id() const;
  inline void clear_mission_id();
  static const int kMissionIdFieldNumber = 2;
  inline ::google::protobuf::int32 mission_id() const;
  inline void set_mission_id(::google::protobuf::int32 value);

  // required int32 req_item_id_1 = 3;
  inline bool has_req_item_id_1() const;
  inline void clear_req_item_id_1();
  static const int kReqItemId1FieldNumber = 3;
  inline ::google::protobuf::int32 req_item_id_1() const;
  inline void set_req_item_id_1(::google::protobuf::int32 value);

  // required int32 req_item_count_1 = 4;
  inline bool has_req_item_count_1() const;
  inline void clear_req_item_count_1();
  static const int kReqItemCount1FieldNumber = 4;
  inline ::google::protobuf::int32 req_item_count_1() const;
  inline void set_req_item_count_1(::google::protobuf::int32 value);

  // required int32 req_item_id_2 = 5;
  inline bool has_req_item_id_2() const;
  inline void clear_req_item_id_2();
  static const int kReqItemId2FieldNumber = 5;
  inline ::google::protobuf::int32 req_item_id_2() const;
  inline void set_req_item_id_2(::google::protobuf::int32 value);

  // required int32 req_item_count_2 = 6;
  inline bool has_req_item_count_2() const;
  inline void clear_req_item_count_2();
  static const int kReqItemCount2FieldNumber = 6;
  inline ::google::protobuf::int32 req_item_count_2() const;
  inline void set_req_item_count_2(::google::protobuf::int32 value);

  // required int32 req_gold = 7;
  inline bool has_req_gold() const;
  inline void clear_req_gold();
  static const int kReqGoldFieldNumber = 7;
  inline ::google::protobuf::int32 req_gold() const;
  inline void set_req_gold(::google::protobuf::int32 value);

  // required int32 success_rate = 8;
  inline bool has_success_rate() const;
  inline void clear_success_rate();
  static const int kSuccessRateFieldNumber = 8;
  inline ::google::protobuf::int32 success_rate() const;
  inline void set_success_rate(::google::protobuf::int32 value);

  // required int32 success_rate_add = 9;
  inline bool has_success_rate_add() const;
  inline void clear_success_rate_add();
  static const int kSuccessRateAddFieldNumber = 9;
  inline ::google::protobuf::int32 success_rate_add() const;
  inline void set_success_rate_add(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdUnitySkillAwakenMission)
 private:
  inline void set_has_character_type();
  inline void clear_has_character_type();
  inline void set_has_mission_id();
  inline void clear_has_mission_id();
  inline void set_has_req_item_id_1();
  inline void clear_has_req_item_id_1();
  inline void set_has_req_item_count_1();
  inline void clear_has_req_item_count_1();
  inline void set_has_req_item_id_2();
  inline void clear_has_req_item_id_2();
  inline void set_has_req_item_count_2();
  inline void clear_has_req_item_count_2();
  inline void set_has_req_gold();
  inline void clear_has_req_gold();
  inline void set_has_success_rate();
  inline void clear_has_success_rate();
  inline void set_has_success_rate_add();
  inline void clear_has_success_rate_add();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int character_type_;
  ::google::protobuf::int32 mission_id_;
  ::google::protobuf::int32 req_item_id_1_;
  ::google::protobuf::int32 req_item_count_1_;
  ::google::protobuf::int32 req_item_id_2_;
  ::google::protobuf::int32 req_item_count_2_;
  ::google::protobuf::int32 req_gold_;
  ::google::protobuf::int32 success_rate_;
  ::google::protobuf::int32 success_rate_add_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdUnitySkillAwakenMission* default_instance_;
};
// -------------------------------------------------------------------

class mdRestReward : public ::google::protobuf::Message {
 public:
  mdRestReward();
  virtual ~mdRestReward();

  mdRestReward(const mdRestReward& from);

  inline mdRestReward& operator=(const mdRestReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdRestReward& default_instance();

  void Swap(mdRestReward* other);

  // implements Message ----------------------------------------------

  mdRestReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdRestReward& from);
  void MergeFrom(const mdRestReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 reward_id = 2;
  inline bool has_reward_id() const;
  inline void clear_reward_id();
  static const int kRewardIdFieldNumber = 2;
  inline ::google::protobuf::int32 reward_id() const;
  inline void set_reward_id(::google::protobuf::int32 value);

  // required float reward_count_per_point = 3;
  inline bool has_reward_count_per_point() const;
  inline void clear_reward_count_per_point();
  static const int kRewardCountPerPointFieldNumber = 3;
  inline float reward_count_per_point() const;
  inline void set_reward_count_per_point(float value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdRestReward)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_reward_id();
  inline void clear_has_reward_id();
  inline void set_has_reward_count_per_point();
  inline void clear_has_reward_count_per_point();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 reward_id_;
  float reward_count_per_point_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdRestReward* default_instance_;
};
// -------------------------------------------------------------------

class mdEventInfo : public ::google::protobuf::Message {
 public:
  mdEventInfo();
  virtual ~mdEventInfo();

  mdEventInfo(const mdEventInfo& from);

  inline mdEventInfo& operator=(const mdEventInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdEventInfo& default_instance();

  void Swap(mdEventInfo* other);

  // implements Message ----------------------------------------------

  mdEventInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdEventInfo& from);
  void MergeFrom(const mdEventInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 event_id = 1;
  inline bool has_event_id() const;
  inline void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  inline ::google::protobuf::int32 event_id() const;
  inline void set_event_id(::google::protobuf::int32 value);

  // required .b2.protocol.commondata.EventCategory event_category = 2;
  inline bool has_event_category() const;
  inline void clear_event_category();
  static const int kEventCategoryFieldNumber = 2;
  inline ::b2::protocol::commondata::EventCategory event_category() const;
  inline void set_event_category(::b2::protocol::commondata::EventCategory value);

  // required string event_tab_name = 3;
  inline bool has_event_tab_name() const;
  inline void clear_event_tab_name();
  static const int kEventTabNameFieldNumber = 3;
  inline const ::std::string& event_tab_name() const;
  inline void set_event_tab_name(const ::std::string& value);
  inline void set_event_tab_name(const char* value);
  inline void set_event_tab_name(const char* value, size_t size);
  inline ::std::string* mutable_event_tab_name();
  inline ::std::string* release_event_tab_name();
  inline void set_allocated_event_tab_name(::std::string* event_tab_name);

  // required string title = 4;
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 4;
  inline const ::std::string& title() const;
  inline void set_title(const ::std::string& value);
  inline void set_title(const char* value);
  inline void set_title(const char* value, size_t size);
  inline ::std::string* mutable_title();
  inline ::std::string* release_title();
  inline void set_allocated_title(::std::string* title);

  // required int64 start_time = 5;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 5;
  inline ::google::protobuf::int64 start_time() const;
  inline void set_start_time(::google::protobuf::int64 value);

  // required int64 end_time = 6;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 6;
  inline ::google::protobuf::int64 end_time() const;
  inline void set_end_time(::google::protobuf::int64 value);

  // required string explain = 7;
  inline bool has_explain() const;
  inline void clear_explain();
  static const int kExplainFieldNumber = 7;
  inline const ::std::string& explain() const;
  inline void set_explain(const ::std::string& value);
  inline void set_explain(const char* value);
  inline void set_explain(const char* value, size_t size);
  inline ::std::string* mutable_explain();
  inline ::std::string* release_explain();
  inline void set_allocated_explain(::std::string* explain);

  // required string banner_url = 8;
  inline bool has_banner_url() const;
  inline void clear_banner_url();
  static const int kBannerUrlFieldNumber = 8;
  inline const ::std::string& banner_url() const;
  inline void set_banner_url(const ::std::string& value);
  inline void set_banner_url(const char* value);
  inline void set_banner_url(const char* value, size_t size);
  inline ::std::string* mutable_banner_url();
  inline ::std::string* release_banner_url();
  inline void set_allocated_banner_url(::std::string* banner_url);

  // required string link_text = 9;
  inline bool has_link_text() const;
  inline void clear_link_text();
  static const int kLinkTextFieldNumber = 9;
  inline const ::std::string& link_text() const;
  inline void set_link_text(const ::std::string& value);
  inline void set_link_text(const char* value);
  inline void set_link_text(const char* value, size_t size);
  inline ::std::string* mutable_link_text();
  inline ::std::string* release_link_text();
  inline void set_allocated_link_text(::std::string* link_text);

  // required string link_url = 10;
  inline bool has_link_url() const;
  inline void clear_link_url();
  static const int kLinkUrlFieldNumber = 10;
  inline const ::std::string& link_url() const;
  inline void set_link_url(const ::std::string& value);
  inline void set_link_url(const char* value);
  inline void set_link_url(const char* value, size_t size);
  inline ::std::string* mutable_link_url();
  inline ::std::string* release_link_url();
  inline void set_allocated_link_url(::std::string* link_url);

  // required int32 tab_order = 11;
  inline bool has_tab_order() const;
  inline void clear_tab_order();
  static const int kTabOrderFieldNumber = 11;
  inline ::google::protobuf::int32 tab_order() const;
  inline void set_tab_order(::google::protobuf::int32 value);

  // required int32 event_sub_category = 12;
  inline bool has_event_sub_category() const;
  inline void clear_event_sub_category();
  static const int kEventSubCategoryFieldNumber = 12;
  inline ::google::protobuf::int32 event_sub_category() const;
  inline void set_event_sub_category(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdEventInfo)
 private:
  inline void set_has_event_id();
  inline void clear_has_event_id();
  inline void set_has_event_category();
  inline void clear_has_event_category();
  inline void set_has_event_tab_name();
  inline void clear_has_event_tab_name();
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_start_time();
  inline void clear_has_start_time();
  inline void set_has_end_time();
  inline void clear_has_end_time();
  inline void set_has_explain();
  inline void clear_has_explain();
  inline void set_has_banner_url();
  inline void clear_has_banner_url();
  inline void set_has_link_text();
  inline void clear_has_link_text();
  inline void set_has_link_url();
  inline void clear_has_link_url();
  inline void set_has_tab_order();
  inline void clear_has_tab_order();
  inline void set_has_event_sub_category();
  inline void clear_has_event_sub_category();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 event_id_;
  int event_category_;
  ::std::string* event_tab_name_;
  ::std::string* title_;
  ::google::protobuf::int64 start_time_;
  ::google::protobuf::int64 end_time_;
  ::std::string* explain_;
  ::std::string* banner_url_;
  ::std::string* link_text_;
  ::std::string* link_url_;
  ::google::protobuf::int32 tab_order_;
  ::google::protobuf::int32 event_sub_category_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdEventInfo* default_instance_;
};
// -------------------------------------------------------------------

class mdPointEvent : public ::google::protobuf::Message {
 public:
  mdPointEvent();
  virtual ~mdPointEvent();

  mdPointEvent(const mdPointEvent& from);

  inline mdPointEvent& operator=(const mdPointEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdPointEvent& default_instance();

  void Swap(mdPointEvent* other);

  // implements Message ----------------------------------------------

  mdPointEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdPointEvent& from);
  void MergeFrom(const mdPointEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 event_id = 1;
  inline bool has_event_id() const;
  inline void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  inline ::google::protobuf::int32 event_id() const;
  inline void set_event_id(::google::protobuf::int32 value);

  // required int32 event_type = 2;
  inline bool has_event_type() const;
  inline void clear_event_type();
  static const int kEventTypeFieldNumber = 2;
  inline ::google::protobuf::int32 event_type() const;
  inline void set_event_type(::google::protobuf::int32 value);

  // required int32 point = 3;
  inline bool has_point() const;
  inline void clear_point();
  static const int kPointFieldNumber = 3;
  inline ::google::protobuf::int32 point() const;
  inline void set_point(::google::protobuf::int32 value);

  // required int32 index = 4;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 4;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // required int32 condition1 = 5;
  inline bool has_condition1() const;
  inline void clear_condition1();
  static const int kCondition1FieldNumber = 5;
  inline ::google::protobuf::int32 condition1() const;
  inline void set_condition1(::google::protobuf::int32 value);

  // required int32 condition2 = 6;
  inline bool has_condition2() const;
  inline void clear_condition2();
  static const int kCondition2FieldNumber = 6;
  inline ::google::protobuf::int32 condition2() const;
  inline void set_condition2(::google::protobuf::int32 value);

  // required int32 condition3 = 7;
  inline bool has_condition3() const;
  inline void clear_condition3();
  static const int kCondition3FieldNumber = 7;
  inline ::google::protobuf::int32 condition3() const;
  inline void set_condition3(::google::protobuf::int32 value);

  // required int32 condition4 = 8;
  inline bool has_condition4() const;
  inline void clear_condition4();
  static const int kCondition4FieldNumber = 8;
  inline ::google::protobuf::int32 condition4() const;
  inline void set_condition4(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdPointEvent)
 private:
  inline void set_has_event_id();
  inline void clear_has_event_id();
  inline void set_has_event_type();
  inline void clear_has_event_type();
  inline void set_has_point();
  inline void clear_has_point();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_condition1();
  inline void clear_has_condition1();
  inline void set_has_condition2();
  inline void clear_has_condition2();
  inline void set_has_condition3();
  inline void clear_has_condition3();
  inline void set_has_condition4();
  inline void clear_has_condition4();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 event_id_;
  ::google::protobuf::int32 event_type_;
  ::google::protobuf::int32 point_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 condition1_;
  ::google::protobuf::int32 condition2_;
  ::google::protobuf::int32 condition3_;
  ::google::protobuf::int32 condition4_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdPointEvent* default_instance_;
};
// -------------------------------------------------------------------

class mdPointEventReward : public ::google::protobuf::Message {
 public:
  mdPointEventReward();
  virtual ~mdPointEventReward();

  mdPointEventReward(const mdPointEventReward& from);

  inline mdPointEventReward& operator=(const mdPointEventReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdPointEventReward& default_instance();

  void Swap(mdPointEventReward* other);

  // implements Message ----------------------------------------------

  mdPointEventReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdPointEventReward& from);
  void MergeFrom(const mdPointEventReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 event_id = 1;
  inline bool has_event_id() const;
  inline void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  inline ::google::protobuf::int32 event_id() const;
  inline void set_event_id(::google::protobuf::int32 value);

  // required int32 index = 2;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 2;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // required int32 reward_id = 3;
  inline bool has_reward_id() const;
  inline void clear_reward_id();
  static const int kRewardIdFieldNumber = 3;
  inline ::google::protobuf::int32 reward_id() const;
  inline void set_reward_id(::google::protobuf::int32 value);

  // required int32 reward_count = 4;
  inline bool has_reward_count() const;
  inline void clear_reward_count();
  static const int kRewardCountFieldNumber = 4;
  inline ::google::protobuf::int32 reward_count() const;
  inline void set_reward_count(::google::protobuf::int32 value);

  // required int32 need_point = 5;
  inline bool has_need_point() const;
  inline void clear_need_point();
  static const int kNeedPointFieldNumber = 5;
  inline ::google::protobuf::int32 need_point() const;
  inline void set_need_point(::google::protobuf::int32 value);

  // required int32 tab_group_id = 6;
  inline bool has_tab_group_id() const;
  inline void clear_tab_group_id();
  static const int kTabGroupIdFieldNumber = 6;
  inline ::google::protobuf::int32 tab_group_id() const;
  inline void set_tab_group_id(::google::protobuf::int32 value);

  // required int32 buy_limit_count = 7;
  inline bool has_buy_limit_count() const;
  inline void clear_buy_limit_count();
  static const int kBuyLimitCountFieldNumber = 7;
  inline ::google::protobuf::int32 buy_limit_count() const;
  inline void set_buy_limit_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdPointEventReward)
 private:
  inline void set_has_event_id();
  inline void clear_has_event_id();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_reward_id();
  inline void clear_has_reward_id();
  inline void set_has_reward_count();
  inline void clear_has_reward_count();
  inline void set_has_need_point();
  inline void clear_has_need_point();
  inline void set_has_tab_group_id();
  inline void clear_has_tab_group_id();
  inline void set_has_buy_limit_count();
  inline void clear_has_buy_limit_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 event_id_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 reward_id_;
  ::google::protobuf::int32 reward_count_;
  ::google::protobuf::int32 need_point_;
  ::google::protobuf::int32 tab_group_id_;
  ::google::protobuf::int32 buy_limit_count_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdPointEventReward* default_instance_;
};
// -------------------------------------------------------------------

class mdGemPurchaseEventReward : public ::google::protobuf::Message {
 public:
  mdGemPurchaseEventReward();
  virtual ~mdGemPurchaseEventReward();

  mdGemPurchaseEventReward(const mdGemPurchaseEventReward& from);

  inline mdGemPurchaseEventReward& operator=(const mdGemPurchaseEventReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdGemPurchaseEventReward& default_instance();

  void Swap(mdGemPurchaseEventReward* other);

  // implements Message ----------------------------------------------

  mdGemPurchaseEventReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdGemPurchaseEventReward& from);
  void MergeFrom(const mdGemPurchaseEventReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 event_id = 1;
  inline bool has_event_id() const;
  inline void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  inline ::google::protobuf::int32 event_id() const;
  inline void set_event_id(::google::protobuf::int32 value);

  // required int32 index = 2;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 2;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // required int32 goal_count = 3;
  inline bool has_goal_count() const;
  inline void clear_goal_count();
  static const int kGoalCountFieldNumber = 3;
  inline ::google::protobuf::int32 goal_count() const;
  inline void set_goal_count(::google::protobuf::int32 value);

  // required int32 reward_id1 = 4;
  inline bool has_reward_id1() const;
  inline void clear_reward_id1();
  static const int kRewardId1FieldNumber = 4;
  inline ::google::protobuf::int32 reward_id1() const;
  inline void set_reward_id1(::google::protobuf::int32 value);

  // required int32 reward_count1 = 5;
  inline bool has_reward_count1() const;
  inline void clear_reward_count1();
  static const int kRewardCount1FieldNumber = 5;
  inline ::google::protobuf::int32 reward_count1() const;
  inline void set_reward_count1(::google::protobuf::int32 value);

  // required int32 reward_id2 = 6;
  inline bool has_reward_id2() const;
  inline void clear_reward_id2();
  static const int kRewardId2FieldNumber = 6;
  inline ::google::protobuf::int32 reward_id2() const;
  inline void set_reward_id2(::google::protobuf::int32 value);

  // required int32 reward_count2 = 7;
  inline bool has_reward_count2() const;
  inline void clear_reward_count2();
  static const int kRewardCount2FieldNumber = 7;
  inline ::google::protobuf::int32 reward_count2() const;
  inline void set_reward_count2(::google::protobuf::int32 value);

  // required int32 reward_id3 = 8;
  inline bool has_reward_id3() const;
  inline void clear_reward_id3();
  static const int kRewardId3FieldNumber = 8;
  inline ::google::protobuf::int32 reward_id3() const;
  inline void set_reward_id3(::google::protobuf::int32 value);

  // required int32 reward_count3 = 9;
  inline bool has_reward_count3() const;
  inline void clear_reward_count3();
  static const int kRewardCount3FieldNumber = 9;
  inline ::google::protobuf::int32 reward_count3() const;
  inline void set_reward_count3(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdGemPurchaseEventReward)
 private:
  inline void set_has_event_id();
  inline void clear_has_event_id();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_goal_count();
  inline void clear_has_goal_count();
  inline void set_has_reward_id1();
  inline void clear_has_reward_id1();
  inline void set_has_reward_count1();
  inline void clear_has_reward_count1();
  inline void set_has_reward_id2();
  inline void clear_has_reward_id2();
  inline void set_has_reward_count2();
  inline void clear_has_reward_count2();
  inline void set_has_reward_id3();
  inline void clear_has_reward_id3();
  inline void set_has_reward_count3();
  inline void clear_has_reward_count3();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 event_id_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 goal_count_;
  ::google::protobuf::int32 reward_id1_;
  ::google::protobuf::int32 reward_count1_;
  ::google::protobuf::int32 reward_id2_;
  ::google::protobuf::int32 reward_count2_;
  ::google::protobuf::int32 reward_id3_;
  ::google::protobuf::int32 reward_count3_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdGemPurchaseEventReward* default_instance_;
};
// -------------------------------------------------------------------

class mdLevelUpEvent : public ::google::protobuf::Message {
 public:
  mdLevelUpEvent();
  virtual ~mdLevelUpEvent();

  mdLevelUpEvent(const mdLevelUpEvent& from);

  inline mdLevelUpEvent& operator=(const mdLevelUpEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdLevelUpEvent& default_instance();

  void Swap(mdLevelUpEvent* other);

  // implements Message ----------------------------------------------

  mdLevelUpEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdLevelUpEvent& from);
  void MergeFrom(const mdLevelUpEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 event_id = 1;
  inline bool has_event_id() const;
  inline void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  inline ::google::protobuf::int32 event_id() const;
  inline void set_event_id(::google::protobuf::int32 value);

  // required int32 index = 2;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 2;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // required int32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // required int32 reward_id = 4;
  inline bool has_reward_id() const;
  inline void clear_reward_id();
  static const int kRewardIdFieldNumber = 4;
  inline ::google::protobuf::int32 reward_id() const;
  inline void set_reward_id(::google::protobuf::int32 value);

  // required int32 reward_count = 5;
  inline bool has_reward_count() const;
  inline void clear_reward_count();
  static const int kRewardCountFieldNumber = 5;
  inline ::google::protobuf::int32 reward_count() const;
  inline void set_reward_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdLevelUpEvent)
 private:
  inline void set_has_event_id();
  inline void clear_has_event_id();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_reward_id();
  inline void clear_has_reward_id();
  inline void set_has_reward_count();
  inline void clear_has_reward_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 event_id_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 reward_id_;
  ::google::protobuf::int32 reward_count_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdLevelUpEvent* default_instance_;
};
// -------------------------------------------------------------------

class mdHotTimeEvent : public ::google::protobuf::Message {
 public:
  mdHotTimeEvent();
  virtual ~mdHotTimeEvent();

  mdHotTimeEvent(const mdHotTimeEvent& from);

  inline mdHotTimeEvent& operator=(const mdHotTimeEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdHotTimeEvent& default_instance();

  void Swap(mdHotTimeEvent* other);

  // implements Message ----------------------------------------------

  mdHotTimeEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdHotTimeEvent& from);
  void MergeFrom(const mdHotTimeEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 event_id = 1;
  inline bool has_event_id() const;
  inline void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  inline ::google::protobuf::int32 event_id() const;
  inline void set_event_id(::google::protobuf::int32 value);

  // required int32 day_of_week = 2;
  inline bool has_day_of_week() const;
  inline void clear_day_of_week();
  static const int kDayOfWeekFieldNumber = 2;
  inline ::google::protobuf::int32 day_of_week() const;
  inline void set_day_of_week(::google::protobuf::int32 value);

  // required int32 index = 3;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 3;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // required .b2.protocol.commondata.HotTimeBuffType buff_type = 4;
  inline bool has_buff_type() const;
  inline void clear_buff_type();
  static const int kBuffTypeFieldNumber = 4;
  inline ::b2::protocol::commondata::HotTimeBuffType buff_type() const;
  inline void set_buff_type(::b2::protocol::commondata::HotTimeBuffType value);

  // required int32 begin_hour = 5;
  inline bool has_begin_hour() const;
  inline void clear_begin_hour();
  static const int kBeginHourFieldNumber = 5;
  inline ::google::protobuf::int32 begin_hour() const;
  inline void set_begin_hour(::google::protobuf::int32 value);

  // required int32 begin_min = 6;
  inline bool has_begin_min() const;
  inline void clear_begin_min();
  static const int kBeginMinFieldNumber = 6;
  inline ::google::protobuf::int32 begin_min() const;
  inline void set_begin_min(::google::protobuf::int32 value);

  // required int32 end_hour = 7;
  inline bool has_end_hour() const;
  inline void clear_end_hour();
  static const int kEndHourFieldNumber = 7;
  inline ::google::protobuf::int32 end_hour() const;
  inline void set_end_hour(::google::protobuf::int32 value);

  // required int32 end_min = 8;
  inline bool has_end_min() const;
  inline void clear_end_min();
  static const int kEndMinFieldNumber = 8;
  inline ::google::protobuf::int32 end_min() const;
  inline void set_end_min(::google::protobuf::int32 value);

  // required int32 increase_rate = 9;
  inline bool has_increase_rate() const;
  inline void clear_increase_rate();
  static const int kIncreaseRateFieldNumber = 9;
  inline ::google::protobuf::int32 increase_rate() const;
  inline void set_increase_rate(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdHotTimeEvent)
 private:
  inline void set_has_event_id();
  inline void clear_has_event_id();
  inline void set_has_day_of_week();
  inline void clear_has_day_of_week();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_buff_type();
  inline void clear_has_buff_type();
  inline void set_has_begin_hour();
  inline void clear_has_begin_hour();
  inline void set_has_begin_min();
  inline void clear_has_begin_min();
  inline void set_has_end_hour();
  inline void clear_has_end_hour();
  inline void set_has_end_min();
  inline void clear_has_end_min();
  inline void set_has_increase_rate();
  inline void clear_has_increase_rate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 event_id_;
  ::google::protobuf::int32 day_of_week_;
  ::google::protobuf::int32 index_;
  int buff_type_;
  ::google::protobuf::int32 begin_hour_;
  ::google::protobuf::int32 begin_min_;
  ::google::protobuf::int32 end_hour_;
  ::google::protobuf::int32 end_min_;
  ::google::protobuf::int32 increase_rate_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdHotTimeEvent* default_instance_;
};
// -------------------------------------------------------------------

class mdSeasonMissionEvent : public ::google::protobuf::Message {
 public:
  mdSeasonMissionEvent();
  virtual ~mdSeasonMissionEvent();

  mdSeasonMissionEvent(const mdSeasonMissionEvent& from);

  inline mdSeasonMissionEvent& operator=(const mdSeasonMissionEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdSeasonMissionEvent& default_instance();

  void Swap(mdSeasonMissionEvent* other);

  // implements Message ----------------------------------------------

  mdSeasonMissionEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdSeasonMissionEvent& from);
  void MergeFrom(const mdSeasonMissionEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 event_id = 1;
  inline bool has_event_id() const;
  inline void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  inline ::google::protobuf::int32 event_id() const;
  inline void set_event_id(::google::protobuf::int32 value);

  // required int32 day = 2;
  inline bool has_day() const;
  inline void clear_day();
  static const int kDayFieldNumber = 2;
  inline ::google::protobuf::int32 day() const;
  inline void set_day(::google::protobuf::int32 value);

  // required int32 index = 3;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 3;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // required int32 event_type = 4;
  inline bool has_event_type() const;
  inline void clear_event_type();
  static const int kEventTypeFieldNumber = 4;
  inline ::google::protobuf::int32 event_type() const;
  inline void set_event_type(::google::protobuf::int32 value);

  // required int32 condition1 = 5;
  inline bool has_condition1() const;
  inline void clear_condition1();
  static const int kCondition1FieldNumber = 5;
  inline ::google::protobuf::int32 condition1() const;
  inline void set_condition1(::google::protobuf::int32 value);

  // required int32 condition2 = 6;
  inline bool has_condition2() const;
  inline void clear_condition2();
  static const int kCondition2FieldNumber = 6;
  inline ::google::protobuf::int32 condition2() const;
  inline void set_condition2(::google::protobuf::int32 value);

  // required int32 condition3 = 7;
  inline bool has_condition3() const;
  inline void clear_condition3();
  static const int kCondition3FieldNumber = 7;
  inline ::google::protobuf::int32 condition3() const;
  inline void set_condition3(::google::protobuf::int32 value);

  // required int32 condition4 = 8;
  inline bool has_condition4() const;
  inline void clear_condition4();
  static const int kCondition4FieldNumber = 8;
  inline ::google::protobuf::int32 condition4() const;
  inline void set_condition4(::google::protobuf::int32 value);

  // required int32 goalCount = 9;
  inline bool has_goalcount() const;
  inline void clear_goalcount();
  static const int kGoalCountFieldNumber = 9;
  inline ::google::protobuf::int32 goalcount() const;
  inline void set_goalcount(::google::protobuf::int32 value);

  // required int32 reward_id = 10;
  inline bool has_reward_id() const;
  inline void clear_reward_id();
  static const int kRewardIdFieldNumber = 10;
  inline ::google::protobuf::int32 reward_id() const;
  inline void set_reward_id(::google::protobuf::int32 value);

  // required int32 reward_count = 11;
  inline bool has_reward_count() const;
  inline void clear_reward_count();
  static const int kRewardCountFieldNumber = 11;
  inline ::google::protobuf::int32 reward_count() const;
  inline void set_reward_count(::google::protobuf::int32 value);

  // required int32 tutorial_id = 12;
  inline bool has_tutorial_id() const;
  inline void clear_tutorial_id();
  static const int kTutorialIdFieldNumber = 12;
  inline ::google::protobuf::int32 tutorial_id() const;
  inline void set_tutorial_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdSeasonMissionEvent)
 private:
  inline void set_has_event_id();
  inline void clear_has_event_id();
  inline void set_has_day();
  inline void clear_has_day();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_event_type();
  inline void clear_has_event_type();
  inline void set_has_condition1();
  inline void clear_has_condition1();
  inline void set_has_condition2();
  inline void clear_has_condition2();
  inline void set_has_condition3();
  inline void clear_has_condition3();
  inline void set_has_condition4();
  inline void clear_has_condition4();
  inline void set_has_goalcount();
  inline void clear_has_goalcount();
  inline void set_has_reward_id();
  inline void clear_has_reward_id();
  inline void set_has_reward_count();
  inline void clear_has_reward_count();
  inline void set_has_tutorial_id();
  inline void clear_has_tutorial_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 event_id_;
  ::google::protobuf::int32 day_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 event_type_;
  ::google::protobuf::int32 condition1_;
  ::google::protobuf::int32 condition2_;
  ::google::protobuf::int32 condition3_;
  ::google::protobuf::int32 condition4_;
  ::google::protobuf::int32 goalcount_;
  ::google::protobuf::int32 reward_id_;
  ::google::protobuf::int32 reward_count_;
  ::google::protobuf::int32 tutorial_id_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdSeasonMissionEvent* default_instance_;
};
// -------------------------------------------------------------------

class mdStageClearEvent : public ::google::protobuf::Message {
 public:
  mdStageClearEvent();
  virtual ~mdStageClearEvent();

  mdStageClearEvent(const mdStageClearEvent& from);

  inline mdStageClearEvent& operator=(const mdStageClearEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdStageClearEvent& default_instance();

  void Swap(mdStageClearEvent* other);

  // implements Message ----------------------------------------------

  mdStageClearEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdStageClearEvent& from);
  void MergeFrom(const mdStageClearEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 event_id = 1;
  inline bool has_event_id() const;
  inline void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  inline ::google::protobuf::int32 event_id() const;
  inline void set_event_id(::google::protobuf::int32 value);

  // required int32 index = 2;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 2;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // required int32 stage = 3;
  inline bool has_stage() const;
  inline void clear_stage();
  static const int kStageFieldNumber = 3;
  inline ::google::protobuf::int32 stage() const;
  inline void set_stage(::google::protobuf::int32 value);

  // required int32 reward_id = 4;
  inline bool has_reward_id() const;
  inline void clear_reward_id();
  static const int kRewardIdFieldNumber = 4;
  inline ::google::protobuf::int32 reward_id() const;
  inline void set_reward_id(::google::protobuf::int32 value);

  // required int32 reward_count = 5;
  inline bool has_reward_count() const;
  inline void clear_reward_count();
  static const int kRewardCountFieldNumber = 5;
  inline ::google::protobuf::int32 reward_count() const;
  inline void set_reward_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdStageClearEvent)
 private:
  inline void set_has_event_id();
  inline void clear_has_event_id();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_stage();
  inline void clear_has_stage();
  inline void set_has_reward_id();
  inline void clear_has_reward_id();
  inline void set_has_reward_count();
  inline void clear_has_reward_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 event_id_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 stage_;
  ::google::protobuf::int32 reward_id_;
  ::google::protobuf::int32 reward_count_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdStageClearEvent* default_instance_;
};
// -------------------------------------------------------------------

class mdKakaoFriendInviteReward : public ::google::protobuf::Message {
 public:
  mdKakaoFriendInviteReward();
  virtual ~mdKakaoFriendInviteReward();

  mdKakaoFriendInviteReward(const mdKakaoFriendInviteReward& from);

  inline mdKakaoFriendInviteReward& operator=(const mdKakaoFriendInviteReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdKakaoFriendInviteReward& default_instance();

  void Swap(mdKakaoFriendInviteReward* other);

  // implements Message ----------------------------------------------

  mdKakaoFriendInviteReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdKakaoFriendInviteReward& from);
  void MergeFrom(const mdKakaoFriendInviteReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .b2.protocol.commondata.FriendInviteRewardType invite_reward_type = 1;
  inline bool has_invite_reward_type() const;
  inline void clear_invite_reward_type();
  static const int kInviteRewardTypeFieldNumber = 1;
  inline ::b2::protocol::commondata::FriendInviteRewardType invite_reward_type() const;
  inline void set_invite_reward_type(::b2::protocol::commondata::FriendInviteRewardType value);

  // required int32 reward_index = 2;
  inline bool has_reward_index() const;
  inline void clear_reward_index();
  static const int kRewardIndexFieldNumber = 2;
  inline ::google::protobuf::int32 reward_index() const;
  inline void set_reward_index(::google::protobuf::int32 value);

  // required int32 goal_count = 3;
  inline bool has_goal_count() const;
  inline void clear_goal_count();
  static const int kGoalCountFieldNumber = 3;
  inline ::google::protobuf::int32 goal_count() const;
  inline void set_goal_count(::google::protobuf::int32 value);

  // required int32 reward_id = 4;
  inline bool has_reward_id() const;
  inline void clear_reward_id();
  static const int kRewardIdFieldNumber = 4;
  inline ::google::protobuf::int32 reward_id() const;
  inline void set_reward_id(::google::protobuf::int32 value);

  // required int32 reward_count = 5;
  inline bool has_reward_count() const;
  inline void clear_reward_count();
  static const int kRewardCountFieldNumber = 5;
  inline ::google::protobuf::int32 reward_count() const;
  inline void set_reward_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdKakaoFriendInviteReward)
 private:
  inline void set_has_invite_reward_type();
  inline void clear_has_invite_reward_type();
  inline void set_has_reward_index();
  inline void clear_has_reward_index();
  inline void set_has_goal_count();
  inline void clear_has_goal_count();
  inline void set_has_reward_id();
  inline void clear_has_reward_id();
  inline void set_has_reward_count();
  inline void clear_has_reward_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int invite_reward_type_;
  ::google::protobuf::int32 reward_index_;
  ::google::protobuf::int32 goal_count_;
  ::google::protobuf::int32 reward_id_;
  ::google::protobuf::int32 reward_count_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdKakaoFriendInviteReward* default_instance_;
};
// -------------------------------------------------------------------

class mdHotTimeProduct : public ::google::protobuf::Message {
 public:
  mdHotTimeProduct();
  virtual ~mdHotTimeProduct();

  mdHotTimeProduct(const mdHotTimeProduct& from);

  inline mdHotTimeProduct& operator=(const mdHotTimeProduct& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdHotTimeProduct& default_instance();

  void Swap(mdHotTimeProduct* other);

  // implements Message ----------------------------------------------

  mdHotTimeProduct* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdHotTimeProduct& from);
  void MergeFrom(const mdHotTimeProduct& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 buff_type = 1;
  inline bool has_buff_type() const;
  inline void clear_buff_type();
  static const int kBuffTypeFieldNumber = 1;
  inline ::google::protobuf::int32 buff_type() const;
  inline void set_buff_type(::google::protobuf::int32 value);

  // required int32 period_hour = 2;
  inline bool has_period_hour() const;
  inline void clear_period_hour();
  static const int kPeriodHourFieldNumber = 2;
  inline ::google::protobuf::int32 period_hour() const;
  inline void set_period_hour(::google::protobuf::int32 value);

  // required int32 price = 3;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 3;
  inline ::google::protobuf::int32 price() const;
  inline void set_price(::google::protobuf::int32 value);

  // required int32 increase_rate = 4;
  inline bool has_increase_rate() const;
  inline void clear_increase_rate();
  static const int kIncreaseRateFieldNumber = 4;
  inline ::google::protobuf::int32 increase_rate() const;
  inline void set_increase_rate(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdHotTimeProduct)
 private:
  inline void set_has_buff_type();
  inline void clear_has_buff_type();
  inline void set_has_period_hour();
  inline void clear_has_period_hour();
  inline void set_has_price();
  inline void clear_has_price();
  inline void set_has_increase_rate();
  inline void clear_has_increase_rate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 buff_type_;
  ::google::protobuf::int32 period_hour_;
  ::google::protobuf::int32 price_;
  ::google::protobuf::int32 increase_rate_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdHotTimeProduct* default_instance_;
};
// -------------------------------------------------------------------

class mdMagicShopProduct : public ::google::protobuf::Message {
 public:
  mdMagicShopProduct();
  virtual ~mdMagicShopProduct();

  mdMagicShopProduct(const mdMagicShopProduct& from);

  inline mdMagicShopProduct& operator=(const mdMagicShopProduct& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdMagicShopProduct& default_instance();

  void Swap(mdMagicShopProduct* other);

  // implements Message ----------------------------------------------

  mdMagicShopProduct* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdMagicShopProduct& from);
  void MergeFrom(const mdMagicShopProduct& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 magic_shop_group_type = 2;
  inline bool has_magic_shop_group_type() const;
  inline void clear_magic_shop_group_type();
  static const int kMagicShopGroupTypeFieldNumber = 2;
  inline ::google::protobuf::int32 magic_shop_group_type() const;
  inline void set_magic_shop_group_type(::google::protobuf::int32 value);

  // required int32 product_type = 3;
  inline bool has_product_type() const;
  inline void clear_product_type();
  static const int kProductTypeFieldNumber = 3;
  inline ::google::protobuf::int32 product_type() const;
  inline void set_product_type(::google::protobuf::int32 value);

  // required int32 product_detail = 4;
  inline bool has_product_detail() const;
  inline void clear_product_detail();
  static const int kProductDetailFieldNumber = 4;
  inline ::google::protobuf::int32 product_detail() const;
  inline void set_product_detail(::google::protobuf::int32 value);

  // required int32 product_count = 5;
  inline bool has_product_count() const;
  inline void clear_product_count();
  static const int kProductCountFieldNumber = 5;
  inline ::google::protobuf::int32 product_count() const;
  inline void set_product_count(::google::protobuf::int32 value);

  // required int32 price_type = 6;
  inline bool has_price_type() const;
  inline void clear_price_type();
  static const int kPriceTypeFieldNumber = 6;
  inline ::google::protobuf::int32 price_type() const;
  inline void set_price_type(::google::protobuf::int32 value);

  // required int32 price = 7;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 7;
  inline ::google::protobuf::int32 price() const;
  inline void set_price(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdMagicShopProduct)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_magic_shop_group_type();
  inline void clear_has_magic_shop_group_type();
  inline void set_has_product_type();
  inline void clear_has_product_type();
  inline void set_has_product_detail();
  inline void clear_has_product_detail();
  inline void set_has_product_count();
  inline void clear_has_product_count();
  inline void set_has_price_type();
  inline void clear_has_price_type();
  inline void set_has_price();
  inline void clear_has_price();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 magic_shop_group_type_;
  ::google::protobuf::int32 product_type_;
  ::google::protobuf::int32 product_detail_;
  ::google::protobuf::int32 product_count_;
  ::google::protobuf::int32 price_type_;
  ::google::protobuf::int32 price_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdMagicShopProduct* default_instance_;
};
// -------------------------------------------------------------------

class mdMagicShopRenewalCost : public ::google::protobuf::Message {
 public:
  mdMagicShopRenewalCost();
  virtual ~mdMagicShopRenewalCost();

  mdMagicShopRenewalCost(const mdMagicShopRenewalCost& from);

  inline mdMagicShopRenewalCost& operator=(const mdMagicShopRenewalCost& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdMagicShopRenewalCost& default_instance();

  void Swap(mdMagicShopRenewalCost* other);

  // implements Message ----------------------------------------------

  mdMagicShopRenewalCost* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdMagicShopRenewalCost& from);
  void MergeFrom(const mdMagicShopRenewalCost& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 renewal_count = 1;
  inline bool has_renewal_count() const;
  inline void clear_renewal_count();
  static const int kRenewalCountFieldNumber = 1;
  inline ::google::protobuf::int32 renewal_count() const;
  inline void set_renewal_count(::google::protobuf::int32 value);

  // required int32 gem_cost = 2;
  inline bool has_gem_cost() const;
  inline void clear_gem_cost();
  static const int kGemCostFieldNumber = 2;
  inline ::google::protobuf::int32 gem_cost() const;
  inline void set_gem_cost(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdMagicShopRenewalCost)
 private:
  inline void set_has_renewal_count();
  inline void clear_has_renewal_count();
  inline void set_has_gem_cost();
  inline void clear_has_gem_cost();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 renewal_count_;
  ::google::protobuf::int32 gem_cost_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdMagicShopRenewalCost* default_instance_;
};
// -------------------------------------------------------------------

class mdDuelModeSettleSchedule : public ::google::protobuf::Message {
 public:
  mdDuelModeSettleSchedule();
  virtual ~mdDuelModeSettleSchedule();

  mdDuelModeSettleSchedule(const mdDuelModeSettleSchedule& from);

  inline mdDuelModeSettleSchedule& operator=(const mdDuelModeSettleSchedule& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdDuelModeSettleSchedule& default_instance();

  void Swap(mdDuelModeSettleSchedule* other);

  // implements Message ----------------------------------------------

  mdDuelModeSettleSchedule* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdDuelModeSettleSchedule& from);
  void MergeFrom(const mdDuelModeSettleSchedule& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .b2.protocol.commondata.ContentsMode mode_type = 1;
  inline bool has_mode_type() const;
  inline void clear_mode_type();
  static const int kModeTypeFieldNumber = 1;
  inline ::b2::protocol::commondata::ContentsMode mode_type() const;
  inline void set_mode_type(::b2::protocol::commondata::ContentsMode value);

  // required .b2.protocol.commondata.ContentsModeState ranking_settle_state = 2;
  inline bool has_ranking_settle_state() const;
  inline void clear_ranking_settle_state();
  static const int kRankingSettleStateFieldNumber = 2;
  inline ::b2::protocol::commondata::ContentsModeState ranking_settle_state() const;
  inline void set_ranking_settle_state(::b2::protocol::commondata::ContentsModeState value);

  // required .b2.protocol.commondata.DayOfWeek day = 3;
  inline bool has_day() const;
  inline void clear_day();
  static const int kDayFieldNumber = 3;
  inline ::b2::protocol::commondata::DayOfWeek day() const;
  inline void set_day(::b2::protocol::commondata::DayOfWeek value);

  // required int32 end_hour = 4;
  inline bool has_end_hour() const;
  inline void clear_end_hour();
  static const int kEndHourFieldNumber = 4;
  inline ::google::protobuf::int32 end_hour() const;
  inline void set_end_hour(::google::protobuf::int32 value);

  // required int32 end_min = 5;
  inline bool has_end_min() const;
  inline void clear_end_min();
  static const int kEndMinFieldNumber = 5;
  inline ::google::protobuf::int32 end_min() const;
  inline void set_end_min(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdDuelModeSettleSchedule)
 private:
  inline void set_has_mode_type();
  inline void clear_has_mode_type();
  inline void set_has_ranking_settle_state();
  inline void clear_has_ranking_settle_state();
  inline void set_has_day();
  inline void clear_has_day();
  inline void set_has_end_hour();
  inline void clear_has_end_hour();
  inline void set_has_end_min();
  inline void clear_has_end_min();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int mode_type_;
  int ranking_settle_state_;
  int day_;
  ::google::protobuf::int32 end_hour_;
  ::google::protobuf::int32 end_min_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdDuelModeSettleSchedule* default_instance_;
};
// -------------------------------------------------------------------

class mdShopLevelUpPackage : public ::google::protobuf::Message {
 public:
  mdShopLevelUpPackage();
  virtual ~mdShopLevelUpPackage();

  mdShopLevelUpPackage(const mdShopLevelUpPackage& from);

  inline mdShopLevelUpPackage& operator=(const mdShopLevelUpPackage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdShopLevelUpPackage& default_instance();

  void Swap(mdShopLevelUpPackage* other);

  // implements Message ----------------------------------------------

  mdShopLevelUpPackage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdShopLevelUpPackage& from);
  void MergeFrom(const mdShopLevelUpPackage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 package_id = 1;
  inline bool has_package_id() const;
  inline void clear_package_id();
  static const int kPackageIdFieldNumber = 1;
  inline ::google::protobuf::int32 package_id() const;
  inline void set_package_id(::google::protobuf::int32 value);

  // required .b2.protocol.commondata.Character.TYPE character_type = 2;
  inline bool has_character_type() const;
  inline void clear_character_type();
  static const int kCharacterTypeFieldNumber = 2;
  inline ::b2::protocol::commondata::Character_TYPE character_type() const;
  inline void set_character_type(::b2::protocol::commondata::Character_TYPE value);

  // required int32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // required int32 reward_id = 4;
  inline bool has_reward_id() const;
  inline void clear_reward_id();
  static const int kRewardIdFieldNumber = 4;
  inline ::google::protobuf::int32 reward_id() const;
  inline void set_reward_id(::google::protobuf::int32 value);

  // required int32 reward_count = 5;
  inline bool has_reward_count() const;
  inline void clear_reward_count();
  static const int kRewardCountFieldNumber = 5;
  inline ::google::protobuf::int32 reward_count() const;
  inline void set_reward_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdShopLevelUpPackage)
 private:
  inline void set_has_package_id();
  inline void clear_has_package_id();
  inline void set_has_character_type();
  inline void clear_has_character_type();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_reward_id();
  inline void clear_has_reward_id();
  inline void set_has_reward_count();
  inline void clear_has_reward_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 package_id_;
  int character_type_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 reward_id_;
  ::google::protobuf::int32 reward_count_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdShopLevelUpPackage* default_instance_;
};
// -------------------------------------------------------------------

class mdShopReachLevelPackage : public ::google::protobuf::Message {
 public:
  mdShopReachLevelPackage();
  virtual ~mdShopReachLevelPackage();

  mdShopReachLevelPackage(const mdShopReachLevelPackage& from);

  inline mdShopReachLevelPackage& operator=(const mdShopReachLevelPackage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdShopReachLevelPackage& default_instance();

  void Swap(mdShopReachLevelPackage* other);

  // implements Message ----------------------------------------------

  mdShopReachLevelPackage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdShopReachLevelPackage& from);
  void MergeFrom(const mdShopReachLevelPackage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 package_id = 1;
  inline bool has_package_id() const;
  inline void clear_package_id();
  static const int kPackageIdFieldNumber = 1;
  inline ::google::protobuf::int32 package_id() const;
  inline void set_package_id(::google::protobuf::int32 value);

  // required .b2.protocol.commondata.Character.TYPE character_type = 2;
  inline bool has_character_type() const;
  inline void clear_character_type();
  static const int kCharacterTypeFieldNumber = 2;
  inline ::b2::protocol::commondata::Character_TYPE character_type() const;
  inline void set_character_type(::b2::protocol::commondata::Character_TYPE value);

  // required int32 reach_level = 3;
  inline bool has_reach_level() const;
  inline void clear_reach_level();
  static const int kReachLevelFieldNumber = 3;
  inline ::google::protobuf::int32 reach_level() const;
  inline void set_reach_level(::google::protobuf::int32 value);

  // required int32 limit_level = 4;
  inline bool has_limit_level() const;
  inline void clear_limit_level();
  static const int kLimitLevelFieldNumber = 4;
  inline ::google::protobuf::int32 limit_level() const;
  inline void set_limit_level(::google::protobuf::int32 value);

  // required int32 buy_reward_id = 5;
  inline bool has_buy_reward_id() const;
  inline void clear_buy_reward_id();
  static const int kBuyRewardIdFieldNumber = 5;
  inline ::google::protobuf::int32 buy_reward_id() const;
  inline void set_buy_reward_id(::google::protobuf::int32 value);

  // required int32 buy_reward_count = 6;
  inline bool has_buy_reward_count() const;
  inline void clear_buy_reward_count();
  static const int kBuyRewardCountFieldNumber = 6;
  inline ::google::protobuf::int32 buy_reward_count() const;
  inline void set_buy_reward_count(::google::protobuf::int32 value);

  // required int32 complete_reward_id = 7;
  inline bool has_complete_reward_id() const;
  inline void clear_complete_reward_id();
  static const int kCompleteRewardIdFieldNumber = 7;
  inline ::google::protobuf::int32 complete_reward_id() const;
  inline void set_complete_reward_id(::google::protobuf::int32 value);

  // required int32 complete_reward_count = 8;
  inline bool has_complete_reward_count() const;
  inline void clear_complete_reward_count();
  static const int kCompleteRewardCountFieldNumber = 8;
  inline ::google::protobuf::int32 complete_reward_count() const;
  inline void set_complete_reward_count(::google::protobuf::int32 value);

  // required int32 expire_day = 9;
  inline bool has_expire_day() const;
  inline void clear_expire_day();
  static const int kExpireDayFieldNumber = 9;
  inline ::google::protobuf::int32 expire_day() const;
  inline void set_expire_day(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdShopReachLevelPackage)
 private:
  inline void set_has_package_id();
  inline void clear_has_package_id();
  inline void set_has_character_type();
  inline void clear_has_character_type();
  inline void set_has_reach_level();
  inline void clear_has_reach_level();
  inline void set_has_limit_level();
  inline void clear_has_limit_level();
  inline void set_has_buy_reward_id();
  inline void clear_has_buy_reward_id();
  inline void set_has_buy_reward_count();
  inline void clear_has_buy_reward_count();
  inline void set_has_complete_reward_id();
  inline void clear_has_complete_reward_id();
  inline void set_has_complete_reward_count();
  inline void clear_has_complete_reward_count();
  inline void set_has_expire_day();
  inline void clear_has_expire_day();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 package_id_;
  int character_type_;
  ::google::protobuf::int32 reach_level_;
  ::google::protobuf::int32 limit_level_;
  ::google::protobuf::int32 buy_reward_id_;
  ::google::protobuf::int32 buy_reward_count_;
  ::google::protobuf::int32 complete_reward_id_;
  ::google::protobuf::int32 complete_reward_count_;
  ::google::protobuf::int32 expire_day_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdShopReachLevelPackage* default_instance_;
};
// -------------------------------------------------------------------

class mdShopFlatRatePackageBonus : public ::google::protobuf::Message {
 public:
  mdShopFlatRatePackageBonus();
  virtual ~mdShopFlatRatePackageBonus();

  mdShopFlatRatePackageBonus(const mdShopFlatRatePackageBonus& from);

  inline mdShopFlatRatePackageBonus& operator=(const mdShopFlatRatePackageBonus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdShopFlatRatePackageBonus& default_instance();

  void Swap(mdShopFlatRatePackageBonus* other);

  // implements Message ----------------------------------------------

  mdShopFlatRatePackageBonus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdShopFlatRatePackageBonus& from);
  void MergeFrom(const mdShopFlatRatePackageBonus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // required int32 reward_id = 2;
  inline bool has_reward_id() const;
  inline void clear_reward_id();
  static const int kRewardIdFieldNumber = 2;
  inline ::google::protobuf::int32 reward_id() const;
  inline void set_reward_id(::google::protobuf::int32 value);

  // required int32 reward_count = 3;
  inline bool has_reward_count() const;
  inline void clear_reward_count();
  static const int kRewardCountFieldNumber = 3;
  inline ::google::protobuf::int32 reward_count() const;
  inline void set_reward_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdShopFlatRatePackageBonus)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_reward_id();
  inline void clear_has_reward_id();
  inline void set_has_reward_count();
  inline void clear_has_reward_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 reward_id_;
  ::google::protobuf::int32 reward_count_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdShopFlatRatePackageBonus* default_instance_;
};
// -------------------------------------------------------------------

class mdShopPackageTab : public ::google::protobuf::Message {
 public:
  mdShopPackageTab();
  virtual ~mdShopPackageTab();

  mdShopPackageTab(const mdShopPackageTab& from);

  inline mdShopPackageTab& operator=(const mdShopPackageTab& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdShopPackageTab& default_instance();

  void Swap(mdShopPackageTab* other);

  // implements Message ----------------------------------------------

  mdShopPackageTab* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdShopPackageTab& from);
  void MergeFrom(const mdShopPackageTab& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 tab_type = 1;
  inline bool has_tab_type() const;
  inline void clear_tab_type();
  static const int kTabTypeFieldNumber = 1;
  inline ::google::protobuf::int32 tab_type() const;
  inline void set_tab_type(::google::protobuf::int32 value);

  // required int32 sort_order = 2;
  inline bool has_sort_order() const;
  inline void clear_sort_order();
  static const int kSortOrderFieldNumber = 2;
  inline ::google::protobuf::int32 sort_order() const;
  inline void set_sort_order(::google::protobuf::int32 value);

  // required bool is_open = 3;
  inline bool has_is_open() const;
  inline void clear_is_open();
  static const int kIsOpenFieldNumber = 3;
  inline bool is_open() const;
  inline void set_is_open(bool value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdShopPackageTab)
 private:
  inline void set_has_tab_type();
  inline void clear_has_tab_type();
  inline void set_has_sort_order();
  inline void clear_has_sort_order();
  inline void set_has_is_open();
  inline void clear_has_is_open();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 tab_type_;
  ::google::protobuf::int32 sort_order_;
  bool is_open_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdShopPackageTab* default_instance_;
};
// -------------------------------------------------------------------

class mdWebUrl : public ::google::protobuf::Message {
 public:
  mdWebUrl();
  virtual ~mdWebUrl();

  mdWebUrl(const mdWebUrl& from);

  inline mdWebUrl& operator=(const mdWebUrl& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdWebUrl& default_instance();

  void Swap(mdWebUrl* other);

  // implements Message ----------------------------------------------

  mdWebUrl* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdWebUrl& from);
  void MergeFrom(const mdWebUrl& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline const ::std::string& key() const;
  inline void set_key(const ::std::string& value);
  inline void set_key(const char* value);
  inline void set_key(const char* value, size_t size);
  inline ::std::string* mutable_key();
  inline ::std::string* release_key();
  inline void set_allocated_key(::std::string* key);

  // required string url = 2;
  inline bool has_url() const;
  inline void clear_url();
  static const int kUrlFieldNumber = 2;
  inline const ::std::string& url() const;
  inline void set_url(const ::std::string& value);
  inline void set_url(const char* value);
  inline void set_url(const char* value, size_t size);
  inline ::std::string* mutable_url();
  inline ::std::string* release_url();
  inline void set_allocated_url(::std::string* url);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdWebUrl)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_url();
  inline void clear_has_url();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* key_;
  ::std::string* url_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdWebUrl* default_instance_;
};
// -------------------------------------------------------------------

class mdTenLotteryEvent : public ::google::protobuf::Message {
 public:
  mdTenLotteryEvent();
  virtual ~mdTenLotteryEvent();

  mdTenLotteryEvent(const mdTenLotteryEvent& from);

  inline mdTenLotteryEvent& operator=(const mdTenLotteryEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdTenLotteryEvent& default_instance();

  void Swap(mdTenLotteryEvent* other);

  // implements Message ----------------------------------------------

  mdTenLotteryEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdTenLotteryEvent& from);
  void MergeFrom(const mdTenLotteryEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 event_id = 1;
  inline bool has_event_id() const;
  inline void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  inline ::google::protobuf::int32 event_id() const;
  inline void set_event_id(::google::protobuf::int32 value);

  // required int32 index = 2;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 2;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // required int32 goal_lottery_count = 3;
  inline bool has_goal_lottery_count() const;
  inline void clear_goal_lottery_count();
  static const int kGoalLotteryCountFieldNumber = 3;
  inline ::google::protobuf::int32 goal_lottery_count() const;
  inline void set_goal_lottery_count(::google::protobuf::int32 value);

  // repeated .b2.protocol.commondata.RawReward rewards = 4;
  inline int rewards_size() const;
  inline void clear_rewards();
  static const int kRewardsFieldNumber = 4;
  inline const ::b2::protocol::commondata::RawReward& rewards(int index) const;
  inline ::b2::protocol::commondata::RawReward* mutable_rewards(int index);
  inline ::b2::protocol::commondata::RawReward* add_rewards();
  inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::RawReward >&
      rewards() const;
  inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::RawReward >*
      mutable_rewards();

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdTenLotteryEvent)
 private:
  inline void set_has_event_id();
  inline void clear_has_event_id();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_goal_lottery_count();
  inline void clear_has_goal_lottery_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 event_id_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::RawReward > rewards_;
  ::google::protobuf::int32 goal_lottery_count_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdTenLotteryEvent* default_instance_;
};
// -------------------------------------------------------------------

class mdSpendGemEvent : public ::google::protobuf::Message {
 public:
  mdSpendGemEvent();
  virtual ~mdSpendGemEvent();

  mdSpendGemEvent(const mdSpendGemEvent& from);

  inline mdSpendGemEvent& operator=(const mdSpendGemEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdSpendGemEvent& default_instance();

  void Swap(mdSpendGemEvent* other);

  // implements Message ----------------------------------------------

  mdSpendGemEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdSpendGemEvent& from);
  void MergeFrom(const mdSpendGemEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 event_id = 1;
  inline bool has_event_id() const;
  inline void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  inline ::google::protobuf::int32 event_id() const;
  inline void set_event_id(::google::protobuf::int32 value);

  // required int32 index = 2;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 2;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // required int32 goal_spend_count = 3;
  inline bool has_goal_spend_count() const;
  inline void clear_goal_spend_count();
  static const int kGoalSpendCountFieldNumber = 3;
  inline ::google::protobuf::int32 goal_spend_count() const;
  inline void set_goal_spend_count(::google::protobuf::int32 value);

  // repeated .b2.protocol.commondata.RawReward rewards = 4;
  inline int rewards_size() const;
  inline void clear_rewards();
  static const int kRewardsFieldNumber = 4;
  inline const ::b2::protocol::commondata::RawReward& rewards(int index) const;
  inline ::b2::protocol::commondata::RawReward* mutable_rewards(int index);
  inline ::b2::protocol::commondata::RawReward* add_rewards();
  inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::RawReward >&
      rewards() const;
  inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::RawReward >*
      mutable_rewards();

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdSpendGemEvent)
 private:
  inline void set_has_event_id();
  inline void clear_has_event_id();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_goal_spend_count();
  inline void clear_has_goal_spend_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 event_id_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::RawReward > rewards_;
  ::google::protobuf::int32 goal_spend_count_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdSpendGemEvent* default_instance_;
};
// -------------------------------------------------------------------

class mdTenLotterySavingsEvent : public ::google::protobuf::Message {
 public:
  mdTenLotterySavingsEvent();
  virtual ~mdTenLotterySavingsEvent();

  mdTenLotterySavingsEvent(const mdTenLotterySavingsEvent& from);

  inline mdTenLotterySavingsEvent& operator=(const mdTenLotterySavingsEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdTenLotterySavingsEvent& default_instance();

  void Swap(mdTenLotterySavingsEvent* other);

  // implements Message ----------------------------------------------

  mdTenLotterySavingsEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdTenLotterySavingsEvent& from);
  void MergeFrom(const mdTenLotterySavingsEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 event_id = 1;
  inline bool has_event_id() const;
  inline void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  inline ::google::protobuf::int32 event_id() const;
  inline void set_event_id(::google::protobuf::int32 value);

  // required int32 gain_point = 2;
  inline bool has_gain_point() const;
  inline void clear_gain_point();
  static const int kGainPointFieldNumber = 2;
  inline ::google::protobuf::int32 gain_point() const;
  inline void set_gain_point(::google::protobuf::int32 value);

  // required int32 need_point = 3;
  inline bool has_need_point() const;
  inline void clear_need_point();
  static const int kNeedPointFieldNumber = 3;
  inline ::google::protobuf::int32 need_point() const;
  inline void set_need_point(::google::protobuf::int32 value);

  // repeated .b2.protocol.commondata.RawReward rewards = 4;
  inline int rewards_size() const;
  inline void clear_rewards();
  static const int kRewardsFieldNumber = 4;
  inline const ::b2::protocol::commondata::RawReward& rewards(int index) const;
  inline ::b2::protocol::commondata::RawReward* mutable_rewards(int index);
  inline ::b2::protocol::commondata::RawReward* add_rewards();
  inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::RawReward >&
      rewards() const;
  inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::RawReward >*
      mutable_rewards();

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdTenLotterySavingsEvent)
 private:
  inline void set_has_event_id();
  inline void clear_has_event_id();
  inline void set_has_gain_point();
  inline void clear_has_gain_point();
  inline void set_has_need_point();
  inline void clear_has_need_point();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 event_id_;
  ::google::protobuf::int32 gain_point_;
  ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::RawReward > rewards_;
  ::google::protobuf::int32 need_point_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdTenLotterySavingsEvent* default_instance_;
};
// -------------------------------------------------------------------

class mdDiceEventMission : public ::google::protobuf::Message {
 public:
  mdDiceEventMission();
  virtual ~mdDiceEventMission();

  mdDiceEventMission(const mdDiceEventMission& from);

  inline mdDiceEventMission& operator=(const mdDiceEventMission& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdDiceEventMission& default_instance();

  void Swap(mdDiceEventMission* other);

  // implements Message ----------------------------------------------

  mdDiceEventMission* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdDiceEventMission& from);
  void MergeFrom(const mdDiceEventMission& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 event_id = 1;
  inline bool has_event_id() const;
  inline void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  inline ::google::protobuf::int32 event_id() const;
  inline void set_event_id(::google::protobuf::int32 value);

  // required int32 event_type = 2;
  inline bool has_event_type() const;
  inline void clear_event_type();
  static const int kEventTypeFieldNumber = 2;
  inline ::google::protobuf::int32 event_type() const;
  inline void set_event_type(::google::protobuf::int32 value);

  // required int32 goal_count = 3;
  inline bool has_goal_count() const;
  inline void clear_goal_count();
  static const int kGoalCountFieldNumber = 3;
  inline ::google::protobuf::int32 goal_count() const;
  inline void set_goal_count(::google::protobuf::int32 value);

  // required int32 point = 4;
  inline bool has_point() const;
  inline void clear_point();
  static const int kPointFieldNumber = 4;
  inline ::google::protobuf::int32 point() const;
  inline void set_point(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdDiceEventMission)
 private:
  inline void set_has_event_id();
  inline void clear_has_event_id();
  inline void set_has_event_type();
  inline void clear_has_event_type();
  inline void set_has_goal_count();
  inline void clear_has_goal_count();
  inline void set_has_point();
  inline void clear_has_point();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 event_id_;
  ::google::protobuf::int32 event_type_;
  ::google::protobuf::int32 goal_count_;
  ::google::protobuf::int32 point_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdDiceEventMission* default_instance_;
};
// -------------------------------------------------------------------

class mdDiceEventCell : public ::google::protobuf::Message {
 public:
  mdDiceEventCell();
  virtual ~mdDiceEventCell();

  mdDiceEventCell(const mdDiceEventCell& from);

  inline mdDiceEventCell& operator=(const mdDiceEventCell& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdDiceEventCell& default_instance();

  void Swap(mdDiceEventCell* other);

  // implements Message ----------------------------------------------

  mdDiceEventCell* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdDiceEventCell& from);
  void MergeFrom(const mdDiceEventCell& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 event_id = 1;
  inline bool has_event_id() const;
  inline void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  inline ::google::protobuf::int32 event_id() const;
  inline void set_event_id(::google::protobuf::int32 value);

  // required int32 cell_number = 2;
  inline bool has_cell_number() const;
  inline void clear_cell_number();
  static const int kCellNumberFieldNumber = 2;
  inline ::google::protobuf::int32 cell_number() const;
  inline void set_cell_number(::google::protobuf::int32 value);

  // required .b2.protocol.commondata.DiceEventCellType cell_type = 3;
  inline bool has_cell_type() const;
  inline void clear_cell_type();
  static const int kCellTypeFieldNumber = 3;
  inline ::b2::protocol::commondata::DiceEventCellType cell_type() const;
  inline void set_cell_type(::b2::protocol::commondata::DiceEventCellType value);

  // required int32 reward_id = 4;
  inline bool has_reward_id() const;
  inline void clear_reward_id();
  static const int kRewardIdFieldNumber = 4;
  inline ::google::protobuf::int32 reward_id() const;
  inline void set_reward_id(::google::protobuf::int32 value);

  // required int32 reward_count = 5;
  inline bool has_reward_count() const;
  inline void clear_reward_count();
  static const int kRewardCountFieldNumber = 5;
  inline ::google::protobuf::int32 reward_count() const;
  inline void set_reward_count(::google::protobuf::int32 value);

  // required int32 effect_value = 6;
  inline bool has_effect_value() const;
  inline void clear_effect_value();
  static const int kEffectValueFieldNumber = 6;
  inline ::google::protobuf::int32 effect_value() const;
  inline void set_effect_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdDiceEventCell)
 private:
  inline void set_has_event_id();
  inline void clear_has_event_id();
  inline void set_has_cell_number();
  inline void clear_has_cell_number();
  inline void set_has_cell_type();
  inline void clear_has_cell_type();
  inline void set_has_reward_id();
  inline void clear_has_reward_id();
  inline void set_has_reward_count();
  inline void clear_has_reward_count();
  inline void set_has_effect_value();
  inline void clear_has_effect_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 event_id_;
  ::google::protobuf::int32 cell_number_;
  int cell_type_;
  ::google::protobuf::int32 reward_id_;
  ::google::protobuf::int32 reward_count_;
  ::google::protobuf::int32 effect_value_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdDiceEventCell* default_instance_;
};
// -------------------------------------------------------------------

class mdDiceEventFinishReward : public ::google::protobuf::Message {
 public:
  mdDiceEventFinishReward();
  virtual ~mdDiceEventFinishReward();

  mdDiceEventFinishReward(const mdDiceEventFinishReward& from);

  inline mdDiceEventFinishReward& operator=(const mdDiceEventFinishReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdDiceEventFinishReward& default_instance();

  void Swap(mdDiceEventFinishReward* other);

  // implements Message ----------------------------------------------

  mdDiceEventFinishReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdDiceEventFinishReward& from);
  void MergeFrom(const mdDiceEventFinishReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 event_id = 1;
  inline bool has_event_id() const;
  inline void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  inline ::google::protobuf::int32 event_id() const;
  inline void set_event_id(::google::protobuf::int32 value);

  // required int32 number = 2;
  inline bool has_number() const;
  inline void clear_number();
  static const int kNumberFieldNumber = 2;
  inline ::google::protobuf::int32 number() const;
  inline void set_number(::google::protobuf::int32 value);

  // required int32 reward_id = 3;
  inline bool has_reward_id() const;
  inline void clear_reward_id();
  static const int kRewardIdFieldNumber = 3;
  inline ::google::protobuf::int32 reward_id() const;
  inline void set_reward_id(::google::protobuf::int32 value);

  // required int32 reward_count = 4;
  inline bool has_reward_count() const;
  inline void clear_reward_count();
  static const int kRewardCountFieldNumber = 4;
  inline ::google::protobuf::int32 reward_count() const;
  inline void set_reward_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdDiceEventFinishReward)
 private:
  inline void set_has_event_id();
  inline void clear_has_event_id();
  inline void set_has_number();
  inline void clear_has_number();
  inline void set_has_reward_id();
  inline void clear_has_reward_id();
  inline void set_has_reward_count();
  inline void clear_has_reward_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 event_id_;
  ::google::protobuf::int32 number_;
  ::google::protobuf::int32 reward_id_;
  ::google::protobuf::int32 reward_count_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdDiceEventFinishReward* default_instance_;
};
// -------------------------------------------------------------------

class mdDiceEventBuyPoint : public ::google::protobuf::Message {
 public:
  mdDiceEventBuyPoint();
  virtual ~mdDiceEventBuyPoint();

  mdDiceEventBuyPoint(const mdDiceEventBuyPoint& from);

  inline mdDiceEventBuyPoint& operator=(const mdDiceEventBuyPoint& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdDiceEventBuyPoint& default_instance();

  void Swap(mdDiceEventBuyPoint* other);

  // implements Message ----------------------------------------------

  mdDiceEventBuyPoint* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdDiceEventBuyPoint& from);
  void MergeFrom(const mdDiceEventBuyPoint& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 event_id = 1;
  inline bool has_event_id() const;
  inline void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  inline ::google::protobuf::int32 event_id() const;
  inline void set_event_id(::google::protobuf::int32 value);

  // required int32 buy_count = 2;
  inline bool has_buy_count() const;
  inline void clear_buy_count();
  static const int kBuyCountFieldNumber = 2;
  inline ::google::protobuf::int32 buy_count() const;
  inline void set_buy_count(::google::protobuf::int32 value);

  // required int32 gem = 3;
  inline bool has_gem() const;
  inline void clear_gem();
  static const int kGemFieldNumber = 3;
  inline ::google::protobuf::int32 gem() const;
  inline void set_gem(::google::protobuf::int32 value);

  // required int32 point = 4;
  inline bool has_point() const;
  inline void clear_point();
  static const int kPointFieldNumber = 4;
  inline ::google::protobuf::int32 point() const;
  inline void set_point(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdDiceEventBuyPoint)
 private:
  inline void set_has_event_id();
  inline void clear_has_event_id();
  inline void set_has_buy_count();
  inline void clear_has_buy_count();
  inline void set_has_gem();
  inline void clear_has_gem();
  inline void set_has_point();
  inline void clear_has_point();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 event_id_;
  ::google::protobuf::int32 buy_count_;
  ::google::protobuf::int32 gem_;
  ::google::protobuf::int32 point_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdDiceEventBuyPoint* default_instance_;
};
// -------------------------------------------------------------------

class mdDiceEventMileage : public ::google::protobuf::Message {
 public:
  mdDiceEventMileage();
  virtual ~mdDiceEventMileage();

  mdDiceEventMileage(const mdDiceEventMileage& from);

  inline mdDiceEventMileage& operator=(const mdDiceEventMileage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdDiceEventMileage& default_instance();

  void Swap(mdDiceEventMileage* other);

  // implements Message ----------------------------------------------

  mdDiceEventMileage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdDiceEventMileage& from);
  void MergeFrom(const mdDiceEventMileage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 event_id = 1;
  inline bool has_event_id() const;
  inline void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  inline ::google::protobuf::int32 event_id() const;
  inline void set_event_id(::google::protobuf::int32 value);

  // required int32 index = 2;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 2;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // required int32 dice_count = 3;
  inline bool has_dice_count() const;
  inline void clear_dice_count();
  static const int kDiceCountFieldNumber = 3;
  inline ::google::protobuf::int32 dice_count() const;
  inline void set_dice_count(::google::protobuf::int32 value);

  // required int32 reward_id1 = 7;
  inline bool has_reward_id1() const;
  inline void clear_reward_id1();
  static const int kRewardId1FieldNumber = 7;
  inline ::google::protobuf::int32 reward_id1() const;
  inline void set_reward_id1(::google::protobuf::int32 value);

  // required int32 reward_count1 = 8;
  inline bool has_reward_count1() const;
  inline void clear_reward_count1();
  static const int kRewardCount1FieldNumber = 8;
  inline ::google::protobuf::int32 reward_count1() const;
  inline void set_reward_count1(::google::protobuf::int32 value);

  // required int32 reward_id2 = 9;
  inline bool has_reward_id2() const;
  inline void clear_reward_id2();
  static const int kRewardId2FieldNumber = 9;
  inline ::google::protobuf::int32 reward_id2() const;
  inline void set_reward_id2(::google::protobuf::int32 value);

  // required int32 reward_count2 = 10;
  inline bool has_reward_count2() const;
  inline void clear_reward_count2();
  static const int kRewardCount2FieldNumber = 10;
  inline ::google::protobuf::int32 reward_count2() const;
  inline void set_reward_count2(::google::protobuf::int32 value);

  // required int32 reward_id3 = 11;
  inline bool has_reward_id3() const;
  inline void clear_reward_id3();
  static const int kRewardId3FieldNumber = 11;
  inline ::google::protobuf::int32 reward_id3() const;
  inline void set_reward_id3(::google::protobuf::int32 value);

  // required int32 reward_count3 = 12;
  inline bool has_reward_count3() const;
  inline void clear_reward_count3();
  static const int kRewardCount3FieldNumber = 12;
  inline ::google::protobuf::int32 reward_count3() const;
  inline void set_reward_count3(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdDiceEventMileage)
 private:
  inline void set_has_event_id();
  inline void clear_has_event_id();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_dice_count();
  inline void clear_has_dice_count();
  inline void set_has_reward_id1();
  inline void clear_has_reward_id1();
  inline void set_has_reward_count1();
  inline void clear_has_reward_count1();
  inline void set_has_reward_id2();
  inline void clear_has_reward_id2();
  inline void set_has_reward_count2();
  inline void clear_has_reward_count2();
  inline void set_has_reward_id3();
  inline void clear_has_reward_id3();
  inline void set_has_reward_count3();
  inline void clear_has_reward_count3();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 event_id_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 dice_count_;
  ::google::protobuf::int32 reward_id1_;
  ::google::protobuf::int32 reward_count1_;
  ::google::protobuf::int32 reward_id2_;
  ::google::protobuf::int32 reward_count2_;
  ::google::protobuf::int32 reward_id3_;
  ::google::protobuf::int32 reward_count3_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdDiceEventMileage* default_instance_;
};
// -------------------------------------------------------------------

class mdDonationEventInfo : public ::google::protobuf::Message {
 public:
  mdDonationEventInfo();
  virtual ~mdDonationEventInfo();

  mdDonationEventInfo(const mdDonationEventInfo& from);

  inline mdDonationEventInfo& operator=(const mdDonationEventInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdDonationEventInfo& default_instance();

  void Swap(mdDonationEventInfo* other);

  // implements Message ----------------------------------------------

  mdDonationEventInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdDonationEventInfo& from);
  void MergeFrom(const mdDonationEventInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 donation_open_id = 1;
  inline bool has_donation_open_id() const;
  inline void clear_donation_open_id();
  static const int kDonationOpenIdFieldNumber = 1;
  inline ::google::protobuf::int32 donation_open_id() const;
  inline void set_donation_open_id(::google::protobuf::int32 value);

  // required string title = 2;
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 2;
  inline const ::std::string& title() const;
  inline void set_title(const ::std::string& value);
  inline void set_title(const char* value);
  inline void set_title(const char* value, size_t size);
  inline ::std::string* mutable_title();
  inline ::std::string* release_title();
  inline void set_allocated_title(::std::string* title);

  // required string description = 3;
  inline bool has_description() const;
  inline void clear_description();
  static const int kDescriptionFieldNumber = 3;
  inline const ::std::string& description() const;
  inline void set_description(const ::std::string& value);
  inline void set_description(const char* value);
  inline void set_description(const char* value, size_t size);
  inline ::std::string* mutable_description();
  inline ::std::string* release_description();
  inline void set_allocated_description(::std::string* description);

  // required string banner_url = 4;
  inline bool has_banner_url() const;
  inline void clear_banner_url();
  static const int kBannerUrlFieldNumber = 4;
  inline const ::std::string& banner_url() const;
  inline void set_banner_url(const ::std::string& value);
  inline void set_banner_url(const char* value);
  inline void set_banner_url(const char* value, size_t size);
  inline ::std::string* mutable_banner_url();
  inline ::std::string* release_banner_url();
  inline void set_allocated_banner_url(::std::string* banner_url);

  // required string link_text = 5;
  inline bool has_link_text() const;
  inline void clear_link_text();
  static const int kLinkTextFieldNumber = 5;
  inline const ::std::string& link_text() const;
  inline void set_link_text(const ::std::string& value);
  inline void set_link_text(const char* value);
  inline void set_link_text(const char* value, size_t size);
  inline ::std::string* mutable_link_text();
  inline ::std::string* release_link_text();
  inline void set_allocated_link_text(::std::string* link_text);

  // required string link_url = 6;
  inline bool has_link_url() const;
  inline void clear_link_url();
  static const int kLinkUrlFieldNumber = 6;
  inline const ::std::string& link_url() const;
  inline void set_link_url(const ::std::string& value);
  inline void set_link_url(const char* value);
  inline void set_link_url(const char* value, size_t size);
  inline ::std::string* mutable_link_url();
  inline ::std::string* release_link_url();
  inline void set_allocated_link_url(::std::string* link_url);

  // required int64 start_time = 7;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 7;
  inline ::google::protobuf::int64 start_time() const;
  inline void set_start_time(::google::protobuf::int64 value);

  // required int64 end_time = 8;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 8;
  inline ::google::protobuf::int64 end_time() const;
  inline void set_end_time(::google::protobuf::int64 value);

  // required int64 expire_time = 9;
  inline bool has_expire_time() const;
  inline void clear_expire_time();
  static const int kExpireTimeFieldNumber = 9;
  inline ::google::protobuf::int64 expire_time() const;
  inline void set_expire_time(::google::protobuf::int64 value);

  // required int32 donation_template_id = 11;
  inline bool has_donation_template_id() const;
  inline void clear_donation_template_id();
  static const int kDonationTemplateIdFieldNumber = 11;
  inline ::google::protobuf::int32 donation_template_id() const;
  inline void set_donation_template_id(::google::protobuf::int32 value);

  // required int32 cost_type = 12;
  inline bool has_cost_type() const;
  inline void clear_cost_type();
  static const int kCostTypeFieldNumber = 12;
  inline ::google::protobuf::int32 cost_type() const;
  inline void set_cost_type(::google::protobuf::int32 value);

  // required int32 cost = 13;
  inline bool has_cost() const;
  inline void clear_cost();
  static const int kCostFieldNumber = 13;
  inline ::google::protobuf::int32 cost() const;
  inline void set_cost(::google::protobuf::int32 value);

  // required int32 extra_cost = 14;
  inline bool has_extra_cost() const;
  inline void clear_extra_cost();
  static const int kExtraCostFieldNumber = 14;
  inline ::google::protobuf::int32 extra_cost() const;
  inline void set_extra_cost(::google::protobuf::int32 value);

  // required int32 cut_off_point = 15;
  inline bool has_cut_off_point() const;
  inline void clear_cut_off_point();
  static const int kCutOffPointFieldNumber = 15;
  inline ::google::protobuf::int32 cut_off_point() const;
  inline void set_cut_off_point(::google::protobuf::int32 value);

  // required int32 obtain_point = 16;
  inline bool has_obtain_point() const;
  inline void clear_obtain_point();
  static const int kObtainPointFieldNumber = 16;
  inline ::google::protobuf::int32 obtain_point() const;
  inline void set_obtain_point(::google::protobuf::int32 value);

  // required int32 bundle_cost = 17;
  inline bool has_bundle_cost() const;
  inline void clear_bundle_cost();
  static const int kBundleCostFieldNumber = 17;
  inline ::google::protobuf::int32 bundle_cost() const;
  inline void set_bundle_cost(::google::protobuf::int32 value);

  // required int32 extra_bundle_cost = 18;
  inline bool has_extra_bundle_cost() const;
  inline void clear_extra_bundle_cost();
  static const int kExtraBundleCostFieldNumber = 18;
  inline ::google::protobuf::int32 extra_bundle_cost() const;
  inline void set_extra_bundle_cost(::google::protobuf::int32 value);

  // required int32 bundle_obtain_point = 19;
  inline bool has_bundle_obtain_point() const;
  inline void clear_bundle_obtain_point();
  static const int kBundleObtainPointFieldNumber = 19;
  inline ::google::protobuf::int32 bundle_obtain_point() const;
  inline void set_bundle_obtain_point(::google::protobuf::int32 value);

  // required int32 serial_donation_count = 20;
  inline bool has_serial_donation_count() const;
  inline void clear_serial_donation_count();
  static const int kSerialDonationCountFieldNumber = 20;
  inline ::google::protobuf::int32 serial_donation_count() const;
  inline void set_serial_donation_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdDonationEventInfo)
 private:
  inline void set_has_donation_open_id();
  inline void clear_has_donation_open_id();
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_description();
  inline void clear_has_description();
  inline void set_has_banner_url();
  inline void clear_has_banner_url();
  inline void set_has_link_text();
  inline void clear_has_link_text();
  inline void set_has_link_url();
  inline void clear_has_link_url();
  inline void set_has_start_time();
  inline void clear_has_start_time();
  inline void set_has_end_time();
  inline void clear_has_end_time();
  inline void set_has_expire_time();
  inline void clear_has_expire_time();
  inline void set_has_donation_template_id();
  inline void clear_has_donation_template_id();
  inline void set_has_cost_type();
  inline void clear_has_cost_type();
  inline void set_has_cost();
  inline void clear_has_cost();
  inline void set_has_extra_cost();
  inline void clear_has_extra_cost();
  inline void set_has_cut_off_point();
  inline void clear_has_cut_off_point();
  inline void set_has_obtain_point();
  inline void clear_has_obtain_point();
  inline void set_has_bundle_cost();
  inline void clear_has_bundle_cost();
  inline void set_has_extra_bundle_cost();
  inline void clear_has_extra_bundle_cost();
  inline void set_has_bundle_obtain_point();
  inline void clear_has_bundle_obtain_point();
  inline void set_has_serial_donation_count();
  inline void clear_has_serial_donation_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* title_;
  ::std::string* description_;
  ::std::string* banner_url_;
  ::std::string* link_text_;
  ::google::protobuf::int32 donation_open_id_;
  ::google::protobuf::int32 donation_template_id_;
  ::std::string* link_url_;
  ::google::protobuf::int64 start_time_;
  ::google::protobuf::int64 end_time_;
  ::google::protobuf::int64 expire_time_;
  ::google::protobuf::int32 cost_type_;
  ::google::protobuf::int32 cost_;
  ::google::protobuf::int32 extra_cost_;
  ::google::protobuf::int32 cut_off_point_;
  ::google::protobuf::int32 obtain_point_;
  ::google::protobuf::int32 bundle_cost_;
  ::google::protobuf::int32 extra_bundle_cost_;
  ::google::protobuf::int32 bundle_obtain_point_;
  ::google::protobuf::int32 serial_donation_count_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdDonationEventInfo* default_instance_;
};
// -------------------------------------------------------------------

class mdDonationPointRankingRewardInfo : public ::google::protobuf::Message {
 public:
  mdDonationPointRankingRewardInfo();
  virtual ~mdDonationPointRankingRewardInfo();

  mdDonationPointRankingRewardInfo(const mdDonationPointRankingRewardInfo& from);

  inline mdDonationPointRankingRewardInfo& operator=(const mdDonationPointRankingRewardInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdDonationPointRankingRewardInfo& default_instance();

  void Swap(mdDonationPointRankingRewardInfo* other);

  // implements Message ----------------------------------------------

  mdDonationPointRankingRewardInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdDonationPointRankingRewardInfo& from);
  void MergeFrom(const mdDonationPointRankingRewardInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 donation_id = 1;
  inline bool has_donation_id() const;
  inline void clear_donation_id();
  static const int kDonationIdFieldNumber = 1;
  inline ::google::protobuf::int32 donation_id() const;
  inline void set_donation_id(::google::protobuf::int32 value);

  // required int32 rank = 2;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 2;
  inline ::google::protobuf::int32 rank() const;
  inline void set_rank(::google::protobuf::int32 value);

  // required int32 reward_id1 = 3;
  inline bool has_reward_id1() const;
  inline void clear_reward_id1();
  static const int kRewardId1FieldNumber = 3;
  inline ::google::protobuf::int32 reward_id1() const;
  inline void set_reward_id1(::google::protobuf::int32 value);

  // required int32 reward_count1 = 4;
  inline bool has_reward_count1() const;
  inline void clear_reward_count1();
  static const int kRewardCount1FieldNumber = 4;
  inline ::google::protobuf::int32 reward_count1() const;
  inline void set_reward_count1(::google::protobuf::int32 value);

  // required int32 reward_id2 = 5;
  inline bool has_reward_id2() const;
  inline void clear_reward_id2();
  static const int kRewardId2FieldNumber = 5;
  inline ::google::protobuf::int32 reward_id2() const;
  inline void set_reward_id2(::google::protobuf::int32 value);

  // required int32 reward_count2 = 6;
  inline bool has_reward_count2() const;
  inline void clear_reward_count2();
  static const int kRewardCount2FieldNumber = 6;
  inline ::google::protobuf::int32 reward_count2() const;
  inline void set_reward_count2(::google::protobuf::int32 value);

  // required int32 reward_id3 = 7;
  inline bool has_reward_id3() const;
  inline void clear_reward_id3();
  static const int kRewardId3FieldNumber = 7;
  inline ::google::protobuf::int32 reward_id3() const;
  inline void set_reward_id3(::google::protobuf::int32 value);

  // required int32 reward_count3 = 8;
  inline bool has_reward_count3() const;
  inline void clear_reward_count3();
  static const int kRewardCount3FieldNumber = 8;
  inline ::google::protobuf::int32 reward_count3() const;
  inline void set_reward_count3(::google::protobuf::int32 value);

  // required int32 reward_id4 = 9;
  inline bool has_reward_id4() const;
  inline void clear_reward_id4();
  static const int kRewardId4FieldNumber = 9;
  inline ::google::protobuf::int32 reward_id4() const;
  inline void set_reward_id4(::google::protobuf::int32 value);

  // required int32 reward_count4 = 10;
  inline bool has_reward_count4() const;
  inline void clear_reward_count4();
  static const int kRewardCount4FieldNumber = 10;
  inline ::google::protobuf::int32 reward_count4() const;
  inline void set_reward_count4(::google::protobuf::int32 value);

  // required int32 reward_id5 = 11;
  inline bool has_reward_id5() const;
  inline void clear_reward_id5();
  static const int kRewardId5FieldNumber = 11;
  inline ::google::protobuf::int32 reward_id5() const;
  inline void set_reward_id5(::google::protobuf::int32 value);

  // required int32 reward_count5 = 12;
  inline bool has_reward_count5() const;
  inline void clear_reward_count5();
  static const int kRewardCount5FieldNumber = 12;
  inline ::google::protobuf::int32 reward_count5() const;
  inline void set_reward_count5(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdDonationPointRankingRewardInfo)
 private:
  inline void set_has_donation_id();
  inline void clear_has_donation_id();
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_reward_id1();
  inline void clear_has_reward_id1();
  inline void set_has_reward_count1();
  inline void clear_has_reward_count1();
  inline void set_has_reward_id2();
  inline void clear_has_reward_id2();
  inline void set_has_reward_count2();
  inline void clear_has_reward_count2();
  inline void set_has_reward_id3();
  inline void clear_has_reward_id3();
  inline void set_has_reward_count3();
  inline void clear_has_reward_count3();
  inline void set_has_reward_id4();
  inline void clear_has_reward_id4();
  inline void set_has_reward_count4();
  inline void clear_has_reward_count4();
  inline void set_has_reward_id5();
  inline void clear_has_reward_id5();
  inline void set_has_reward_count5();
  inline void clear_has_reward_count5();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 donation_id_;
  ::google::protobuf::int32 rank_;
  ::google::protobuf::int32 reward_id1_;
  ::google::protobuf::int32 reward_count1_;
  ::google::protobuf::int32 reward_id2_;
  ::google::protobuf::int32 reward_count2_;
  ::google::protobuf::int32 reward_id3_;
  ::google::protobuf::int32 reward_count3_;
  ::google::protobuf::int32 reward_id4_;
  ::google::protobuf::int32 reward_count4_;
  ::google::protobuf::int32 reward_id5_;
  ::google::protobuf::int32 reward_count5_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdDonationPointRankingRewardInfo* default_instance_;
};
// -------------------------------------------------------------------

class mdDonationBundleFixedRewardInfo : public ::google::protobuf::Message {
 public:
  mdDonationBundleFixedRewardInfo();
  virtual ~mdDonationBundleFixedRewardInfo();

  mdDonationBundleFixedRewardInfo(const mdDonationBundleFixedRewardInfo& from);

  inline mdDonationBundleFixedRewardInfo& operator=(const mdDonationBundleFixedRewardInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdDonationBundleFixedRewardInfo& default_instance();

  void Swap(mdDonationBundleFixedRewardInfo* other);

  // implements Message ----------------------------------------------

  mdDonationBundleFixedRewardInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdDonationBundleFixedRewardInfo& from);
  void MergeFrom(const mdDonationBundleFixedRewardInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 donation_id = 1;
  inline bool has_donation_id() const;
  inline void clear_donation_id();
  static const int kDonationIdFieldNumber = 1;
  inline ::google::protobuf::int32 donation_id() const;
  inline void set_donation_id(::google::protobuf::int32 value);

  // required int32 reward_id = 2;
  inline bool has_reward_id() const;
  inline void clear_reward_id();
  static const int kRewardIdFieldNumber = 2;
  inline ::google::protobuf::int32 reward_id() const;
  inline void set_reward_id(::google::protobuf::int32 value);

  // required int32 min_amount = 3;
  inline bool has_min_amount() const;
  inline void clear_min_amount();
  static const int kMinAmountFieldNumber = 3;
  inline ::google::protobuf::int32 min_amount() const;
  inline void set_min_amount(::google::protobuf::int32 value);

  // required int32 max_amount = 4;
  inline bool has_max_amount() const;
  inline void clear_max_amount();
  static const int kMaxAmountFieldNumber = 4;
  inline ::google::protobuf::int32 max_amount() const;
  inline void set_max_amount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdDonationBundleFixedRewardInfo)
 private:
  inline void set_has_donation_id();
  inline void clear_has_donation_id();
  inline void set_has_reward_id();
  inline void clear_has_reward_id();
  inline void set_has_min_amount();
  inline void clear_has_min_amount();
  inline void set_has_max_amount();
  inline void clear_has_max_amount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 donation_id_;
  ::google::protobuf::int32 reward_id_;
  ::google::protobuf::int32 min_amount_;
  ::google::protobuf::int32 max_amount_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdDonationBundleFixedRewardInfo* default_instance_;
};
// -------------------------------------------------------------------

class mdDonationPointStepRewardInfo : public ::google::protobuf::Message {
 public:
  mdDonationPointStepRewardInfo();
  virtual ~mdDonationPointStepRewardInfo();

  mdDonationPointStepRewardInfo(const mdDonationPointStepRewardInfo& from);

  inline mdDonationPointStepRewardInfo& operator=(const mdDonationPointStepRewardInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdDonationPointStepRewardInfo& default_instance();

  void Swap(mdDonationPointStepRewardInfo* other);

  // implements Message ----------------------------------------------

  mdDonationPointStepRewardInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdDonationPointStepRewardInfo& from);
  void MergeFrom(const mdDonationPointStepRewardInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 donation_id = 1;
  inline bool has_donation_id() const;
  inline void clear_donation_id();
  static const int kDonationIdFieldNumber = 1;
  inline ::google::protobuf::int32 donation_id() const;
  inline void set_donation_id(::google::protobuf::int32 value);

  // required int32 step = 2;
  inline bool has_step() const;
  inline void clear_step();
  static const int kStepFieldNumber = 2;
  inline ::google::protobuf::int32 step() const;
  inline void set_step(::google::protobuf::int32 value);

  // required int32 point = 3;
  inline bool has_point() const;
  inline void clear_point();
  static const int kPointFieldNumber = 3;
  inline ::google::protobuf::int32 point() const;
  inline void set_point(::google::protobuf::int32 value);

  // required int32 reward_id1 = 4;
  inline bool has_reward_id1() const;
  inline void clear_reward_id1();
  static const int kRewardId1FieldNumber = 4;
  inline ::google::protobuf::int32 reward_id1() const;
  inline void set_reward_id1(::google::protobuf::int32 value);

  // required int32 reward_count1 = 5;
  inline bool has_reward_count1() const;
  inline void clear_reward_count1();
  static const int kRewardCount1FieldNumber = 5;
  inline ::google::protobuf::int32 reward_count1() const;
  inline void set_reward_count1(::google::protobuf::int32 value);

  // required int32 reward_id2 = 6;
  inline bool has_reward_id2() const;
  inline void clear_reward_id2();
  static const int kRewardId2FieldNumber = 6;
  inline ::google::protobuf::int32 reward_id2() const;
  inline void set_reward_id2(::google::protobuf::int32 value);

  // required int32 reward_count2 = 7;
  inline bool has_reward_count2() const;
  inline void clear_reward_count2();
  static const int kRewardCount2FieldNumber = 7;
  inline ::google::protobuf::int32 reward_count2() const;
  inline void set_reward_count2(::google::protobuf::int32 value);

  // required int32 reward_id3 = 8;
  inline bool has_reward_id3() const;
  inline void clear_reward_id3();
  static const int kRewardId3FieldNumber = 8;
  inline ::google::protobuf::int32 reward_id3() const;
  inline void set_reward_id3(::google::protobuf::int32 value);

  // required int32 reward_count3 = 9;
  inline bool has_reward_count3() const;
  inline void clear_reward_count3();
  static const int kRewardCount3FieldNumber = 9;
  inline ::google::protobuf::int32 reward_count3() const;
  inline void set_reward_count3(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdDonationPointStepRewardInfo)
 private:
  inline void set_has_donation_id();
  inline void clear_has_donation_id();
  inline void set_has_step();
  inline void clear_has_step();
  inline void set_has_point();
  inline void clear_has_point();
  inline void set_has_reward_id1();
  inline void clear_has_reward_id1();
  inline void set_has_reward_count1();
  inline void clear_has_reward_count1();
  inline void set_has_reward_id2();
  inline void clear_has_reward_id2();
  inline void set_has_reward_count2();
  inline void clear_has_reward_count2();
  inline void set_has_reward_id3();
  inline void clear_has_reward_id3();
  inline void set_has_reward_count3();
  inline void clear_has_reward_count3();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 donation_id_;
  ::google::protobuf::int32 step_;
  ::google::protobuf::int32 point_;
  ::google::protobuf::int32 reward_id1_;
  ::google::protobuf::int32 reward_count1_;
  ::google::protobuf::int32 reward_id2_;
  ::google::protobuf::int32 reward_count2_;
  ::google::protobuf::int32 reward_id3_;
  ::google::protobuf::int32 reward_count3_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdDonationPointStepRewardInfo* default_instance_;
};
// -------------------------------------------------------------------

class mdFairyInfo : public ::google::protobuf::Message {
 public:
  mdFairyInfo();
  virtual ~mdFairyInfo();

  mdFairyInfo(const mdFairyInfo& from);

  inline mdFairyInfo& operator=(const mdFairyInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdFairyInfo& default_instance();

  void Swap(mdFairyInfo* other);

  // implements Message ----------------------------------------------

  mdFairyInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdFairyInfo& from);
  void MergeFrom(const mdFairyInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .b2.protocol.commondata.FairyType fairy_type = 1;
  inline bool has_fairy_type() const;
  inline void clear_fairy_type();
  static const int kFairyTypeFieldNumber = 1;
  inline ::b2::protocol::commondata::FairyType fairy_type() const;
  inline void set_fairy_type(::b2::protocol::commondata::FairyType value);

  // required int32 option_id = 2;
  inline bool has_option_id() const;
  inline void clear_option_id();
  static const int kOptionIdFieldNumber = 2;
  inline ::google::protobuf::int32 option_id() const;
  inline void set_option_id(::google::protobuf::int32 value);

  // required int32 bless_level = 3;
  inline bool has_bless_level() const;
  inline void clear_bless_level();
  static const int kBlessLevelFieldNumber = 3;
  inline ::google::protobuf::int32 bless_level() const;
  inline void set_bless_level(::google::protobuf::int32 value);

  // required float option_value = 4;
  inline bool has_option_value() const;
  inline void clear_option_value();
  static const int kOptionValueFieldNumber = 4;
  inline float option_value() const;
  inline void set_option_value(float value);

  // required int32 level = 5;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 5;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdFairyInfo)
 private:
  inline void set_has_fairy_type();
  inline void clear_has_fairy_type();
  inline void set_has_option_id();
  inline void clear_has_option_id();
  inline void set_has_bless_level();
  inline void clear_has_bless_level();
  inline void set_has_option_value();
  inline void clear_has_option_value();
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int fairy_type_;
  ::google::protobuf::int32 option_id_;
  ::google::protobuf::int32 bless_level_;
  float option_value_;
  ::google::protobuf::int32 level_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdFairyInfo* default_instance_;
};
// -------------------------------------------------------------------

class mdFairyLevelupCost : public ::google::protobuf::Message {
 public:
  mdFairyLevelupCost();
  virtual ~mdFairyLevelupCost();

  mdFairyLevelupCost(const mdFairyLevelupCost& from);

  inline mdFairyLevelupCost& operator=(const mdFairyLevelupCost& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdFairyLevelupCost& default_instance();

  void Swap(mdFairyLevelupCost* other);

  // implements Message ----------------------------------------------

  mdFairyLevelupCost* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdFairyLevelupCost& from);
  void MergeFrom(const mdFairyLevelupCost& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // required int32 material_cost = 2;
  inline bool has_material_cost() const;
  inline void clear_material_cost();
  static const int kMaterialCostFieldNumber = 2;
  inline ::google::protobuf::int32 material_cost() const;
  inline void set_material_cost(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdFairyLevelupCost)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_material_cost();
  inline void clear_has_material_cost();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 material_cost_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdFairyLevelupCost* default_instance_;
};
// -------------------------------------------------------------------

class mdFairyOpenInfo : public ::google::protobuf::Message {
 public:
  mdFairyOpenInfo();
  virtual ~mdFairyOpenInfo();

  mdFairyOpenInfo(const mdFairyOpenInfo& from);

  inline mdFairyOpenInfo& operator=(const mdFairyOpenInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdFairyOpenInfo& default_instance();

  void Swap(mdFairyOpenInfo* other);

  // implements Message ----------------------------------------------

  mdFairyOpenInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdFairyOpenInfo& from);
  void MergeFrom(const mdFairyOpenInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .b2.protocol.commondata.FairyType fairy_type = 1;
  inline bool has_fairy_type() const;
  inline void clear_fairy_type();
  static const int kFairyTypeFieldNumber = 1;
  inline ::b2::protocol::commondata::FairyType fairy_type() const;
  inline void set_fairy_type(::b2::protocol::commondata::FairyType value);

  // required int32 stage_id = 2;
  inline bool has_stage_id() const;
  inline void clear_stage_id();
  static const int kStageIdFieldNumber = 2;
  inline ::google::protobuf::int32 stage_id() const;
  inline void set_stage_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdFairyOpenInfo)
 private:
  inline void set_has_fairy_type();
  inline void clear_has_fairy_type();
  inline void set_has_stage_id();
  inline void clear_has_stage_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int fairy_type_;
  ::google::protobuf::int32 stage_id_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdFairyOpenInfo* default_instance_;
};
// -------------------------------------------------------------------

class mdTotemInfo : public ::google::protobuf::Message {
 public:
  mdTotemInfo();
  virtual ~mdTotemInfo();

  mdTotemInfo(const mdTotemInfo& from);

  inline mdTotemInfo& operator=(const mdTotemInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdTotemInfo& default_instance();

  void Swap(mdTotemInfo* other);

  // implements Message ----------------------------------------------

  mdTotemInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdTotemInfo& from);
  void MergeFrom(const mdTotemInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 template_id = 1;
  inline bool has_template_id() const;
  inline void clear_template_id();
  static const int kTemplateIdFieldNumber = 1;
  inline ::google::protobuf::int32 template_id() const;
  inline void set_template_id(::google::protobuf::int32 value);

  // required int32 group_id = 2;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  inline ::google::protobuf::int32 group_id() const;
  inline void set_group_id(::google::protobuf::int32 value);

  // required int32 bonus_id = 3;
  inline bool has_bonus_id() const;
  inline void clear_bonus_id();
  static const int kBonusIdFieldNumber = 3;
  inline ::google::protobuf::int32 bonus_id() const;
  inline void set_bonus_id(::google::protobuf::int32 value);

  // required int32 grade = 4;
  inline bool has_grade() const;
  inline void clear_grade();
  static const int kGradeFieldNumber = 4;
  inline ::google::protobuf::int32 grade() const;
  inline void set_grade(::google::protobuf::int32 value);

  // required int32 sell_price = 5;
  inline bool has_sell_price() const;
  inline void clear_sell_price();
  static const int kSellPriceFieldNumber = 5;
  inline ::google::protobuf::int32 sell_price() const;
  inline void set_sell_price(::google::protobuf::int32 value);

  // required int32 equip_slot = 6;
  inline bool has_equip_slot() const;
  inline void clear_equip_slot();
  static const int kEquipSlotFieldNumber = 6;
  inline ::google::protobuf::int32 equip_slot() const;
  inline void set_equip_slot(::google::protobuf::int32 value);

  // required int32 refine_limit_count1 = 7;
  inline bool has_refine_limit_count1() const;
  inline void clear_refine_limit_count1();
  static const int kRefineLimitCount1FieldNumber = 7;
  inline ::google::protobuf::int32 refine_limit_count1() const;
  inline void set_refine_limit_count1(::google::protobuf::int32 value);

  // required int32 refine_limit_count2 = 8;
  inline bool has_refine_limit_count2() const;
  inline void clear_refine_limit_count2();
  static const int kRefineLimitCount2FieldNumber = 8;
  inline ::google::protobuf::int32 refine_limit_count2() const;
  inline void set_refine_limit_count2(::google::protobuf::int32 value);

  // required int32 refine_limit_count3 = 9;
  inline bool has_refine_limit_count3() const;
  inline void clear_refine_limit_count3();
  static const int kRefineLimitCount3FieldNumber = 9;
  inline ::google::protobuf::int32 refine_limit_count3() const;
  inline void set_refine_limit_count3(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdTotemInfo)
 private:
  inline void set_has_template_id();
  inline void clear_has_template_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_bonus_id();
  inline void clear_has_bonus_id();
  inline void set_has_grade();
  inline void clear_has_grade();
  inline void set_has_sell_price();
  inline void clear_has_sell_price();
  inline void set_has_equip_slot();
  inline void clear_has_equip_slot();
  inline void set_has_refine_limit_count1();
  inline void clear_has_refine_limit_count1();
  inline void set_has_refine_limit_count2();
  inline void clear_has_refine_limit_count2();
  inline void set_has_refine_limit_count3();
  inline void clear_has_refine_limit_count3();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 template_id_;
  ::google::protobuf::int32 group_id_;
  ::google::protobuf::int32 bonus_id_;
  ::google::protobuf::int32 grade_;
  ::google::protobuf::int32 sell_price_;
  ::google::protobuf::int32 equip_slot_;
  ::google::protobuf::int32 refine_limit_count1_;
  ::google::protobuf::int32 refine_limit_count2_;
  ::google::protobuf::int32 refine_limit_count3_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdTotemInfo* default_instance_;
};
// -------------------------------------------------------------------

class mdSelectTotemOption : public ::google::protobuf::Message {
 public:
  mdSelectTotemOption();
  virtual ~mdSelectTotemOption();

  mdSelectTotemOption(const mdSelectTotemOption& from);

  inline mdSelectTotemOption& operator=(const mdSelectTotemOption& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdSelectTotemOption& default_instance();

  void Swap(mdSelectTotemOption* other);

  // implements Message ----------------------------------------------

  mdSelectTotemOption* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdSelectTotemOption& from);
  void MergeFrom(const mdSelectTotemOption& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 option_id = 1;
  inline bool has_option_id() const;
  inline void clear_option_id();
  static const int kOptionIdFieldNumber = 1;
  inline ::google::protobuf::int32 option_id() const;
  inline void set_option_id(::google::protobuf::int32 value);

  // required int32 grade = 2;
  inline bool has_grade() const;
  inline void clear_grade();
  static const int kGradeFieldNumber = 2;
  inline ::google::protobuf::int32 grade() const;
  inline void set_grade(::google::protobuf::int32 value);

  // required float min_main_value = 3;
  inline bool has_min_main_value() const;
  inline void clear_min_main_value();
  static const int kMinMainValueFieldNumber = 3;
  inline float min_main_value() const;
  inline void set_min_main_value(float value);

  // required float max_main_value = 4;
  inline bool has_max_main_value() const;
  inline void clear_max_main_value();
  static const int kMaxMainValueFieldNumber = 4;
  inline float max_main_value() const;
  inline void set_max_main_value(float value);

  // required float min_sub_value = 5;
  inline bool has_min_sub_value() const;
  inline void clear_min_sub_value();
  static const int kMinSubValueFieldNumber = 5;
  inline float min_sub_value() const;
  inline void set_min_sub_value(float value);

  // required float max_sub_value = 6;
  inline bool has_max_sub_value() const;
  inline void clear_max_sub_value();
  static const int kMaxSubValueFieldNumber = 6;
  inline float max_sub_value() const;
  inline void set_max_sub_value(float value);

  // required int32 decimal_point = 7;
  inline bool has_decimal_point() const;
  inline void clear_decimal_point();
  static const int kDecimalPointFieldNumber = 7;
  inline ::google::protobuf::int32 decimal_point() const;
  inline void set_decimal_point(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdSelectTotemOption)
 private:
  inline void set_has_option_id();
  inline void clear_has_option_id();
  inline void set_has_grade();
  inline void clear_has_grade();
  inline void set_has_min_main_value();
  inline void clear_has_min_main_value();
  inline void set_has_max_main_value();
  inline void clear_has_max_main_value();
  inline void set_has_min_sub_value();
  inline void clear_has_min_sub_value();
  inline void set_has_max_sub_value();
  inline void clear_has_max_sub_value();
  inline void set_has_decimal_point();
  inline void clear_has_decimal_point();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 option_id_;
  ::google::protobuf::int32 grade_;
  float min_main_value_;
  float max_main_value_;
  float min_sub_value_;
  float max_sub_value_;
  ::google::protobuf::int32 decimal_point_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdSelectTotemOption* default_instance_;
};
// -------------------------------------------------------------------

class mdTotemRefineInfo : public ::google::protobuf::Message {
 public:
  mdTotemRefineInfo();
  virtual ~mdTotemRefineInfo();

  mdTotemRefineInfo(const mdTotemRefineInfo& from);

  inline mdTotemRefineInfo& operator=(const mdTotemRefineInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdTotemRefineInfo& default_instance();

  void Swap(mdTotemRefineInfo* other);

  // implements Message ----------------------------------------------

  mdTotemRefineInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdTotemRefineInfo& from);
  void MergeFrom(const mdTotemRefineInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 grade = 1;
  inline bool has_grade() const;
  inline void clear_grade();
  static const int kGradeFieldNumber = 1;
  inline ::google::protobuf::int32 grade() const;
  inline void set_grade(::google::protobuf::int32 value);

  // required int32 refine_chance = 2;
  inline bool has_refine_chance() const;
  inline void clear_refine_chance();
  static const int kRefineChanceFieldNumber = 2;
  inline ::google::protobuf::int32 refine_chance() const;
  inline void set_refine_chance(::google::protobuf::int32 value);

  // required int32 gold_cost = 3;
  inline bool has_gold_cost() const;
  inline void clear_gold_cost();
  static const int kGoldCostFieldNumber = 3;
  inline ::google::protobuf::int32 gold_cost() const;
  inline void set_gold_cost(::google::protobuf::int32 value);

  // required int32 dimensional_piece_cost = 4;
  inline bool has_dimensional_piece_cost() const;
  inline void clear_dimensional_piece_cost();
  static const int kDimensionalPieceCostFieldNumber = 4;
  inline ::google::protobuf::int32 dimensional_piece_cost() const;
  inline void set_dimensional_piece_cost(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdTotemRefineInfo)
 private:
  inline void set_has_grade();
  inline void clear_has_grade();
  inline void set_has_refine_chance();
  inline void clear_has_refine_chance();
  inline void set_has_gold_cost();
  inline void clear_has_gold_cost();
  inline void set_has_dimensional_piece_cost();
  inline void clear_has_dimensional_piece_cost();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 grade_;
  ::google::protobuf::int32 refine_chance_;
  ::google::protobuf::int32 gold_cost_;
  ::google::protobuf::int32 dimensional_piece_cost_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdTotemRefineInfo* default_instance_;
};
// -------------------------------------------------------------------

class mdTotemRefineRateInfo : public ::google::protobuf::Message {
 public:
  mdTotemRefineRateInfo();
  virtual ~mdTotemRefineRateInfo();

  mdTotemRefineRateInfo(const mdTotemRefineRateInfo& from);

  inline mdTotemRefineRateInfo& operator=(const mdTotemRefineRateInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdTotemRefineRateInfo& default_instance();

  void Swap(mdTotemRefineRateInfo* other);

  // implements Message ----------------------------------------------

  mdTotemRefineRateInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdTotemRefineRateInfo& from);
  void MergeFrom(const mdTotemRefineRateInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 grade = 1;
  inline bool has_grade() const;
  inline void clear_grade();
  static const int kGradeFieldNumber = 1;
  inline ::google::protobuf::int32 grade() const;
  inline void set_grade(::google::protobuf::int32 value);

  // required int32 base_rate = 2;
  inline bool has_base_rate() const;
  inline void clear_base_rate();
  static const int kBaseRateFieldNumber = 2;
  inline ::google::protobuf::int32 base_rate() const;
  inline void set_base_rate(::google::protobuf::int32 value);

  // required int32 gold_decrease_rate = 3;
  inline bool has_gold_decrease_rate() const;
  inline void clear_gold_decrease_rate();
  static const int kGoldDecreaseRateFieldNumber = 3;
  inline ::google::protobuf::int32 gold_decrease_rate() const;
  inline void set_gold_decrease_rate(::google::protobuf::int32 value);

  // required int32 gold_increase_rate = 4;
  inline bool has_gold_increase_rate() const;
  inline void clear_gold_increase_rate();
  static const int kGoldIncreaseRateFieldNumber = 4;
  inline ::google::protobuf::int32 gold_increase_rate() const;
  inline void set_gold_increase_rate(::google::protobuf::int32 value);

  // required int32 piece_decrease_rate = 5;
  inline bool has_piece_decrease_rate() const;
  inline void clear_piece_decrease_rate();
  static const int kPieceDecreaseRateFieldNumber = 5;
  inline ::google::protobuf::int32 piece_decrease_rate() const;
  inline void set_piece_decrease_rate(::google::protobuf::int32 value);

  // required int32 piece_increase_rate = 6;
  inline bool has_piece_increase_rate() const;
  inline void clear_piece_increase_rate();
  static const int kPieceIncreaseRateFieldNumber = 6;
  inline ::google::protobuf::int32 piece_increase_rate() const;
  inline void set_piece_increase_rate(::google::protobuf::int32 value);

  // required int32 min_rate = 7;
  inline bool has_min_rate() const;
  inline void clear_min_rate();
  static const int kMinRateFieldNumber = 7;
  inline ::google::protobuf::int32 min_rate() const;
  inline void set_min_rate(::google::protobuf::int32 value);

  // required int32 max_rate = 8;
  inline bool has_max_rate() const;
  inline void clear_max_rate();
  static const int kMaxRateFieldNumber = 8;
  inline ::google::protobuf::int32 max_rate() const;
  inline void set_max_rate(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdTotemRefineRateInfo)
 private:
  inline void set_has_grade();
  inline void clear_has_grade();
  inline void set_has_base_rate();
  inline void clear_has_base_rate();
  inline void set_has_gold_decrease_rate();
  inline void clear_has_gold_decrease_rate();
  inline void set_has_gold_increase_rate();
  inline void clear_has_gold_increase_rate();
  inline void set_has_piece_decrease_rate();
  inline void clear_has_piece_decrease_rate();
  inline void set_has_piece_increase_rate();
  inline void clear_has_piece_increase_rate();
  inline void set_has_min_rate();
  inline void clear_has_min_rate();
  inline void set_has_max_rate();
  inline void clear_has_max_rate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 grade_;
  ::google::protobuf::int32 base_rate_;
  ::google::protobuf::int32 gold_decrease_rate_;
  ::google::protobuf::int32 gold_increase_rate_;
  ::google::protobuf::int32 piece_decrease_rate_;
  ::google::protobuf::int32 piece_increase_rate_;
  ::google::protobuf::int32 min_rate_;
  ::google::protobuf::int32 max_rate_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdTotemRefineRateInfo* default_instance_;
};
// -------------------------------------------------------------------

class mdTotemDismantleInfo : public ::google::protobuf::Message {
 public:
  mdTotemDismantleInfo();
  virtual ~mdTotemDismantleInfo();

  mdTotemDismantleInfo(const mdTotemDismantleInfo& from);

  inline mdTotemDismantleInfo& operator=(const mdTotemDismantleInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdTotemDismantleInfo& default_instance();

  void Swap(mdTotemDismantleInfo* other);

  // implements Message ----------------------------------------------

  mdTotemDismantleInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdTotemDismantleInfo& from);
  void MergeFrom(const mdTotemDismantleInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 refine_level = 1;
  inline bool has_refine_level() const;
  inline void clear_refine_level();
  static const int kRefineLevelFieldNumber = 1;
  inline ::google::protobuf::int32 refine_level() const;
  inline void set_refine_level(::google::protobuf::int32 value);

  // required int32 grade = 2;
  inline bool has_grade() const;
  inline void clear_grade();
  static const int kGradeFieldNumber = 2;
  inline ::google::protobuf::int32 grade() const;
  inline void set_grade(::google::protobuf::int32 value);

  // required int32 amount = 3;
  inline bool has_amount() const;
  inline void clear_amount();
  static const int kAmountFieldNumber = 3;
  inline ::google::protobuf::int32 amount() const;
  inline void set_amount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdTotemDismantleInfo)
 private:
  inline void set_has_refine_level();
  inline void clear_has_refine_level();
  inline void set_has_grade();
  inline void clear_has_grade();
  inline void set_has_amount();
  inline void clear_has_amount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 refine_level_;
  ::google::protobuf::int32 grade_;
  ::google::protobuf::int32 amount_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdTotemDismantleInfo* default_instance_;
};
// -------------------------------------------------------------------

class mdTotemBonusOptionInfo : public ::google::protobuf::Message {
 public:
  mdTotemBonusOptionInfo();
  virtual ~mdTotemBonusOptionInfo();

  mdTotemBonusOptionInfo(const mdTotemBonusOptionInfo& from);

  inline mdTotemBonusOptionInfo& operator=(const mdTotemBonusOptionInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdTotemBonusOptionInfo& default_instance();

  void Swap(mdTotemBonusOptionInfo* other);

  // implements Message ----------------------------------------------

  mdTotemBonusOptionInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdTotemBonusOptionInfo& from);
  void MergeFrom(const mdTotemBonusOptionInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 bonus_id = 1;
  inline bool has_bonus_id() const;
  inline void clear_bonus_id();
  static const int kBonusIdFieldNumber = 1;
  inline ::google::protobuf::int32 bonus_id() const;
  inline void set_bonus_id(::google::protobuf::int32 value);

  // required int32 condition1 = 2;
  inline bool has_condition1() const;
  inline void clear_condition1();
  static const int kCondition1FieldNumber = 2;
  inline ::google::protobuf::int32 condition1() const;
  inline void set_condition1(::google::protobuf::int32 value);

  // required int32 bonus_option_id1 = 3;
  inline bool has_bonus_option_id1() const;
  inline void clear_bonus_option_id1();
  static const int kBonusOptionId1FieldNumber = 3;
  inline ::google::protobuf::int32 bonus_option_id1() const;
  inline void set_bonus_option_id1(::google::protobuf::int32 value);

  // required float bonus_value1 = 4;
  inline bool has_bonus_value1() const;
  inline void clear_bonus_value1();
  static const int kBonusValue1FieldNumber = 4;
  inline float bonus_value1() const;
  inline void set_bonus_value1(float value);

  // required int32 condition2 = 5;
  inline bool has_condition2() const;
  inline void clear_condition2();
  static const int kCondition2FieldNumber = 5;
  inline ::google::protobuf::int32 condition2() const;
  inline void set_condition2(::google::protobuf::int32 value);

  // required int32 bonus_option_id2 = 6;
  inline bool has_bonus_option_id2() const;
  inline void clear_bonus_option_id2();
  static const int kBonusOptionId2FieldNumber = 6;
  inline ::google::protobuf::int32 bonus_option_id2() const;
  inline void set_bonus_option_id2(::google::protobuf::int32 value);

  // required float bonus_value2 = 7;
  inline bool has_bonus_value2() const;
  inline void clear_bonus_value2();
  static const int kBonusValue2FieldNumber = 7;
  inline float bonus_value2() const;
  inline void set_bonus_value2(float value);

  // required int32 condition3 = 8;
  inline bool has_condition3() const;
  inline void clear_condition3();
  static const int kCondition3FieldNumber = 8;
  inline ::google::protobuf::int32 condition3() const;
  inline void set_condition3(::google::protobuf::int32 value);

  // required int32 bonus_option_id3 = 9;
  inline bool has_bonus_option_id3() const;
  inline void clear_bonus_option_id3();
  static const int kBonusOptionId3FieldNumber = 9;
  inline ::google::protobuf::int32 bonus_option_id3() const;
  inline void set_bonus_option_id3(::google::protobuf::int32 value);

  // required float bonus_value3 = 10;
  inline bool has_bonus_value3() const;
  inline void clear_bonus_value3();
  static const int kBonusValue3FieldNumber = 10;
  inline float bonus_value3() const;
  inline void set_bonus_value3(float value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdTotemBonusOptionInfo)
 private:
  inline void set_has_bonus_id();
  inline void clear_has_bonus_id();
  inline void set_has_condition1();
  inline void clear_has_condition1();
  inline void set_has_bonus_option_id1();
  inline void clear_has_bonus_option_id1();
  inline void set_has_bonus_value1();
  inline void clear_has_bonus_value1();
  inline void set_has_condition2();
  inline void clear_has_condition2();
  inline void set_has_bonus_option_id2();
  inline void clear_has_bonus_option_id2();
  inline void set_has_bonus_value2();
  inline void clear_has_bonus_value2();
  inline void set_has_condition3();
  inline void clear_has_condition3();
  inline void set_has_bonus_option_id3();
  inline void clear_has_bonus_option_id3();
  inline void set_has_bonus_value3();
  inline void clear_has_bonus_value3();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 bonus_id_;
  ::google::protobuf::int32 condition1_;
  ::google::protobuf::int32 bonus_option_id1_;
  float bonus_value1_;
  ::google::protobuf::int32 condition2_;
  ::google::protobuf::int32 bonus_option_id2_;
  float bonus_value2_;
  ::google::protobuf::int32 condition3_;
  ::google::protobuf::int32 bonus_option_id3_;
  float bonus_value3_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdTotemBonusOptionInfo* default_instance_;
};
// -------------------------------------------------------------------

class mdDimensionInfo : public ::google::protobuf::Message {
 public:
  mdDimensionInfo();
  virtual ~mdDimensionInfo();

  mdDimensionInfo(const mdDimensionInfo& from);

  inline mdDimensionInfo& operator=(const mdDimensionInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdDimensionInfo& default_instance();

  void Swap(mdDimensionInfo* other);

  // implements Message ----------------------------------------------

  mdDimensionInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdDimensionInfo& from);
  void MergeFrom(const mdDimensionInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 difficulty_level = 1;
  inline bool has_difficulty_level() const;
  inline void clear_difficulty_level();
  static const int kDifficultyLevelFieldNumber = 1;
  inline ::google::protobuf::int32 difficulty_level() const;
  inline void set_difficulty_level(::google::protobuf::int32 value);

  // required int32 difficulty_scale = 2;
  inline bool has_difficulty_scale() const;
  inline void clear_difficulty_scale();
  static const int kDifficultyScaleFieldNumber = 2;
  inline ::google::protobuf::int32 difficulty_scale() const;
  inline void set_difficulty_scale(::google::protobuf::int32 value);

  // required int32 fixed_drop_item_id1 = 3;
  inline bool has_fixed_drop_item_id1() const;
  inline void clear_fixed_drop_item_id1();
  static const int kFixedDropItemId1FieldNumber = 3;
  inline ::google::protobuf::int32 fixed_drop_item_id1() const;
  inline void set_fixed_drop_item_id1(::google::protobuf::int32 value);

  // required int32 fixed_drop_count1 = 4;
  inline bool has_fixed_drop_count1() const;
  inline void clear_fixed_drop_count1();
  static const int kFixedDropCount1FieldNumber = 4;
  inline ::google::protobuf::int32 fixed_drop_count1() const;
  inline void set_fixed_drop_count1(::google::protobuf::int32 value);

  // required int32 drop_totem_count_min = 5;
  inline bool has_drop_totem_count_min() const;
  inline void clear_drop_totem_count_min();
  static const int kDropTotemCountMinFieldNumber = 5;
  inline ::google::protobuf::int32 drop_totem_count_min() const;
  inline void set_drop_totem_count_min(::google::protobuf::int32 value);

  // required int32 drop_totem_count_max = 6;
  inline bool has_drop_totem_count_max() const;
  inline void clear_drop_totem_count_max();
  static const int kDropTotemCountMaxFieldNumber = 6;
  inline ::google::protobuf::int32 drop_totem_count_max() const;
  inline void set_drop_totem_count_max(::google::protobuf::int32 value);

  // required int32 recommend_power = 7;
  inline bool has_recommend_power() const;
  inline void clear_recommend_power();
  static const int kRecommendPowerFieldNumber = 7;
  inline ::google::protobuf::int32 recommend_power() const;
  inline void set_recommend_power(::google::protobuf::int32 value);

  // required int32 recommend_attack = 8;
  inline bool has_recommend_attack() const;
  inline void clear_recommend_attack();
  static const int kRecommendAttackFieldNumber = 8;
  inline ::google::protobuf::int32 recommend_attack() const;
  inline void set_recommend_attack(::google::protobuf::int32 value);

  // required int32 recommend_defense = 9;
  inline bool has_recommend_defense() const;
  inline void clear_recommend_defense();
  static const int kRecommendDefenseFieldNumber = 9;
  inline ::google::protobuf::int32 recommend_defense() const;
  inline void set_recommend_defense(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdDimensionInfo)
 private:
  inline void set_has_difficulty_level();
  inline void clear_has_difficulty_level();
  inline void set_has_difficulty_scale();
  inline void clear_has_difficulty_scale();
  inline void set_has_fixed_drop_item_id1();
  inline void clear_has_fixed_drop_item_id1();
  inline void set_has_fixed_drop_count1();
  inline void clear_has_fixed_drop_count1();
  inline void set_has_drop_totem_count_min();
  inline void clear_has_drop_totem_count_min();
  inline void set_has_drop_totem_count_max();
  inline void clear_has_drop_totem_count_max();
  inline void set_has_recommend_power();
  inline void clear_has_recommend_power();
  inline void set_has_recommend_attack();
  inline void clear_has_recommend_attack();
  inline void set_has_recommend_defense();
  inline void clear_has_recommend_defense();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 difficulty_level_;
  ::google::protobuf::int32 difficulty_scale_;
  ::google::protobuf::int32 fixed_drop_item_id1_;
  ::google::protobuf::int32 fixed_drop_count1_;
  ::google::protobuf::int32 drop_totem_count_min_;
  ::google::protobuf::int32 drop_totem_count_max_;
  ::google::protobuf::int32 recommend_power_;
  ::google::protobuf::int32 recommend_attack_;
  ::google::protobuf::int32 recommend_defense_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdDimensionInfo* default_instance_;
};
// -------------------------------------------------------------------

class mdTotemDropGradeRate : public ::google::protobuf::Message {
 public:
  mdTotemDropGradeRate();
  virtual ~mdTotemDropGradeRate();

  mdTotemDropGradeRate(const mdTotemDropGradeRate& from);

  inline mdTotemDropGradeRate& operator=(const mdTotemDropGradeRate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdTotemDropGradeRate& default_instance();

  void Swap(mdTotemDropGradeRate* other);

  // implements Message ----------------------------------------------

  mdTotemDropGradeRate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdTotemDropGradeRate& from);
  void MergeFrom(const mdTotemDropGradeRate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 difficulty_level = 1;
  inline bool has_difficulty_level() const;
  inline void clear_difficulty_level();
  static const int kDifficultyLevelFieldNumber = 1;
  inline ::google::protobuf::int32 difficulty_level() const;
  inline void set_difficulty_level(::google::protobuf::int32 value);

  // required int32 normal = 2;
  inline bool has_normal() const;
  inline void clear_normal();
  static const int kNormalFieldNumber = 2;
  inline ::google::protobuf::int32 normal() const;
  inline void set_normal(::google::protobuf::int32 value);

  // required int32 magic = 3;
  inline bool has_magic() const;
  inline void clear_magic();
  static const int kMagicFieldNumber = 3;
  inline ::google::protobuf::int32 magic() const;
  inline void set_magic(::google::protobuf::int32 value);

  // required int32 rare = 4;
  inline bool has_rare() const;
  inline void clear_rare();
  static const int kRareFieldNumber = 4;
  inline ::google::protobuf::int32 rare() const;
  inline void set_rare(::google::protobuf::int32 value);

  // required int32 hero = 5;
  inline bool has_hero() const;
  inline void clear_hero();
  static const int kHeroFieldNumber = 5;
  inline ::google::protobuf::int32 hero() const;
  inline void set_hero(::google::protobuf::int32 value);

  // required int32 legend = 6;
  inline bool has_legend() const;
  inline void clear_legend();
  static const int kLegendFieldNumber = 6;
  inline ::google::protobuf::int32 legend() const;
  inline void set_legend(::google::protobuf::int32 value);

  // required int32 artifact = 7;
  inline bool has_artifact() const;
  inline void clear_artifact();
  static const int kArtifactFieldNumber = 7;
  inline ::google::protobuf::int32 artifact() const;
  inline void set_artifact(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdTotemDropGradeRate)
 private:
  inline void set_has_difficulty_level();
  inline void clear_has_difficulty_level();
  inline void set_has_normal();
  inline void clear_has_normal();
  inline void set_has_magic();
  inline void clear_has_magic();
  inline void set_has_rare();
  inline void clear_has_rare();
  inline void set_has_hero();
  inline void clear_has_hero();
  inline void set_has_legend();
  inline void clear_has_legend();
  inline void set_has_artifact();
  inline void clear_has_artifact();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 difficulty_level_;
  ::google::protobuf::int32 normal_;
  ::google::protobuf::int32 magic_;
  ::google::protobuf::int32 rare_;
  ::google::protobuf::int32 hero_;
  ::google::protobuf::int32 legend_;
  ::google::protobuf::int32 artifact_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdTotemDropGradeRate* default_instance_;
};
// -------------------------------------------------------------------

class mdTotemDropGroupRate : public ::google::protobuf::Message {
 public:
  mdTotemDropGroupRate();
  virtual ~mdTotemDropGroupRate();

  mdTotemDropGroupRate(const mdTotemDropGroupRate& from);

  inline mdTotemDropGroupRate& operator=(const mdTotemDropGroupRate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdTotemDropGroupRate& default_instance();

  void Swap(mdTotemDropGroupRate* other);

  // implements Message ----------------------------------------------

  mdTotemDropGroupRate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdTotemDropGroupRate& from);
  void MergeFrom(const mdTotemDropGroupRate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 difficulty_level = 1;
  inline bool has_difficulty_level() const;
  inline void clear_difficulty_level();
  static const int kDifficultyLevelFieldNumber = 1;
  inline ::google::protobuf::int32 difficulty_level() const;
  inline void set_difficulty_level(::google::protobuf::int32 value);

  // required int32 group_id = 2;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  inline ::google::protobuf::int32 group_id() const;
  inline void set_group_id(::google::protobuf::int32 value);

  // required int32 rate = 3;
  inline bool has_rate() const;
  inline void clear_rate();
  static const int kRateFieldNumber = 3;
  inline ::google::protobuf::int32 rate() const;
  inline void set_rate(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdTotemDropGroupRate)
 private:
  inline void set_has_difficulty_level();
  inline void clear_has_difficulty_level();
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_rate();
  inline void clear_has_rate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 difficulty_level_;
  ::google::protobuf::int32 group_id_;
  ::google::protobuf::int32 rate_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdTotemDropGroupRate* default_instance_;
};
// -------------------------------------------------------------------

class mdDimensionWeekReward : public ::google::protobuf::Message {
 public:
  mdDimensionWeekReward();
  virtual ~mdDimensionWeekReward();

  mdDimensionWeekReward(const mdDimensionWeekReward& from);

  inline mdDimensionWeekReward& operator=(const mdDimensionWeekReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdDimensionWeekReward& default_instance();

  void Swap(mdDimensionWeekReward* other);

  // implements Message ----------------------------------------------

  mdDimensionWeekReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdDimensionWeekReward& from);
  void MergeFrom(const mdDimensionWeekReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // required int32 ranking_min = 2;
  inline bool has_ranking_min() const;
  inline void clear_ranking_min();
  static const int kRankingMinFieldNumber = 2;
  inline ::google::protobuf::int32 ranking_min() const;
  inline void set_ranking_min(::google::protobuf::int32 value);

  // required int32 ranking_max = 3;
  inline bool has_ranking_max() const;
  inline void clear_ranking_max();
  static const int kRankingMaxFieldNumber = 3;
  inline ::google::protobuf::int32 ranking_max() const;
  inline void set_ranking_max(::google::protobuf::int32 value);

  // repeated .b2.protocol.commondata.RawReward rewards = 4;
  inline int rewards_size() const;
  inline void clear_rewards();
  static const int kRewardsFieldNumber = 4;
  inline const ::b2::protocol::commondata::RawReward& rewards(int index) const;
  inline ::b2::protocol::commondata::RawReward* mutable_rewards(int index);
  inline ::b2::protocol::commondata::RawReward* add_rewards();
  inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::RawReward >&
      rewards() const;
  inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::RawReward >*
      mutable_rewards();

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdDimensionWeekReward)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_ranking_min();
  inline void clear_has_ranking_min();
  inline void set_has_ranking_max();
  inline void clear_has_ranking_max();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 ranking_min_;
  ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::RawReward > rewards_;
  ::google::protobuf::int32 ranking_max_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdDimensionWeekReward* default_instance_;
};
// -------------------------------------------------------------------

class mdTotemPrefixLotteryInfo : public ::google::protobuf::Message {
 public:
  mdTotemPrefixLotteryInfo();
  virtual ~mdTotemPrefixLotteryInfo();

  mdTotemPrefixLotteryInfo(const mdTotemPrefixLotteryInfo& from);

  inline mdTotemPrefixLotteryInfo& operator=(const mdTotemPrefixLotteryInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdTotemPrefixLotteryInfo& default_instance();

  void Swap(mdTotemPrefixLotteryInfo* other);

  // implements Message ----------------------------------------------

  mdTotemPrefixLotteryInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdTotemPrefixLotteryInfo& from);
  void MergeFrom(const mdTotemPrefixLotteryInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 base_prefix = 2;
  inline bool has_base_prefix() const;
  inline void clear_base_prefix();
  static const int kBasePrefixFieldNumber = 2;
  inline ::google::protobuf::int32 base_prefix() const;
  inline void set_base_prefix(::google::protobuf::int32 value);

  // required int32 grade = 3;
  inline bool has_grade() const;
  inline void clear_grade();
  static const int kGradeFieldNumber = 3;
  inline ::google::protobuf::int32 grade() const;
  inline void set_grade(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdTotemPrefixLotteryInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_base_prefix();
  inline void clear_has_base_prefix();
  inline void set_has_grade();
  inline void clear_has_grade();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 base_prefix_;
  ::google::protobuf::int32 grade_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdTotemPrefixLotteryInfo* default_instance_;
};
// -------------------------------------------------------------------

class mdExchangeSystemInfo : public ::google::protobuf::Message {
 public:
  mdExchangeSystemInfo();
  virtual ~mdExchangeSystemInfo();

  mdExchangeSystemInfo(const mdExchangeSystemInfo& from);

  inline mdExchangeSystemInfo& operator=(const mdExchangeSystemInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdExchangeSystemInfo& default_instance();

  void Swap(mdExchangeSystemInfo* other);

  // implements Message ----------------------------------------------

  mdExchangeSystemInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdExchangeSystemInfo& from);
  void MergeFrom(const mdExchangeSystemInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 template_id = 2;
  inline bool has_template_id() const;
  inline void clear_template_id();
  static const int kTemplateIdFieldNumber = 2;
  inline ::google::protobuf::int32 template_id() const;
  inline void set_template_id(::google::protobuf::int32 value);

  // required int32 request_count = 3;
  inline bool has_request_count() const;
  inline void clear_request_count();
  static const int kRequestCountFieldNumber = 3;
  inline ::google::protobuf::int32 request_count() const;
  inline void set_request_count(::google::protobuf::int32 value);

  // required int32 exchange_template_id = 4;
  inline bool has_exchange_template_id() const;
  inline void clear_exchange_template_id();
  static const int kExchangeTemplateIdFieldNumber = 4;
  inline ::google::protobuf::int32 exchange_template_id() const;
  inline void set_exchange_template_id(::google::protobuf::int32 value);

  // required int32 result_count = 5;
  inline bool has_result_count() const;
  inline void clear_result_count();
  static const int kResultCountFieldNumber = 5;
  inline ::google::protobuf::int32 result_count() const;
  inline void set_result_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdExchangeSystemInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_template_id();
  inline void clear_has_template_id();
  inline void set_has_request_count();
  inline void clear_has_request_count();
  inline void set_has_exchange_template_id();
  inline void clear_has_exchange_template_id();
  inline void set_has_result_count();
  inline void clear_has_result_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 template_id_;
  ::google::protobuf::int32 request_count_;
  ::google::protobuf::int32 exchange_template_id_;
  ::google::protobuf::int32 result_count_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdExchangeSystemInfo* default_instance_;
};
// -------------------------------------------------------------------

class mdExchangeSystemCost : public ::google::protobuf::Message {
 public:
  mdExchangeSystemCost();
  virtual ~mdExchangeSystemCost();

  mdExchangeSystemCost(const mdExchangeSystemCost& from);

  inline mdExchangeSystemCost& operator=(const mdExchangeSystemCost& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdExchangeSystemCost& default_instance();

  void Swap(mdExchangeSystemCost* other);

  // implements Message ----------------------------------------------

  mdExchangeSystemCost* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdExchangeSystemCost& from);
  void MergeFrom(const mdExchangeSystemCost& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 exchange_id = 1;
  inline bool has_exchange_id() const;
  inline void clear_exchange_id();
  static const int kExchangeIdFieldNumber = 1;
  inline ::google::protobuf::int32 exchange_id() const;
  inline void set_exchange_id(::google::protobuf::int32 value);

  // required int32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // required int32 gold_cost = 3;
  inline bool has_gold_cost() const;
  inline void clear_gold_cost();
  static const int kGoldCostFieldNumber = 3;
  inline ::google::protobuf::int32 gold_cost() const;
  inline void set_gold_cost(::google::protobuf::int32 value);

  // required int32 gem_cost = 4;
  inline bool has_gem_cost() const;
  inline void clear_gem_cost();
  static const int kGemCostFieldNumber = 4;
  inline ::google::protobuf::int32 gem_cost() const;
  inline void set_gem_cost(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdExchangeSystemCost)
 private:
  inline void set_has_exchange_id();
  inline void clear_has_exchange_id();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_gold_cost();
  inline void clear_has_gold_cost();
  inline void set_has_gem_cost();
  inline void clear_has_gem_cost();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 exchange_id_;
  ::google::protobuf::int32 count_;
  ::google::protobuf::int32 gold_cost_;
  ::google::protobuf::int32 gem_cost_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdExchangeSystemCost* default_instance_;
};
// -------------------------------------------------------------------

class mdQualityTransRateInfo : public ::google::protobuf::Message {
 public:
  mdQualityTransRateInfo();
  virtual ~mdQualityTransRateInfo();

  mdQualityTransRateInfo(const mdQualityTransRateInfo& from);

  inline mdQualityTransRateInfo& operator=(const mdQualityTransRateInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdQualityTransRateInfo& default_instance();

  void Swap(mdQualityTransRateInfo* other);

  // implements Message ----------------------------------------------

  mdQualityTransRateInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdQualityTransRateInfo& from);
  void MergeFrom(const mdQualityTransRateInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 template_id = 1;
  inline bool has_template_id() const;
  inline void clear_template_id();
  static const int kTemplateIdFieldNumber = 1;
  inline ::google::protobuf::int32 template_id() const;
  inline void set_template_id(::google::protobuf::int32 value);

  // required .b2.protocol.commondata.EquipCategory equip_category = 2;
  inline bool has_equip_category() const;
  inline void clear_equip_category();
  static const int kEquipCategoryFieldNumber = 2;
  inline ::b2::protocol::commondata::EquipCategory equip_category() const;
  inline void set_equip_category(::b2::protocol::commondata::EquipCategory value);

  // required int32 quality = 3;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 3;
  inline ::google::protobuf::int32 quality() const;
  inline void set_quality(::google::protobuf::int32 value);

  // required int32 trans_rate = 4;
  inline bool has_trans_rate() const;
  inline void clear_trans_rate();
  static const int kTransRateFieldNumber = 4;
  inline ::google::protobuf::int32 trans_rate() const;
  inline void set_trans_rate(::google::protobuf::int32 value);

  // required int32 trans_cond_quality = 5;
  inline bool has_trans_cond_quality() const;
  inline void clear_trans_cond_quality();
  static const int kTransCondQualityFieldNumber = 5;
  inline ::google::protobuf::int32 trans_cond_quality() const;
  inline void set_trans_cond_quality(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdQualityTransRateInfo)
 private:
  inline void set_has_template_id();
  inline void clear_has_template_id();
  inline void set_has_equip_category();
  inline void clear_has_equip_category();
  inline void set_has_quality();
  inline void clear_has_quality();
  inline void set_has_trans_rate();
  inline void clear_has_trans_rate();
  inline void set_has_trans_cond_quality();
  inline void clear_has_trans_cond_quality();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 template_id_;
  int equip_category_;
  ::google::protobuf::int32 quality_;
  ::google::protobuf::int32 trans_rate_;
  ::google::protobuf::int32 trans_cond_quality_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdQualityTransRateInfo* default_instance_;
};
// -------------------------------------------------------------------

class mdLotteryShopRateQualityInfo : public ::google::protobuf::Message {
 public:
  mdLotteryShopRateQualityInfo();
  virtual ~mdLotteryShopRateQualityInfo();

  mdLotteryShopRateQualityInfo(const mdLotteryShopRateQualityInfo& from);

  inline mdLotteryShopRateQualityInfo& operator=(const mdLotteryShopRateQualityInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdLotteryShopRateQualityInfo& default_instance();

  void Swap(mdLotteryShopRateQualityInfo* other);

  // implements Message ----------------------------------------------

  mdLotteryShopRateQualityInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdLotteryShopRateQualityInfo& from);
  void MergeFrom(const mdLotteryShopRateQualityInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .b2.protocol.commondata.EquipCategory equip_category = 1;
  inline bool has_equip_category() const;
  inline void clear_equip_category();
  static const int kEquipCategoryFieldNumber = 1;
  inline ::b2::protocol::commondata::EquipCategory equip_category() const;
  inline void set_equip_category(::b2::protocol::commondata::EquipCategory value);

  // required int32 quality = 2;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 2;
  inline ::google::protobuf::int32 quality() const;
  inline void set_quality(::google::protobuf::int32 value);

  // required int32 rate = 3;
  inline bool has_rate() const;
  inline void clear_rate();
  static const int kRateFieldNumber = 3;
  inline ::google::protobuf::int32 rate() const;
  inline void set_rate(::google::protobuf::int32 value);

  // required double quality_inc_level = 4;
  inline bool has_quality_inc_level() const;
  inline void clear_quality_inc_level();
  static const int kQualityIncLevelFieldNumber = 4;
  inline double quality_inc_level() const;
  inline void set_quality_inc_level(double value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdLotteryShopRateQualityInfo)
 private:
  inline void set_has_equip_category();
  inline void clear_has_equip_category();
  inline void set_has_quality();
  inline void clear_has_quality();
  inline void set_has_rate();
  inline void clear_has_rate();
  inline void set_has_quality_inc_level();
  inline void clear_has_quality_inc_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int equip_category_;
  ::google::protobuf::int32 quality_;
  double quality_inc_level_;
  ::google::protobuf::int32 rate_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdLotteryShopRateQualityInfo* default_instance_;
};
// -------------------------------------------------------------------

class mdFactoryInfo : public ::google::protobuf::Message {
 public:
  mdFactoryInfo();
  virtual ~mdFactoryInfo();

  mdFactoryInfo(const mdFactoryInfo& from);

  inline mdFactoryInfo& operator=(const mdFactoryInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdFactoryInfo& default_instance();

  void Swap(mdFactoryInfo* other);

  // implements Message ----------------------------------------------

  mdFactoryInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdFactoryInfo& from);
  void MergeFrom(const mdFactoryInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 factory_type = 2;
  inline bool has_factory_type() const;
  inline void clear_factory_type();
  static const int kFactoryTypeFieldNumber = 2;
  inline ::google::protobuf::int32 factory_type() const;
  inline void set_factory_type(::google::protobuf::int32 value);

  // required int32 factory_tab = 3;
  inline bool has_factory_tab() const;
  inline void clear_factory_tab();
  static const int kFactoryTabFieldNumber = 3;
  inline ::google::protobuf::int32 factory_tab() const;
  inline void set_factory_tab(::google::protobuf::int32 value);

  // required int32 group_id = 4;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 4;
  inline ::google::protobuf::int32 group_id() const;
  inline void set_group_id(::google::protobuf::int32 value);

  // required int32 group_sort = 5;
  inline bool has_group_sort() const;
  inline void clear_group_sort();
  static const int kGroupSortFieldNumber = 5;
  inline ::google::protobuf::int32 group_sort() const;
  inline void set_group_sort(::google::protobuf::int32 value);

  // required int32 item_sort = 6;
  inline bool has_item_sort() const;
  inline void clear_item_sort();
  static const int kItemSortFieldNumber = 6;
  inline ::google::protobuf::int32 item_sort() const;
  inline void set_item_sort(::google::protobuf::int32 value);

  // required int32 limit_id = 7;
  inline bool has_limit_id() const;
  inline void clear_limit_id();
  static const int kLimitIdFieldNumber = 7;
  inline ::google::protobuf::int32 limit_id() const;
  inline void set_limit_id(::google::protobuf::int32 value);

  // required int32 character_type = 8;
  inline bool has_character_type() const;
  inline void clear_character_type();
  static const int kCharacterTypeFieldNumber = 8;
  inline ::google::protobuf::int32 character_type() const;
  inline void set_character_type(::google::protobuf::int32 value);

  // required int32 gold_cost = 9;
  inline bool has_gold_cost() const;
  inline void clear_gold_cost();
  static const int kGoldCostFieldNumber = 9;
  inline ::google::protobuf::int32 gold_cost() const;
  inline void set_gold_cost(::google::protobuf::int32 value);

  // required int32 gem_cost = 10;
  inline bool has_gem_cost() const;
  inline void clear_gem_cost();
  static const int kGemCostFieldNumber = 10;
  inline ::google::protobuf::int32 gem_cost() const;
  inline void set_gem_cost(::google::protobuf::int32 value);

  // required int32 dark_crystal_cost = 11;
  inline bool has_dark_crystal_cost() const;
  inline void clear_dark_crystal_cost();
  static const int kDarkCrystalCostFieldNumber = 11;
  inline ::google::protobuf::int32 dark_crystal_cost() const;
  inline void set_dark_crystal_cost(::google::protobuf::int32 value);

  // required int32 success_rate = 12;
  inline bool has_success_rate() const;
  inline void clear_success_rate();
  static const int kSuccessRateFieldNumber = 12;
  inline ::google::protobuf::int32 success_rate() const;
  inline void set_success_rate(::google::protobuf::int32 value);

  // required int32 huge_success_rate = 13;
  inline bool has_huge_success_rate() const;
  inline void clear_huge_success_rate();
  static const int kHugeSuccessRateFieldNumber = 13;
  inline ::google::protobuf::int32 huge_success_rate() const;
  inline void set_huge_success_rate(::google::protobuf::int32 value);

  // required int32 fail_rate = 14;
  inline bool has_fail_rate() const;
  inline void clear_fail_rate();
  static const int kFailRateFieldNumber = 14;
  inline ::google::protobuf::int32 fail_rate() const;
  inline void set_fail_rate(::google::protobuf::int32 value);

  // required int32 huge_success_add_item_template_id = 15;
  inline bool has_huge_success_add_item_template_id() const;
  inline void clear_huge_success_add_item_template_id();
  static const int kHugeSuccessAddItemTemplateIdFieldNumber = 15;
  inline ::google::protobuf::int32 huge_success_add_item_template_id() const;
  inline void set_huge_success_add_item_template_id(::google::protobuf::int32 value);

  // required int32 huge_success_add_item_count = 16;
  inline bool has_huge_success_add_item_count() const;
  inline void clear_huge_success_add_item_count();
  static const int kHugeSuccessAddItemCountFieldNumber = 16;
  inline ::google::protobuf::int32 huge_success_add_item_count() const;
  inline void set_huge_success_add_item_count(::google::protobuf::int32 value);

  // required int32 fail_add_item_template_id = 17;
  inline bool has_fail_add_item_template_id() const;
  inline void clear_fail_add_item_template_id();
  static const int kFailAddItemTemplateIdFieldNumber = 17;
  inline ::google::protobuf::int32 fail_add_item_template_id() const;
  inline void set_fail_add_item_template_id(::google::protobuf::int32 value);

  // required int32 fail_add_item_count = 18;
  inline bool has_fail_add_item_count() const;
  inline void clear_fail_add_item_count();
  static const int kFailAddItemCountFieldNumber = 18;
  inline ::google::protobuf::int32 fail_add_item_count() const;
  inline void set_fail_add_item_count(::google::protobuf::int32 value);

  // required int32 result_item_template_id = 19;
  inline bool has_result_item_template_id() const;
  inline void clear_result_item_template_id();
  static const int kResultItemTemplateIdFieldNumber = 19;
  inline ::google::protobuf::int32 result_item_template_id() const;
  inline void set_result_item_template_id(::google::protobuf::int32 value);

  // required int32 result_item_count = 20;
  inline bool has_result_item_count() const;
  inline void clear_result_item_count();
  static const int kResultItemCountFieldNumber = 20;
  inline ::google::protobuf::int32 result_item_count() const;
  inline void set_result_item_count(::google::protobuf::int32 value);

  // required int32 main_material_template_id = 21;
  inline bool has_main_material_template_id() const;
  inline void clear_main_material_template_id();
  static const int kMainMaterialTemplateIdFieldNumber = 21;
  inline ::google::protobuf::int32 main_material_template_id() const;
  inline void set_main_material_template_id(::google::protobuf::int32 value);

  // required int32 main_material_cond_reinforce = 22;
  inline bool has_main_material_cond_reinforce() const;
  inline void clear_main_material_cond_reinforce();
  static const int kMainMaterialCondReinforceFieldNumber = 22;
  inline ::google::protobuf::int32 main_material_cond_reinforce() const;
  inline void set_main_material_cond_reinforce(::google::protobuf::int32 value);

  // required int32 main_material_cond_level = 23;
  inline bool has_main_material_cond_level() const;
  inline void clear_main_material_cond_level();
  static const int kMainMaterialCondLevelFieldNumber = 23;
  inline ::google::protobuf::int32 main_material_cond_level() const;
  inline void set_main_material_cond_level(::google::protobuf::int32 value);

  // required int32 main_material_count = 24;
  inline bool has_main_material_count() const;
  inline void clear_main_material_count();
  static const int kMainMaterialCountFieldNumber = 24;
  inline ::google::protobuf::int32 main_material_count() const;
  inline void set_main_material_count(::google::protobuf::int32 value);

  // required int32 main_material_fail_refund_rate = 25;
  inline bool has_main_material_fail_refund_rate() const;
  inline void clear_main_material_fail_refund_rate();
  static const int kMainMaterialFailRefundRateFieldNumber = 25;
  inline ::google::protobuf::int32 main_material_fail_refund_rate() const;
  inline void set_main_material_fail_refund_rate(::google::protobuf::int32 value);

  // required int32 material_template_id1 = 26;
  inline bool has_material_template_id1() const;
  inline void clear_material_template_id1();
  static const int kMaterialTemplateId1FieldNumber = 26;
  inline ::google::protobuf::int32 material_template_id1() const;
  inline void set_material_template_id1(::google::protobuf::int32 value);

  // required int32 material_count1 = 27;
  inline bool has_material_count1() const;
  inline void clear_material_count1();
  static const int kMaterialCount1FieldNumber = 27;
  inline ::google::protobuf::int32 material_count1() const;
  inline void set_material_count1(::google::protobuf::int32 value);

  // required int32 material_fail_refund_rate1 = 28;
  inline bool has_material_fail_refund_rate1() const;
  inline void clear_material_fail_refund_rate1();
  static const int kMaterialFailRefundRate1FieldNumber = 28;
  inline ::google::protobuf::int32 material_fail_refund_rate1() const;
  inline void set_material_fail_refund_rate1(::google::protobuf::int32 value);

  // required int32 material_template_id2 = 29;
  inline bool has_material_template_id2() const;
  inline void clear_material_template_id2();
  static const int kMaterialTemplateId2FieldNumber = 29;
  inline ::google::protobuf::int32 material_template_id2() const;
  inline void set_material_template_id2(::google::protobuf::int32 value);

  // required int32 material_count2 = 30;
  inline bool has_material_count2() const;
  inline void clear_material_count2();
  static const int kMaterialCount2FieldNumber = 30;
  inline ::google::protobuf::int32 material_count2() const;
  inline void set_material_count2(::google::protobuf::int32 value);

  // required int32 material_fail_refund_rate2 = 31;
  inline bool has_material_fail_refund_rate2() const;
  inline void clear_material_fail_refund_rate2();
  static const int kMaterialFailRefundRate2FieldNumber = 31;
  inline ::google::protobuf::int32 material_fail_refund_rate2() const;
  inline void set_material_fail_refund_rate2(::google::protobuf::int32 value);

  // required int32 material_template_id3 = 32;
  inline bool has_material_template_id3() const;
  inline void clear_material_template_id3();
  static const int kMaterialTemplateId3FieldNumber = 32;
  inline ::google::protobuf::int32 material_template_id3() const;
  inline void set_material_template_id3(::google::protobuf::int32 value);

  // required int32 material_count3 = 33;
  inline bool has_material_count3() const;
  inline void clear_material_count3();
  static const int kMaterialCount3FieldNumber = 33;
  inline ::google::protobuf::int32 material_count3() const;
  inline void set_material_count3(::google::protobuf::int32 value);

  // required int32 material_fail_refund_rate3 = 34;
  inline bool has_material_fail_refund_rate3() const;
  inline void clear_material_fail_refund_rate3();
  static const int kMaterialFailRefundRate3FieldNumber = 34;
  inline ::google::protobuf::int32 material_fail_refund_rate3() const;
  inline void set_material_fail_refund_rate3(::google::protobuf::int32 value);

  // required int32 material_template_id4 = 35;
  inline bool has_material_template_id4() const;
  inline void clear_material_template_id4();
  static const int kMaterialTemplateId4FieldNumber = 35;
  inline ::google::protobuf::int32 material_template_id4() const;
  inline void set_material_template_id4(::google::protobuf::int32 value);

  // required int32 material_count4 = 36;
  inline bool has_material_count4() const;
  inline void clear_material_count4();
  static const int kMaterialCount4FieldNumber = 36;
  inline ::google::protobuf::int32 material_count4() const;
  inline void set_material_count4(::google::protobuf::int32 value);

  // required int32 material_fail_refund_rate4 = 37;
  inline bool has_material_fail_refund_rate4() const;
  inline void clear_material_fail_refund_rate4();
  static const int kMaterialFailRefundRate4FieldNumber = 37;
  inline ::google::protobuf::int32 material_fail_refund_rate4() const;
  inline void set_material_fail_refund_rate4(::google::protobuf::int32 value);

  // required .b2.protocol.commondata.FactoryVisibleType visible_type = 38;
  inline bool has_visible_type() const;
  inline void clear_visible_type();
  static const int kVisibleTypeFieldNumber = 38;
  inline ::b2::protocol::commondata::FactoryVisibleType visible_type() const;
  inline void set_visible_type(::b2::protocol::commondata::FactoryVisibleType value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdFactoryInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_factory_type();
  inline void clear_has_factory_type();
  inline void set_has_factory_tab();
  inline void clear_has_factory_tab();
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_group_sort();
  inline void clear_has_group_sort();
  inline void set_has_item_sort();
  inline void clear_has_item_sort();
  inline void set_has_limit_id();
  inline void clear_has_limit_id();
  inline void set_has_character_type();
  inline void clear_has_character_type();
  inline void set_has_gold_cost();
  inline void clear_has_gold_cost();
  inline void set_has_gem_cost();
  inline void clear_has_gem_cost();
  inline void set_has_dark_crystal_cost();
  inline void clear_has_dark_crystal_cost();
  inline void set_has_success_rate();
  inline void clear_has_success_rate();
  inline void set_has_huge_success_rate();
  inline void clear_has_huge_success_rate();
  inline void set_has_fail_rate();
  inline void clear_has_fail_rate();
  inline void set_has_huge_success_add_item_template_id();
  inline void clear_has_huge_success_add_item_template_id();
  inline void set_has_huge_success_add_item_count();
  inline void clear_has_huge_success_add_item_count();
  inline void set_has_fail_add_item_template_id();
  inline void clear_has_fail_add_item_template_id();
  inline void set_has_fail_add_item_count();
  inline void clear_has_fail_add_item_count();
  inline void set_has_result_item_template_id();
  inline void clear_has_result_item_template_id();
  inline void set_has_result_item_count();
  inline void clear_has_result_item_count();
  inline void set_has_main_material_template_id();
  inline void clear_has_main_material_template_id();
  inline void set_has_main_material_cond_reinforce();
  inline void clear_has_main_material_cond_reinforce();
  inline void set_has_main_material_cond_level();
  inline void clear_has_main_material_cond_level();
  inline void set_has_main_material_count();
  inline void clear_has_main_material_count();
  inline void set_has_main_material_fail_refund_rate();
  inline void clear_has_main_material_fail_refund_rate();
  inline void set_has_material_template_id1();
  inline void clear_has_material_template_id1();
  inline void set_has_material_count1();
  inline void clear_has_material_count1();
  inline void set_has_material_fail_refund_rate1();
  inline void clear_has_material_fail_refund_rate1();
  inline void set_has_material_template_id2();
  inline void clear_has_material_template_id2();
  inline void set_has_material_count2();
  inline void clear_has_material_count2();
  inline void set_has_material_fail_refund_rate2();
  inline void clear_has_material_fail_refund_rate2();
  inline void set_has_material_template_id3();
  inline void clear_has_material_template_id3();
  inline void set_has_material_count3();
  inline void clear_has_material_count3();
  inline void set_has_material_fail_refund_rate3();
  inline void clear_has_material_fail_refund_rate3();
  inline void set_has_material_template_id4();
  inline void clear_has_material_template_id4();
  inline void set_has_material_count4();
  inline void clear_has_material_count4();
  inline void set_has_material_fail_refund_rate4();
  inline void clear_has_material_fail_refund_rate4();
  inline void set_has_visible_type();
  inline void clear_has_visible_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[2];
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 factory_type_;
  ::google::protobuf::int32 factory_tab_;
  ::google::protobuf::int32 group_id_;
  ::google::protobuf::int32 group_sort_;
  ::google::protobuf::int32 item_sort_;
  ::google::protobuf::int32 limit_id_;
  ::google::protobuf::int32 character_type_;
  ::google::protobuf::int32 gold_cost_;
  ::google::protobuf::int32 gem_cost_;
  ::google::protobuf::int32 dark_crystal_cost_;
  ::google::protobuf::int32 success_rate_;
  ::google::protobuf::int32 huge_success_rate_;
  ::google::protobuf::int32 fail_rate_;
  ::google::protobuf::int32 huge_success_add_item_template_id_;
  ::google::protobuf::int32 huge_success_add_item_count_;
  ::google::protobuf::int32 fail_add_item_template_id_;
  ::google::protobuf::int32 fail_add_item_count_;
  ::google::protobuf::int32 result_item_template_id_;
  ::google::protobuf::int32 result_item_count_;
  ::google::protobuf::int32 main_material_template_id_;
  ::google::protobuf::int32 main_material_cond_reinforce_;
  ::google::protobuf::int32 main_material_cond_level_;
  ::google::protobuf::int32 main_material_count_;
  ::google::protobuf::int32 main_material_fail_refund_rate_;
  ::google::protobuf::int32 material_template_id1_;
  ::google::protobuf::int32 material_count1_;
  ::google::protobuf::int32 material_fail_refund_rate1_;
  ::google::protobuf::int32 material_template_id2_;
  ::google::protobuf::int32 material_count2_;
  ::google::protobuf::int32 material_fail_refund_rate2_;
  ::google::protobuf::int32 material_template_id3_;
  ::google::protobuf::int32 material_count3_;
  ::google::protobuf::int32 material_fail_refund_rate3_;
  ::google::protobuf::int32 material_template_id4_;
  ::google::protobuf::int32 material_count4_;
  ::google::protobuf::int32 material_fail_refund_rate4_;
  int visible_type_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdFactoryInfo* default_instance_;
};
// -------------------------------------------------------------------

class mdFactoryMaterialTransInfo : public ::google::protobuf::Message {
 public:
  mdFactoryMaterialTransInfo();
  virtual ~mdFactoryMaterialTransInfo();

  mdFactoryMaterialTransInfo(const mdFactoryMaterialTransInfo& from);

  inline mdFactoryMaterialTransInfo& operator=(const mdFactoryMaterialTransInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdFactoryMaterialTransInfo& default_instance();

  void Swap(mdFactoryMaterialTransInfo* other);

  // implements Message ----------------------------------------------

  mdFactoryMaterialTransInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdFactoryMaterialTransInfo& from);
  void MergeFrom(const mdFactoryMaterialTransInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 factory_id = 1;
  inline bool has_factory_id() const;
  inline void clear_factory_id();
  static const int kFactoryIdFieldNumber = 1;
  inline ::google::protobuf::int32 factory_id() const;
  inline void set_factory_id(::google::protobuf::int32 value);

  // required int32 trans_main_material_template_id = 2;
  inline bool has_trans_main_material_template_id() const;
  inline void clear_trans_main_material_template_id();
  static const int kTransMainMaterialTemplateIdFieldNumber = 2;
  inline ::google::protobuf::int32 trans_main_material_template_id() const;
  inline void set_trans_main_material_template_id(::google::protobuf::int32 value);

  // required int32 trans_main_material_count = 3;
  inline bool has_trans_main_material_count() const;
  inline void clear_trans_main_material_count();
  static const int kTransMainMaterialCountFieldNumber = 3;
  inline ::google::protobuf::int32 trans_main_material_count() const;
  inline void set_trans_main_material_count(::google::protobuf::int32 value);

  // required int32 trans_material_template_id1 = 4;
  inline bool has_trans_material_template_id1() const;
  inline void clear_trans_material_template_id1();
  static const int kTransMaterialTemplateId1FieldNumber = 4;
  inline ::google::protobuf::int32 trans_material_template_id1() const;
  inline void set_trans_material_template_id1(::google::protobuf::int32 value);

  // required int32 trans_material_count1 = 5;
  inline bool has_trans_material_count1() const;
  inline void clear_trans_material_count1();
  static const int kTransMaterialCount1FieldNumber = 5;
  inline ::google::protobuf::int32 trans_material_count1() const;
  inline void set_trans_material_count1(::google::protobuf::int32 value);

  // required int32 trans_material_template_id2 = 6;
  inline bool has_trans_material_template_id2() const;
  inline void clear_trans_material_template_id2();
  static const int kTransMaterialTemplateId2FieldNumber = 6;
  inline ::google::protobuf::int32 trans_material_template_id2() const;
  inline void set_trans_material_template_id2(::google::protobuf::int32 value);

  // required int32 trans_material_count2 = 7;
  inline bool has_trans_material_count2() const;
  inline void clear_trans_material_count2();
  static const int kTransMaterialCount2FieldNumber = 7;
  inline ::google::protobuf::int32 trans_material_count2() const;
  inline void set_trans_material_count2(::google::protobuf::int32 value);

  // required int32 trans_material_template_id3 = 8;
  inline bool has_trans_material_template_id3() const;
  inline void clear_trans_material_template_id3();
  static const int kTransMaterialTemplateId3FieldNumber = 8;
  inline ::google::protobuf::int32 trans_material_template_id3() const;
  inline void set_trans_material_template_id3(::google::protobuf::int32 value);

  // required int32 trans_material_count3 = 9;
  inline bool has_trans_material_count3() const;
  inline void clear_trans_material_count3();
  static const int kTransMaterialCount3FieldNumber = 9;
  inline ::google::protobuf::int32 trans_material_count3() const;
  inline void set_trans_material_count3(::google::protobuf::int32 value);

  // required int32 trans_material_template_id4 = 10;
  inline bool has_trans_material_template_id4() const;
  inline void clear_trans_material_template_id4();
  static const int kTransMaterialTemplateId4FieldNumber = 10;
  inline ::google::protobuf::int32 trans_material_template_id4() const;
  inline void set_trans_material_template_id4(::google::protobuf::int32 value);

  // required int32 trans_material_count4 = 11;
  inline bool has_trans_material_count4() const;
  inline void clear_trans_material_count4();
  static const int kTransMaterialCount4FieldNumber = 11;
  inline ::google::protobuf::int32 trans_material_count4() const;
  inline void set_trans_material_count4(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdFactoryMaterialTransInfo)
 private:
  inline void set_has_factory_id();
  inline void clear_has_factory_id();
  inline void set_has_trans_main_material_template_id();
  inline void clear_has_trans_main_material_template_id();
  inline void set_has_trans_main_material_count();
  inline void clear_has_trans_main_material_count();
  inline void set_has_trans_material_template_id1();
  inline void clear_has_trans_material_template_id1();
  inline void set_has_trans_material_count1();
  inline void clear_has_trans_material_count1();
  inline void set_has_trans_material_template_id2();
  inline void clear_has_trans_material_template_id2();
  inline void set_has_trans_material_count2();
  inline void clear_has_trans_material_count2();
  inline void set_has_trans_material_template_id3();
  inline void clear_has_trans_material_template_id3();
  inline void set_has_trans_material_count3();
  inline void clear_has_trans_material_count3();
  inline void set_has_trans_material_template_id4();
  inline void clear_has_trans_material_template_id4();
  inline void set_has_trans_material_count4();
  inline void clear_has_trans_material_count4();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 factory_id_;
  ::google::protobuf::int32 trans_main_material_template_id_;
  ::google::protobuf::int32 trans_main_material_count_;
  ::google::protobuf::int32 trans_material_template_id1_;
  ::google::protobuf::int32 trans_material_count1_;
  ::google::protobuf::int32 trans_material_template_id2_;
  ::google::protobuf::int32 trans_material_count2_;
  ::google::protobuf::int32 trans_material_template_id3_;
  ::google::protobuf::int32 trans_material_count3_;
  ::google::protobuf::int32 trans_material_template_id4_;
  ::google::protobuf::int32 trans_material_count4_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdFactoryMaterialTransInfo* default_instance_;
};
// -------------------------------------------------------------------

class mdFactoryLimitInfo : public ::google::protobuf::Message {
 public:
  mdFactoryLimitInfo();
  virtual ~mdFactoryLimitInfo();

  mdFactoryLimitInfo(const mdFactoryLimitInfo& from);

  inline mdFactoryLimitInfo& operator=(const mdFactoryLimitInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdFactoryLimitInfo& default_instance();

  void Swap(mdFactoryLimitInfo* other);

  // implements Message ----------------------------------------------

  mdFactoryLimitInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdFactoryLimitInfo& from);
  void MergeFrom(const mdFactoryLimitInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required .b2.protocol.commondata.FactoryLimitType limit_type = 2;
  inline bool has_limit_type() const;
  inline void clear_limit_type();
  static const int kLimitTypeFieldNumber = 2;
  inline ::b2::protocol::commondata::FactoryLimitType limit_type() const;
  inline void set_limit_type(::b2::protocol::commondata::FactoryLimitType value);

  // required int32 limit_count = 3;
  inline bool has_limit_count() const;
  inline void clear_limit_count();
  static const int kLimitCountFieldNumber = 3;
  inline ::google::protobuf::int32 limit_count() const;
  inline void set_limit_count(::google::protobuf::int32 value);

  // required .b2.protocol.commondata.FactoryLimitTimeType limit_time_type = 4;
  inline bool has_limit_time_type() const;
  inline void clear_limit_time_type();
  static const int kLimitTimeTypeFieldNumber = 4;
  inline ::b2::protocol::commondata::FactoryLimitTimeType limit_time_type() const;
  inline void set_limit_time_type(::b2::protocol::commondata::FactoryLimitTimeType value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdFactoryLimitInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_limit_type();
  inline void clear_has_limit_type();
  inline void set_has_limit_count();
  inline void clear_has_limit_count();
  inline void set_has_limit_time_type();
  inline void clear_has_limit_time_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  int limit_type_;
  ::google::protobuf::int32 limit_count_;
  int limit_time_type_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdFactoryLimitInfo* default_instance_;
};
// -------------------------------------------------------------------

class mdSealBoxInfo : public ::google::protobuf::Message {
 public:
  mdSealBoxInfo();
  virtual ~mdSealBoxInfo();

  mdSealBoxInfo(const mdSealBoxInfo& from);

  inline mdSealBoxInfo& operator=(const mdSealBoxInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdSealBoxInfo& default_instance();

  void Swap(mdSealBoxInfo* other);

  // implements Message ----------------------------------------------

  mdSealBoxInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdSealBoxInfo& from);
  void MergeFrom(const mdSealBoxInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 seal_box_template_id = 1;
  inline bool has_seal_box_template_id() const;
  inline void clear_seal_box_template_id();
  static const int kSealBoxTemplateIdFieldNumber = 1;
  inline ::google::protobuf::int32 seal_box_template_id() const;
  inline void set_seal_box_template_id(::google::protobuf::int32 value);

  // required int32 reward_slot1 = 2;
  inline bool has_reward_slot1() const;
  inline void clear_reward_slot1();
  static const int kRewardSlot1FieldNumber = 2;
  inline ::google::protobuf::int32 reward_slot1() const;
  inline void set_reward_slot1(::google::protobuf::int32 value);

  // required int32 reward_slot2 = 3;
  inline bool has_reward_slot2() const;
  inline void clear_reward_slot2();
  static const int kRewardSlot2FieldNumber = 3;
  inline ::google::protobuf::int32 reward_slot2() const;
  inline void set_reward_slot2(::google::protobuf::int32 value);

  // required int32 reward_slot3 = 4;
  inline bool has_reward_slot3() const;
  inline void clear_reward_slot3();
  static const int kRewardSlot3FieldNumber = 4;
  inline ::google::protobuf::int32 reward_slot3() const;
  inline void set_reward_slot3(::google::protobuf::int32 value);

  // required int32 reward_slot4 = 5;
  inline bool has_reward_slot4() const;
  inline void clear_reward_slot4();
  static const int kRewardSlot4FieldNumber = 5;
  inline ::google::protobuf::int32 reward_slot4() const;
  inline void set_reward_slot4(::google::protobuf::int32 value);

  // required int32 reward_slot5 = 6;
  inline bool has_reward_slot5() const;
  inline void clear_reward_slot5();
  static const int kRewardSlot5FieldNumber = 6;
  inline ::google::protobuf::int32 reward_slot5() const;
  inline void set_reward_slot5(::google::protobuf::int32 value);

  // required bool is_rate_visible = 7;
  inline bool has_is_rate_visible() const;
  inline void clear_is_rate_visible();
  static const int kIsRateVisibleFieldNumber = 7;
  inline bool is_rate_visible() const;
  inline void set_is_rate_visible(bool value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdSealBoxInfo)
 private:
  inline void set_has_seal_box_template_id();
  inline void clear_has_seal_box_template_id();
  inline void set_has_reward_slot1();
  inline void clear_has_reward_slot1();
  inline void set_has_reward_slot2();
  inline void clear_has_reward_slot2();
  inline void set_has_reward_slot3();
  inline void clear_has_reward_slot3();
  inline void set_has_reward_slot4();
  inline void clear_has_reward_slot4();
  inline void set_has_reward_slot5();
  inline void clear_has_reward_slot5();
  inline void set_has_is_rate_visible();
  inline void clear_has_is_rate_visible();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 seal_box_template_id_;
  ::google::protobuf::int32 reward_slot1_;
  ::google::protobuf::int32 reward_slot2_;
  ::google::protobuf::int32 reward_slot3_;
  ::google::protobuf::int32 reward_slot4_;
  ::google::protobuf::int32 reward_slot5_;
  bool is_rate_visible_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdSealBoxInfo* default_instance_;
};
// -------------------------------------------------------------------

class mdSealBoxRewardInfo : public ::google::protobuf::Message {
 public:
  mdSealBoxRewardInfo();
  virtual ~mdSealBoxRewardInfo();

  mdSealBoxRewardInfo(const mdSealBoxRewardInfo& from);

  inline mdSealBoxRewardInfo& operator=(const mdSealBoxRewardInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdSealBoxRewardInfo& default_instance();

  void Swap(mdSealBoxRewardInfo* other);

  // implements Message ----------------------------------------------

  mdSealBoxRewardInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdSealBoxRewardInfo& from);
  void MergeFrom(const mdSealBoxRewardInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 seal_box_reward_id = 1;
  inline bool has_seal_box_reward_id() const;
  inline void clear_seal_box_reward_id();
  static const int kSealBoxRewardIdFieldNumber = 1;
  inline ::google::protobuf::int32 seal_box_reward_id() const;
  inline void set_seal_box_reward_id(::google::protobuf::int32 value);

  // required int32 min_fixed_count = 2;
  inline bool has_min_fixed_count() const;
  inline void clear_min_fixed_count();
  static const int kMinFixedCountFieldNumber = 2;
  inline ::google::protobuf::int32 min_fixed_count() const;
  inline void set_min_fixed_count(::google::protobuf::int32 value);

  // required int32 max_fixed_count = 3;
  inline bool has_max_fixed_count() const;
  inline void clear_max_fixed_count();
  static const int kMaxFixedCountFieldNumber = 3;
  inline ::google::protobuf::int32 max_fixed_count() const;
  inline void set_max_fixed_count(::google::protobuf::int32 value);

  // required bool is_recycle = 4;
  inline bool has_is_recycle() const;
  inline void clear_is_recycle();
  static const int kIsRecycleFieldNumber = 4;
  inline bool is_recycle() const;
  inline void set_is_recycle(bool value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdSealBoxRewardInfo)
 private:
  inline void set_has_seal_box_reward_id();
  inline void clear_has_seal_box_reward_id();
  inline void set_has_min_fixed_count();
  inline void clear_has_min_fixed_count();
  inline void set_has_max_fixed_count();
  inline void clear_has_max_fixed_count();
  inline void set_has_is_recycle();
  inline void clear_has_is_recycle();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 seal_box_reward_id_;
  ::google::protobuf::int32 min_fixed_count_;
  ::google::protobuf::int32 max_fixed_count_;
  bool is_recycle_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdSealBoxRewardInfo* default_instance_;
};
// -------------------------------------------------------------------

class mdSealBoxRewardRateInfo : public ::google::protobuf::Message {
 public:
  mdSealBoxRewardRateInfo();
  virtual ~mdSealBoxRewardRateInfo();

  mdSealBoxRewardRateInfo(const mdSealBoxRewardRateInfo& from);

  inline mdSealBoxRewardRateInfo& operator=(const mdSealBoxRewardRateInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mdSealBoxRewardRateInfo& default_instance();

  void Swap(mdSealBoxRewardRateInfo* other);

  // implements Message ----------------------------------------------

  mdSealBoxRewardRateInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mdSealBoxRewardRateInfo& from);
  void MergeFrom(const mdSealBoxRewardRateInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 seal_box_reward_id = 1;
  inline bool has_seal_box_reward_id() const;
  inline void clear_seal_box_reward_id();
  static const int kSealBoxRewardIdFieldNumber = 1;
  inline ::google::protobuf::int32 seal_box_reward_id() const;
  inline void set_seal_box_reward_id(::google::protobuf::int32 value);

  // required .b2.protocol.commondata.RewardType reward_type = 2;
  inline bool has_reward_type() const;
  inline void clear_reward_type();
  static const int kRewardTypeFieldNumber = 2;
  inline ::b2::protocol::commondata::RewardType reward_type() const;
  inline void set_reward_type(::b2::protocol::commondata::RewardType value);

  // required int32 template_id = 3;
  inline bool has_template_id() const;
  inline void clear_template_id();
  static const int kTemplateIdFieldNumber = 3;
  inline ::google::protobuf::int32 template_id() const;
  inline void set_template_id(::google::protobuf::int32 value);

  // required int32 min_amount = 4;
  inline bool has_min_amount() const;
  inline void clear_min_amount();
  static const int kMinAmountFieldNumber = 4;
  inline ::google::protobuf::int32 min_amount() const;
  inline void set_min_amount(::google::protobuf::int32 value);

  // required int32 max_amount = 5;
  inline bool has_max_amount() const;
  inline void clear_max_amount();
  static const int kMaxAmountFieldNumber = 5;
  inline ::google::protobuf::int32 max_amount() const;
  inline void set_max_amount(::google::protobuf::int32 value);

  // required int32 grade = 6;
  inline bool has_grade() const;
  inline void clear_grade();
  static const int kGradeFieldNumber = 6;
  inline ::google::protobuf::int32 grade() const;
  inline void set_grade(::google::protobuf::int32 value);

  // required .b2.protocol.commondata.GroupPrefix group_id = 7;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 7;
  inline ::b2::protocol::commondata::GroupPrefix group_id() const;
  inline void set_group_id(::b2::protocol::commondata::GroupPrefix value);

  // required .b2.protocol.commondata.EquipCategory equip_category = 8;
  inline bool has_equip_category() const;
  inline void clear_equip_category();
  static const int kEquipCategoryFieldNumber = 8;
  inline ::b2::protocol::commondata::EquipCategory equip_category() const;
  inline void set_equip_category(::b2::protocol::commondata::EquipCategory value);

  // required .b2.protocol.commondata.EquipPosition equip_position = 9;
  inline bool has_equip_position() const;
  inline void clear_equip_position();
  static const int kEquipPositionFieldNumber = 9;
  inline ::b2::protocol::commondata::EquipPosition equip_position() const;
  inline void set_equip_position(::b2::protocol::commondata::EquipPosition value);

  // required int32 quality = 10;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 10;
  inline ::google::protobuf::int32 quality() const;
  inline void set_quality(::google::protobuf::int32 value);

  // required int32 enhance_level = 11;
  inline bool has_enhance_level() const;
  inline void clear_enhance_level();
  static const int kEnhanceLevelFieldNumber = 11;
  inline ::google::protobuf::int32 enhance_level() const;
  inline void set_enhance_level(::google::protobuf::int32 value);

  // required int32 surpass_count = 12;
  inline bool has_surpass_count() const;
  inline void clear_surpass_count();
  static const int kSurpassCountFieldNumber = 12;
  inline ::google::protobuf::int32 surpass_count() const;
  inline void set_surpass_count(::google::protobuf::int32 value);

  // required int32 reward_rate = 13;
  inline bool has_reward_rate() const;
  inline void clear_reward_rate();
  static const int kRewardRateFieldNumber = 13;
  inline ::google::protobuf::int32 reward_rate() const;
  inline void set_reward_rate(::google::protobuf::int32 value);

  // required bool is_fixed_reward = 14;
  inline bool has_is_fixed_reward() const;
  inline void clear_is_fixed_reward();
  static const int kIsFixedRewardFieldNumber = 14;
  inline bool is_fixed_reward() const;
  inline void set_is_fixed_reward(bool value);

  // required int32 fixed_reward_rate = 15;
  inline bool has_fixed_reward_rate() const;
  inline void clear_fixed_reward_rate();
  static const int kFixedRewardRateFieldNumber = 15;
  inline ::google::protobuf::int32 fixed_reward_rate() const;
  inline void set_fixed_reward_rate(::google::protobuf::int32 value);

  // required int32 effect_grade = 16;
  inline bool has_effect_grade() const;
  inline void clear_effect_grade();
  static const int kEffectGradeFieldNumber = 16;
  inline ::google::protobuf::int32 effect_grade() const;
  inline void set_effect_grade(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.masterdata.mdSealBoxRewardRateInfo)
 private:
  inline void set_has_seal_box_reward_id();
  inline void clear_has_seal_box_reward_id();
  inline void set_has_reward_type();
  inline void clear_has_reward_type();
  inline void set_has_template_id();
  inline void clear_has_template_id();
  inline void set_has_min_amount();
  inline void clear_has_min_amount();
  inline void set_has_max_amount();
  inline void clear_has_max_amount();
  inline void set_has_grade();
  inline void clear_has_grade();
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_equip_category();
  inline void clear_has_equip_category();
  inline void set_has_equip_position();
  inline void clear_has_equip_position();
  inline void set_has_quality();
  inline void clear_has_quality();
  inline void set_has_enhance_level();
  inline void clear_has_enhance_level();
  inline void set_has_surpass_count();
  inline void clear_has_surpass_count();
  inline void set_has_reward_rate();
  inline void clear_has_reward_rate();
  inline void set_has_is_fixed_reward();
  inline void clear_has_is_fixed_reward();
  inline void set_has_fixed_reward_rate();
  inline void clear_has_fixed_reward_rate();
  inline void set_has_effect_grade();
  inline void clear_has_effect_grade();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 seal_box_reward_id_;
  int reward_type_;
  ::google::protobuf::int32 template_id_;
  ::google::protobuf::int32 min_amount_;
  ::google::protobuf::int32 max_amount_;
  ::google::protobuf::int32 grade_;
  int group_id_;
  int equip_category_;
  int equip_position_;
  ::google::protobuf::int32 quality_;
  ::google::protobuf::int32 enhance_level_;
  ::google::protobuf::int32 surpass_count_;
  ::google::protobuf::int32 reward_rate_;
  bool is_fixed_reward_;
  ::google::protobuf::int32 fixed_reward_rate_;
  ::google::protobuf::int32 effect_grade_;
  friend void  protobuf_AddDesc_MasterData_2eproto();
  friend void protobuf_AssignDesc_MasterData_2eproto();
  friend void protobuf_ShutdownFile_MasterData_2eproto();

  void InitAsDefaultInstance();
  static mdSealBoxRewardRateInfo* default_instance_;
};
// ===================================================================


// ===================================================================

// mdSkillInfo

// required int32 skill_id = 1;
inline bool mdSkillInfo::has_skill_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdSkillInfo::set_has_skill_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdSkillInfo::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdSkillInfo::clear_skill_id() {
  skill_id_ = 0;
  clear_has_skill_id();
}
inline ::google::protobuf::int32 mdSkillInfo::skill_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSkillInfo.skill_id)
  return skill_id_;
}
inline void mdSkillInfo::set_skill_id(::google::protobuf::int32 value) {
  set_has_skill_id();
  skill_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSkillInfo.skill_id)
}

// required .b2.protocol.commondata.Character.TYPE character_type = 2;
inline bool mdSkillInfo::has_character_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdSkillInfo::set_has_character_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdSkillInfo::clear_has_character_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdSkillInfo::clear_character_type() {
  character_type_ = 1;
  clear_has_character_type();
}
inline ::b2::protocol::commondata::Character_TYPE mdSkillInfo::character_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSkillInfo.character_type)
  return static_cast< ::b2::protocol::commondata::Character_TYPE >(character_type_);
}
inline void mdSkillInfo::set_character_type(::b2::protocol::commondata::Character_TYPE value) {
  assert(::b2::protocol::commondata::Character_TYPE_IsValid(value));
  set_has_character_type();
  character_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSkillInfo.character_type)
}

// required int32 learn_level = 3;
inline bool mdSkillInfo::has_learn_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdSkillInfo::set_has_learn_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdSkillInfo::clear_has_learn_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdSkillInfo::clear_learn_level() {
  learn_level_ = 0;
  clear_has_learn_level();
}
inline ::google::protobuf::int32 mdSkillInfo::learn_level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSkillInfo.learn_level)
  return learn_level_;
}
inline void mdSkillInfo::set_learn_level(::google::protobuf::int32 value) {
  set_has_learn_level();
  learn_level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSkillInfo.learn_level)
}

// required int32 max_skill_level = 4;
inline bool mdSkillInfo::has_max_skill_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdSkillInfo::set_has_max_skill_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdSkillInfo::clear_has_max_skill_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdSkillInfo::clear_max_skill_level() {
  max_skill_level_ = 0;
  clear_has_max_skill_level();
}
inline ::google::protobuf::int32 mdSkillInfo::max_skill_level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSkillInfo.max_skill_level)
  return max_skill_level_;
}
inline void mdSkillInfo::set_max_skill_level(::google::protobuf::int32 value) {
  set_has_max_skill_level();
  max_skill_level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSkillInfo.max_skill_level)
}

// required bool usable = 5;
inline bool mdSkillInfo::has_usable() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdSkillInfo::set_has_usable() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdSkillInfo::clear_has_usable() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdSkillInfo::clear_usable() {
  usable_ = false;
  clear_has_usable();
}
inline bool mdSkillInfo::usable() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSkillInfo.usable)
  return usable_;
}
inline void mdSkillInfo::set_usable(bool value) {
  set_has_usable();
  usable_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSkillInfo.usable)
}

// required int32 level_up_cost_factor = 6;
inline bool mdSkillInfo::has_level_up_cost_factor() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdSkillInfo::set_has_level_up_cost_factor() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdSkillInfo::clear_has_level_up_cost_factor() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdSkillInfo::clear_level_up_cost_factor() {
  level_up_cost_factor_ = 0;
  clear_has_level_up_cost_factor();
}
inline ::google::protobuf::int32 mdSkillInfo::level_up_cost_factor() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSkillInfo.level_up_cost_factor)
  return level_up_cost_factor_;
}
inline void mdSkillInfo::set_level_up_cost_factor(::google::protobuf::int32 value) {
  set_has_level_up_cost_factor();
  level_up_cost_factor_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSkillInfo.level_up_cost_factor)
}

// -------------------------------------------------------------------

// mdSkillOption

// required int32 skill_id = 1;
inline bool mdSkillOption::has_skill_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdSkillOption::set_has_skill_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdSkillOption::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdSkillOption::clear_skill_id() {
  skill_id_ = 0;
  clear_has_skill_id();
}
inline ::google::protobuf::int32 mdSkillOption::skill_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSkillOption.skill_id)
  return skill_id_;
}
inline void mdSkillOption::set_skill_id(::google::protobuf::int32 value) {
  set_has_skill_id();
  skill_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSkillOption.skill_id)
}

// required int32 skill_level = 2;
inline bool mdSkillOption::has_skill_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdSkillOption::set_has_skill_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdSkillOption::clear_has_skill_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdSkillOption::clear_skill_level() {
  skill_level_ = 0;
  clear_has_skill_level();
}
inline ::google::protobuf::int32 mdSkillOption::skill_level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSkillOption.skill_level)
  return skill_level_;
}
inline void mdSkillOption::set_skill_level(::google::protobuf::int32 value) {
  set_has_skill_level();
  skill_level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSkillOption.skill_level)
}

// required int32 option_id = 3;
inline bool mdSkillOption::has_option_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdSkillOption::set_has_option_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdSkillOption::clear_has_option_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdSkillOption::clear_option_id() {
  option_id_ = 0;
  clear_has_option_id();
}
inline ::google::protobuf::int32 mdSkillOption::option_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSkillOption.option_id)
  return option_id_;
}
inline void mdSkillOption::set_option_id(::google::protobuf::int32 value) {
  set_has_option_id();
  option_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSkillOption.option_id)
}

// required float option_value = 4;
inline bool mdSkillOption::has_option_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdSkillOption::set_has_option_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdSkillOption::clear_has_option_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdSkillOption::clear_option_value() {
  option_value_ = 0;
  clear_has_option_value();
}
inline float mdSkillOption::option_value() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSkillOption.option_value)
  return option_value_;
}
inline void mdSkillOption::set_option_value(float value) {
  set_has_option_value();
  option_value_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSkillOption.option_value)
}

// required float power = 5;
inline bool mdSkillOption::has_power() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdSkillOption::set_has_power() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdSkillOption::clear_has_power() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdSkillOption::clear_power() {
  power_ = 0;
  clear_has_power();
}
inline float mdSkillOption::power() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSkillOption.power)
  return power_;
}
inline void mdSkillOption::set_power(float value) {
  set_has_power();
  power_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSkillOption.power)
}

// -------------------------------------------------------------------

// mdSkillLevelUp

// required int32 skill_id = 1;
inline bool mdSkillLevelUp::has_skill_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdSkillLevelUp::set_has_skill_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdSkillLevelUp::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdSkillLevelUp::clear_skill_id() {
  skill_id_ = 0;
  clear_has_skill_id();
}
inline ::google::protobuf::int32 mdSkillLevelUp::skill_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSkillLevelUp.skill_id)
  return skill_id_;
}
inline void mdSkillLevelUp::set_skill_id(::google::protobuf::int32 value) {
  set_has_skill_id();
  skill_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSkillLevelUp.skill_id)
}

// required int32 skill_level = 2;
inline bool mdSkillLevelUp::has_skill_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdSkillLevelUp::set_has_skill_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdSkillLevelUp::clear_has_skill_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdSkillLevelUp::clear_skill_level() {
  skill_level_ = 0;
  clear_has_skill_level();
}
inline ::google::protobuf::int32 mdSkillLevelUp::skill_level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSkillLevelUp.skill_level)
  return skill_level_;
}
inline void mdSkillLevelUp::set_skill_level(::google::protobuf::int32 value) {
  set_has_skill_level();
  skill_level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSkillLevelUp.skill_level)
}

// required int32 req_skill_point = 3;
inline bool mdSkillLevelUp::has_req_skill_point() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdSkillLevelUp::set_has_req_skill_point() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdSkillLevelUp::clear_has_req_skill_point() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdSkillLevelUp::clear_req_skill_point() {
  req_skill_point_ = 0;
  clear_has_req_skill_point();
}
inline ::google::protobuf::int32 mdSkillLevelUp::req_skill_point() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSkillLevelUp.req_skill_point)
  return req_skill_point_;
}
inline void mdSkillLevelUp::set_req_skill_point(::google::protobuf::int32 value) {
  set_has_req_skill_point();
  req_skill_point_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSkillLevelUp.req_skill_point)
}

// -------------------------------------------------------------------

// mdItemLevelupExpFactor

// required string type_name = 1;
inline bool mdItemLevelupExpFactor::has_type_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdItemLevelupExpFactor::set_has_type_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdItemLevelupExpFactor::clear_has_type_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdItemLevelupExpFactor::clear_type_name() {
  if (type_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_name_->clear();
  }
  clear_has_type_name();
}
inline const ::std::string& mdItemLevelupExpFactor::type_name() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemLevelupExpFactor.type_name)
  return *type_name_;
}
inline void mdItemLevelupExpFactor::set_type_name(const ::std::string& value) {
  set_has_type_name();
  if (type_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_name_ = new ::std::string;
  }
  type_name_->assign(value);
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemLevelupExpFactor.type_name)
}
inline void mdItemLevelupExpFactor::set_type_name(const char* value) {
  set_has_type_name();
  if (type_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_name_ = new ::std::string;
  }
  type_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:b2.protocol.masterdata.mdItemLevelupExpFactor.type_name)
}
inline void mdItemLevelupExpFactor::set_type_name(const char* value, size_t size) {
  set_has_type_name();
  if (type_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_name_ = new ::std::string;
  }
  type_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:b2.protocol.masterdata.mdItemLevelupExpFactor.type_name)
}
inline ::std::string* mdItemLevelupExpFactor::mutable_type_name() {
  set_has_type_name();
  if (type_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:b2.protocol.masterdata.mdItemLevelupExpFactor.type_name)
  return type_name_;
}
inline ::std::string* mdItemLevelupExpFactor::release_type_name() {
  clear_has_type_name();
  if (type_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = type_name_;
    type_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void mdItemLevelupExpFactor::set_allocated_type_name(::std::string* type_name) {
  if (type_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete type_name_;
  }
  if (type_name) {
    set_has_type_name();
    type_name_ = type_name;
  } else {
    clear_has_type_name();
    type_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.masterdata.mdItemLevelupExpFactor.type_name)
}

// required int32 key_code = 2;
inline bool mdItemLevelupExpFactor::has_key_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdItemLevelupExpFactor::set_has_key_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdItemLevelupExpFactor::clear_has_key_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdItemLevelupExpFactor::clear_key_code() {
  key_code_ = 0;
  clear_has_key_code();
}
inline ::google::protobuf::int32 mdItemLevelupExpFactor::key_code() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemLevelupExpFactor.key_code)
  return key_code_;
}
inline void mdItemLevelupExpFactor::set_key_code(::google::protobuf::int32 value) {
  set_has_key_code();
  key_code_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemLevelupExpFactor.key_code)
}

// required double factor = 3;
inline bool mdItemLevelupExpFactor::has_factor() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdItemLevelupExpFactor::set_has_factor() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdItemLevelupExpFactor::clear_has_factor() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdItemLevelupExpFactor::clear_factor() {
  factor_ = 0;
  clear_has_factor();
}
inline double mdItemLevelupExpFactor::factor() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemLevelupExpFactor.factor)
  return factor_;
}
inline void mdItemLevelupExpFactor::set_factor(double value) {
  set_has_factor();
  factor_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemLevelupExpFactor.factor)
}

// -------------------------------------------------------------------

// mdItemOptionAddValue

// required int32 option_id = 1;
inline bool mdItemOptionAddValue::has_option_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdItemOptionAddValue::set_has_option_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdItemOptionAddValue::clear_has_option_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdItemOptionAddValue::clear_option_id() {
  option_id_ = 0;
  clear_has_option_id();
}
inline ::google::protobuf::int32 mdItemOptionAddValue::option_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemOptionAddValue.option_id)
  return option_id_;
}
inline void mdItemOptionAddValue::set_option_id(::google::protobuf::int32 value) {
  set_has_option_id();
  option_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemOptionAddValue.option_id)
}

// required float add_value = 2;
inline bool mdItemOptionAddValue::has_add_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdItemOptionAddValue::set_has_add_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdItemOptionAddValue::clear_has_add_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdItemOptionAddValue::clear_add_value() {
  add_value_ = 0;
  clear_has_add_value();
}
inline float mdItemOptionAddValue::add_value() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemOptionAddValue.add_value)
  return add_value_;
}
inline void mdItemOptionAddValue::set_add_value(float value) {
  set_has_add_value();
  add_value_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemOptionAddValue.add_value)
}

// required float power_factor = 3;
inline bool mdItemOptionAddValue::has_power_factor() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdItemOptionAddValue::set_has_power_factor() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdItemOptionAddValue::clear_has_power_factor() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdItemOptionAddValue::clear_power_factor() {
  power_factor_ = 0;
  clear_has_power_factor();
}
inline float mdItemOptionAddValue::power_factor() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemOptionAddValue.power_factor)
  return power_factor_;
}
inline void mdItemOptionAddValue::set_power_factor(float value) {
  set_has_power_factor();
  power_factor_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemOptionAddValue.power_factor)
}

// -------------------------------------------------------------------

// mdItemLevelupCost

// required .b2.protocol.commondata.Inventory.TYPE inventory_type = 1;
inline bool mdItemLevelupCost::has_inventory_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdItemLevelupCost::set_has_inventory_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdItemLevelupCost::clear_has_inventory_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdItemLevelupCost::clear_inventory_type() {
  inventory_type_ = 2;
  clear_has_inventory_type();
}
inline ::b2::protocol::commondata::Inventory_TYPE mdItemLevelupCost::inventory_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemLevelupCost.inventory_type)
  return static_cast< ::b2::protocol::commondata::Inventory_TYPE >(inventory_type_);
}
inline void mdItemLevelupCost::set_inventory_type(::b2::protocol::commondata::Inventory_TYPE value) {
  assert(::b2::protocol::commondata::Inventory_TYPE_IsValid(value));
  set_has_inventory_type();
  inventory_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemLevelupCost.inventory_type)
}

// required int32 level = 2;
inline bool mdItemLevelupCost::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdItemLevelupCost::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdItemLevelupCost::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdItemLevelupCost::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 mdItemLevelupCost::level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemLevelupCost.level)
  return level_;
}
inline void mdItemLevelupCost::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemLevelupCost.level)
}

// required int32 price_grade1 = 3;
inline bool mdItemLevelupCost::has_price_grade1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdItemLevelupCost::set_has_price_grade1() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdItemLevelupCost::clear_has_price_grade1() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdItemLevelupCost::clear_price_grade1() {
  price_grade1_ = 0;
  clear_has_price_grade1();
}
inline ::google::protobuf::int32 mdItemLevelupCost::price_grade1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemLevelupCost.price_grade1)
  return price_grade1_;
}
inline void mdItemLevelupCost::set_price_grade1(::google::protobuf::int32 value) {
  set_has_price_grade1();
  price_grade1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemLevelupCost.price_grade1)
}

// required int32 price_grade2 = 4;
inline bool mdItemLevelupCost::has_price_grade2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdItemLevelupCost::set_has_price_grade2() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdItemLevelupCost::clear_has_price_grade2() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdItemLevelupCost::clear_price_grade2() {
  price_grade2_ = 0;
  clear_has_price_grade2();
}
inline ::google::protobuf::int32 mdItemLevelupCost::price_grade2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemLevelupCost.price_grade2)
  return price_grade2_;
}
inline void mdItemLevelupCost::set_price_grade2(::google::protobuf::int32 value) {
  set_has_price_grade2();
  price_grade2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemLevelupCost.price_grade2)
}

// required int32 price_grade3 = 5;
inline bool mdItemLevelupCost::has_price_grade3() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdItemLevelupCost::set_has_price_grade3() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdItemLevelupCost::clear_has_price_grade3() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdItemLevelupCost::clear_price_grade3() {
  price_grade3_ = 0;
  clear_has_price_grade3();
}
inline ::google::protobuf::int32 mdItemLevelupCost::price_grade3() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemLevelupCost.price_grade3)
  return price_grade3_;
}
inline void mdItemLevelupCost::set_price_grade3(::google::protobuf::int32 value) {
  set_has_price_grade3();
  price_grade3_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemLevelupCost.price_grade3)
}

// required int32 price_grade4 = 6;
inline bool mdItemLevelupCost::has_price_grade4() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdItemLevelupCost::set_has_price_grade4() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdItemLevelupCost::clear_has_price_grade4() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdItemLevelupCost::clear_price_grade4() {
  price_grade4_ = 0;
  clear_has_price_grade4();
}
inline ::google::protobuf::int32 mdItemLevelupCost::price_grade4() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemLevelupCost.price_grade4)
  return price_grade4_;
}
inline void mdItemLevelupCost::set_price_grade4(::google::protobuf::int32 value) {
  set_has_price_grade4();
  price_grade4_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemLevelupCost.price_grade4)
}

// required int32 price_grade5 = 7;
inline bool mdItemLevelupCost::has_price_grade5() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mdItemLevelupCost::set_has_price_grade5() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mdItemLevelupCost::clear_has_price_grade5() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mdItemLevelupCost::clear_price_grade5() {
  price_grade5_ = 0;
  clear_has_price_grade5();
}
inline ::google::protobuf::int32 mdItemLevelupCost::price_grade5() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemLevelupCost.price_grade5)
  return price_grade5_;
}
inline void mdItemLevelupCost::set_price_grade5(::google::protobuf::int32 value) {
  set_has_price_grade5();
  price_grade5_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemLevelupCost.price_grade5)
}

// required int32 price_grade6 = 8;
inline bool mdItemLevelupCost::has_price_grade6() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void mdItemLevelupCost::set_has_price_grade6() {
  _has_bits_[0] |= 0x00000080u;
}
inline void mdItemLevelupCost::clear_has_price_grade6() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void mdItemLevelupCost::clear_price_grade6() {
  price_grade6_ = 0;
  clear_has_price_grade6();
}
inline ::google::protobuf::int32 mdItemLevelupCost::price_grade6() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemLevelupCost.price_grade6)
  return price_grade6_;
}
inline void mdItemLevelupCost::set_price_grade6(::google::protobuf::int32 value) {
  set_has_price_grade6();
  price_grade6_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemLevelupCost.price_grade6)
}

// required int32 price_grade7 = 9;
inline bool mdItemLevelupCost::has_price_grade7() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void mdItemLevelupCost::set_has_price_grade7() {
  _has_bits_[0] |= 0x00000100u;
}
inline void mdItemLevelupCost::clear_has_price_grade7() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void mdItemLevelupCost::clear_price_grade7() {
  price_grade7_ = 0;
  clear_has_price_grade7();
}
inline ::google::protobuf::int32 mdItemLevelupCost::price_grade7() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemLevelupCost.price_grade7)
  return price_grade7_;
}
inline void mdItemLevelupCost::set_price_grade7(::google::protobuf::int32 value) {
  set_has_price_grade7();
  price_grade7_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemLevelupCost.price_grade7)
}

// required int32 price_grade8 = 10;
inline bool mdItemLevelupCost::has_price_grade8() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void mdItemLevelupCost::set_has_price_grade8() {
  _has_bits_[0] |= 0x00000200u;
}
inline void mdItemLevelupCost::clear_has_price_grade8() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void mdItemLevelupCost::clear_price_grade8() {
  price_grade8_ = 0;
  clear_has_price_grade8();
}
inline ::google::protobuf::int32 mdItemLevelupCost::price_grade8() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemLevelupCost.price_grade8)
  return price_grade8_;
}
inline void mdItemLevelupCost::set_price_grade8(::google::protobuf::int32 value) {
  set_has_price_grade8();
  price_grade8_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemLevelupCost.price_grade8)
}

// required int32 price_grade9 = 11;
inline bool mdItemLevelupCost::has_price_grade9() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void mdItemLevelupCost::set_has_price_grade9() {
  _has_bits_[0] |= 0x00000400u;
}
inline void mdItemLevelupCost::clear_has_price_grade9() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void mdItemLevelupCost::clear_price_grade9() {
  price_grade9_ = 0;
  clear_has_price_grade9();
}
inline ::google::protobuf::int32 mdItemLevelupCost::price_grade9() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemLevelupCost.price_grade9)
  return price_grade9_;
}
inline void mdItemLevelupCost::set_price_grade9(::google::protobuf::int32 value) {
  set_has_price_grade9();
  price_grade9_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemLevelupCost.price_grade9)
}

// required int32 price_grade10 = 12;
inline bool mdItemLevelupCost::has_price_grade10() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void mdItemLevelupCost::set_has_price_grade10() {
  _has_bits_[0] |= 0x00000800u;
}
inline void mdItemLevelupCost::clear_has_price_grade10() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void mdItemLevelupCost::clear_price_grade10() {
  price_grade10_ = 0;
  clear_has_price_grade10();
}
inline ::google::protobuf::int32 mdItemLevelupCost::price_grade10() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemLevelupCost.price_grade10)
  return price_grade10_;
}
inline void mdItemLevelupCost::set_price_grade10(::google::protobuf::int32 value) {
  set_has_price_grade10();
  price_grade10_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemLevelupCost.price_grade10)
}

// required int32 price_grade11 = 13;
inline bool mdItemLevelupCost::has_price_grade11() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void mdItemLevelupCost::set_has_price_grade11() {
  _has_bits_[0] |= 0x00001000u;
}
inline void mdItemLevelupCost::clear_has_price_grade11() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void mdItemLevelupCost::clear_price_grade11() {
  price_grade11_ = 0;
  clear_has_price_grade11();
}
inline ::google::protobuf::int32 mdItemLevelupCost::price_grade11() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemLevelupCost.price_grade11)
  return price_grade11_;
}
inline void mdItemLevelupCost::set_price_grade11(::google::protobuf::int32 value) {
  set_has_price_grade11();
  price_grade11_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemLevelupCost.price_grade11)
}

// required int32 price_grade12 = 14;
inline bool mdItemLevelupCost::has_price_grade12() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void mdItemLevelupCost::set_has_price_grade12() {
  _has_bits_[0] |= 0x00002000u;
}
inline void mdItemLevelupCost::clear_has_price_grade12() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void mdItemLevelupCost::clear_price_grade12() {
  price_grade12_ = 0;
  clear_has_price_grade12();
}
inline ::google::protobuf::int32 mdItemLevelupCost::price_grade12() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemLevelupCost.price_grade12)
  return price_grade12_;
}
inline void mdItemLevelupCost::set_price_grade12(::google::protobuf::int32 value) {
  set_has_price_grade12();
  price_grade12_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemLevelupCost.price_grade12)
}

// -------------------------------------------------------------------

// mdItemLevelupFactor

// required int32 level = 1;
inline bool mdItemLevelupFactor::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdItemLevelupFactor::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdItemLevelupFactor::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdItemLevelupFactor::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 mdItemLevelupFactor::level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemLevelupFactor.level)
  return level_;
}
inline void mdItemLevelupFactor::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemLevelupFactor.level)
}

// required double factor = 2;
inline bool mdItemLevelupFactor::has_factor() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdItemLevelupFactor::set_has_factor() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdItemLevelupFactor::clear_has_factor() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdItemLevelupFactor::clear_factor() {
  factor_ = 0;
  clear_has_factor();
}
inline double mdItemLevelupFactor::factor() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemLevelupFactor.factor)
  return factor_;
}
inline void mdItemLevelupFactor::set_factor(double value) {
  set_has_factor();
  factor_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemLevelupFactor.factor)
}

// -------------------------------------------------------------------

// mdItemEnhanceCost

// required int32 enhance_level = 1;
inline bool mdItemEnhanceCost::has_enhance_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdItemEnhanceCost::set_has_enhance_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdItemEnhanceCost::clear_has_enhance_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdItemEnhanceCost::clear_enhance_level() {
  enhance_level_ = 0;
  clear_has_enhance_level();
}
inline ::google::protobuf::int32 mdItemEnhanceCost::enhance_level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemEnhanceCost.enhance_level)
  return enhance_level_;
}
inline void mdItemEnhanceCost::set_enhance_level(::google::protobuf::int32 value) {
  set_has_enhance_level();
  enhance_level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemEnhanceCost.enhance_level)
}

// required int32 enhance_rate = 2;
inline bool mdItemEnhanceCost::has_enhance_rate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdItemEnhanceCost::set_has_enhance_rate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdItemEnhanceCost::clear_has_enhance_rate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdItemEnhanceCost::clear_enhance_rate() {
  enhance_rate_ = 0;
  clear_has_enhance_rate();
}
inline ::google::protobuf::int32 mdItemEnhanceCost::enhance_rate() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemEnhanceCost.enhance_rate)
  return enhance_rate_;
}
inline void mdItemEnhanceCost::set_enhance_rate(::google::protobuf::int32 value) {
  set_has_enhance_rate();
  enhance_rate_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemEnhanceCost.enhance_rate)
}

// required int32 enhance_scroll_cost = 3;
inline bool mdItemEnhanceCost::has_enhance_scroll_cost() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdItemEnhanceCost::set_has_enhance_scroll_cost() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdItemEnhanceCost::clear_has_enhance_scroll_cost() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdItemEnhanceCost::clear_enhance_scroll_cost() {
  enhance_scroll_cost_ = 0;
  clear_has_enhance_scroll_cost();
}
inline ::google::protobuf::int32 mdItemEnhanceCost::enhance_scroll_cost() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemEnhanceCost.enhance_scroll_cost)
  return enhance_scroll_cost_;
}
inline void mdItemEnhanceCost::set_enhance_scroll_cost(::google::protobuf::int32 value) {
  set_has_enhance_scroll_cost();
  enhance_scroll_cost_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemEnhanceCost.enhance_scroll_cost)
}

// required int32 protection_scroll_cost = 4;
inline bool mdItemEnhanceCost::has_protection_scroll_cost() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdItemEnhanceCost::set_has_protection_scroll_cost() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdItemEnhanceCost::clear_has_protection_scroll_cost() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdItemEnhanceCost::clear_protection_scroll_cost() {
  protection_scroll_cost_ = 0;
  clear_has_protection_scroll_cost();
}
inline ::google::protobuf::int32 mdItemEnhanceCost::protection_scroll_cost() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemEnhanceCost.protection_scroll_cost)
  return protection_scroll_cost_;
}
inline void mdItemEnhanceCost::set_protection_scroll_cost(::google::protobuf::int32 value) {
  set_has_protection_scroll_cost();
  protection_scroll_cost_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemEnhanceCost.protection_scroll_cost)
}

// required int32 money_cost = 5;
inline bool mdItemEnhanceCost::has_money_cost() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdItemEnhanceCost::set_has_money_cost() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdItemEnhanceCost::clear_has_money_cost() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdItemEnhanceCost::clear_money_cost() {
  money_cost_ = 0;
  clear_has_money_cost();
}
inline ::google::protobuf::int32 mdItemEnhanceCost::money_cost() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemEnhanceCost.money_cost)
  return money_cost_;
}
inline void mdItemEnhanceCost::set_money_cost(::google::protobuf::int32 value) {
  set_has_money_cost();
  money_cost_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemEnhanceCost.money_cost)
}

// required int32 exchange_cost_dary_crystal = 6;
inline bool mdItemEnhanceCost::has_exchange_cost_dary_crystal() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdItemEnhanceCost::set_has_exchange_cost_dary_crystal() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdItemEnhanceCost::clear_has_exchange_cost_dary_crystal() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdItemEnhanceCost::clear_exchange_cost_dary_crystal() {
  exchange_cost_dary_crystal_ = 0;
  clear_has_exchange_cost_dary_crystal();
}
inline ::google::protobuf::int32 mdItemEnhanceCost::exchange_cost_dary_crystal() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemEnhanceCost.exchange_cost_dary_crystal)
  return exchange_cost_dary_crystal_;
}
inline void mdItemEnhanceCost::set_exchange_cost_dary_crystal(::google::protobuf::int32 value) {
  set_has_exchange_cost_dary_crystal();
  exchange_cost_dary_crystal_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemEnhanceCost.exchange_cost_dary_crystal)
}

// required int32 exchange_cost_gem = 7;
inline bool mdItemEnhanceCost::has_exchange_cost_gem() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mdItemEnhanceCost::set_has_exchange_cost_gem() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mdItemEnhanceCost::clear_has_exchange_cost_gem() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mdItemEnhanceCost::clear_exchange_cost_gem() {
  exchange_cost_gem_ = 0;
  clear_has_exchange_cost_gem();
}
inline ::google::protobuf::int32 mdItemEnhanceCost::exchange_cost_gem() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemEnhanceCost.exchange_cost_gem)
  return exchange_cost_gem_;
}
inline void mdItemEnhanceCost::set_exchange_cost_gem(::google::protobuf::int32 value) {
  set_has_exchange_cost_gem();
  exchange_cost_gem_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemEnhanceCost.exchange_cost_gem)
}

// -------------------------------------------------------------------

// mdCostumeEnhanceCost

// required int32 grade = 1;
inline bool mdCostumeEnhanceCost::has_grade() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdCostumeEnhanceCost::set_has_grade() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdCostumeEnhanceCost::clear_has_grade() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdCostumeEnhanceCost::clear_grade() {
  grade_ = 0;
  clear_has_grade();
}
inline ::google::protobuf::int32 mdCostumeEnhanceCost::grade() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCostumeEnhanceCost.grade)
  return grade_;
}
inline void mdCostumeEnhanceCost::set_grade(::google::protobuf::int32 value) {
  set_has_grade();
  grade_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdCostumeEnhanceCost.grade)
}

// required int32 enhance_level = 2;
inline bool mdCostumeEnhanceCost::has_enhance_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdCostumeEnhanceCost::set_has_enhance_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdCostumeEnhanceCost::clear_has_enhance_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdCostumeEnhanceCost::clear_enhance_level() {
  enhance_level_ = 0;
  clear_has_enhance_level();
}
inline ::google::protobuf::int32 mdCostumeEnhanceCost::enhance_level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCostumeEnhanceCost.enhance_level)
  return enhance_level_;
}
inline void mdCostumeEnhanceCost::set_enhance_level(::google::protobuf::int32 value) {
  set_has_enhance_level();
  enhance_level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdCostumeEnhanceCost.enhance_level)
}

// required int32 money_cost = 3;
inline bool mdCostumeEnhanceCost::has_money_cost() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdCostumeEnhanceCost::set_has_money_cost() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdCostumeEnhanceCost::clear_has_money_cost() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdCostumeEnhanceCost::clear_money_cost() {
  money_cost_ = 0;
  clear_has_money_cost();
}
inline ::google::protobuf::int32 mdCostumeEnhanceCost::money_cost() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCostumeEnhanceCost.money_cost)
  return money_cost_;
}
inline void mdCostumeEnhanceCost::set_money_cost(::google::protobuf::int32 value) {
  set_has_money_cost();
  money_cost_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdCostumeEnhanceCost.money_cost)
}

// required int32 weapon_material_id = 4;
inline bool mdCostumeEnhanceCost::has_weapon_material_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdCostumeEnhanceCost::set_has_weapon_material_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdCostumeEnhanceCost::clear_has_weapon_material_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdCostumeEnhanceCost::clear_weapon_material_id() {
  weapon_material_id_ = 0;
  clear_has_weapon_material_id();
}
inline ::google::protobuf::int32 mdCostumeEnhanceCost::weapon_material_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCostumeEnhanceCost.weapon_material_id)
  return weapon_material_id_;
}
inline void mdCostumeEnhanceCost::set_weapon_material_id(::google::protobuf::int32 value) {
  set_has_weapon_material_id();
  weapon_material_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdCostumeEnhanceCost.weapon_material_id)
}

// required int32 weapon_amount = 5;
inline bool mdCostumeEnhanceCost::has_weapon_amount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdCostumeEnhanceCost::set_has_weapon_amount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdCostumeEnhanceCost::clear_has_weapon_amount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdCostumeEnhanceCost::clear_weapon_amount() {
  weapon_amount_ = 0;
  clear_has_weapon_amount();
}
inline ::google::protobuf::int32 mdCostumeEnhanceCost::weapon_amount() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCostumeEnhanceCost.weapon_amount)
  return weapon_amount_;
}
inline void mdCostumeEnhanceCost::set_weapon_amount(::google::protobuf::int32 value) {
  set_has_weapon_amount();
  weapon_amount_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdCostumeEnhanceCost.weapon_amount)
}

// required int32 weapon_restore_amount = 6;
inline bool mdCostumeEnhanceCost::has_weapon_restore_amount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdCostumeEnhanceCost::set_has_weapon_restore_amount() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdCostumeEnhanceCost::clear_has_weapon_restore_amount() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdCostumeEnhanceCost::clear_weapon_restore_amount() {
  weapon_restore_amount_ = 0;
  clear_has_weapon_restore_amount();
}
inline ::google::protobuf::int32 mdCostumeEnhanceCost::weapon_restore_amount() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCostumeEnhanceCost.weapon_restore_amount)
  return weapon_restore_amount_;
}
inline void mdCostumeEnhanceCost::set_weapon_restore_amount(::google::protobuf::int32 value) {
  set_has_weapon_restore_amount();
  weapon_restore_amount_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdCostumeEnhanceCost.weapon_restore_amount)
}

// required int32 armor_material_id = 7;
inline bool mdCostumeEnhanceCost::has_armor_material_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mdCostumeEnhanceCost::set_has_armor_material_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mdCostumeEnhanceCost::clear_has_armor_material_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mdCostumeEnhanceCost::clear_armor_material_id() {
  armor_material_id_ = 0;
  clear_has_armor_material_id();
}
inline ::google::protobuf::int32 mdCostumeEnhanceCost::armor_material_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCostumeEnhanceCost.armor_material_id)
  return armor_material_id_;
}
inline void mdCostumeEnhanceCost::set_armor_material_id(::google::protobuf::int32 value) {
  set_has_armor_material_id();
  armor_material_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdCostumeEnhanceCost.armor_material_id)
}

// required int32 armor_amount = 8;
inline bool mdCostumeEnhanceCost::has_armor_amount() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void mdCostumeEnhanceCost::set_has_armor_amount() {
  _has_bits_[0] |= 0x00000080u;
}
inline void mdCostumeEnhanceCost::clear_has_armor_amount() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void mdCostumeEnhanceCost::clear_armor_amount() {
  armor_amount_ = 0;
  clear_has_armor_amount();
}
inline ::google::protobuf::int32 mdCostumeEnhanceCost::armor_amount() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCostumeEnhanceCost.armor_amount)
  return armor_amount_;
}
inline void mdCostumeEnhanceCost::set_armor_amount(::google::protobuf::int32 value) {
  set_has_armor_amount();
  armor_amount_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdCostumeEnhanceCost.armor_amount)
}

// required int32 armor_restore_amount = 9;
inline bool mdCostumeEnhanceCost::has_armor_restore_amount() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void mdCostumeEnhanceCost::set_has_armor_restore_amount() {
  _has_bits_[0] |= 0x00000100u;
}
inline void mdCostumeEnhanceCost::clear_has_armor_restore_amount() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void mdCostumeEnhanceCost::clear_armor_restore_amount() {
  armor_restore_amount_ = 0;
  clear_has_armor_restore_amount();
}
inline ::google::protobuf::int32 mdCostumeEnhanceCost::armor_restore_amount() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCostumeEnhanceCost.armor_restore_amount)
  return armor_restore_amount_;
}
inline void mdCostumeEnhanceCost::set_armor_restore_amount(::google::protobuf::int32 value) {
  set_has_armor_restore_amount();
  armor_restore_amount_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdCostumeEnhanceCost.armor_restore_amount)
}

// -------------------------------------------------------------------

// mdItemSealCost

// required int32 slot = 1;
inline bool mdItemSealCost::has_slot() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdItemSealCost::set_has_slot() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdItemSealCost::clear_has_slot() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdItemSealCost::clear_slot() {
  slot_ = 0;
  clear_has_slot();
}
inline ::google::protobuf::int32 mdItemSealCost::slot() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemSealCost.slot)
  return slot_;
}
inline void mdItemSealCost::set_slot(::google::protobuf::int32 value) {
  set_has_slot();
  slot_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemSealCost.slot)
}

// required int32 open_price_type = 2;
inline bool mdItemSealCost::has_open_price_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdItemSealCost::set_has_open_price_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdItemSealCost::clear_has_open_price_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdItemSealCost::clear_open_price_type() {
  open_price_type_ = 0;
  clear_has_open_price_type();
}
inline ::google::protobuf::int32 mdItemSealCost::open_price_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemSealCost.open_price_type)
  return open_price_type_;
}
inline void mdItemSealCost::set_open_price_type(::google::protobuf::int32 value) {
  set_has_open_price_type();
  open_price_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemSealCost.open_price_type)
}

// required int32 open_price = 3;
inline bool mdItemSealCost::has_open_price() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdItemSealCost::set_has_open_price() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdItemSealCost::clear_has_open_price() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdItemSealCost::clear_open_price() {
  open_price_ = 0;
  clear_has_open_price();
}
inline ::google::protobuf::int32 mdItemSealCost::open_price() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemSealCost.open_price)
  return open_price_;
}
inline void mdItemSealCost::set_open_price(::google::protobuf::int32 value) {
  set_has_open_price();
  open_price_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemSealCost.open_price)
}

// required int32 template_id1 = 4;
inline bool mdItemSealCost::has_template_id1() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdItemSealCost::set_has_template_id1() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdItemSealCost::clear_has_template_id1() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdItemSealCost::clear_template_id1() {
  template_id1_ = 0;
  clear_has_template_id1();
}
inline ::google::protobuf::int32 mdItemSealCost::template_id1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemSealCost.template_id1)
  return template_id1_;
}
inline void mdItemSealCost::set_template_id1(::google::protobuf::int32 value) {
  set_has_template_id1();
  template_id1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemSealCost.template_id1)
}

// required int32 amount1 = 5;
inline bool mdItemSealCost::has_amount1() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdItemSealCost::set_has_amount1() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdItemSealCost::clear_has_amount1() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdItemSealCost::clear_amount1() {
  amount1_ = 0;
  clear_has_amount1();
}
inline ::google::protobuf::int32 mdItemSealCost::amount1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemSealCost.amount1)
  return amount1_;
}
inline void mdItemSealCost::set_amount1(::google::protobuf::int32 value) {
  set_has_amount1();
  amount1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemSealCost.amount1)
}

// required int32 template_id2 = 6;
inline bool mdItemSealCost::has_template_id2() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdItemSealCost::set_has_template_id2() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdItemSealCost::clear_has_template_id2() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdItemSealCost::clear_template_id2() {
  template_id2_ = 0;
  clear_has_template_id2();
}
inline ::google::protobuf::int32 mdItemSealCost::template_id2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemSealCost.template_id2)
  return template_id2_;
}
inline void mdItemSealCost::set_template_id2(::google::protobuf::int32 value) {
  set_has_template_id2();
  template_id2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemSealCost.template_id2)
}

// required int32 amount2 = 7;
inline bool mdItemSealCost::has_amount2() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mdItemSealCost::set_has_amount2() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mdItemSealCost::clear_has_amount2() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mdItemSealCost::clear_amount2() {
  amount2_ = 0;
  clear_has_amount2();
}
inline ::google::protobuf::int32 mdItemSealCost::amount2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemSealCost.amount2)
  return amount2_;
}
inline void mdItemSealCost::set_amount2(::google::protobuf::int32 value) {
  set_has_amount2();
  amount2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemSealCost.amount2)
}

// required int32 template_id3 = 8;
inline bool mdItemSealCost::has_template_id3() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void mdItemSealCost::set_has_template_id3() {
  _has_bits_[0] |= 0x00000080u;
}
inline void mdItemSealCost::clear_has_template_id3() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void mdItemSealCost::clear_template_id3() {
  template_id3_ = 0;
  clear_has_template_id3();
}
inline ::google::protobuf::int32 mdItemSealCost::template_id3() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemSealCost.template_id3)
  return template_id3_;
}
inline void mdItemSealCost::set_template_id3(::google::protobuf::int32 value) {
  set_has_template_id3();
  template_id3_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemSealCost.template_id3)
}

// required int32 amount3 = 9;
inline bool mdItemSealCost::has_amount3() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void mdItemSealCost::set_has_amount3() {
  _has_bits_[0] |= 0x00000100u;
}
inline void mdItemSealCost::clear_has_amount3() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void mdItemSealCost::clear_amount3() {
  amount3_ = 0;
  clear_has_amount3();
}
inline ::google::protobuf::int32 mdItemSealCost::amount3() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemSealCost.amount3)
  return amount3_;
}
inline void mdItemSealCost::set_amount3(::google::protobuf::int32 value) {
  set_has_amount3();
  amount3_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemSealCost.amount3)
}

// required int32 template_id4 = 10;
inline bool mdItemSealCost::has_template_id4() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void mdItemSealCost::set_has_template_id4() {
  _has_bits_[0] |= 0x00000200u;
}
inline void mdItemSealCost::clear_has_template_id4() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void mdItemSealCost::clear_template_id4() {
  template_id4_ = 0;
  clear_has_template_id4();
}
inline ::google::protobuf::int32 mdItemSealCost::template_id4() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemSealCost.template_id4)
  return template_id4_;
}
inline void mdItemSealCost::set_template_id4(::google::protobuf::int32 value) {
  set_has_template_id4();
  template_id4_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemSealCost.template_id4)
}

// required int32 amount4 = 11;
inline bool mdItemSealCost::has_amount4() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void mdItemSealCost::set_has_amount4() {
  _has_bits_[0] |= 0x00000400u;
}
inline void mdItemSealCost::clear_has_amount4() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void mdItemSealCost::clear_amount4() {
  amount4_ = 0;
  clear_has_amount4();
}
inline ::google::protobuf::int32 mdItemSealCost::amount4() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemSealCost.amount4)
  return amount4_;
}
inline void mdItemSealCost::set_amount4(::google::protobuf::int32 value) {
  set_has_amount4();
  amount4_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemSealCost.amount4)
}

// required int32 seal_price_type = 12;
inline bool mdItemSealCost::has_seal_price_type() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void mdItemSealCost::set_has_seal_price_type() {
  _has_bits_[0] |= 0x00000800u;
}
inline void mdItemSealCost::clear_has_seal_price_type() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void mdItemSealCost::clear_seal_price_type() {
  seal_price_type_ = 0;
  clear_has_seal_price_type();
}
inline ::google::protobuf::int32 mdItemSealCost::seal_price_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemSealCost.seal_price_type)
  return seal_price_type_;
}
inline void mdItemSealCost::set_seal_price_type(::google::protobuf::int32 value) {
  set_has_seal_price_type();
  seal_price_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemSealCost.seal_price_type)
}

// required int32 seal_price = 13;
inline bool mdItemSealCost::has_seal_price() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void mdItemSealCost::set_has_seal_price() {
  _has_bits_[0] |= 0x00001000u;
}
inline void mdItemSealCost::clear_has_seal_price() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void mdItemSealCost::clear_seal_price() {
  seal_price_ = 0;
  clear_has_seal_price();
}
inline ::google::protobuf::int32 mdItemSealCost::seal_price() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemSealCost.seal_price)
  return seal_price_;
}
inline void mdItemSealCost::set_seal_price(::google::protobuf::int32 value) {
  set_has_seal_price();
  seal_price_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemSealCost.seal_price)
}

// -------------------------------------------------------------------

// mdItemEnhanceEffectInfo

// required int32 enhance_level = 1;
inline bool mdItemEnhanceEffectInfo::has_enhance_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdItemEnhanceEffectInfo::set_has_enhance_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdItemEnhanceEffectInfo::clear_has_enhance_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdItemEnhanceEffectInfo::clear_enhance_level() {
  enhance_level_ = 0;
  clear_has_enhance_level();
}
inline ::google::protobuf::int32 mdItemEnhanceEffectInfo::enhance_level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemEnhanceEffectInfo.enhance_level)
  return enhance_level_;
}
inline void mdItemEnhanceEffectInfo::set_enhance_level(::google::protobuf::int32 value) {
  set_has_enhance_level();
  enhance_level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemEnhanceEffectInfo.enhance_level)
}

// required double set_effect = 2;
inline bool mdItemEnhanceEffectInfo::has_set_effect() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdItemEnhanceEffectInfo::set_has_set_effect() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdItemEnhanceEffectInfo::clear_has_set_effect() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdItemEnhanceEffectInfo::clear_set_effect() {
  set_effect_ = 0;
  clear_has_set_effect();
}
inline double mdItemEnhanceEffectInfo::set_effect() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemEnhanceEffectInfo.set_effect)
  return set_effect_;
}
inline void mdItemEnhanceEffectInfo::set_set_effect(double value) {
  set_has_set_effect();
  set_effect_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemEnhanceEffectInfo.set_effect)
}

// required int32 item_aura = 3;
inline bool mdItemEnhanceEffectInfo::has_item_aura() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdItemEnhanceEffectInfo::set_has_item_aura() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdItemEnhanceEffectInfo::clear_has_item_aura() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdItemEnhanceEffectInfo::clear_item_aura() {
  item_aura_ = 0;
  clear_has_item_aura();
}
inline ::google::protobuf::int32 mdItemEnhanceEffectInfo::item_aura() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemEnhanceEffectInfo.item_aura)
  return item_aura_;
}
inline void mdItemEnhanceEffectInfo::set_item_aura(::google::protobuf::int32 value) {
  set_has_item_aura();
  item_aura_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemEnhanceEffectInfo.item_aura)
}

// required float channel_alpha = 4;
inline bool mdItemEnhanceEffectInfo::has_channel_alpha() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdItemEnhanceEffectInfo::set_has_channel_alpha() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdItemEnhanceEffectInfo::clear_has_channel_alpha() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdItemEnhanceEffectInfo::clear_channel_alpha() {
  channel_alpha_ = 0;
  clear_has_channel_alpha();
}
inline float mdItemEnhanceEffectInfo::channel_alpha() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemEnhanceEffectInfo.channel_alpha)
  return channel_alpha_;
}
inline void mdItemEnhanceEffectInfo::set_channel_alpha(float value) {
  set_has_channel_alpha();
  channel_alpha_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemEnhanceEffectInfo.channel_alpha)
}

// required float channel_red = 5;
inline bool mdItemEnhanceEffectInfo::has_channel_red() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdItemEnhanceEffectInfo::set_has_channel_red() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdItemEnhanceEffectInfo::clear_has_channel_red() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdItemEnhanceEffectInfo::clear_channel_red() {
  channel_red_ = 0;
  clear_has_channel_red();
}
inline float mdItemEnhanceEffectInfo::channel_red() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemEnhanceEffectInfo.channel_red)
  return channel_red_;
}
inline void mdItemEnhanceEffectInfo::set_channel_red(float value) {
  set_has_channel_red();
  channel_red_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemEnhanceEffectInfo.channel_red)
}

// required float channel_green = 6;
inline bool mdItemEnhanceEffectInfo::has_channel_green() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdItemEnhanceEffectInfo::set_has_channel_green() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdItemEnhanceEffectInfo::clear_has_channel_green() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdItemEnhanceEffectInfo::clear_channel_green() {
  channel_green_ = 0;
  clear_has_channel_green();
}
inline float mdItemEnhanceEffectInfo::channel_green() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemEnhanceEffectInfo.channel_green)
  return channel_green_;
}
inline void mdItemEnhanceEffectInfo::set_channel_green(float value) {
  set_has_channel_green();
  channel_green_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemEnhanceEffectInfo.channel_green)
}

// required float channel_blue = 7;
inline bool mdItemEnhanceEffectInfo::has_channel_blue() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mdItemEnhanceEffectInfo::set_has_channel_blue() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mdItemEnhanceEffectInfo::clear_has_channel_blue() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mdItemEnhanceEffectInfo::clear_channel_blue() {
  channel_blue_ = 0;
  clear_has_channel_blue();
}
inline float mdItemEnhanceEffectInfo::channel_blue() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemEnhanceEffectInfo.channel_blue)
  return channel_blue_;
}
inline void mdItemEnhanceEffectInfo::set_channel_blue(float value) {
  set_has_channel_blue();
  channel_blue_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemEnhanceEffectInfo.channel_blue)
}

// -------------------------------------------------------------------

// mdItemSurpassLevel

// required int32 grade = 1;
inline bool mdItemSurpassLevel::has_grade() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdItemSurpassLevel::set_has_grade() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdItemSurpassLevel::clear_has_grade() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdItemSurpassLevel::clear_grade() {
  grade_ = 0;
  clear_has_grade();
}
inline ::google::protobuf::int32 mdItemSurpassLevel::grade() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemSurpassLevel.grade)
  return grade_;
}
inline void mdItemSurpassLevel::set_grade(::google::protobuf::int32 value) {
  set_has_grade();
  grade_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemSurpassLevel.grade)
}

// required int32 increase_level = 2;
inline bool mdItemSurpassLevel::has_increase_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdItemSurpassLevel::set_has_increase_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdItemSurpassLevel::clear_has_increase_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdItemSurpassLevel::clear_increase_level() {
  increase_level_ = 0;
  clear_has_increase_level();
}
inline ::google::protobuf::int32 mdItemSurpassLevel::increase_level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemSurpassLevel.increase_level)
  return increase_level_;
}
inline void mdItemSurpassLevel::set_increase_level(::google::protobuf::int32 value) {
  set_has_increase_level();
  increase_level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemSurpassLevel.increase_level)
}

// required int32 max_surpass_level = 3;
inline bool mdItemSurpassLevel::has_max_surpass_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdItemSurpassLevel::set_has_max_surpass_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdItemSurpassLevel::clear_has_max_surpass_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdItemSurpassLevel::clear_max_surpass_level() {
  max_surpass_level_ = 0;
  clear_has_max_surpass_level();
}
inline ::google::protobuf::int32 mdItemSurpassLevel::max_surpass_level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemSurpassLevel.max_surpass_level)
  return max_surpass_level_;
}
inline void mdItemSurpassLevel::set_max_surpass_level(::google::protobuf::int32 value) {
  set_has_max_surpass_level();
  max_surpass_level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemSurpassLevel.max_surpass_level)
}

// -------------------------------------------------------------------

// mdItemDismantleInfo

// required .b2.protocol.commondata.Inventory.TYPE inventory_type = 1;
inline bool mdItemDismantleInfo::has_inventory_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdItemDismantleInfo::set_has_inventory_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdItemDismantleInfo::clear_has_inventory_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdItemDismantleInfo::clear_inventory_type() {
  inventory_type_ = 2;
  clear_has_inventory_type();
}
inline ::b2::protocol::commondata::Inventory_TYPE mdItemDismantleInfo::inventory_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemDismantleInfo.inventory_type)
  return static_cast< ::b2::protocol::commondata::Inventory_TYPE >(inventory_type_);
}
inline void mdItemDismantleInfo::set_inventory_type(::b2::protocol::commondata::Inventory_TYPE value) {
  assert(::b2::protocol::commondata::Inventory_TYPE_IsValid(value));
  set_has_inventory_type();
  inventory_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemDismantleInfo.inventory_type)
}

// required int32 grade = 2;
inline bool mdItemDismantleInfo::has_grade() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdItemDismantleInfo::set_has_grade() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdItemDismantleInfo::clear_has_grade() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdItemDismantleInfo::clear_grade() {
  grade_ = 0;
  clear_has_grade();
}
inline ::google::protobuf::int32 mdItemDismantleInfo::grade() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemDismantleInfo.grade)
  return grade_;
}
inline void mdItemDismantleInfo::set_grade(::google::protobuf::int32 value) {
  set_has_grade();
  grade_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemDismantleInfo.grade)
}

// required int32 material1 = 3;
inline bool mdItemDismantleInfo::has_material1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdItemDismantleInfo::set_has_material1() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdItemDismantleInfo::clear_has_material1() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdItemDismantleInfo::clear_material1() {
  material1_ = 0;
  clear_has_material1();
}
inline ::google::protobuf::int32 mdItemDismantleInfo::material1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemDismantleInfo.material1)
  return material1_;
}
inline void mdItemDismantleInfo::set_material1(::google::protobuf::int32 value) {
  set_has_material1();
  material1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemDismantleInfo.material1)
}

// required int32 material_amount1 = 4;
inline bool mdItemDismantleInfo::has_material_amount1() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdItemDismantleInfo::set_has_material_amount1() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdItemDismantleInfo::clear_has_material_amount1() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdItemDismantleInfo::clear_material_amount1() {
  material_amount1_ = 0;
  clear_has_material_amount1();
}
inline ::google::protobuf::int32 mdItemDismantleInfo::material_amount1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemDismantleInfo.material_amount1)
  return material_amount1_;
}
inline void mdItemDismantleInfo::set_material_amount1(::google::protobuf::int32 value) {
  set_has_material_amount1();
  material_amount1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemDismantleInfo.material_amount1)
}

// required int32 material2 = 5;
inline bool mdItemDismantleInfo::has_material2() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdItemDismantleInfo::set_has_material2() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdItemDismantleInfo::clear_has_material2() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdItemDismantleInfo::clear_material2() {
  material2_ = 0;
  clear_has_material2();
}
inline ::google::protobuf::int32 mdItemDismantleInfo::material2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemDismantleInfo.material2)
  return material2_;
}
inline void mdItemDismantleInfo::set_material2(::google::protobuf::int32 value) {
  set_has_material2();
  material2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemDismantleInfo.material2)
}

// required int32 material_amount2 = 6;
inline bool mdItemDismantleInfo::has_material_amount2() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdItemDismantleInfo::set_has_material_amount2() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdItemDismantleInfo::clear_has_material_amount2() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdItemDismantleInfo::clear_material_amount2() {
  material_amount2_ = 0;
  clear_has_material_amount2();
}
inline ::google::protobuf::int32 mdItemDismantleInfo::material_amount2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemDismantleInfo.material_amount2)
  return material_amount2_;
}
inline void mdItemDismantleInfo::set_material_amount2(::google::protobuf::int32 value) {
  set_has_material_amount2();
  material_amount2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemDismantleInfo.material_amount2)
}

// required int32 material3 = 7;
inline bool mdItemDismantleInfo::has_material3() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mdItemDismantleInfo::set_has_material3() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mdItemDismantleInfo::clear_has_material3() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mdItemDismantleInfo::clear_material3() {
  material3_ = 0;
  clear_has_material3();
}
inline ::google::protobuf::int32 mdItemDismantleInfo::material3() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemDismantleInfo.material3)
  return material3_;
}
inline void mdItemDismantleInfo::set_material3(::google::protobuf::int32 value) {
  set_has_material3();
  material3_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemDismantleInfo.material3)
}

// required int32 material_amount3 = 8;
inline bool mdItemDismantleInfo::has_material_amount3() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void mdItemDismantleInfo::set_has_material_amount3() {
  _has_bits_[0] |= 0x00000080u;
}
inline void mdItemDismantleInfo::clear_has_material_amount3() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void mdItemDismantleInfo::clear_material_amount3() {
  material_amount3_ = 0;
  clear_has_material_amount3();
}
inline ::google::protobuf::int32 mdItemDismantleInfo::material_amount3() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemDismantleInfo.material_amount3)
  return material_amount3_;
}
inline void mdItemDismantleInfo::set_material_amount3(::google::protobuf::int32 value) {
  set_has_material_amount3();
  material_amount3_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemDismantleInfo.material_amount3)
}

// -------------------------------------------------------------------

// mdResurrectionInfo

// required .b2.protocol.commondata.ModeType mode_type = 1;
inline bool mdResurrectionInfo::has_mode_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdResurrectionInfo::set_has_mode_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdResurrectionInfo::clear_has_mode_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdResurrectionInfo::clear_mode_type() {
  mode_type_ = 1;
  clear_has_mode_type();
}
inline ::b2::protocol::commondata::ModeType mdResurrectionInfo::mode_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdResurrectionInfo.mode_type)
  return static_cast< ::b2::protocol::commondata::ModeType >(mode_type_);
}
inline void mdResurrectionInfo::set_mode_type(::b2::protocol::commondata::ModeType value) {
  assert(::b2::protocol::commondata::ModeType_IsValid(value));
  set_has_mode_type();
  mode_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdResurrectionInfo.mode_type)
}

// required int32 count = 2;
inline bool mdResurrectionInfo::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdResurrectionInfo::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdResurrectionInfo::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdResurrectionInfo::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 mdResurrectionInfo::count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdResurrectionInfo.count)
  return count_;
}
inline void mdResurrectionInfo::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdResurrectionInfo.count)
}

// required int32 price = 3;
inline bool mdResurrectionInfo::has_price() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdResurrectionInfo::set_has_price() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdResurrectionInfo::clear_has_price() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdResurrectionInfo::clear_price() {
  price_ = 0;
  clear_has_price();
}
inline ::google::protobuf::int32 mdResurrectionInfo::price() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdResurrectionInfo.price)
  return price_;
}
inline void mdResurrectionInfo::set_price(::google::protobuf::int32 value) {
  set_has_price();
  price_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdResurrectionInfo.price)
}

// required .b2.protocol.commondata.AttributeChange attribute_change1 = 4;
inline bool mdResurrectionInfo::has_attribute_change1() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdResurrectionInfo::set_has_attribute_change1() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdResurrectionInfo::clear_has_attribute_change1() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdResurrectionInfo::clear_attribute_change1() {
  attribute_change1_ = 1;
  clear_has_attribute_change1();
}
inline ::b2::protocol::commondata::AttributeChange mdResurrectionInfo::attribute_change1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdResurrectionInfo.attribute_change1)
  return static_cast< ::b2::protocol::commondata::AttributeChange >(attribute_change1_);
}
inline void mdResurrectionInfo::set_attribute_change1(::b2::protocol::commondata::AttributeChange value) {
  assert(::b2::protocol::commondata::AttributeChange_IsValid(value));
  set_has_attribute_change1();
  attribute_change1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdResurrectionInfo.attribute_change1)
}

// required int32 change_value1 = 5;
inline bool mdResurrectionInfo::has_change_value1() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdResurrectionInfo::set_has_change_value1() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdResurrectionInfo::clear_has_change_value1() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdResurrectionInfo::clear_change_value1() {
  change_value1_ = 0;
  clear_has_change_value1();
}
inline ::google::protobuf::int32 mdResurrectionInfo::change_value1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdResurrectionInfo.change_value1)
  return change_value1_;
}
inline void mdResurrectionInfo::set_change_value1(::google::protobuf::int32 value) {
  set_has_change_value1();
  change_value1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdResurrectionInfo.change_value1)
}

// required .b2.protocol.commondata.AttributeChange attribute_change2 = 6;
inline bool mdResurrectionInfo::has_attribute_change2() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdResurrectionInfo::set_has_attribute_change2() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdResurrectionInfo::clear_has_attribute_change2() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdResurrectionInfo::clear_attribute_change2() {
  attribute_change2_ = 1;
  clear_has_attribute_change2();
}
inline ::b2::protocol::commondata::AttributeChange mdResurrectionInfo::attribute_change2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdResurrectionInfo.attribute_change2)
  return static_cast< ::b2::protocol::commondata::AttributeChange >(attribute_change2_);
}
inline void mdResurrectionInfo::set_attribute_change2(::b2::protocol::commondata::AttributeChange value) {
  assert(::b2::protocol::commondata::AttributeChange_IsValid(value));
  set_has_attribute_change2();
  attribute_change2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdResurrectionInfo.attribute_change2)
}

// required int32 change_value2 = 7;
inline bool mdResurrectionInfo::has_change_value2() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mdResurrectionInfo::set_has_change_value2() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mdResurrectionInfo::clear_has_change_value2() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mdResurrectionInfo::clear_change_value2() {
  change_value2_ = 0;
  clear_has_change_value2();
}
inline ::google::protobuf::int32 mdResurrectionInfo::change_value2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdResurrectionInfo.change_value2)
  return change_value2_;
}
inline void mdResurrectionInfo::set_change_value2(::google::protobuf::int32 value) {
  set_has_change_value2();
  change_value2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdResurrectionInfo.change_value2)
}

// required .b2.protocol.commondata.AttributeChange attribute_change3 = 8;
inline bool mdResurrectionInfo::has_attribute_change3() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void mdResurrectionInfo::set_has_attribute_change3() {
  _has_bits_[0] |= 0x00000080u;
}
inline void mdResurrectionInfo::clear_has_attribute_change3() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void mdResurrectionInfo::clear_attribute_change3() {
  attribute_change3_ = 1;
  clear_has_attribute_change3();
}
inline ::b2::protocol::commondata::AttributeChange mdResurrectionInfo::attribute_change3() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdResurrectionInfo.attribute_change3)
  return static_cast< ::b2::protocol::commondata::AttributeChange >(attribute_change3_);
}
inline void mdResurrectionInfo::set_attribute_change3(::b2::protocol::commondata::AttributeChange value) {
  assert(::b2::protocol::commondata::AttributeChange_IsValid(value));
  set_has_attribute_change3();
  attribute_change3_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdResurrectionInfo.attribute_change3)
}

// required int32 change_value3 = 9;
inline bool mdResurrectionInfo::has_change_value3() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void mdResurrectionInfo::set_has_change_value3() {
  _has_bits_[0] |= 0x00000100u;
}
inline void mdResurrectionInfo::clear_has_change_value3() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void mdResurrectionInfo::clear_change_value3() {
  change_value3_ = 0;
  clear_has_change_value3();
}
inline ::google::protobuf::int32 mdResurrectionInfo::change_value3() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdResurrectionInfo.change_value3)
  return change_value3_;
}
inline void mdResurrectionInfo::set_change_value3(::google::protobuf::int32 value) {
  set_has_change_value3();
  change_value3_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdResurrectionInfo.change_value3)
}

// -------------------------------------------------------------------

// mdTeamBattleFormationInfo

// required .b2.protocol.commondata.BattleFormation.TYPE formation_type = 1;
inline bool mdTeamBattleFormationInfo::has_formation_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdTeamBattleFormationInfo::set_has_formation_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdTeamBattleFormationInfo::clear_has_formation_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdTeamBattleFormationInfo::clear_formation_type() {
  formation_type_ = 1;
  clear_has_formation_type();
}
inline ::b2::protocol::commondata::BattleFormation_TYPE mdTeamBattleFormationInfo::formation_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTeamBattleFormationInfo.formation_type)
  return static_cast< ::b2::protocol::commondata::BattleFormation_TYPE >(formation_type_);
}
inline void mdTeamBattleFormationInfo::set_formation_type(::b2::protocol::commondata::BattleFormation_TYPE value) {
  assert(::b2::protocol::commondata::BattleFormation_TYPE_IsValid(value));
  set_has_formation_type();
  formation_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTeamBattleFormationInfo.formation_type)
}

// required int32 formation_level = 2;
inline bool mdTeamBattleFormationInfo::has_formation_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdTeamBattleFormationInfo::set_has_formation_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdTeamBattleFormationInfo::clear_has_formation_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdTeamBattleFormationInfo::clear_formation_level() {
  formation_level_ = 0;
  clear_has_formation_level();
}
inline ::google::protobuf::int32 mdTeamBattleFormationInfo::formation_level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTeamBattleFormationInfo.formation_level)
  return formation_level_;
}
inline void mdTeamBattleFormationInfo::set_formation_level(::google::protobuf::int32 value) {
  set_has_formation_level();
  formation_level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTeamBattleFormationInfo.formation_level)
}

// required int32 enhance_gold_cost = 3;
inline bool mdTeamBattleFormationInfo::has_enhance_gold_cost() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdTeamBattleFormationInfo::set_has_enhance_gold_cost() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdTeamBattleFormationInfo::clear_has_enhance_gold_cost() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdTeamBattleFormationInfo::clear_enhance_gold_cost() {
  enhance_gold_cost_ = 0;
  clear_has_enhance_gold_cost();
}
inline ::google::protobuf::int32 mdTeamBattleFormationInfo::enhance_gold_cost() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTeamBattleFormationInfo.enhance_gold_cost)
  return enhance_gold_cost_;
}
inline void mdTeamBattleFormationInfo::set_enhance_gold_cost(::google::protobuf::int32 value) {
  set_has_enhance_gold_cost();
  enhance_gold_cost_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTeamBattleFormationInfo.enhance_gold_cost)
}

// repeated .b2.protocol.commondata.BattleFormationBuff buffs = 4;
inline int mdTeamBattleFormationInfo::buffs_size() const {
  return buffs_.size();
}
inline void mdTeamBattleFormationInfo::clear_buffs() {
  buffs_.Clear();
}
inline const ::b2::protocol::commondata::BattleFormationBuff& mdTeamBattleFormationInfo::buffs(int index) const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTeamBattleFormationInfo.buffs)
  return buffs_.Get(index);
}
inline ::b2::protocol::commondata::BattleFormationBuff* mdTeamBattleFormationInfo::mutable_buffs(int index) {
  // @@protoc_insertion_point(field_mutable:b2.protocol.masterdata.mdTeamBattleFormationInfo.buffs)
  return buffs_.Mutable(index);
}
inline ::b2::protocol::commondata::BattleFormationBuff* mdTeamBattleFormationInfo::add_buffs() {
  // @@protoc_insertion_point(field_add:b2.protocol.masterdata.mdTeamBattleFormationInfo.buffs)
  return buffs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::BattleFormationBuff >&
mdTeamBattleFormationInfo::buffs() const {
  // @@protoc_insertion_point(field_list:b2.protocol.masterdata.mdTeamBattleFormationInfo.buffs)
  return buffs_;
}
inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::BattleFormationBuff >*
mdTeamBattleFormationInfo::mutable_buffs() {
  // @@protoc_insertion_point(field_mutable_list:b2.protocol.masterdata.mdTeamBattleFormationInfo.buffs)
  return &buffs_;
}

// -------------------------------------------------------------------

// mdRankInfo

// required int32 rank = 1;
inline bool mdRankInfo::has_rank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdRankInfo::set_has_rank() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdRankInfo::clear_has_rank() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdRankInfo::clear_rank() {
  rank_ = 0;
  clear_has_rank();
}
inline ::google::protobuf::int32 mdRankInfo::rank() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdRankInfo.rank)
  return rank_;
}
inline void mdRankInfo::set_rank(::google::protobuf::int32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdRankInfo.rank)
}

// required int32 node_index = 2;
inline bool mdRankInfo::has_node_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdRankInfo::set_has_node_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdRankInfo::clear_has_node_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdRankInfo::clear_node_index() {
  node_index_ = 0;
  clear_has_node_index();
}
inline ::google::protobuf::int32 mdRankInfo::node_index() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdRankInfo.node_index)
  return node_index_;
}
inline void mdRankInfo::set_node_index(::google::protobuf::int32 value) {
  set_has_node_index();
  node_index_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdRankInfo.node_index)
}

// required int32 open_level = 3;
inline bool mdRankInfo::has_open_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdRankInfo::set_has_open_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdRankInfo::clear_has_open_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdRankInfo::clear_open_level() {
  open_level_ = 0;
  clear_has_open_level();
}
inline ::google::protobuf::int32 mdRankInfo::open_level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdRankInfo.open_level)
  return open_level_;
}
inline void mdRankInfo::set_open_level(::google::protobuf::int32 value) {
  set_has_open_level();
  open_level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdRankInfo.open_level)
}

// required .b2.protocol.commondata.AttributeChange attribute_change = 4;
inline bool mdRankInfo::has_attribute_change() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdRankInfo::set_has_attribute_change() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdRankInfo::clear_has_attribute_change() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdRankInfo::clear_attribute_change() {
  attribute_change_ = 1;
  clear_has_attribute_change();
}
inline ::b2::protocol::commondata::AttributeChange mdRankInfo::attribute_change() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdRankInfo.attribute_change)
  return static_cast< ::b2::protocol::commondata::AttributeChange >(attribute_change_);
}
inline void mdRankInfo::set_attribute_change(::b2::protocol::commondata::AttributeChange value) {
  assert(::b2::protocol::commondata::AttributeChange_IsValid(value));
  set_has_attribute_change();
  attribute_change_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdRankInfo.attribute_change)
}

// required float change_value = 5;
inline bool mdRankInfo::has_change_value() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdRankInfo::set_has_change_value() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdRankInfo::clear_has_change_value() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdRankInfo::clear_change_value() {
  change_value_ = 0;
  clear_has_change_value();
}
inline float mdRankInfo::change_value() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdRankInfo.change_value)
  return change_value_;
}
inline void mdRankInfo::set_change_value(float value) {
  set_has_change_value();
  change_value_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdRankInfo.change_value)
}

// required int32 need_rank_promotion_point = 6;
inline bool mdRankInfo::has_need_rank_promotion_point() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdRankInfo::set_has_need_rank_promotion_point() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdRankInfo::clear_has_need_rank_promotion_point() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdRankInfo::clear_need_rank_promotion_point() {
  need_rank_promotion_point_ = 0;
  clear_has_need_rank_promotion_point();
}
inline ::google::protobuf::int32 mdRankInfo::need_rank_promotion_point() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdRankInfo.need_rank_promotion_point)
  return need_rank_promotion_point_;
}
inline void mdRankInfo::set_need_rank_promotion_point(::google::protobuf::int32 value) {
  set_has_need_rank_promotion_point();
  need_rank_promotion_point_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdRankInfo.need_rank_promotion_point)
}

// required int32 need_activate_gold = 7;
inline bool mdRankInfo::has_need_activate_gold() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mdRankInfo::set_has_need_activate_gold() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mdRankInfo::clear_has_need_activate_gold() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mdRankInfo::clear_need_activate_gold() {
  need_activate_gold_ = 0;
  clear_has_need_activate_gold();
}
inline ::google::protobuf::int32 mdRankInfo::need_activate_gold() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdRankInfo.need_activate_gold)
  return need_activate_gold_;
}
inline void mdRankInfo::set_need_activate_gold(::google::protobuf::int32 value) {
  set_has_need_activate_gold();
  need_activate_gold_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdRankInfo.need_activate_gold)
}

// required int32 rate = 8;
inline bool mdRankInfo::has_rate() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void mdRankInfo::set_has_rate() {
  _has_bits_[0] |= 0x00000080u;
}
inline void mdRankInfo::clear_has_rate() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void mdRankInfo::clear_rate() {
  rate_ = 0;
  clear_has_rate();
}
inline ::google::protobuf::int32 mdRankInfo::rate() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdRankInfo.rate)
  return rate_;
}
inline void mdRankInfo::set_rate(::google::protobuf::int32 value) {
  set_has_rate();
  rate_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdRankInfo.rate)
}

// -------------------------------------------------------------------

// mdMainQuestInfo

// required int32 id = 1;
inline bool mdMainQuestInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdMainQuestInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdMainQuestInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdMainQuestInfo::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 mdMainQuestInfo::id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdMainQuestInfo.id)
  return id_;
}
inline void mdMainQuestInfo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdMainQuestInfo.id)
}

// required .b2.protocol.commondata.MainQuestType main_quest_type = 2;
inline bool mdMainQuestInfo::has_main_quest_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdMainQuestInfo::set_has_main_quest_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdMainQuestInfo::clear_has_main_quest_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdMainQuestInfo::clear_main_quest_type() {
  main_quest_type_ = 1;
  clear_has_main_quest_type();
}
inline ::b2::protocol::commondata::MainQuestType mdMainQuestInfo::main_quest_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdMainQuestInfo.main_quest_type)
  return static_cast< ::b2::protocol::commondata::MainQuestType >(main_quest_type_);
}
inline void mdMainQuestInfo::set_main_quest_type(::b2::protocol::commondata::MainQuestType value) {
  assert(::b2::protocol::commondata::MainQuestType_IsValid(value));
  set_has_main_quest_type();
  main_quest_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdMainQuestInfo.main_quest_type)
}

// required int32 act_id = 3;
inline bool mdMainQuestInfo::has_act_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdMainQuestInfo::set_has_act_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdMainQuestInfo::clear_has_act_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdMainQuestInfo::clear_act_id() {
  act_id_ = 0;
  clear_has_act_id();
}
inline ::google::protobuf::int32 mdMainQuestInfo::act_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdMainQuestInfo.act_id)
  return act_id_;
}
inline void mdMainQuestInfo::set_act_id(::google::protobuf::int32 value) {
  set_has_act_id();
  act_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdMainQuestInfo.act_id)
}

// required .b2.protocol.commondata.StageDifficulty difficulty = 4;
inline bool mdMainQuestInfo::has_difficulty() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdMainQuestInfo::set_has_difficulty() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdMainQuestInfo::clear_has_difficulty() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdMainQuestInfo::clear_difficulty() {
  difficulty_ = 1;
  clear_has_difficulty();
}
inline ::b2::protocol::commondata::StageDifficulty mdMainQuestInfo::difficulty() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdMainQuestInfo.difficulty)
  return static_cast< ::b2::protocol::commondata::StageDifficulty >(difficulty_);
}
inline void mdMainQuestInfo::set_difficulty(::b2::protocol::commondata::StageDifficulty value) {
  assert(::b2::protocol::commondata::StageDifficulty_IsValid(value));
  set_has_difficulty();
  difficulty_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdMainQuestInfo.difficulty)
}

// required int32 event_type = 5;
inline bool mdMainQuestInfo::has_event_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdMainQuestInfo::set_has_event_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdMainQuestInfo::clear_has_event_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdMainQuestInfo::clear_event_type() {
  event_type_ = 0;
  clear_has_event_type();
}
inline ::google::protobuf::int32 mdMainQuestInfo::event_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdMainQuestInfo.event_type)
  return event_type_;
}
inline void mdMainQuestInfo::set_event_type(::google::protobuf::int32 value) {
  set_has_event_type();
  event_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdMainQuestInfo.event_type)
}

// required int32 main_view_condition = 6;
inline bool mdMainQuestInfo::has_main_view_condition() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdMainQuestInfo::set_has_main_view_condition() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdMainQuestInfo::clear_has_main_view_condition() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdMainQuestInfo::clear_main_view_condition() {
  main_view_condition_ = 0;
  clear_has_main_view_condition();
}
inline ::google::protobuf::int32 mdMainQuestInfo::main_view_condition() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdMainQuestInfo.main_view_condition)
  return main_view_condition_;
}
inline void mdMainQuestInfo::set_main_view_condition(::google::protobuf::int32 value) {
  set_has_main_view_condition();
  main_view_condition_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdMainQuestInfo.main_view_condition)
}

// required int32 condition_1 = 7;
inline bool mdMainQuestInfo::has_condition_1() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mdMainQuestInfo::set_has_condition_1() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mdMainQuestInfo::clear_has_condition_1() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mdMainQuestInfo::clear_condition_1() {
  condition_1_ = 0;
  clear_has_condition_1();
}
inline ::google::protobuf::int32 mdMainQuestInfo::condition_1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdMainQuestInfo.condition_1)
  return condition_1_;
}
inline void mdMainQuestInfo::set_condition_1(::google::protobuf::int32 value) {
  set_has_condition_1();
  condition_1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdMainQuestInfo.condition_1)
}

// required int32 condition_2 = 8;
inline bool mdMainQuestInfo::has_condition_2() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void mdMainQuestInfo::set_has_condition_2() {
  _has_bits_[0] |= 0x00000080u;
}
inline void mdMainQuestInfo::clear_has_condition_2() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void mdMainQuestInfo::clear_condition_2() {
  condition_2_ = 0;
  clear_has_condition_2();
}
inline ::google::protobuf::int32 mdMainQuestInfo::condition_2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdMainQuestInfo.condition_2)
  return condition_2_;
}
inline void mdMainQuestInfo::set_condition_2(::google::protobuf::int32 value) {
  set_has_condition_2();
  condition_2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdMainQuestInfo.condition_2)
}

// required int32 condition_3 = 9;
inline bool mdMainQuestInfo::has_condition_3() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void mdMainQuestInfo::set_has_condition_3() {
  _has_bits_[0] |= 0x00000100u;
}
inline void mdMainQuestInfo::clear_has_condition_3() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void mdMainQuestInfo::clear_condition_3() {
  condition_3_ = 0;
  clear_has_condition_3();
}
inline ::google::protobuf::int32 mdMainQuestInfo::condition_3() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdMainQuestInfo.condition_3)
  return condition_3_;
}
inline void mdMainQuestInfo::set_condition_3(::google::protobuf::int32 value) {
  set_has_condition_3();
  condition_3_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdMainQuestInfo.condition_3)
}

// required int32 condition_4 = 10;
inline bool mdMainQuestInfo::has_condition_4() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void mdMainQuestInfo::set_has_condition_4() {
  _has_bits_[0] |= 0x00000200u;
}
inline void mdMainQuestInfo::clear_has_condition_4() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void mdMainQuestInfo::clear_condition_4() {
  condition_4_ = 0;
  clear_has_condition_4();
}
inline ::google::protobuf::int32 mdMainQuestInfo::condition_4() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdMainQuestInfo.condition_4)
  return condition_4_;
}
inline void mdMainQuestInfo::set_condition_4(::google::protobuf::int32 value) {
  set_has_condition_4();
  condition_4_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdMainQuestInfo.condition_4)
}

// required int32 goal_count = 11;
inline bool mdMainQuestInfo::has_goal_count() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void mdMainQuestInfo::set_has_goal_count() {
  _has_bits_[0] |= 0x00000400u;
}
inline void mdMainQuestInfo::clear_has_goal_count() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void mdMainQuestInfo::clear_goal_count() {
  goal_count_ = 0;
  clear_has_goal_count();
}
inline ::google::protobuf::int32 mdMainQuestInfo::goal_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdMainQuestInfo.goal_count)
  return goal_count_;
}
inline void mdMainQuestInfo::set_goal_count(::google::protobuf::int32 value) {
  set_has_goal_count();
  goal_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdMainQuestInfo.goal_count)
}

// repeated .b2.protocol.commondata.Reward rewards = 12;
inline int mdMainQuestInfo::rewards_size() const {
  return rewards_.size();
}
inline void mdMainQuestInfo::clear_rewards() {
  rewards_.Clear();
}
inline const ::b2::protocol::commondata::Reward& mdMainQuestInfo::rewards(int index) const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdMainQuestInfo.rewards)
  return rewards_.Get(index);
}
inline ::b2::protocol::commondata::Reward* mdMainQuestInfo::mutable_rewards(int index) {
  // @@protoc_insertion_point(field_mutable:b2.protocol.masterdata.mdMainQuestInfo.rewards)
  return rewards_.Mutable(index);
}
inline ::b2::protocol::commondata::Reward* mdMainQuestInfo::add_rewards() {
  // @@protoc_insertion_point(field_add:b2.protocol.masterdata.mdMainQuestInfo.rewards)
  return rewards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward >&
mdMainQuestInfo::rewards() const {
  // @@protoc_insertion_point(field_list:b2.protocol.masterdata.mdMainQuestInfo.rewards)
  return rewards_;
}
inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward >*
mdMainQuestInfo::mutable_rewards() {
  // @@protoc_insertion_point(field_mutable_list:b2.protocol.masterdata.mdMainQuestInfo.rewards)
  return &rewards_;
}

// -------------------------------------------------------------------

// mdDailyQuestInfo

// required int32 id = 1;
inline bool mdDailyQuestInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdDailyQuestInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdDailyQuestInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdDailyQuestInfo::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 mdDailyQuestInfo::id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDailyQuestInfo.id)
  return id_;
}
inline void mdDailyQuestInfo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDailyQuestInfo.id)
}

// required int32 event_type = 2;
inline bool mdDailyQuestInfo::has_event_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdDailyQuestInfo::set_has_event_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdDailyQuestInfo::clear_has_event_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdDailyQuestInfo::clear_event_type() {
  event_type_ = 0;
  clear_has_event_type();
}
inline ::google::protobuf::int32 mdDailyQuestInfo::event_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDailyQuestInfo.event_type)
  return event_type_;
}
inline void mdDailyQuestInfo::set_event_type(::google::protobuf::int32 value) {
  set_has_event_type();
  event_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDailyQuestInfo.event_type)
}

// required int32 condition_1 = 3;
inline bool mdDailyQuestInfo::has_condition_1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdDailyQuestInfo::set_has_condition_1() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdDailyQuestInfo::clear_has_condition_1() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdDailyQuestInfo::clear_condition_1() {
  condition_1_ = 0;
  clear_has_condition_1();
}
inline ::google::protobuf::int32 mdDailyQuestInfo::condition_1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDailyQuestInfo.condition_1)
  return condition_1_;
}
inline void mdDailyQuestInfo::set_condition_1(::google::protobuf::int32 value) {
  set_has_condition_1();
  condition_1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDailyQuestInfo.condition_1)
}

// required int32 condition_2 = 4;
inline bool mdDailyQuestInfo::has_condition_2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdDailyQuestInfo::set_has_condition_2() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdDailyQuestInfo::clear_has_condition_2() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdDailyQuestInfo::clear_condition_2() {
  condition_2_ = 0;
  clear_has_condition_2();
}
inline ::google::protobuf::int32 mdDailyQuestInfo::condition_2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDailyQuestInfo.condition_2)
  return condition_2_;
}
inline void mdDailyQuestInfo::set_condition_2(::google::protobuf::int32 value) {
  set_has_condition_2();
  condition_2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDailyQuestInfo.condition_2)
}

// required int32 condition_3 = 5;
inline bool mdDailyQuestInfo::has_condition_3() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdDailyQuestInfo::set_has_condition_3() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdDailyQuestInfo::clear_has_condition_3() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdDailyQuestInfo::clear_condition_3() {
  condition_3_ = 0;
  clear_has_condition_3();
}
inline ::google::protobuf::int32 mdDailyQuestInfo::condition_3() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDailyQuestInfo.condition_3)
  return condition_3_;
}
inline void mdDailyQuestInfo::set_condition_3(::google::protobuf::int32 value) {
  set_has_condition_3();
  condition_3_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDailyQuestInfo.condition_3)
}

// required int32 condition_4 = 6;
inline bool mdDailyQuestInfo::has_condition_4() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdDailyQuestInfo::set_has_condition_4() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdDailyQuestInfo::clear_has_condition_4() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdDailyQuestInfo::clear_condition_4() {
  condition_4_ = 0;
  clear_has_condition_4();
}
inline ::google::protobuf::int32 mdDailyQuestInfo::condition_4() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDailyQuestInfo.condition_4)
  return condition_4_;
}
inline void mdDailyQuestInfo::set_condition_4(::google::protobuf::int32 value) {
  set_has_condition_4();
  condition_4_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDailyQuestInfo.condition_4)
}

// required int32 goal_count = 7;
inline bool mdDailyQuestInfo::has_goal_count() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mdDailyQuestInfo::set_has_goal_count() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mdDailyQuestInfo::clear_has_goal_count() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mdDailyQuestInfo::clear_goal_count() {
  goal_count_ = 0;
  clear_has_goal_count();
}
inline ::google::protobuf::int32 mdDailyQuestInfo::goal_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDailyQuestInfo.goal_count)
  return goal_count_;
}
inline void mdDailyQuestInfo::set_goal_count(::google::protobuf::int32 value) {
  set_has_goal_count();
  goal_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDailyQuestInfo.goal_count)
}

// repeated .b2.protocol.commondata.Reward rewards = 8;
inline int mdDailyQuestInfo::rewards_size() const {
  return rewards_.size();
}
inline void mdDailyQuestInfo::clear_rewards() {
  rewards_.Clear();
}
inline const ::b2::protocol::commondata::Reward& mdDailyQuestInfo::rewards(int index) const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDailyQuestInfo.rewards)
  return rewards_.Get(index);
}
inline ::b2::protocol::commondata::Reward* mdDailyQuestInfo::mutable_rewards(int index) {
  // @@protoc_insertion_point(field_mutable:b2.protocol.masterdata.mdDailyQuestInfo.rewards)
  return rewards_.Mutable(index);
}
inline ::b2::protocol::commondata::Reward* mdDailyQuestInfo::add_rewards() {
  // @@protoc_insertion_point(field_add:b2.protocol.masterdata.mdDailyQuestInfo.rewards)
  return rewards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward >&
mdDailyQuestInfo::rewards() const {
  // @@protoc_insertion_point(field_list:b2.protocol.masterdata.mdDailyQuestInfo.rewards)
  return rewards_;
}
inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward >*
mdDailyQuestInfo::mutable_rewards() {
  // @@protoc_insertion_point(field_mutable_list:b2.protocol.masterdata.mdDailyQuestInfo.rewards)
  return &rewards_;
}

// -------------------------------------------------------------------

// mdRewardInfo

// required int32 id = 1;
inline bool mdRewardInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdRewardInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdRewardInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdRewardInfo::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 mdRewardInfo::id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdRewardInfo.id)
  return id_;
}
inline void mdRewardInfo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdRewardInfo.id)
}

// required .b2.protocol.commondata.RewardType reward_type = 2;
inline bool mdRewardInfo::has_reward_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdRewardInfo::set_has_reward_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdRewardInfo::clear_has_reward_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdRewardInfo::clear_reward_type() {
  reward_type_ = 1;
  clear_has_reward_type();
}
inline ::b2::protocol::commondata::RewardType mdRewardInfo::reward_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdRewardInfo.reward_type)
  return static_cast< ::b2::protocol::commondata::RewardType >(reward_type_);
}
inline void mdRewardInfo::set_reward_type(::b2::protocol::commondata::RewardType value) {
  assert(::b2::protocol::commondata::RewardType_IsValid(value));
  set_has_reward_type();
  reward_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdRewardInfo.reward_type)
}

// required int64 reward_id = 3;
inline bool mdRewardInfo::has_reward_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdRewardInfo::set_has_reward_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdRewardInfo::clear_has_reward_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdRewardInfo::clear_reward_id() {
  reward_id_ = GOOGLE_LONGLONG(0);
  clear_has_reward_id();
}
inline ::google::protobuf::int64 mdRewardInfo::reward_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdRewardInfo.reward_id)
  return reward_id_;
}
inline void mdRewardInfo::set_reward_id(::google::protobuf::int64 value) {
  set_has_reward_id();
  reward_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdRewardInfo.reward_id)
}

// required .b2.protocol.commondata.RewardPushType reward_push_type = 4;
inline bool mdRewardInfo::has_reward_push_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdRewardInfo::set_has_reward_push_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdRewardInfo::clear_has_reward_push_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdRewardInfo::clear_reward_push_type() {
  reward_push_type_ = 1;
  clear_has_reward_push_type();
}
inline ::b2::protocol::commondata::RewardPushType mdRewardInfo::reward_push_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdRewardInfo.reward_push_type)
  return static_cast< ::b2::protocol::commondata::RewardPushType >(reward_push_type_);
}
inline void mdRewardInfo::set_reward_push_type(::b2::protocol::commondata::RewardPushType value) {
  assert(::b2::protocol::commondata::RewardPushType_IsValid(value));
  set_has_reward_push_type();
  reward_push_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdRewardInfo.reward_push_type)
}

// -------------------------------------------------------------------

// mdDailyMatchReward

// required .b2.protocol.commondata.MatchInfo.TYPE match_type = 1;
inline bool mdDailyMatchReward::has_match_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdDailyMatchReward::set_has_match_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdDailyMatchReward::clear_has_match_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdDailyMatchReward::clear_match_type() {
  match_type_ = 1;
  clear_has_match_type();
}
inline ::b2::protocol::commondata::MatchInfo_TYPE mdDailyMatchReward::match_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDailyMatchReward.match_type)
  return static_cast< ::b2::protocol::commondata::MatchInfo_TYPE >(match_type_);
}
inline void mdDailyMatchReward::set_match_type(::b2::protocol::commondata::MatchInfo_TYPE value) {
  assert(::b2::protocol::commondata::MatchInfo_TYPE_IsValid(value));
  set_has_match_type();
  match_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDailyMatchReward.match_type)
}

// required int32 require_count = 2;
inline bool mdDailyMatchReward::has_require_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdDailyMatchReward::set_has_require_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdDailyMatchReward::clear_has_require_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdDailyMatchReward::clear_require_count() {
  require_count_ = 0;
  clear_has_require_count();
}
inline ::google::protobuf::int32 mdDailyMatchReward::require_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDailyMatchReward.require_count)
  return require_count_;
}
inline void mdDailyMatchReward::set_require_count(::google::protobuf::int32 value) {
  set_has_require_count();
  require_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDailyMatchReward.require_count)
}

// required int32 reward_gold = 3;
inline bool mdDailyMatchReward::has_reward_gold() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdDailyMatchReward::set_has_reward_gold() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdDailyMatchReward::clear_has_reward_gold() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdDailyMatchReward::clear_reward_gold() {
  reward_gold_ = 0;
  clear_has_reward_gold();
}
inline ::google::protobuf::int32 mdDailyMatchReward::reward_gold() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDailyMatchReward.reward_gold)
  return reward_gold_;
}
inline void mdDailyMatchReward::set_reward_gold(::google::protobuf::int32 value) {
  set_has_reward_gold();
  reward_gold_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDailyMatchReward.reward_gold)
}

// required int32 reward_bladepoint = 4;
inline bool mdDailyMatchReward::has_reward_bladepoint() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdDailyMatchReward::set_has_reward_bladepoint() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdDailyMatchReward::clear_has_reward_bladepoint() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdDailyMatchReward::clear_reward_bladepoint() {
  reward_bladepoint_ = 0;
  clear_has_reward_bladepoint();
}
inline ::google::protobuf::int32 mdDailyMatchReward::reward_bladepoint() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDailyMatchReward.reward_bladepoint)
  return reward_bladepoint_;
}
inline void mdDailyMatchReward::set_reward_bladepoint(::google::protobuf::int32 value) {
  set_has_reward_bladepoint();
  reward_bladepoint_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDailyMatchReward.reward_bladepoint)
}

// required int32 reward_gem = 5;
inline bool mdDailyMatchReward::has_reward_gem() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdDailyMatchReward::set_has_reward_gem() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdDailyMatchReward::clear_has_reward_gem() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdDailyMatchReward::clear_reward_gem() {
  reward_gem_ = 0;
  clear_has_reward_gem();
}
inline ::google::protobuf::int32 mdDailyMatchReward::reward_gem() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDailyMatchReward.reward_gem)
  return reward_gem_;
}
inline void mdDailyMatchReward::set_reward_gem(::google::protobuf::int32 value) {
  set_has_reward_gem();
  reward_gem_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDailyMatchReward.reward_gem)
}

// required int32 reward_item_template_id = 6;
inline bool mdDailyMatchReward::has_reward_item_template_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdDailyMatchReward::set_has_reward_item_template_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdDailyMatchReward::clear_has_reward_item_template_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdDailyMatchReward::clear_reward_item_template_id() {
  reward_item_template_id_ = 0;
  clear_has_reward_item_template_id();
}
inline ::google::protobuf::int32 mdDailyMatchReward::reward_item_template_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDailyMatchReward.reward_item_template_id)
  return reward_item_template_id_;
}
inline void mdDailyMatchReward::set_reward_item_template_id(::google::protobuf::int32 value) {
  set_has_reward_item_template_id();
  reward_item_template_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDailyMatchReward.reward_item_template_id)
}

// -------------------------------------------------------------------

// mdMatchRankingReward

// required int32 grade = 1;
inline bool mdMatchRankingReward::has_grade() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdMatchRankingReward::set_has_grade() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdMatchRankingReward::clear_has_grade() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdMatchRankingReward::clear_grade() {
  grade_ = 0;
  clear_has_grade();
}
inline ::google::protobuf::int32 mdMatchRankingReward::grade() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdMatchRankingReward.grade)
  return grade_;
}
inline void mdMatchRankingReward::set_grade(::google::protobuf::int32 value) {
  set_has_grade();
  grade_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdMatchRankingReward.grade)
}

// required int32 ranking_min = 2;
inline bool mdMatchRankingReward::has_ranking_min() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdMatchRankingReward::set_has_ranking_min() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdMatchRankingReward::clear_has_ranking_min() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdMatchRankingReward::clear_ranking_min() {
  ranking_min_ = 0;
  clear_has_ranking_min();
}
inline ::google::protobuf::int32 mdMatchRankingReward::ranking_min() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdMatchRankingReward.ranking_min)
  return ranking_min_;
}
inline void mdMatchRankingReward::set_ranking_min(::google::protobuf::int32 value) {
  set_has_ranking_min();
  ranking_min_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdMatchRankingReward.ranking_min)
}

// required int32 ranking_max = 3;
inline bool mdMatchRankingReward::has_ranking_max() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdMatchRankingReward::set_has_ranking_max() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdMatchRankingReward::clear_has_ranking_max() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdMatchRankingReward::clear_ranking_max() {
  ranking_max_ = 0;
  clear_has_ranking_max();
}
inline ::google::protobuf::int32 mdMatchRankingReward::ranking_max() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdMatchRankingReward.ranking_max)
  return ranking_max_;
}
inline void mdMatchRankingReward::set_ranking_max(::google::protobuf::int32 value) {
  set_has_ranking_max();
  ranking_max_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdMatchRankingReward.ranking_max)
}

// repeated .b2.protocol.commondata.Reward rewards = 4;
inline int mdMatchRankingReward::rewards_size() const {
  return rewards_.size();
}
inline void mdMatchRankingReward::clear_rewards() {
  rewards_.Clear();
}
inline const ::b2::protocol::commondata::Reward& mdMatchRankingReward::rewards(int index) const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdMatchRankingReward.rewards)
  return rewards_.Get(index);
}
inline ::b2::protocol::commondata::Reward* mdMatchRankingReward::mutable_rewards(int index) {
  // @@protoc_insertion_point(field_mutable:b2.protocol.masterdata.mdMatchRankingReward.rewards)
  return rewards_.Mutable(index);
}
inline ::b2::protocol::commondata::Reward* mdMatchRankingReward::add_rewards() {
  // @@protoc_insertion_point(field_add:b2.protocol.masterdata.mdMatchRankingReward.rewards)
  return rewards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward >&
mdMatchRankingReward::rewards() const {
  // @@protoc_insertion_point(field_list:b2.protocol.masterdata.mdMatchRankingReward.rewards)
  return rewards_;
}
inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward >*
mdMatchRankingReward::mutable_rewards() {
  // @@protoc_insertion_point(field_mutable_list:b2.protocol.masterdata.mdMatchRankingReward.rewards)
  return &rewards_;
}

// -------------------------------------------------------------------

// mdStageInfo

// required int32 stage_id = 1;
inline bool mdStageInfo::has_stage_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdStageInfo::set_has_stage_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdStageInfo::clear_has_stage_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdStageInfo::clear_stage_id() {
  stage_id_ = 0;
  clear_has_stage_id();
}
inline ::google::protobuf::int32 mdStageInfo::stage_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdStageInfo.stage_id)
  return stage_id_;
}
inline void mdStageInfo::set_stage_id(::google::protobuf::int32 value) {
  set_has_stage_id();
  stage_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdStageInfo.stage_id)
}

// required .b2.protocol.commondata.StageDifficulty difficulty = 2;
inline bool mdStageInfo::has_difficulty() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdStageInfo::set_has_difficulty() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdStageInfo::clear_has_difficulty() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdStageInfo::clear_difficulty() {
  difficulty_ = 1;
  clear_has_difficulty();
}
inline ::b2::protocol::commondata::StageDifficulty mdStageInfo::difficulty() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdStageInfo.difficulty)
  return static_cast< ::b2::protocol::commondata::StageDifficulty >(difficulty_);
}
inline void mdStageInfo::set_difficulty(::b2::protocol::commondata::StageDifficulty value) {
  assert(::b2::protocol::commondata::StageDifficulty_IsValid(value));
  set_has_difficulty();
  difficulty_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdStageInfo.difficulty)
}

// required int32 difficulty_scale = 3;
inline bool mdStageInfo::has_difficulty_scale() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdStageInfo::set_has_difficulty_scale() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdStageInfo::clear_has_difficulty_scale() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdStageInfo::clear_difficulty_scale() {
  difficulty_scale_ = 0;
  clear_has_difficulty_scale();
}
inline ::google::protobuf::int32 mdStageInfo::difficulty_scale() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdStageInfo.difficulty_scale)
  return difficulty_scale_;
}
inline void mdStageInfo::set_difficulty_scale(::google::protobuf::int32 value) {
  set_has_difficulty_scale();
  difficulty_scale_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdStageInfo.difficulty_scale)
}

// required int32 map_id = 4;
inline bool mdStageInfo::has_map_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdStageInfo::set_has_map_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdStageInfo::clear_has_map_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdStageInfo::clear_map_id() {
  map_id_ = 0;
  clear_has_map_id();
}
inline ::google::protobuf::int32 mdStageInfo::map_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdStageInfo.map_id)
  return map_id_;
}
inline void mdStageInfo::set_map_id(::google::protobuf::int32 value) {
  set_has_map_id();
  map_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdStageInfo.map_id)
}

// required int32 clear_time_grade_high = 5;
inline bool mdStageInfo::has_clear_time_grade_high() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdStageInfo::set_has_clear_time_grade_high() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdStageInfo::clear_has_clear_time_grade_high() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdStageInfo::clear_clear_time_grade_high() {
  clear_time_grade_high_ = 0;
  clear_has_clear_time_grade_high();
}
inline ::google::protobuf::int32 mdStageInfo::clear_time_grade_high() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdStageInfo.clear_time_grade_high)
  return clear_time_grade_high_;
}
inline void mdStageInfo::set_clear_time_grade_high(::google::protobuf::int32 value) {
  set_has_clear_time_grade_high();
  clear_time_grade_high_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdStageInfo.clear_time_grade_high)
}

// required int32 clear_time_grade_medium = 6;
inline bool mdStageInfo::has_clear_time_grade_medium() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdStageInfo::set_has_clear_time_grade_medium() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdStageInfo::clear_has_clear_time_grade_medium() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdStageInfo::clear_clear_time_grade_medium() {
  clear_time_grade_medium_ = 0;
  clear_has_clear_time_grade_medium();
}
inline ::google::protobuf::int32 mdStageInfo::clear_time_grade_medium() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdStageInfo.clear_time_grade_medium)
  return clear_time_grade_medium_;
}
inline void mdStageInfo::set_clear_time_grade_medium(::google::protobuf::int32 value) {
  set_has_clear_time_grade_medium();
  clear_time_grade_medium_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdStageInfo.clear_time_grade_medium)
}

// required int32 recommend_power = 7;
inline bool mdStageInfo::has_recommend_power() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mdStageInfo::set_has_recommend_power() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mdStageInfo::clear_has_recommend_power() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mdStageInfo::clear_recommend_power() {
  recommend_power_ = 0;
  clear_has_recommend_power();
}
inline ::google::protobuf::int32 mdStageInfo::recommend_power() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdStageInfo.recommend_power)
  return recommend_power_;
}
inline void mdStageInfo::set_recommend_power(::google::protobuf::int32 value) {
  set_has_recommend_power();
  recommend_power_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdStageInfo.recommend_power)
}

// required int32 recommend_attack = 8;
inline bool mdStageInfo::has_recommend_attack() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void mdStageInfo::set_has_recommend_attack() {
  _has_bits_[0] |= 0x00000080u;
}
inline void mdStageInfo::clear_has_recommend_attack() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void mdStageInfo::clear_recommend_attack() {
  recommend_attack_ = 0;
  clear_has_recommend_attack();
}
inline ::google::protobuf::int32 mdStageInfo::recommend_attack() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdStageInfo.recommend_attack)
  return recommend_attack_;
}
inline void mdStageInfo::set_recommend_attack(::google::protobuf::int32 value) {
  set_has_recommend_attack();
  recommend_attack_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdStageInfo.recommend_attack)
}

// required int32 recommend_defense = 9;
inline bool mdStageInfo::has_recommend_defense() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void mdStageInfo::set_has_recommend_defense() {
  _has_bits_[0] |= 0x00000100u;
}
inline void mdStageInfo::clear_has_recommend_defense() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void mdStageInfo::clear_recommend_defense() {
  recommend_defense_ = 0;
  clear_has_recommend_defense();
}
inline ::google::protobuf::int32 mdStageInfo::recommend_defense() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdStageInfo.recommend_defense)
  return recommend_defense_;
}
inline void mdStageInfo::set_recommend_defense(::google::protobuf::int32 value) {
  set_has_recommend_defense();
  recommend_defense_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdStageInfo.recommend_defense)
}

// required int32 gold_cost_exp_buff = 10;
inline bool mdStageInfo::has_gold_cost_exp_buff() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void mdStageInfo::set_has_gold_cost_exp_buff() {
  _has_bits_[0] |= 0x00000200u;
}
inline void mdStageInfo::clear_has_gold_cost_exp_buff() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void mdStageInfo::clear_gold_cost_exp_buff() {
  gold_cost_exp_buff_ = 0;
  clear_has_gold_cost_exp_buff();
}
inline ::google::protobuf::int32 mdStageInfo::gold_cost_exp_buff() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdStageInfo.gold_cost_exp_buff)
  return gold_cost_exp_buff_;
}
inline void mdStageInfo::set_gold_cost_exp_buff(::google::protobuf::int32 value) {
  set_has_gold_cost_exp_buff();
  gold_cost_exp_buff_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdStageInfo.gold_cost_exp_buff)
}

// required int32 gold_cost_gold_buff = 11;
inline bool mdStageInfo::has_gold_cost_gold_buff() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void mdStageInfo::set_has_gold_cost_gold_buff() {
  _has_bits_[0] |= 0x00000400u;
}
inline void mdStageInfo::clear_has_gold_cost_gold_buff() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void mdStageInfo::clear_gold_cost_gold_buff() {
  gold_cost_gold_buff_ = 0;
  clear_has_gold_cost_gold_buff();
}
inline ::google::protobuf::int32 mdStageInfo::gold_cost_gold_buff() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdStageInfo.gold_cost_gold_buff)
  return gold_cost_gold_buff_;
}
inline void mdStageInfo::set_gold_cost_gold_buff(::google::protobuf::int32 value) {
  set_has_gold_cost_gold_buff();
  gold_cost_gold_buff_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdStageInfo.gold_cost_gold_buff)
}

// required int32 gold_cost_auto_skill_buff = 12;
inline bool mdStageInfo::has_gold_cost_auto_skill_buff() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void mdStageInfo::set_has_gold_cost_auto_skill_buff() {
  _has_bits_[0] |= 0x00000800u;
}
inline void mdStageInfo::clear_has_gold_cost_auto_skill_buff() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void mdStageInfo::clear_gold_cost_auto_skill_buff() {
  gold_cost_auto_skill_buff_ = 0;
  clear_has_gold_cost_auto_skill_buff();
}
inline ::google::protobuf::int32 mdStageInfo::gold_cost_auto_skill_buff() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdStageInfo.gold_cost_auto_skill_buff)
  return gold_cost_auto_skill_buff_;
}
inline void mdStageInfo::set_gold_cost_auto_skill_buff(::google::protobuf::int32 value) {
  set_has_gold_cost_auto_skill_buff();
  gold_cost_auto_skill_buff_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdStageInfo.gold_cost_auto_skill_buff)
}

// required int32 gold_cost_boost_buff = 13;
inline bool mdStageInfo::has_gold_cost_boost_buff() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void mdStageInfo::set_has_gold_cost_boost_buff() {
  _has_bits_[0] |= 0x00001000u;
}
inline void mdStageInfo::clear_has_gold_cost_boost_buff() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void mdStageInfo::clear_gold_cost_boost_buff() {
  gold_cost_boost_buff_ = 0;
  clear_has_gold_cost_boost_buff();
}
inline ::google::protobuf::int32 mdStageInfo::gold_cost_boost_buff() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdStageInfo.gold_cost_boost_buff)
  return gold_cost_boost_buff_;
}
inline void mdStageInfo::set_gold_cost_boost_buff(::google::protobuf::int32 value) {
  set_has_gold_cost_boost_buff();
  gold_cost_boost_buff_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdStageInfo.gold_cost_boost_buff)
}

// required .b2.protocol.commondata.Aether.TYPE aether_type = 14;
inline bool mdStageInfo::has_aether_type() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void mdStageInfo::set_has_aether_type() {
  _has_bits_[0] |= 0x00002000u;
}
inline void mdStageInfo::clear_has_aether_type() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void mdStageInfo::clear_aether_type() {
  aether_type_ = 0;
  clear_has_aether_type();
}
inline ::b2::protocol::commondata::Aether_TYPE mdStageInfo::aether_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdStageInfo.aether_type)
  return static_cast< ::b2::protocol::commondata::Aether_TYPE >(aether_type_);
}
inline void mdStageInfo::set_aether_type(::b2::protocol::commondata::Aether_TYPE value) {
  assert(::b2::protocol::commondata::Aether_TYPE_IsValid(value));
  set_has_aether_type();
  aether_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdStageInfo.aether_type)
}

// -------------------------------------------------------------------

// mdCounterDungeon

// required int32 dungeon_id = 1;
inline bool mdCounterDungeon::has_dungeon_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdCounterDungeon::set_has_dungeon_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdCounterDungeon::clear_has_dungeon_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdCounterDungeon::clear_dungeon_id() {
  dungeon_id_ = 0;
  clear_has_dungeon_id();
}
inline ::google::protobuf::int32 mdCounterDungeon::dungeon_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCounterDungeon.dungeon_id)
  return dungeon_id_;
}
inline void mdCounterDungeon::set_dungeon_id(::google::protobuf::int32 value) {
  set_has_dungeon_id();
  dungeon_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdCounterDungeon.dungeon_id)
}

// required .b2.protocol.masterdata.mdCounterDungeon.TYPE dungeon_type = 2;
inline bool mdCounterDungeon::has_dungeon_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdCounterDungeon::set_has_dungeon_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdCounterDungeon::clear_has_dungeon_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdCounterDungeon::clear_dungeon_type() {
  dungeon_type_ = 1;
  clear_has_dungeon_type();
}
inline ::b2::protocol::masterdata::mdCounterDungeon_TYPE mdCounterDungeon::dungeon_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCounterDungeon.dungeon_type)
  return static_cast< ::b2::protocol::masterdata::mdCounterDungeon_TYPE >(dungeon_type_);
}
inline void mdCounterDungeon::set_dungeon_type(::b2::protocol::masterdata::mdCounterDungeon_TYPE value) {
  assert(::b2::protocol::masterdata::mdCounterDungeon_TYPE_IsValid(value));
  set_has_dungeon_type();
  dungeon_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdCounterDungeon.dungeon_type)
}

// required .b2.protocol.masterdata.mdCounterDungeon.DIFFICULTY difficulty = 3;
inline bool mdCounterDungeon::has_difficulty() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdCounterDungeon::set_has_difficulty() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdCounterDungeon::clear_has_difficulty() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdCounterDungeon::clear_difficulty() {
  difficulty_ = 1;
  clear_has_difficulty();
}
inline ::b2::protocol::masterdata::mdCounterDungeon_DIFFICULTY mdCounterDungeon::difficulty() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCounterDungeon.difficulty)
  return static_cast< ::b2::protocol::masterdata::mdCounterDungeon_DIFFICULTY >(difficulty_);
}
inline void mdCounterDungeon::set_difficulty(::b2::protocol::masterdata::mdCounterDungeon_DIFFICULTY value) {
  assert(::b2::protocol::masterdata::mdCounterDungeon_DIFFICULTY_IsValid(value));
  set_has_difficulty();
  difficulty_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdCounterDungeon.difficulty)
}

// required int32 difficulty_level = 4;
inline bool mdCounterDungeon::has_difficulty_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdCounterDungeon::set_has_difficulty_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdCounterDungeon::clear_has_difficulty_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdCounterDungeon::clear_difficulty_level() {
  difficulty_level_ = 0;
  clear_has_difficulty_level();
}
inline ::google::protobuf::int32 mdCounterDungeon::difficulty_level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCounterDungeon.difficulty_level)
  return difficulty_level_;
}
inline void mdCounterDungeon::set_difficulty_level(::google::protobuf::int32 value) {
  set_has_difficulty_level();
  difficulty_level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdCounterDungeon.difficulty_level)
}

// required int32 difficulty_scale = 5;
inline bool mdCounterDungeon::has_difficulty_scale() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdCounterDungeon::set_has_difficulty_scale() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdCounterDungeon::clear_has_difficulty_scale() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdCounterDungeon::clear_difficulty_scale() {
  difficulty_scale_ = 0;
  clear_has_difficulty_scale();
}
inline ::google::protobuf::int32 mdCounterDungeon::difficulty_scale() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCounterDungeon.difficulty_scale)
  return difficulty_scale_;
}
inline void mdCounterDungeon::set_difficulty_scale(::google::protobuf::int32 value) {
  set_has_difficulty_scale();
  difficulty_scale_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdCounterDungeon.difficulty_scale)
}

// required int32 recommend_power = 6;
inline bool mdCounterDungeon::has_recommend_power() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdCounterDungeon::set_has_recommend_power() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdCounterDungeon::clear_has_recommend_power() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdCounterDungeon::clear_recommend_power() {
  recommend_power_ = 0;
  clear_has_recommend_power();
}
inline ::google::protobuf::int32 mdCounterDungeon::recommend_power() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCounterDungeon.recommend_power)
  return recommend_power_;
}
inline void mdCounterDungeon::set_recommend_power(::google::protobuf::int32 value) {
  set_has_recommend_power();
  recommend_power_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdCounterDungeon.recommend_power)
}

// required int32 recommend_attack = 7;
inline bool mdCounterDungeon::has_recommend_attack() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mdCounterDungeon::set_has_recommend_attack() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mdCounterDungeon::clear_has_recommend_attack() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mdCounterDungeon::clear_recommend_attack() {
  recommend_attack_ = 0;
  clear_has_recommend_attack();
}
inline ::google::protobuf::int32 mdCounterDungeon::recommend_attack() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCounterDungeon.recommend_attack)
  return recommend_attack_;
}
inline void mdCounterDungeon::set_recommend_attack(::google::protobuf::int32 value) {
  set_has_recommend_attack();
  recommend_attack_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdCounterDungeon.recommend_attack)
}

// required int32 recommend_defense = 8;
inline bool mdCounterDungeon::has_recommend_defense() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void mdCounterDungeon::set_has_recommend_defense() {
  _has_bits_[0] |= 0x00000080u;
}
inline void mdCounterDungeon::clear_has_recommend_defense() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void mdCounterDungeon::clear_recommend_defense() {
  recommend_defense_ = 0;
  clear_has_recommend_defense();
}
inline ::google::protobuf::int32 mdCounterDungeon::recommend_defense() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCounterDungeon.recommend_defense)
  return recommend_defense_;
}
inline void mdCounterDungeon::set_recommend_defense(::google::protobuf::int32 value) {
  set_has_recommend_defense();
  recommend_defense_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdCounterDungeon.recommend_defense)
}

// repeated .b2.protocol.commondata.RewardRandomCount rewards = 10;
inline int mdCounterDungeon::rewards_size() const {
  return rewards_.size();
}
inline void mdCounterDungeon::clear_rewards() {
  rewards_.Clear();
}
inline const ::b2::protocol::commondata::RewardRandomCount& mdCounterDungeon::rewards(int index) const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCounterDungeon.rewards)
  return rewards_.Get(index);
}
inline ::b2::protocol::commondata::RewardRandomCount* mdCounterDungeon::mutable_rewards(int index) {
  // @@protoc_insertion_point(field_mutable:b2.protocol.masterdata.mdCounterDungeon.rewards)
  return rewards_.Mutable(index);
}
inline ::b2::protocol::commondata::RewardRandomCount* mdCounterDungeon::add_rewards() {
  // @@protoc_insertion_point(field_add:b2.protocol.masterdata.mdCounterDungeon.rewards)
  return rewards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::RewardRandomCount >&
mdCounterDungeon::rewards() const {
  // @@protoc_insertion_point(field_list:b2.protocol.masterdata.mdCounterDungeon.rewards)
  return rewards_;
}
inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::RewardRandomCount >*
mdCounterDungeon::mutable_rewards() {
  // @@protoc_insertion_point(field_mutable_list:b2.protocol.masterdata.mdCounterDungeon.rewards)
  return &rewards_;
}

// required int32 drop_gold_min = 11;
inline bool mdCounterDungeon::has_drop_gold_min() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void mdCounterDungeon::set_has_drop_gold_min() {
  _has_bits_[0] |= 0x00000200u;
}
inline void mdCounterDungeon::clear_has_drop_gold_min() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void mdCounterDungeon::clear_drop_gold_min() {
  drop_gold_min_ = 0;
  clear_has_drop_gold_min();
}
inline ::google::protobuf::int32 mdCounterDungeon::drop_gold_min() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCounterDungeon.drop_gold_min)
  return drop_gold_min_;
}
inline void mdCounterDungeon::set_drop_gold_min(::google::protobuf::int32 value) {
  set_has_drop_gold_min();
  drop_gold_min_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdCounterDungeon.drop_gold_min)
}

// required int32 drop_gold_max = 12;
inline bool mdCounterDungeon::has_drop_gold_max() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void mdCounterDungeon::set_has_drop_gold_max() {
  _has_bits_[0] |= 0x00000400u;
}
inline void mdCounterDungeon::clear_has_drop_gold_max() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void mdCounterDungeon::clear_drop_gold_max() {
  drop_gold_max_ = 0;
  clear_has_drop_gold_max();
}
inline ::google::protobuf::int32 mdCounterDungeon::drop_gold_max() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCounterDungeon.drop_gold_max)
  return drop_gold_max_;
}
inline void mdCounterDungeon::set_drop_gold_max(::google::protobuf::int32 value) {
  set_has_drop_gold_max();
  drop_gold_max_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdCounterDungeon.drop_gold_max)
}

// -------------------------------------------------------------------

// mdCounterDungeonPeriod

// required .b2.protocol.masterdata.mdCounterDungeon.TYPE dungeon_type = 1;
inline bool mdCounterDungeonPeriod::has_dungeon_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdCounterDungeonPeriod::set_has_dungeon_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdCounterDungeonPeriod::clear_has_dungeon_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdCounterDungeonPeriod::clear_dungeon_type() {
  dungeon_type_ = 1;
  clear_has_dungeon_type();
}
inline ::b2::protocol::masterdata::mdCounterDungeon_TYPE mdCounterDungeonPeriod::dungeon_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCounterDungeonPeriod.dungeon_type)
  return static_cast< ::b2::protocol::masterdata::mdCounterDungeon_TYPE >(dungeon_type_);
}
inline void mdCounterDungeonPeriod::set_dungeon_type(::b2::protocol::masterdata::mdCounterDungeon_TYPE value) {
  assert(::b2::protocol::masterdata::mdCounterDungeon_TYPE_IsValid(value));
  set_has_dungeon_type();
  dungeon_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdCounterDungeonPeriod.dungeon_type)
}

// required .b2.protocol.commondata.DayOfWeek day_of_week = 2;
inline bool mdCounterDungeonPeriod::has_day_of_week() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdCounterDungeonPeriod::set_has_day_of_week() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdCounterDungeonPeriod::clear_has_day_of_week() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdCounterDungeonPeriod::clear_day_of_week() {
  day_of_week_ = 1;
  clear_has_day_of_week();
}
inline ::b2::protocol::commondata::DayOfWeek mdCounterDungeonPeriod::day_of_week() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCounterDungeonPeriod.day_of_week)
  return static_cast< ::b2::protocol::commondata::DayOfWeek >(day_of_week_);
}
inline void mdCounterDungeonPeriod::set_day_of_week(::b2::protocol::commondata::DayOfWeek value) {
  assert(::b2::protocol::commondata::DayOfWeek_IsValid(value));
  set_has_day_of_week();
  day_of_week_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdCounterDungeonPeriod.day_of_week)
}

// required int32 begin_hour = 3;
inline bool mdCounterDungeonPeriod::has_begin_hour() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdCounterDungeonPeriod::set_has_begin_hour() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdCounterDungeonPeriod::clear_has_begin_hour() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdCounterDungeonPeriod::clear_begin_hour() {
  begin_hour_ = 0;
  clear_has_begin_hour();
}
inline ::google::protobuf::int32 mdCounterDungeonPeriod::begin_hour() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCounterDungeonPeriod.begin_hour)
  return begin_hour_;
}
inline void mdCounterDungeonPeriod::set_begin_hour(::google::protobuf::int32 value) {
  set_has_begin_hour();
  begin_hour_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdCounterDungeonPeriod.begin_hour)
}

// required int32 begin_min = 4;
inline bool mdCounterDungeonPeriod::has_begin_min() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdCounterDungeonPeriod::set_has_begin_min() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdCounterDungeonPeriod::clear_has_begin_min() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdCounterDungeonPeriod::clear_begin_min() {
  begin_min_ = 0;
  clear_has_begin_min();
}
inline ::google::protobuf::int32 mdCounterDungeonPeriod::begin_min() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCounterDungeonPeriod.begin_min)
  return begin_min_;
}
inline void mdCounterDungeonPeriod::set_begin_min(::google::protobuf::int32 value) {
  set_has_begin_min();
  begin_min_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdCounterDungeonPeriod.begin_min)
}

// required int32 end_hour = 5;
inline bool mdCounterDungeonPeriod::has_end_hour() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdCounterDungeonPeriod::set_has_end_hour() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdCounterDungeonPeriod::clear_has_end_hour() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdCounterDungeonPeriod::clear_end_hour() {
  end_hour_ = 0;
  clear_has_end_hour();
}
inline ::google::protobuf::int32 mdCounterDungeonPeriod::end_hour() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCounterDungeonPeriod.end_hour)
  return end_hour_;
}
inline void mdCounterDungeonPeriod::set_end_hour(::google::protobuf::int32 value) {
  set_has_end_hour();
  end_hour_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdCounterDungeonPeriod.end_hour)
}

// required int32 end_min = 6;
inline bool mdCounterDungeonPeriod::has_end_min() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdCounterDungeonPeriod::set_has_end_min() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdCounterDungeonPeriod::clear_has_end_min() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdCounterDungeonPeriod::clear_end_min() {
  end_min_ = 0;
  clear_has_end_min();
}
inline ::google::protobuf::int32 mdCounterDungeonPeriod::end_min() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCounterDungeonPeriod.end_min)
  return end_min_;
}
inline void mdCounterDungeonPeriod::set_end_min(::google::protobuf::int32 value) {
  set_has_end_min();
  end_min_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdCounterDungeonPeriod.end_min)
}

// -------------------------------------------------------------------

// mdCounterDungeonWeekReward

// required int32 index = 1;
inline bool mdCounterDungeonWeekReward::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdCounterDungeonWeekReward::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdCounterDungeonWeekReward::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdCounterDungeonWeekReward::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 mdCounterDungeonWeekReward::index() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCounterDungeonWeekReward.index)
  return index_;
}
inline void mdCounterDungeonWeekReward::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdCounterDungeonWeekReward.index)
}

// required int32 require_count = 2;
inline bool mdCounterDungeonWeekReward::has_require_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdCounterDungeonWeekReward::set_has_require_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdCounterDungeonWeekReward::clear_has_require_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdCounterDungeonWeekReward::clear_require_count() {
  require_count_ = 0;
  clear_has_require_count();
}
inline ::google::protobuf::int32 mdCounterDungeonWeekReward::require_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCounterDungeonWeekReward.require_count)
  return require_count_;
}
inline void mdCounterDungeonWeekReward::set_require_count(::google::protobuf::int32 value) {
  set_has_require_count();
  require_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdCounterDungeonWeekReward.require_count)
}

// repeated .b2.protocol.commondata.Reward rewards = 3;
inline int mdCounterDungeonWeekReward::rewards_size() const {
  return rewards_.size();
}
inline void mdCounterDungeonWeekReward::clear_rewards() {
  rewards_.Clear();
}
inline const ::b2::protocol::commondata::Reward& mdCounterDungeonWeekReward::rewards(int index) const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCounterDungeonWeekReward.rewards)
  return rewards_.Get(index);
}
inline ::b2::protocol::commondata::Reward* mdCounterDungeonWeekReward::mutable_rewards(int index) {
  // @@protoc_insertion_point(field_mutable:b2.protocol.masterdata.mdCounterDungeonWeekReward.rewards)
  return rewards_.Mutable(index);
}
inline ::b2::protocol::commondata::Reward* mdCounterDungeonWeekReward::add_rewards() {
  // @@protoc_insertion_point(field_add:b2.protocol.masterdata.mdCounterDungeonWeekReward.rewards)
  return rewards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward >&
mdCounterDungeonWeekReward::rewards() const {
  // @@protoc_insertion_point(field_list:b2.protocol.masterdata.mdCounterDungeonWeekReward.rewards)
  return rewards_;
}
inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward >*
mdCounterDungeonWeekReward::mutable_rewards() {
  // @@protoc_insertion_point(field_mutable_list:b2.protocol.masterdata.mdCounterDungeonWeekReward.rewards)
  return &rewards_;
}

// -------------------------------------------------------------------

// mdMissionInfo

// required int32 mission_id = 1;
inline bool mdMissionInfo::has_mission_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdMissionInfo::set_has_mission_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdMissionInfo::clear_has_mission_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdMissionInfo::clear_mission_id() {
  mission_id_ = 0;
  clear_has_mission_id();
}
inline ::google::protobuf::int32 mdMissionInfo::mission_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdMissionInfo.mission_id)
  return mission_id_;
}
inline void mdMissionInfo::set_mission_id(::google::protobuf::int32 value) {
  set_has_mission_id();
  mission_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdMissionInfo.mission_id)
}

// required .b2.protocol.commondata.MissionInfo.MissionType mission_type = 2;
inline bool mdMissionInfo::has_mission_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdMissionInfo::set_has_mission_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdMissionInfo::clear_has_mission_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdMissionInfo::clear_mission_type() {
  mission_type_ = 1;
  clear_has_mission_type();
}
inline ::b2::protocol::commondata::MissionInfo_MissionType mdMissionInfo::mission_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdMissionInfo.mission_type)
  return static_cast< ::b2::protocol::commondata::MissionInfo_MissionType >(mission_type_);
}
inline void mdMissionInfo::set_mission_type(::b2::protocol::commondata::MissionInfo_MissionType value) {
  assert(::b2::protocol::commondata::MissionInfo_MissionType_IsValid(value));
  set_has_mission_type();
  mission_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdMissionInfo.mission_type)
}

// required int32 event_type = 3;
inline bool mdMissionInfo::has_event_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdMissionInfo::set_has_event_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdMissionInfo::clear_has_event_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdMissionInfo::clear_event_type() {
  event_type_ = 0;
  clear_has_event_type();
}
inline ::google::protobuf::int32 mdMissionInfo::event_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdMissionInfo.event_type)
  return event_type_;
}
inline void mdMissionInfo::set_event_type(::google::protobuf::int32 value) {
  set_has_event_type();
  event_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdMissionInfo.event_type)
}

// required int32 condition1 = 4;
inline bool mdMissionInfo::has_condition1() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdMissionInfo::set_has_condition1() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdMissionInfo::clear_has_condition1() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdMissionInfo::clear_condition1() {
  condition1_ = 0;
  clear_has_condition1();
}
inline ::google::protobuf::int32 mdMissionInfo::condition1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdMissionInfo.condition1)
  return condition1_;
}
inline void mdMissionInfo::set_condition1(::google::protobuf::int32 value) {
  set_has_condition1();
  condition1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdMissionInfo.condition1)
}

// required int32 condition2 = 5;
inline bool mdMissionInfo::has_condition2() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdMissionInfo::set_has_condition2() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdMissionInfo::clear_has_condition2() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdMissionInfo::clear_condition2() {
  condition2_ = 0;
  clear_has_condition2();
}
inline ::google::protobuf::int32 mdMissionInfo::condition2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdMissionInfo.condition2)
  return condition2_;
}
inline void mdMissionInfo::set_condition2(::google::protobuf::int32 value) {
  set_has_condition2();
  condition2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdMissionInfo.condition2)
}

// required int32 condition3 = 6;
inline bool mdMissionInfo::has_condition3() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdMissionInfo::set_has_condition3() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdMissionInfo::clear_has_condition3() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdMissionInfo::clear_condition3() {
  condition3_ = 0;
  clear_has_condition3();
}
inline ::google::protobuf::int32 mdMissionInfo::condition3() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdMissionInfo.condition3)
  return condition3_;
}
inline void mdMissionInfo::set_condition3(::google::protobuf::int32 value) {
  set_has_condition3();
  condition3_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdMissionInfo.condition3)
}

// required int32 condition4 = 7;
inline bool mdMissionInfo::has_condition4() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mdMissionInfo::set_has_condition4() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mdMissionInfo::clear_has_condition4() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mdMissionInfo::clear_condition4() {
  condition4_ = 0;
  clear_has_condition4();
}
inline ::google::protobuf::int32 mdMissionInfo::condition4() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdMissionInfo.condition4)
  return condition4_;
}
inline void mdMissionInfo::set_condition4(::google::protobuf::int32 value) {
  set_has_condition4();
  condition4_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdMissionInfo.condition4)
}

// required int32 goal_count = 8;
inline bool mdMissionInfo::has_goal_count() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void mdMissionInfo::set_has_goal_count() {
  _has_bits_[0] |= 0x00000080u;
}
inline void mdMissionInfo::clear_has_goal_count() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void mdMissionInfo::clear_goal_count() {
  goal_count_ = 0;
  clear_has_goal_count();
}
inline ::google::protobuf::int32 mdMissionInfo::goal_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdMissionInfo.goal_count)
  return goal_count_;
}
inline void mdMissionInfo::set_goal_count(::google::protobuf::int32 value) {
  set_has_goal_count();
  goal_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdMissionInfo.goal_count)
}

// required int32 complete_point = 9;
inline bool mdMissionInfo::has_complete_point() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void mdMissionInfo::set_has_complete_point() {
  _has_bits_[0] |= 0x00000100u;
}
inline void mdMissionInfo::clear_has_complete_point() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void mdMissionInfo::clear_complete_point() {
  complete_point_ = 0;
  clear_has_complete_point();
}
inline ::google::protobuf::int32 mdMissionInfo::complete_point() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdMissionInfo.complete_point)
  return complete_point_;
}
inline void mdMissionInfo::set_complete_point(::google::protobuf::int32 value) {
  set_has_complete_point();
  complete_point_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdMissionInfo.complete_point)
}

// required int32 reward_id = 10;
inline bool mdMissionInfo::has_reward_id() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void mdMissionInfo::set_has_reward_id() {
  _has_bits_[0] |= 0x00000200u;
}
inline void mdMissionInfo::clear_has_reward_id() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void mdMissionInfo::clear_reward_id() {
  reward_id_ = 0;
  clear_has_reward_id();
}
inline ::google::protobuf::int32 mdMissionInfo::reward_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdMissionInfo.reward_id)
  return reward_id_;
}
inline void mdMissionInfo::set_reward_id(::google::protobuf::int32 value) {
  set_has_reward_id();
  reward_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdMissionInfo.reward_id)
}

// required int32 reward_count = 11;
inline bool mdMissionInfo::has_reward_count() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void mdMissionInfo::set_has_reward_count() {
  _has_bits_[0] |= 0x00000400u;
}
inline void mdMissionInfo::clear_has_reward_count() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void mdMissionInfo::clear_reward_count() {
  reward_count_ = 0;
  clear_has_reward_count();
}
inline ::google::protobuf::int32 mdMissionInfo::reward_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdMissionInfo.reward_count)
  return reward_count_;
}
inline void mdMissionInfo::set_reward_count(::google::protobuf::int32 value) {
  set_has_reward_count();
  reward_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdMissionInfo.reward_count)
}

// -------------------------------------------------------------------

// mdSerialMissionInfo

// required int32 mission_id = 1;
inline bool mdSerialMissionInfo::has_mission_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdSerialMissionInfo::set_has_mission_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdSerialMissionInfo::clear_has_mission_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdSerialMissionInfo::clear_mission_id() {
  mission_id_ = 0;
  clear_has_mission_id();
}
inline ::google::protobuf::int32 mdSerialMissionInfo::mission_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSerialMissionInfo.mission_id)
  return mission_id_;
}
inline void mdSerialMissionInfo::set_mission_id(::google::protobuf::int32 value) {
  set_has_mission_id();
  mission_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSerialMissionInfo.mission_id)
}

// required int32 mission_step = 2;
inline bool mdSerialMissionInfo::has_mission_step() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdSerialMissionInfo::set_has_mission_step() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdSerialMissionInfo::clear_has_mission_step() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdSerialMissionInfo::clear_mission_step() {
  mission_step_ = 0;
  clear_has_mission_step();
}
inline ::google::protobuf::int32 mdSerialMissionInfo::mission_step() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSerialMissionInfo.mission_step)
  return mission_step_;
}
inline void mdSerialMissionInfo::set_mission_step(::google::protobuf::int32 value) {
  set_has_mission_step();
  mission_step_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSerialMissionInfo.mission_step)
}

// required int32 event_type = 3;
inline bool mdSerialMissionInfo::has_event_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdSerialMissionInfo::set_has_event_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdSerialMissionInfo::clear_has_event_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdSerialMissionInfo::clear_event_type() {
  event_type_ = 0;
  clear_has_event_type();
}
inline ::google::protobuf::int32 mdSerialMissionInfo::event_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSerialMissionInfo.event_type)
  return event_type_;
}
inline void mdSerialMissionInfo::set_event_type(::google::protobuf::int32 value) {
  set_has_event_type();
  event_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSerialMissionInfo.event_type)
}

// required int32 condition1 = 4;
inline bool mdSerialMissionInfo::has_condition1() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdSerialMissionInfo::set_has_condition1() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdSerialMissionInfo::clear_has_condition1() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdSerialMissionInfo::clear_condition1() {
  condition1_ = 0;
  clear_has_condition1();
}
inline ::google::protobuf::int32 mdSerialMissionInfo::condition1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSerialMissionInfo.condition1)
  return condition1_;
}
inline void mdSerialMissionInfo::set_condition1(::google::protobuf::int32 value) {
  set_has_condition1();
  condition1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSerialMissionInfo.condition1)
}

// required int32 condition2 = 5;
inline bool mdSerialMissionInfo::has_condition2() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdSerialMissionInfo::set_has_condition2() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdSerialMissionInfo::clear_has_condition2() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdSerialMissionInfo::clear_condition2() {
  condition2_ = 0;
  clear_has_condition2();
}
inline ::google::protobuf::int32 mdSerialMissionInfo::condition2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSerialMissionInfo.condition2)
  return condition2_;
}
inline void mdSerialMissionInfo::set_condition2(::google::protobuf::int32 value) {
  set_has_condition2();
  condition2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSerialMissionInfo.condition2)
}

// required int32 condition3 = 6;
inline bool mdSerialMissionInfo::has_condition3() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdSerialMissionInfo::set_has_condition3() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdSerialMissionInfo::clear_has_condition3() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdSerialMissionInfo::clear_condition3() {
  condition3_ = 0;
  clear_has_condition3();
}
inline ::google::protobuf::int32 mdSerialMissionInfo::condition3() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSerialMissionInfo.condition3)
  return condition3_;
}
inline void mdSerialMissionInfo::set_condition3(::google::protobuf::int32 value) {
  set_has_condition3();
  condition3_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSerialMissionInfo.condition3)
}

// required int32 condition4 = 7;
inline bool mdSerialMissionInfo::has_condition4() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mdSerialMissionInfo::set_has_condition4() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mdSerialMissionInfo::clear_has_condition4() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mdSerialMissionInfo::clear_condition4() {
  condition4_ = 0;
  clear_has_condition4();
}
inline ::google::protobuf::int32 mdSerialMissionInfo::condition4() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSerialMissionInfo.condition4)
  return condition4_;
}
inline void mdSerialMissionInfo::set_condition4(::google::protobuf::int32 value) {
  set_has_condition4();
  condition4_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSerialMissionInfo.condition4)
}

// required int32 goal_count = 8;
inline bool mdSerialMissionInfo::has_goal_count() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void mdSerialMissionInfo::set_has_goal_count() {
  _has_bits_[0] |= 0x00000080u;
}
inline void mdSerialMissionInfo::clear_has_goal_count() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void mdSerialMissionInfo::clear_goal_count() {
  goal_count_ = 0;
  clear_has_goal_count();
}
inline ::google::protobuf::int32 mdSerialMissionInfo::goal_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSerialMissionInfo.goal_count)
  return goal_count_;
}
inline void mdSerialMissionInfo::set_goal_count(::google::protobuf::int32 value) {
  set_has_goal_count();
  goal_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSerialMissionInfo.goal_count)
}

// required int32 reward_id = 9;
inline bool mdSerialMissionInfo::has_reward_id() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void mdSerialMissionInfo::set_has_reward_id() {
  _has_bits_[0] |= 0x00000100u;
}
inline void mdSerialMissionInfo::clear_has_reward_id() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void mdSerialMissionInfo::clear_reward_id() {
  reward_id_ = 0;
  clear_has_reward_id();
}
inline ::google::protobuf::int32 mdSerialMissionInfo::reward_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSerialMissionInfo.reward_id)
  return reward_id_;
}
inline void mdSerialMissionInfo::set_reward_id(::google::protobuf::int32 value) {
  set_has_reward_id();
  reward_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSerialMissionInfo.reward_id)
}

// required int32 reward_count = 10;
inline bool mdSerialMissionInfo::has_reward_count() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void mdSerialMissionInfo::set_has_reward_count() {
  _has_bits_[0] |= 0x00000200u;
}
inline void mdSerialMissionInfo::clear_has_reward_count() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void mdSerialMissionInfo::clear_reward_count() {
  reward_count_ = 0;
  clear_has_reward_count();
}
inline ::google::protobuf::int32 mdSerialMissionInfo::reward_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSerialMissionInfo.reward_count)
  return reward_count_;
}
inline void mdSerialMissionInfo::set_reward_count(::google::protobuf::int32 value) {
  set_has_reward_count();
  reward_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSerialMissionInfo.reward_count)
}

// -------------------------------------------------------------------

// mdMissionCompletePointInfo

// required .b2.protocol.commondata.MissionInfo.MissionType mission_type = 1;
inline bool mdMissionCompletePointInfo::has_mission_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdMissionCompletePointInfo::set_has_mission_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdMissionCompletePointInfo::clear_has_mission_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdMissionCompletePointInfo::clear_mission_type() {
  mission_type_ = 1;
  clear_has_mission_type();
}
inline ::b2::protocol::commondata::MissionInfo_MissionType mdMissionCompletePointInfo::mission_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdMissionCompletePointInfo.mission_type)
  return static_cast< ::b2::protocol::commondata::MissionInfo_MissionType >(mission_type_);
}
inline void mdMissionCompletePointInfo::set_mission_type(::b2::protocol::commondata::MissionInfo_MissionType value) {
  assert(::b2::protocol::commondata::MissionInfo_MissionType_IsValid(value));
  set_has_mission_type();
  mission_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdMissionCompletePointInfo.mission_type)
}

// required int32 index = 2;
inline bool mdMissionCompletePointInfo::has_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdMissionCompletePointInfo::set_has_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdMissionCompletePointInfo::clear_has_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdMissionCompletePointInfo::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 mdMissionCompletePointInfo::index() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdMissionCompletePointInfo.index)
  return index_;
}
inline void mdMissionCompletePointInfo::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdMissionCompletePointInfo.index)
}

// required int32 require_point = 3;
inline bool mdMissionCompletePointInfo::has_require_point() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdMissionCompletePointInfo::set_has_require_point() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdMissionCompletePointInfo::clear_has_require_point() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdMissionCompletePointInfo::clear_require_point() {
  require_point_ = 0;
  clear_has_require_point();
}
inline ::google::protobuf::int32 mdMissionCompletePointInfo::require_point() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdMissionCompletePointInfo.require_point)
  return require_point_;
}
inline void mdMissionCompletePointInfo::set_require_point(::google::protobuf::int32 value) {
  set_has_require_point();
  require_point_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdMissionCompletePointInfo.require_point)
}

// repeated .b2.protocol.commondata.Reward rewards = 4;
inline int mdMissionCompletePointInfo::rewards_size() const {
  return rewards_.size();
}
inline void mdMissionCompletePointInfo::clear_rewards() {
  rewards_.Clear();
}
inline const ::b2::protocol::commondata::Reward& mdMissionCompletePointInfo::rewards(int index) const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdMissionCompletePointInfo.rewards)
  return rewards_.Get(index);
}
inline ::b2::protocol::commondata::Reward* mdMissionCompletePointInfo::mutable_rewards(int index) {
  // @@protoc_insertion_point(field_mutable:b2.protocol.masterdata.mdMissionCompletePointInfo.rewards)
  return rewards_.Mutable(index);
}
inline ::b2::protocol::commondata::Reward* mdMissionCompletePointInfo::add_rewards() {
  // @@protoc_insertion_point(field_add:b2.protocol.masterdata.mdMissionCompletePointInfo.rewards)
  return rewards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward >&
mdMissionCompletePointInfo::rewards() const {
  // @@protoc_insertion_point(field_list:b2.protocol.masterdata.mdMissionCompletePointInfo.rewards)
  return rewards_;
}
inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward >*
mdMissionCompletePointInfo::mutable_rewards() {
  // @@protoc_insertion_point(field_mutable_list:b2.protocol.masterdata.mdMissionCompletePointInfo.rewards)
  return &rewards_;
}

// -------------------------------------------------------------------

// mdWingEnhance

// required int32 grade = 1;
inline bool mdWingEnhance::has_grade() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdWingEnhance::set_has_grade() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdWingEnhance::clear_has_grade() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdWingEnhance::clear_grade() {
  grade_ = 0;
  clear_has_grade();
}
inline ::google::protobuf::int32 mdWingEnhance::grade() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdWingEnhance.grade)
  return grade_;
}
inline void mdWingEnhance::set_grade(::google::protobuf::int32 value) {
  set_has_grade();
  grade_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdWingEnhance.grade)
}

// required int32 level = 2;
inline bool mdWingEnhance::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdWingEnhance::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdWingEnhance::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdWingEnhance::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 mdWingEnhance::level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdWingEnhance.level)
  return level_;
}
inline void mdWingEnhance::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdWingEnhance.level)
}

// required int32 need_item_template_id = 3;
inline bool mdWingEnhance::has_need_item_template_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdWingEnhance::set_has_need_item_template_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdWingEnhance::clear_has_need_item_template_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdWingEnhance::clear_need_item_template_id() {
  need_item_template_id_ = 0;
  clear_has_need_item_template_id();
}
inline ::google::protobuf::int32 mdWingEnhance::need_item_template_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdWingEnhance.need_item_template_id)
  return need_item_template_id_;
}
inline void mdWingEnhance::set_need_item_template_id(::google::protobuf::int32 value) {
  set_has_need_item_template_id();
  need_item_template_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdWingEnhance.need_item_template_id)
}

// required int32 need_item_count = 4;
inline bool mdWingEnhance::has_need_item_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdWingEnhance::set_has_need_item_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdWingEnhance::clear_has_need_item_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdWingEnhance::clear_need_item_count() {
  need_item_count_ = 0;
  clear_has_need_item_count();
}
inline ::google::protobuf::int32 mdWingEnhance::need_item_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdWingEnhance.need_item_count)
  return need_item_count_;
}
inline void mdWingEnhance::set_need_item_count(::google::protobuf::int32 value) {
  set_has_need_item_count();
  need_item_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdWingEnhance.need_item_count)
}

// required int32 enhance_point = 5;
inline bool mdWingEnhance::has_enhance_point() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdWingEnhance::set_has_enhance_point() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdWingEnhance::clear_has_enhance_point() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdWingEnhance::clear_enhance_point() {
  enhance_point_ = 0;
  clear_has_enhance_point();
}
inline ::google::protobuf::int32 mdWingEnhance::enhance_point() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdWingEnhance.enhance_point)
  return enhance_point_;
}
inline void mdWingEnhance::set_enhance_point(::google::protobuf::int32 value) {
  set_has_enhance_point();
  enhance_point_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdWingEnhance.enhance_point)
}

// required int32 need_enhance_point = 6;
inline bool mdWingEnhance::has_need_enhance_point() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdWingEnhance::set_has_need_enhance_point() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdWingEnhance::clear_has_need_enhance_point() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdWingEnhance::clear_need_enhance_point() {
  need_enhance_point_ = 0;
  clear_has_need_enhance_point();
}
inline ::google::protobuf::int32 mdWingEnhance::need_enhance_point() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdWingEnhance.need_enhance_point)
  return need_enhance_point_;
}
inline void mdWingEnhance::set_need_enhance_point(::google::protobuf::int32 value) {
  set_has_need_enhance_point();
  need_enhance_point_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdWingEnhance.need_enhance_point)
}

// required int32 gold_cost = 7;
inline bool mdWingEnhance::has_gold_cost() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mdWingEnhance::set_has_gold_cost() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mdWingEnhance::clear_has_gold_cost() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mdWingEnhance::clear_gold_cost() {
  gold_cost_ = 0;
  clear_has_gold_cost();
}
inline ::google::protobuf::int32 mdWingEnhance::gold_cost() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdWingEnhance.gold_cost)
  return gold_cost_;
}
inline void mdWingEnhance::set_gold_cost(::google::protobuf::int32 value) {
  set_has_gold_cost();
  gold_cost_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdWingEnhance.gold_cost)
}

// required int32 option_type1 = 8;
inline bool mdWingEnhance::has_option_type1() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void mdWingEnhance::set_has_option_type1() {
  _has_bits_[0] |= 0x00000080u;
}
inline void mdWingEnhance::clear_has_option_type1() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void mdWingEnhance::clear_option_type1() {
  option_type1_ = 0;
  clear_has_option_type1();
}
inline ::google::protobuf::int32 mdWingEnhance::option_type1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdWingEnhance.option_type1)
  return option_type1_;
}
inline void mdWingEnhance::set_option_type1(::google::protobuf::int32 value) {
  set_has_option_type1();
  option_type1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdWingEnhance.option_type1)
}

// required float option_value1 = 9;
inline bool mdWingEnhance::has_option_value1() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void mdWingEnhance::set_has_option_value1() {
  _has_bits_[0] |= 0x00000100u;
}
inline void mdWingEnhance::clear_has_option_value1() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void mdWingEnhance::clear_option_value1() {
  option_value1_ = 0;
  clear_has_option_value1();
}
inline float mdWingEnhance::option_value1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdWingEnhance.option_value1)
  return option_value1_;
}
inline void mdWingEnhance::set_option_value1(float value) {
  set_has_option_value1();
  option_value1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdWingEnhance.option_value1)
}

// required int32 option_type2 = 10;
inline bool mdWingEnhance::has_option_type2() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void mdWingEnhance::set_has_option_type2() {
  _has_bits_[0] |= 0x00000200u;
}
inline void mdWingEnhance::clear_has_option_type2() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void mdWingEnhance::clear_option_type2() {
  option_type2_ = 0;
  clear_has_option_type2();
}
inline ::google::protobuf::int32 mdWingEnhance::option_type2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdWingEnhance.option_type2)
  return option_type2_;
}
inline void mdWingEnhance::set_option_type2(::google::protobuf::int32 value) {
  set_has_option_type2();
  option_type2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdWingEnhance.option_type2)
}

// required float option_value2 = 11;
inline bool mdWingEnhance::has_option_value2() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void mdWingEnhance::set_has_option_value2() {
  _has_bits_[0] |= 0x00000400u;
}
inline void mdWingEnhance::clear_has_option_value2() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void mdWingEnhance::clear_option_value2() {
  option_value2_ = 0;
  clear_has_option_value2();
}
inline float mdWingEnhance::option_value2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdWingEnhance.option_value2)
  return option_value2_;
}
inline void mdWingEnhance::set_option_value2(float value) {
  set_has_option_value2();
  option_value2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdWingEnhance.option_value2)
}

// required int32 option_type3 = 12;
inline bool mdWingEnhance::has_option_type3() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void mdWingEnhance::set_has_option_type3() {
  _has_bits_[0] |= 0x00000800u;
}
inline void mdWingEnhance::clear_has_option_type3() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void mdWingEnhance::clear_option_type3() {
  option_type3_ = 0;
  clear_has_option_type3();
}
inline ::google::protobuf::int32 mdWingEnhance::option_type3() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdWingEnhance.option_type3)
  return option_type3_;
}
inline void mdWingEnhance::set_option_type3(::google::protobuf::int32 value) {
  set_has_option_type3();
  option_type3_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdWingEnhance.option_type3)
}

// required float option_value3 = 13;
inline bool mdWingEnhance::has_option_value3() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void mdWingEnhance::set_has_option_value3() {
  _has_bits_[0] |= 0x00001000u;
}
inline void mdWingEnhance::clear_has_option_value3() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void mdWingEnhance::clear_option_value3() {
  option_value3_ = 0;
  clear_has_option_value3();
}
inline float mdWingEnhance::option_value3() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdWingEnhance.option_value3)
  return option_value3_;
}
inline void mdWingEnhance::set_option_value3(float value) {
  set_has_option_value3();
  option_value3_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdWingEnhance.option_value3)
}

// -------------------------------------------------------------------

// mdWingUpgrade

// required int32 grade = 1;
inline bool mdWingUpgrade::has_grade() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdWingUpgrade::set_has_grade() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdWingUpgrade::clear_has_grade() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdWingUpgrade::clear_grade() {
  grade_ = 0;
  clear_has_grade();
}
inline ::google::protobuf::int32 mdWingUpgrade::grade() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdWingUpgrade.grade)
  return grade_;
}
inline void mdWingUpgrade::set_grade(::google::protobuf::int32 value) {
  set_has_grade();
  grade_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdWingUpgrade.grade)
}

// required int32 need_item_template_id = 2;
inline bool mdWingUpgrade::has_need_item_template_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdWingUpgrade::set_has_need_item_template_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdWingUpgrade::clear_has_need_item_template_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdWingUpgrade::clear_need_item_template_id() {
  need_item_template_id_ = 0;
  clear_has_need_item_template_id();
}
inline ::google::protobuf::int32 mdWingUpgrade::need_item_template_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdWingUpgrade.need_item_template_id)
  return need_item_template_id_;
}
inline void mdWingUpgrade::set_need_item_template_id(::google::protobuf::int32 value) {
  set_has_need_item_template_id();
  need_item_template_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdWingUpgrade.need_item_template_id)
}

// required int32 need_item_count = 3;
inline bool mdWingUpgrade::has_need_item_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdWingUpgrade::set_has_need_item_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdWingUpgrade::clear_has_need_item_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdWingUpgrade::clear_need_item_count() {
  need_item_count_ = 0;
  clear_has_need_item_count();
}
inline ::google::protobuf::int32 mdWingUpgrade::need_item_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdWingUpgrade.need_item_count)
  return need_item_count_;
}
inline void mdWingUpgrade::set_need_item_count(::google::protobuf::int32 value) {
  set_has_need_item_count();
  need_item_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdWingUpgrade.need_item_count)
}

// required int32 rate = 4;
inline bool mdWingUpgrade::has_rate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdWingUpgrade::set_has_rate() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdWingUpgrade::clear_has_rate() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdWingUpgrade::clear_rate() {
  rate_ = 0;
  clear_has_rate();
}
inline ::google::protobuf::int32 mdWingUpgrade::rate() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdWingUpgrade.rate)
  return rate_;
}
inline void mdWingUpgrade::set_rate(::google::protobuf::int32 value) {
  set_has_rate();
  rate_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdWingUpgrade.rate)
}

// required int32 gold_cost = 5;
inline bool mdWingUpgrade::has_gold_cost() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdWingUpgrade::set_has_gold_cost() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdWingUpgrade::clear_has_gold_cost() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdWingUpgrade::clear_gold_cost() {
  gold_cost_ = 0;
  clear_has_gold_cost();
}
inline ::google::protobuf::int32 mdWingUpgrade::gold_cost() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdWingUpgrade.gold_cost)
  return gold_cost_;
}
inline void mdWingUpgrade::set_gold_cost(::google::protobuf::int32 value) {
  set_has_gold_cost();
  gold_cost_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdWingUpgrade.gold_cost)
}

// required int32 fail_point_max = 6;
inline bool mdWingUpgrade::has_fail_point_max() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdWingUpgrade::set_has_fail_point_max() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdWingUpgrade::clear_has_fail_point_max() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdWingUpgrade::clear_fail_point_max() {
  fail_point_max_ = 0;
  clear_has_fail_point_max();
}
inline ::google::protobuf::int32 mdWingUpgrade::fail_point_max() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdWingUpgrade.fail_point_max)
  return fail_point_max_;
}
inline void mdWingUpgrade::set_fail_point_max(::google::protobuf::int32 value) {
  set_has_fail_point_max();
  fail_point_max_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdWingUpgrade.fail_point_max)
}

// required int32 option_type1 = 7;
inline bool mdWingUpgrade::has_option_type1() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mdWingUpgrade::set_has_option_type1() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mdWingUpgrade::clear_has_option_type1() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mdWingUpgrade::clear_option_type1() {
  option_type1_ = 0;
  clear_has_option_type1();
}
inline ::google::protobuf::int32 mdWingUpgrade::option_type1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdWingUpgrade.option_type1)
  return option_type1_;
}
inline void mdWingUpgrade::set_option_type1(::google::protobuf::int32 value) {
  set_has_option_type1();
  option_type1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdWingUpgrade.option_type1)
}

// required float option_value1 = 8;
inline bool mdWingUpgrade::has_option_value1() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void mdWingUpgrade::set_has_option_value1() {
  _has_bits_[0] |= 0x00000080u;
}
inline void mdWingUpgrade::clear_has_option_value1() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void mdWingUpgrade::clear_option_value1() {
  option_value1_ = 0;
  clear_has_option_value1();
}
inline float mdWingUpgrade::option_value1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdWingUpgrade.option_value1)
  return option_value1_;
}
inline void mdWingUpgrade::set_option_value1(float value) {
  set_has_option_value1();
  option_value1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdWingUpgrade.option_value1)
}

// required int32 option_type2 = 9;
inline bool mdWingUpgrade::has_option_type2() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void mdWingUpgrade::set_has_option_type2() {
  _has_bits_[0] |= 0x00000100u;
}
inline void mdWingUpgrade::clear_has_option_type2() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void mdWingUpgrade::clear_option_type2() {
  option_type2_ = 0;
  clear_has_option_type2();
}
inline ::google::protobuf::int32 mdWingUpgrade::option_type2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdWingUpgrade.option_type2)
  return option_type2_;
}
inline void mdWingUpgrade::set_option_type2(::google::protobuf::int32 value) {
  set_has_option_type2();
  option_type2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdWingUpgrade.option_type2)
}

// required float option_value2 = 10;
inline bool mdWingUpgrade::has_option_value2() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void mdWingUpgrade::set_has_option_value2() {
  _has_bits_[0] |= 0x00000200u;
}
inline void mdWingUpgrade::clear_has_option_value2() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void mdWingUpgrade::clear_option_value2() {
  option_value2_ = 0;
  clear_has_option_value2();
}
inline float mdWingUpgrade::option_value2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdWingUpgrade.option_value2)
  return option_value2_;
}
inline void mdWingUpgrade::set_option_value2(float value) {
  set_has_option_value2();
  option_value2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdWingUpgrade.option_value2)
}

// required int32 option_type3 = 11;
inline bool mdWingUpgrade::has_option_type3() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void mdWingUpgrade::set_has_option_type3() {
  _has_bits_[0] |= 0x00000400u;
}
inline void mdWingUpgrade::clear_has_option_type3() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void mdWingUpgrade::clear_option_type3() {
  option_type3_ = 0;
  clear_has_option_type3();
}
inline ::google::protobuf::int32 mdWingUpgrade::option_type3() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdWingUpgrade.option_type3)
  return option_type3_;
}
inline void mdWingUpgrade::set_option_type3(::google::protobuf::int32 value) {
  set_has_option_type3();
  option_type3_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdWingUpgrade.option_type3)
}

// required float option_value3 = 12;
inline bool mdWingUpgrade::has_option_value3() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void mdWingUpgrade::set_has_option_value3() {
  _has_bits_[0] |= 0x00000800u;
}
inline void mdWingUpgrade::clear_has_option_value3() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void mdWingUpgrade::clear_option_value3() {
  option_value3_ = 0;
  clear_has_option_value3();
}
inline float mdWingUpgrade::option_value3() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdWingUpgrade.option_value3)
  return option_value3_;
}
inline void mdWingUpgrade::set_option_value3(float value) {
  set_has_option_value3();
  option_value3_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdWingUpgrade.option_value3)
}

// -------------------------------------------------------------------

// mdWingOptionValue

// required int32 character_type = 1;
inline bool mdWingOptionValue::has_character_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdWingOptionValue::set_has_character_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdWingOptionValue::clear_has_character_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdWingOptionValue::clear_character_type() {
  character_type_ = 0;
  clear_has_character_type();
}
inline ::google::protobuf::int32 mdWingOptionValue::character_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdWingOptionValue.character_type)
  return character_type_;
}
inline void mdWingOptionValue::set_character_type(::google::protobuf::int32 value) {
  set_has_character_type();
  character_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdWingOptionValue.character_type)
}

// required int32 option_index = 2;
inline bool mdWingOptionValue::has_option_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdWingOptionValue::set_has_option_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdWingOptionValue::clear_has_option_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdWingOptionValue::clear_option_index() {
  option_index_ = 0;
  clear_has_option_index();
}
inline ::google::protobuf::int32 mdWingOptionValue::option_index() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdWingOptionValue.option_index)
  return option_index_;
}
inline void mdWingOptionValue::set_option_index(::google::protobuf::int32 value) {
  set_has_option_index();
  option_index_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdWingOptionValue.option_index)
}

// required int32 level = 3;
inline bool mdWingOptionValue::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdWingOptionValue::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdWingOptionValue::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdWingOptionValue::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 mdWingOptionValue::level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdWingOptionValue.level)
  return level_;
}
inline void mdWingOptionValue::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdWingOptionValue.level)
}

// required int32 option_type = 4;
inline bool mdWingOptionValue::has_option_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdWingOptionValue::set_has_option_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdWingOptionValue::clear_has_option_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdWingOptionValue::clear_option_type() {
  option_type_ = 0;
  clear_has_option_type();
}
inline ::google::protobuf::int32 mdWingOptionValue::option_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdWingOptionValue.option_type)
  return option_type_;
}
inline void mdWingOptionValue::set_option_type(::google::protobuf::int32 value) {
  set_has_option_type();
  option_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdWingOptionValue.option_type)
}

// required float option_value = 5;
inline bool mdWingOptionValue::has_option_value() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdWingOptionValue::set_has_option_value() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdWingOptionValue::clear_has_option_value() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdWingOptionValue::clear_option_value() {
  option_value_ = 0;
  clear_has_option_value();
}
inline float mdWingOptionValue::option_value() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdWingOptionValue.option_value)
  return option_value_;
}
inline void mdWingOptionValue::set_option_value(float value) {
  set_has_option_value();
  option_value_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdWingOptionValue.option_value)
}

// required int32 need_item_template_id = 6;
inline bool mdWingOptionValue::has_need_item_template_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdWingOptionValue::set_has_need_item_template_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdWingOptionValue::clear_has_need_item_template_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdWingOptionValue::clear_need_item_template_id() {
  need_item_template_id_ = 0;
  clear_has_need_item_template_id();
}
inline ::google::protobuf::int32 mdWingOptionValue::need_item_template_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdWingOptionValue.need_item_template_id)
  return need_item_template_id_;
}
inline void mdWingOptionValue::set_need_item_template_id(::google::protobuf::int32 value) {
  set_has_need_item_template_id();
  need_item_template_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdWingOptionValue.need_item_template_id)
}

// required int32 need_item_count = 7;
inline bool mdWingOptionValue::has_need_item_count() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mdWingOptionValue::set_has_need_item_count() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mdWingOptionValue::clear_has_need_item_count() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mdWingOptionValue::clear_need_item_count() {
  need_item_count_ = 0;
  clear_has_need_item_count();
}
inline ::google::protobuf::int32 mdWingOptionValue::need_item_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdWingOptionValue.need_item_count)
  return need_item_count_;
}
inline void mdWingOptionValue::set_need_item_count(::google::protobuf::int32 value) {
  set_has_need_item_count();
  need_item_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdWingOptionValue.need_item_count)
}

// -------------------------------------------------------------------

// mdWingOptionOpen

// required int32 character_type = 1;
inline bool mdWingOptionOpen::has_character_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdWingOptionOpen::set_has_character_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdWingOptionOpen::clear_has_character_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdWingOptionOpen::clear_character_type() {
  character_type_ = 0;
  clear_has_character_type();
}
inline ::google::protobuf::int32 mdWingOptionOpen::character_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdWingOptionOpen.character_type)
  return character_type_;
}
inline void mdWingOptionOpen::set_character_type(::google::protobuf::int32 value) {
  set_has_character_type();
  character_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdWingOptionOpen.character_type)
}

// required int32 option_index = 2;
inline bool mdWingOptionOpen::has_option_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdWingOptionOpen::set_has_option_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdWingOptionOpen::clear_has_option_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdWingOptionOpen::clear_option_index() {
  option_index_ = 0;
  clear_has_option_index();
}
inline ::google::protobuf::int32 mdWingOptionOpen::option_index() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdWingOptionOpen.option_index)
  return option_index_;
}
inline void mdWingOptionOpen::set_option_index(::google::protobuf::int32 value) {
  set_has_option_index();
  option_index_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdWingOptionOpen.option_index)
}

// required int32 need_grade = 3;
inline bool mdWingOptionOpen::has_need_grade() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdWingOptionOpen::set_has_need_grade() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdWingOptionOpen::clear_has_need_grade() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdWingOptionOpen::clear_need_grade() {
  need_grade_ = 0;
  clear_has_need_grade();
}
inline ::google::protobuf::int32 mdWingOptionOpen::need_grade() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdWingOptionOpen.need_grade)
  return need_grade_;
}
inline void mdWingOptionOpen::set_need_grade(::google::protobuf::int32 value) {
  set_has_need_grade();
  need_grade_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdWingOptionOpen.need_grade)
}

// -------------------------------------------------------------------

// mdWingOptionMaxLevel

// required int32 character_type = 1;
inline bool mdWingOptionMaxLevel::has_character_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdWingOptionMaxLevel::set_has_character_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdWingOptionMaxLevel::clear_has_character_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdWingOptionMaxLevel::clear_character_type() {
  character_type_ = 0;
  clear_has_character_type();
}
inline ::google::protobuf::int32 mdWingOptionMaxLevel::character_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdWingOptionMaxLevel.character_type)
  return character_type_;
}
inline void mdWingOptionMaxLevel::set_character_type(::google::protobuf::int32 value) {
  set_has_character_type();
  character_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdWingOptionMaxLevel.character_type)
}

// required int32 option_index = 2;
inline bool mdWingOptionMaxLevel::has_option_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdWingOptionMaxLevel::set_has_option_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdWingOptionMaxLevel::clear_has_option_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdWingOptionMaxLevel::clear_option_index() {
  option_index_ = 0;
  clear_has_option_index();
}
inline ::google::protobuf::int32 mdWingOptionMaxLevel::option_index() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdWingOptionMaxLevel.option_index)
  return option_index_;
}
inline void mdWingOptionMaxLevel::set_option_index(::google::protobuf::int32 value) {
  set_has_option_index();
  option_index_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdWingOptionMaxLevel.option_index)
}

// required int32 wing_grade = 3;
inline bool mdWingOptionMaxLevel::has_wing_grade() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdWingOptionMaxLevel::set_has_wing_grade() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdWingOptionMaxLevel::clear_has_wing_grade() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdWingOptionMaxLevel::clear_wing_grade() {
  wing_grade_ = 0;
  clear_has_wing_grade();
}
inline ::google::protobuf::int32 mdWingOptionMaxLevel::wing_grade() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdWingOptionMaxLevel.wing_grade)
  return wing_grade_;
}
inline void mdWingOptionMaxLevel::set_wing_grade(::google::protobuf::int32 value) {
  set_has_wing_grade();
  wing_grade_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdWingOptionMaxLevel.wing_grade)
}

// required int32 max_level = 4;
inline bool mdWingOptionMaxLevel::has_max_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdWingOptionMaxLevel::set_has_max_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdWingOptionMaxLevel::clear_has_max_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdWingOptionMaxLevel::clear_max_level() {
  max_level_ = 0;
  clear_has_max_level();
}
inline ::google::protobuf::int32 mdWingOptionMaxLevel::max_level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdWingOptionMaxLevel.max_level)
  return max_level_;
}
inline void mdWingOptionMaxLevel::set_max_level(::google::protobuf::int32 value) {
  set_has_max_level();
  max_level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdWingOptionMaxLevel.max_level)
}

// -------------------------------------------------------------------

// mdHeroTowerFloor

// required int32 floor = 1;
inline bool mdHeroTowerFloor::has_floor() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdHeroTowerFloor::set_has_floor() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdHeroTowerFloor::clear_has_floor() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdHeroTowerFloor::clear_floor() {
  floor_ = 0;
  clear_has_floor();
}
inline ::google::protobuf::int32 mdHeroTowerFloor::floor() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdHeroTowerFloor.floor)
  return floor_;
}
inline void mdHeroTowerFloor::set_floor(::google::protobuf::int32 value) {
  set_has_floor();
  floor_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdHeroTowerFloor.floor)
}

// required int32 recommend_power = 2;
inline bool mdHeroTowerFloor::has_recommend_power() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdHeroTowerFloor::set_has_recommend_power() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdHeroTowerFloor::clear_has_recommend_power() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdHeroTowerFloor::clear_recommend_power() {
  recommend_power_ = 0;
  clear_has_recommend_power();
}
inline ::google::protobuf::int32 mdHeroTowerFloor::recommend_power() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdHeroTowerFloor.recommend_power)
  return recommend_power_;
}
inline void mdHeroTowerFloor::set_recommend_power(::google::protobuf::int32 value) {
  set_has_recommend_power();
  recommend_power_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdHeroTowerFloor.recommend_power)
}

// required int32 recommend_attack = 3;
inline bool mdHeroTowerFloor::has_recommend_attack() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdHeroTowerFloor::set_has_recommend_attack() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdHeroTowerFloor::clear_has_recommend_attack() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdHeroTowerFloor::clear_recommend_attack() {
  recommend_attack_ = 0;
  clear_has_recommend_attack();
}
inline ::google::protobuf::int32 mdHeroTowerFloor::recommend_attack() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdHeroTowerFloor.recommend_attack)
  return recommend_attack_;
}
inline void mdHeroTowerFloor::set_recommend_attack(::google::protobuf::int32 value) {
  set_has_recommend_attack();
  recommend_attack_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdHeroTowerFloor.recommend_attack)
}

// required int32 recommend_defense = 4;
inline bool mdHeroTowerFloor::has_recommend_defense() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdHeroTowerFloor::set_has_recommend_defense() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdHeroTowerFloor::clear_has_recommend_defense() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdHeroTowerFloor::clear_recommend_defense() {
  recommend_defense_ = 0;
  clear_has_recommend_defense();
}
inline ::google::protobuf::int32 mdHeroTowerFloor::recommend_defense() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdHeroTowerFloor.recommend_defense)
  return recommend_defense_;
}
inline void mdHeroTowerFloor::set_recommend_defense(::google::protobuf::int32 value) {
  set_has_recommend_defense();
  recommend_defense_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdHeroTowerFloor.recommend_defense)
}

// required int32 clear_limit_time = 5;
inline bool mdHeroTowerFloor::has_clear_limit_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdHeroTowerFloor::set_has_clear_limit_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdHeroTowerFloor::clear_has_clear_limit_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdHeroTowerFloor::clear_clear_limit_time() {
  clear_limit_time_ = 0;
  clear_has_clear_limit_time();
}
inline ::google::protobuf::int32 mdHeroTowerFloor::clear_limit_time() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdHeroTowerFloor.clear_limit_time)
  return clear_limit_time_;
}
inline void mdHeroTowerFloor::set_clear_limit_time(::google::protobuf::int32 value) {
  set_has_clear_limit_time();
  clear_limit_time_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdHeroTowerFloor.clear_limit_time)
}

// required int32 map_id = 6;
inline bool mdHeroTowerFloor::has_map_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdHeroTowerFloor::set_has_map_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdHeroTowerFloor::clear_has_map_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdHeroTowerFloor::clear_map_id() {
  map_id_ = 0;
  clear_has_map_id();
}
inline ::google::protobuf::int32 mdHeroTowerFloor::map_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdHeroTowerFloor.map_id)
  return map_id_;
}
inline void mdHeroTowerFloor::set_map_id(::google::protobuf::int32 value) {
  set_has_map_id();
  map_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdHeroTowerFloor.map_id)
}

// required int32 difficulty_scale = 7;
inline bool mdHeroTowerFloor::has_difficulty_scale() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mdHeroTowerFloor::set_has_difficulty_scale() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mdHeroTowerFloor::clear_has_difficulty_scale() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mdHeroTowerFloor::clear_difficulty_scale() {
  difficulty_scale_ = 0;
  clear_has_difficulty_scale();
}
inline ::google::protobuf::int32 mdHeroTowerFloor::difficulty_scale() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdHeroTowerFloor.difficulty_scale)
  return difficulty_scale_;
}
inline void mdHeroTowerFloor::set_difficulty_scale(::google::protobuf::int32 value) {
  set_has_difficulty_scale();
  difficulty_scale_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdHeroTowerFloor.difficulty_scale)
}

// required int32 monster_level = 8;
inline bool mdHeroTowerFloor::has_monster_level() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void mdHeroTowerFloor::set_has_monster_level() {
  _has_bits_[0] |= 0x00000080u;
}
inline void mdHeroTowerFloor::clear_has_monster_level() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void mdHeroTowerFloor::clear_monster_level() {
  monster_level_ = 0;
  clear_has_monster_level();
}
inline ::google::protobuf::int32 mdHeroTowerFloor::monster_level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdHeroTowerFloor.monster_level)
  return monster_level_;
}
inline void mdHeroTowerFloor::set_monster_level(::google::protobuf::int32 value) {
  set_has_monster_level();
  monster_level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdHeroTowerFloor.monster_level)
}

// repeated .b2.protocol.commondata.Reward first_rewards = 9;
inline int mdHeroTowerFloor::first_rewards_size() const {
  return first_rewards_.size();
}
inline void mdHeroTowerFloor::clear_first_rewards() {
  first_rewards_.Clear();
}
inline const ::b2::protocol::commondata::Reward& mdHeroTowerFloor::first_rewards(int index) const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdHeroTowerFloor.first_rewards)
  return first_rewards_.Get(index);
}
inline ::b2::protocol::commondata::Reward* mdHeroTowerFloor::mutable_first_rewards(int index) {
  // @@protoc_insertion_point(field_mutable:b2.protocol.masterdata.mdHeroTowerFloor.first_rewards)
  return first_rewards_.Mutable(index);
}
inline ::b2::protocol::commondata::Reward* mdHeroTowerFloor::add_first_rewards() {
  // @@protoc_insertion_point(field_add:b2.protocol.masterdata.mdHeroTowerFloor.first_rewards)
  return first_rewards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward >&
mdHeroTowerFloor::first_rewards() const {
  // @@protoc_insertion_point(field_list:b2.protocol.masterdata.mdHeroTowerFloor.first_rewards)
  return first_rewards_;
}
inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward >*
mdHeroTowerFloor::mutable_first_rewards() {
  // @@protoc_insertion_point(field_mutable_list:b2.protocol.masterdata.mdHeroTowerFloor.first_rewards)
  return &first_rewards_;
}

// repeated .b2.protocol.commondata.Reward rewards = 10;
inline int mdHeroTowerFloor::rewards_size() const {
  return rewards_.size();
}
inline void mdHeroTowerFloor::clear_rewards() {
  rewards_.Clear();
}
inline const ::b2::protocol::commondata::Reward& mdHeroTowerFloor::rewards(int index) const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdHeroTowerFloor.rewards)
  return rewards_.Get(index);
}
inline ::b2::protocol::commondata::Reward* mdHeroTowerFloor::mutable_rewards(int index) {
  // @@protoc_insertion_point(field_mutable:b2.protocol.masterdata.mdHeroTowerFloor.rewards)
  return rewards_.Mutable(index);
}
inline ::b2::protocol::commondata::Reward* mdHeroTowerFloor::add_rewards() {
  // @@protoc_insertion_point(field_add:b2.protocol.masterdata.mdHeroTowerFloor.rewards)
  return rewards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward >&
mdHeroTowerFloor::rewards() const {
  // @@protoc_insertion_point(field_list:b2.protocol.masterdata.mdHeroTowerFloor.rewards)
  return rewards_;
}
inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward >*
mdHeroTowerFloor::mutable_rewards() {
  // @@protoc_insertion_point(field_mutable_list:b2.protocol.masterdata.mdHeroTowerFloor.rewards)
  return &rewards_;
}

// -------------------------------------------------------------------

// mdRelicInfo

// required int32 relic_id = 1;
inline bool mdRelicInfo::has_relic_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdRelicInfo::set_has_relic_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdRelicInfo::clear_has_relic_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdRelicInfo::clear_relic_id() {
  relic_id_ = 0;
  clear_has_relic_id();
}
inline ::google::protobuf::int32 mdRelicInfo::relic_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdRelicInfo.relic_id)
  return relic_id_;
}
inline void mdRelicInfo::set_relic_id(::google::protobuf::int32 value) {
  set_has_relic_id();
  relic_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdRelicInfo.relic_id)
}

// required int32 open_stage_id = 2;
inline bool mdRelicInfo::has_open_stage_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdRelicInfo::set_has_open_stage_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdRelicInfo::clear_has_open_stage_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdRelicInfo::clear_open_stage_id() {
  open_stage_id_ = 0;
  clear_has_open_stage_id();
}
inline ::google::protobuf::int32 mdRelicInfo::open_stage_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdRelicInfo.open_stage_id)
  return open_stage_id_;
}
inline void mdRelicInfo::set_open_stage_id(::google::protobuf::int32 value) {
  set_has_open_stage_id();
  open_stage_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdRelicInfo.open_stage_id)
}

// -------------------------------------------------------------------

// mdRelicGradeInfo

// required int32 relic_id = 1;
inline bool mdRelicGradeInfo::has_relic_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdRelicGradeInfo::set_has_relic_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdRelicGradeInfo::clear_has_relic_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdRelicGradeInfo::clear_relic_id() {
  relic_id_ = 0;
  clear_has_relic_id();
}
inline ::google::protobuf::int32 mdRelicGradeInfo::relic_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdRelicGradeInfo.relic_id)
  return relic_id_;
}
inline void mdRelicGradeInfo::set_relic_id(::google::protobuf::int32 value) {
  set_has_relic_id();
  relic_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdRelicGradeInfo.relic_id)
}

// required int32 grade = 2;
inline bool mdRelicGradeInfo::has_grade() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdRelicGradeInfo::set_has_grade() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdRelicGradeInfo::clear_has_grade() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdRelicGradeInfo::clear_grade() {
  grade_ = 0;
  clear_has_grade();
}
inline ::google::protobuf::int32 mdRelicGradeInfo::grade() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdRelicGradeInfo.grade)
  return grade_;
}
inline void mdRelicGradeInfo::set_grade(::google::protobuf::int32 value) {
  set_has_grade();
  grade_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdRelicGradeInfo.grade)
}

// required int32 option_id_1 = 3;
inline bool mdRelicGradeInfo::has_option_id_1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdRelicGradeInfo::set_has_option_id_1() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdRelicGradeInfo::clear_has_option_id_1() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdRelicGradeInfo::clear_option_id_1() {
  option_id_1_ = 0;
  clear_has_option_id_1();
}
inline ::google::protobuf::int32 mdRelicGradeInfo::option_id_1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdRelicGradeInfo.option_id_1)
  return option_id_1_;
}
inline void mdRelicGradeInfo::set_option_id_1(::google::protobuf::int32 value) {
  set_has_option_id_1();
  option_id_1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdRelicGradeInfo.option_id_1)
}

// required int32 option_value_1 = 4;
inline bool mdRelicGradeInfo::has_option_value_1() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdRelicGradeInfo::set_has_option_value_1() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdRelicGradeInfo::clear_has_option_value_1() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdRelicGradeInfo::clear_option_value_1() {
  option_value_1_ = 0;
  clear_has_option_value_1();
}
inline ::google::protobuf::int32 mdRelicGradeInfo::option_value_1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdRelicGradeInfo.option_value_1)
  return option_value_1_;
}
inline void mdRelicGradeInfo::set_option_value_1(::google::protobuf::int32 value) {
  set_has_option_value_1();
  option_value_1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdRelicGradeInfo.option_value_1)
}

// required int32 option_id_2 = 5;
inline bool mdRelicGradeInfo::has_option_id_2() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdRelicGradeInfo::set_has_option_id_2() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdRelicGradeInfo::clear_has_option_id_2() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdRelicGradeInfo::clear_option_id_2() {
  option_id_2_ = 0;
  clear_has_option_id_2();
}
inline ::google::protobuf::int32 mdRelicGradeInfo::option_id_2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdRelicGradeInfo.option_id_2)
  return option_id_2_;
}
inline void mdRelicGradeInfo::set_option_id_2(::google::protobuf::int32 value) {
  set_has_option_id_2();
  option_id_2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdRelicGradeInfo.option_id_2)
}

// required int32 option_value_2 = 6;
inline bool mdRelicGradeInfo::has_option_value_2() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdRelicGradeInfo::set_has_option_value_2() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdRelicGradeInfo::clear_has_option_value_2() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdRelicGradeInfo::clear_option_value_2() {
  option_value_2_ = 0;
  clear_has_option_value_2();
}
inline ::google::protobuf::int32 mdRelicGradeInfo::option_value_2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdRelicGradeInfo.option_value_2)
  return option_value_2_;
}
inline void mdRelicGradeInfo::set_option_value_2(::google::protobuf::int32 value) {
  set_has_option_value_2();
  option_value_2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdRelicGradeInfo.option_value_2)
}

// required int32 option_id_3 = 7;
inline bool mdRelicGradeInfo::has_option_id_3() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mdRelicGradeInfo::set_has_option_id_3() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mdRelicGradeInfo::clear_has_option_id_3() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mdRelicGradeInfo::clear_option_id_3() {
  option_id_3_ = 0;
  clear_has_option_id_3();
}
inline ::google::protobuf::int32 mdRelicGradeInfo::option_id_3() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdRelicGradeInfo.option_id_3)
  return option_id_3_;
}
inline void mdRelicGradeInfo::set_option_id_3(::google::protobuf::int32 value) {
  set_has_option_id_3();
  option_id_3_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdRelicGradeInfo.option_id_3)
}

// required int32 option_value_3 = 8;
inline bool mdRelicGradeInfo::has_option_value_3() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void mdRelicGradeInfo::set_has_option_value_3() {
  _has_bits_[0] |= 0x00000080u;
}
inline void mdRelicGradeInfo::clear_has_option_value_3() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void mdRelicGradeInfo::clear_option_value_3() {
  option_value_3_ = 0;
  clear_has_option_value_3();
}
inline ::google::protobuf::int32 mdRelicGradeInfo::option_value_3() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdRelicGradeInfo.option_value_3)
  return option_value_3_;
}
inline void mdRelicGradeInfo::set_option_value_3(::google::protobuf::int32 value) {
  set_has_option_value_3();
  option_value_3_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdRelicGradeInfo.option_value_3)
}

// required int32 promotion_rate = 9;
inline bool mdRelicGradeInfo::has_promotion_rate() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void mdRelicGradeInfo::set_has_promotion_rate() {
  _has_bits_[0] |= 0x00000100u;
}
inline void mdRelicGradeInfo::clear_has_promotion_rate() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void mdRelicGradeInfo::clear_promotion_rate() {
  promotion_rate_ = 0;
  clear_has_promotion_rate();
}
inline ::google::protobuf::int32 mdRelicGradeInfo::promotion_rate() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdRelicGradeInfo.promotion_rate)
  return promotion_rate_;
}
inline void mdRelicGradeInfo::set_promotion_rate(::google::protobuf::int32 value) {
  set_has_promotion_rate();
  promotion_rate_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdRelicGradeInfo.promotion_rate)
}

// required int32 promotion_gold = 10;
inline bool mdRelicGradeInfo::has_promotion_gold() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void mdRelicGradeInfo::set_has_promotion_gold() {
  _has_bits_[0] |= 0x00000200u;
}
inline void mdRelicGradeInfo::clear_has_promotion_gold() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void mdRelicGradeInfo::clear_promotion_gold() {
  promotion_gold_ = 0;
  clear_has_promotion_gold();
}
inline ::google::protobuf::int32 mdRelicGradeInfo::promotion_gold() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdRelicGradeInfo.promotion_gold)
  return promotion_gold_;
}
inline void mdRelicGradeInfo::set_promotion_gold(::google::protobuf::int32 value) {
  set_has_promotion_gold();
  promotion_gold_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdRelicGradeInfo.promotion_gold)
}

// required int32 promotion_boss_piece = 11;
inline bool mdRelicGradeInfo::has_promotion_boss_piece() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void mdRelicGradeInfo::set_has_promotion_boss_piece() {
  _has_bits_[0] |= 0x00000400u;
}
inline void mdRelicGradeInfo::clear_has_promotion_boss_piece() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void mdRelicGradeInfo::clear_promotion_boss_piece() {
  promotion_boss_piece_ = 0;
  clear_has_promotion_boss_piece();
}
inline ::google::protobuf::int32 mdRelicGradeInfo::promotion_boss_piece() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdRelicGradeInfo.promotion_boss_piece)
  return promotion_boss_piece_;
}
inline void mdRelicGradeInfo::set_promotion_boss_piece(::google::protobuf::int32 value) {
  set_has_promotion_boss_piece();
  promotion_boss_piece_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdRelicGradeInfo.promotion_boss_piece)
}

// required int32 boss_piece_id = 12;
inline bool mdRelicGradeInfo::has_boss_piece_id() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void mdRelicGradeInfo::set_has_boss_piece_id() {
  _has_bits_[0] |= 0x00000800u;
}
inline void mdRelicGradeInfo::clear_has_boss_piece_id() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void mdRelicGradeInfo::clear_boss_piece_id() {
  boss_piece_id_ = 0;
  clear_has_boss_piece_id();
}
inline ::google::protobuf::int32 mdRelicGradeInfo::boss_piece_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdRelicGradeInfo.boss_piece_id)
  return boss_piece_id_;
}
inline void mdRelicGradeInfo::set_boss_piece_id(::google::protobuf::int32 value) {
  set_has_boss_piece_id();
  boss_piece_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdRelicGradeInfo.boss_piece_id)
}

// -------------------------------------------------------------------

// mdRelicLevelInfo

// required int32 relic_id = 1;
inline bool mdRelicLevelInfo::has_relic_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdRelicLevelInfo::set_has_relic_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdRelicLevelInfo::clear_has_relic_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdRelicLevelInfo::clear_relic_id() {
  relic_id_ = 0;
  clear_has_relic_id();
}
inline ::google::protobuf::int32 mdRelicLevelInfo::relic_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdRelicLevelInfo.relic_id)
  return relic_id_;
}
inline void mdRelicLevelInfo::set_relic_id(::google::protobuf::int32 value) {
  set_has_relic_id();
  relic_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdRelicLevelInfo.relic_id)
}

// required int32 enhance_level = 2;
inline bool mdRelicLevelInfo::has_enhance_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdRelicLevelInfo::set_has_enhance_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdRelicLevelInfo::clear_has_enhance_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdRelicLevelInfo::clear_enhance_level() {
  enhance_level_ = 0;
  clear_has_enhance_level();
}
inline ::google::protobuf::int32 mdRelicLevelInfo::enhance_level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdRelicLevelInfo.enhance_level)
  return enhance_level_;
}
inline void mdRelicLevelInfo::set_enhance_level(::google::protobuf::int32 value) {
  set_has_enhance_level();
  enhance_level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdRelicLevelInfo.enhance_level)
}

// required int32 mode_option_id_1 = 3;
inline bool mdRelicLevelInfo::has_mode_option_id_1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdRelicLevelInfo::set_has_mode_option_id_1() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdRelicLevelInfo::clear_has_mode_option_id_1() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdRelicLevelInfo::clear_mode_option_id_1() {
  mode_option_id_1_ = 0;
  clear_has_mode_option_id_1();
}
inline ::google::protobuf::int32 mdRelicLevelInfo::mode_option_id_1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdRelicLevelInfo.mode_option_id_1)
  return mode_option_id_1_;
}
inline void mdRelicLevelInfo::set_mode_option_id_1(::google::protobuf::int32 value) {
  set_has_mode_option_id_1();
  mode_option_id_1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdRelicLevelInfo.mode_option_id_1)
}

// required int32 mode_option_value_1 = 4;
inline bool mdRelicLevelInfo::has_mode_option_value_1() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdRelicLevelInfo::set_has_mode_option_value_1() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdRelicLevelInfo::clear_has_mode_option_value_1() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdRelicLevelInfo::clear_mode_option_value_1() {
  mode_option_value_1_ = 0;
  clear_has_mode_option_value_1();
}
inline ::google::protobuf::int32 mdRelicLevelInfo::mode_option_value_1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdRelicLevelInfo.mode_option_value_1)
  return mode_option_value_1_;
}
inline void mdRelicLevelInfo::set_mode_option_value_1(::google::protobuf::int32 value) {
  set_has_mode_option_value_1();
  mode_option_value_1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdRelicLevelInfo.mode_option_value_1)
}

// required int32 mode_option_id_2 = 5;
inline bool mdRelicLevelInfo::has_mode_option_id_2() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdRelicLevelInfo::set_has_mode_option_id_2() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdRelicLevelInfo::clear_has_mode_option_id_2() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdRelicLevelInfo::clear_mode_option_id_2() {
  mode_option_id_2_ = 0;
  clear_has_mode_option_id_2();
}
inline ::google::protobuf::int32 mdRelicLevelInfo::mode_option_id_2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdRelicLevelInfo.mode_option_id_2)
  return mode_option_id_2_;
}
inline void mdRelicLevelInfo::set_mode_option_id_2(::google::protobuf::int32 value) {
  set_has_mode_option_id_2();
  mode_option_id_2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdRelicLevelInfo.mode_option_id_2)
}

// required int32 mode_option_value_2 = 6;
inline bool mdRelicLevelInfo::has_mode_option_value_2() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdRelicLevelInfo::set_has_mode_option_value_2() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdRelicLevelInfo::clear_has_mode_option_value_2() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdRelicLevelInfo::clear_mode_option_value_2() {
  mode_option_value_2_ = 0;
  clear_has_mode_option_value_2();
}
inline ::google::protobuf::int32 mdRelicLevelInfo::mode_option_value_2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdRelicLevelInfo.mode_option_value_2)
  return mode_option_value_2_;
}
inline void mdRelicLevelInfo::set_mode_option_value_2(::google::protobuf::int32 value) {
  set_has_mode_option_value_2();
  mode_option_value_2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdRelicLevelInfo.mode_option_value_2)
}

// required int32 mode_option_id_3 = 7;
inline bool mdRelicLevelInfo::has_mode_option_id_3() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mdRelicLevelInfo::set_has_mode_option_id_3() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mdRelicLevelInfo::clear_has_mode_option_id_3() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mdRelicLevelInfo::clear_mode_option_id_3() {
  mode_option_id_3_ = 0;
  clear_has_mode_option_id_3();
}
inline ::google::protobuf::int32 mdRelicLevelInfo::mode_option_id_3() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdRelicLevelInfo.mode_option_id_3)
  return mode_option_id_3_;
}
inline void mdRelicLevelInfo::set_mode_option_id_3(::google::protobuf::int32 value) {
  set_has_mode_option_id_3();
  mode_option_id_3_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdRelicLevelInfo.mode_option_id_3)
}

// required int32 mode_option_value_3 = 8;
inline bool mdRelicLevelInfo::has_mode_option_value_3() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void mdRelicLevelInfo::set_has_mode_option_value_3() {
  _has_bits_[0] |= 0x00000080u;
}
inline void mdRelicLevelInfo::clear_has_mode_option_value_3() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void mdRelicLevelInfo::clear_mode_option_value_3() {
  mode_option_value_3_ = 0;
  clear_has_mode_option_value_3();
}
inline ::google::protobuf::int32 mdRelicLevelInfo::mode_option_value_3() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdRelicLevelInfo.mode_option_value_3)
  return mode_option_value_3_;
}
inline void mdRelicLevelInfo::set_mode_option_value_3(::google::protobuf::int32 value) {
  set_has_mode_option_value_3();
  mode_option_value_3_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdRelicLevelInfo.mode_option_value_3)
}

// required int32 enhance_rate = 9;
inline bool mdRelicLevelInfo::has_enhance_rate() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void mdRelicLevelInfo::set_has_enhance_rate() {
  _has_bits_[0] |= 0x00000100u;
}
inline void mdRelicLevelInfo::clear_has_enhance_rate() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void mdRelicLevelInfo::clear_enhance_rate() {
  enhance_rate_ = 0;
  clear_has_enhance_rate();
}
inline ::google::protobuf::int32 mdRelicLevelInfo::enhance_rate() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdRelicLevelInfo.enhance_rate)
  return enhance_rate_;
}
inline void mdRelicLevelInfo::set_enhance_rate(::google::protobuf::int32 value) {
  set_has_enhance_rate();
  enhance_rate_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdRelicLevelInfo.enhance_rate)
}

// required int32 need_gold = 10;
inline bool mdRelicLevelInfo::has_need_gold() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void mdRelicLevelInfo::set_has_need_gold() {
  _has_bits_[0] |= 0x00000200u;
}
inline void mdRelicLevelInfo::clear_has_need_gold() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void mdRelicLevelInfo::clear_need_gold() {
  need_gold_ = 0;
  clear_has_need_gold();
}
inline ::google::protobuf::int32 mdRelicLevelInfo::need_gold() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdRelicLevelInfo.need_gold)
  return need_gold_;
}
inline void mdRelicLevelInfo::set_need_gold(::google::protobuf::int32 value) {
  set_has_need_gold();
  need_gold_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdRelicLevelInfo.need_gold)
}

// required int32 need_hero_piece = 11;
inline bool mdRelicLevelInfo::has_need_hero_piece() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void mdRelicLevelInfo::set_has_need_hero_piece() {
  _has_bits_[0] |= 0x00000400u;
}
inline void mdRelicLevelInfo::clear_has_need_hero_piece() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void mdRelicLevelInfo::clear_need_hero_piece() {
  need_hero_piece_ = 0;
  clear_has_need_hero_piece();
}
inline ::google::protobuf::int32 mdRelicLevelInfo::need_hero_piece() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdRelicLevelInfo.need_hero_piece)
  return need_hero_piece_;
}
inline void mdRelicLevelInfo::set_need_hero_piece(::google::protobuf::int32 value) {
  set_has_need_hero_piece();
  need_hero_piece_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdRelicLevelInfo.need_hero_piece)
}

// -------------------------------------------------------------------

// mdGuildBattleResultReward

// required int32 reward_grade = 1;
inline bool mdGuildBattleResultReward::has_reward_grade() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdGuildBattleResultReward::set_has_reward_grade() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdGuildBattleResultReward::clear_has_reward_grade() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdGuildBattleResultReward::clear_reward_grade() {
  reward_grade_ = 0;
  clear_has_reward_grade();
}
inline ::google::protobuf::int32 mdGuildBattleResultReward::reward_grade() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGuildBattleResultReward.reward_grade)
  return reward_grade_;
}
inline void mdGuildBattleResultReward::set_reward_grade(::google::protobuf::int32 value) {
  set_has_reward_grade();
  reward_grade_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGuildBattleResultReward.reward_grade)
}

// required int32 req_count_min = 2;
inline bool mdGuildBattleResultReward::has_req_count_min() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdGuildBattleResultReward::set_has_req_count_min() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdGuildBattleResultReward::clear_has_req_count_min() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdGuildBattleResultReward::clear_req_count_min() {
  req_count_min_ = 0;
  clear_has_req_count_min();
}
inline ::google::protobuf::int32 mdGuildBattleResultReward::req_count_min() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGuildBattleResultReward.req_count_min)
  return req_count_min_;
}
inline void mdGuildBattleResultReward::set_req_count_min(::google::protobuf::int32 value) {
  set_has_req_count_min();
  req_count_min_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGuildBattleResultReward.req_count_min)
}

// required int32 req_count_max = 3;
inline bool mdGuildBattleResultReward::has_req_count_max() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdGuildBattleResultReward::set_has_req_count_max() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdGuildBattleResultReward::clear_has_req_count_max() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdGuildBattleResultReward::clear_req_count_max() {
  req_count_max_ = 0;
  clear_has_req_count_max();
}
inline ::google::protobuf::int32 mdGuildBattleResultReward::req_count_max() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGuildBattleResultReward.req_count_max)
  return req_count_max_;
}
inline void mdGuildBattleResultReward::set_req_count_max(::google::protobuf::int32 value) {
  set_has_req_count_max();
  req_count_max_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGuildBattleResultReward.req_count_max)
}

// repeated .b2.protocol.commondata.Reward rewards = 4;
inline int mdGuildBattleResultReward::rewards_size() const {
  return rewards_.size();
}
inline void mdGuildBattleResultReward::clear_rewards() {
  rewards_.Clear();
}
inline const ::b2::protocol::commondata::Reward& mdGuildBattleResultReward::rewards(int index) const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGuildBattleResultReward.rewards)
  return rewards_.Get(index);
}
inline ::b2::protocol::commondata::Reward* mdGuildBattleResultReward::mutable_rewards(int index) {
  // @@protoc_insertion_point(field_mutable:b2.protocol.masterdata.mdGuildBattleResultReward.rewards)
  return rewards_.Mutable(index);
}
inline ::b2::protocol::commondata::Reward* mdGuildBattleResultReward::add_rewards() {
  // @@protoc_insertion_point(field_add:b2.protocol.masterdata.mdGuildBattleResultReward.rewards)
  return rewards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward >&
mdGuildBattleResultReward::rewards() const {
  // @@protoc_insertion_point(field_list:b2.protocol.masterdata.mdGuildBattleResultReward.rewards)
  return rewards_;
}
inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward >*
mdGuildBattleResultReward::mutable_rewards() {
  // @@protoc_insertion_point(field_mutable_list:b2.protocol.masterdata.mdGuildBattleResultReward.rewards)
  return &rewards_;
}

// -------------------------------------------------------------------

// mdGuildBattleSeasonReward

// required int32 order = 1;
inline bool mdGuildBattleSeasonReward::has_order() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdGuildBattleSeasonReward::set_has_order() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdGuildBattleSeasonReward::clear_has_order() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdGuildBattleSeasonReward::clear_order() {
  order_ = 0;
  clear_has_order();
}
inline ::google::protobuf::int32 mdGuildBattleSeasonReward::order() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGuildBattleSeasonReward.order)
  return order_;
}
inline void mdGuildBattleSeasonReward::set_order(::google::protobuf::int32 value) {
  set_has_order();
  order_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGuildBattleSeasonReward.order)
}

// required int32 ranking_min = 2;
inline bool mdGuildBattleSeasonReward::has_ranking_min() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdGuildBattleSeasonReward::set_has_ranking_min() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdGuildBattleSeasonReward::clear_has_ranking_min() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdGuildBattleSeasonReward::clear_ranking_min() {
  ranking_min_ = 0;
  clear_has_ranking_min();
}
inline ::google::protobuf::int32 mdGuildBattleSeasonReward::ranking_min() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGuildBattleSeasonReward.ranking_min)
  return ranking_min_;
}
inline void mdGuildBattleSeasonReward::set_ranking_min(::google::protobuf::int32 value) {
  set_has_ranking_min();
  ranking_min_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGuildBattleSeasonReward.ranking_min)
}

// required int32 ranking_max = 3;
inline bool mdGuildBattleSeasonReward::has_ranking_max() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdGuildBattleSeasonReward::set_has_ranking_max() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdGuildBattleSeasonReward::clear_has_ranking_max() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdGuildBattleSeasonReward::clear_ranking_max() {
  ranking_max_ = 0;
  clear_has_ranking_max();
}
inline ::google::protobuf::int32 mdGuildBattleSeasonReward::ranking_max() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGuildBattleSeasonReward.ranking_max)
  return ranking_max_;
}
inline void mdGuildBattleSeasonReward::set_ranking_max(::google::protobuf::int32 value) {
  set_has_ranking_max();
  ranking_max_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGuildBattleSeasonReward.ranking_max)
}

// required float ranking_rate_min = 4;
inline bool mdGuildBattleSeasonReward::has_ranking_rate_min() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdGuildBattleSeasonReward::set_has_ranking_rate_min() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdGuildBattleSeasonReward::clear_has_ranking_rate_min() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdGuildBattleSeasonReward::clear_ranking_rate_min() {
  ranking_rate_min_ = 0;
  clear_has_ranking_rate_min();
}
inline float mdGuildBattleSeasonReward::ranking_rate_min() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGuildBattleSeasonReward.ranking_rate_min)
  return ranking_rate_min_;
}
inline void mdGuildBattleSeasonReward::set_ranking_rate_min(float value) {
  set_has_ranking_rate_min();
  ranking_rate_min_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGuildBattleSeasonReward.ranking_rate_min)
}

// required float ranking_rate_max = 5;
inline bool mdGuildBattleSeasonReward::has_ranking_rate_max() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdGuildBattleSeasonReward::set_has_ranking_rate_max() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdGuildBattleSeasonReward::clear_has_ranking_rate_max() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdGuildBattleSeasonReward::clear_ranking_rate_max() {
  ranking_rate_max_ = 0;
  clear_has_ranking_rate_max();
}
inline float mdGuildBattleSeasonReward::ranking_rate_max() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGuildBattleSeasonReward.ranking_rate_max)
  return ranking_rate_max_;
}
inline void mdGuildBattleSeasonReward::set_ranking_rate_max(float value) {
  set_has_ranking_rate_max();
  ranking_rate_max_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGuildBattleSeasonReward.ranking_rate_max)
}

// repeated .b2.protocol.commondata.Reward rewards = 6;
inline int mdGuildBattleSeasonReward::rewards_size() const {
  return rewards_.size();
}
inline void mdGuildBattleSeasonReward::clear_rewards() {
  rewards_.Clear();
}
inline const ::b2::protocol::commondata::Reward& mdGuildBattleSeasonReward::rewards(int index) const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGuildBattleSeasonReward.rewards)
  return rewards_.Get(index);
}
inline ::b2::protocol::commondata::Reward* mdGuildBattleSeasonReward::mutable_rewards(int index) {
  // @@protoc_insertion_point(field_mutable:b2.protocol.masterdata.mdGuildBattleSeasonReward.rewards)
  return rewards_.Mutable(index);
}
inline ::b2::protocol::commondata::Reward* mdGuildBattleSeasonReward::add_rewards() {
  // @@protoc_insertion_point(field_add:b2.protocol.masterdata.mdGuildBattleSeasonReward.rewards)
  return rewards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward >&
mdGuildBattleSeasonReward::rewards() const {
  // @@protoc_insertion_point(field_list:b2.protocol.masterdata.mdGuildBattleSeasonReward.rewards)
  return rewards_;
}
inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward >*
mdGuildBattleSeasonReward::mutable_rewards() {
  // @@protoc_insertion_point(field_mutable_list:b2.protocol.masterdata.mdGuildBattleSeasonReward.rewards)
  return &rewards_;
}

// -------------------------------------------------------------------

// mdGuildBattleScheduleInfo

// required int32 turn = 1;
inline bool mdGuildBattleScheduleInfo::has_turn() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdGuildBattleScheduleInfo::set_has_turn() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdGuildBattleScheduleInfo::clear_has_turn() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdGuildBattleScheduleInfo::clear_turn() {
  turn_ = 0;
  clear_has_turn();
}
inline ::google::protobuf::int32 mdGuildBattleScheduleInfo::turn() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGuildBattleScheduleInfo.turn)
  return turn_;
}
inline void mdGuildBattleScheduleInfo::set_turn(::google::protobuf::int32 value) {
  set_has_turn();
  turn_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGuildBattleScheduleInfo.turn)
}

// required int32 state = 2;
inline bool mdGuildBattleScheduleInfo::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdGuildBattleScheduleInfo::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdGuildBattleScheduleInfo::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdGuildBattleScheduleInfo::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 mdGuildBattleScheduleInfo::state() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGuildBattleScheduleInfo.state)
  return state_;
}
inline void mdGuildBattleScheduleInfo::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGuildBattleScheduleInfo.state)
}

// required int32 start_day = 3;
inline bool mdGuildBattleScheduleInfo::has_start_day() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdGuildBattleScheduleInfo::set_has_start_day() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdGuildBattleScheduleInfo::clear_has_start_day() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdGuildBattleScheduleInfo::clear_start_day() {
  start_day_ = 0;
  clear_has_start_day();
}
inline ::google::protobuf::int32 mdGuildBattleScheduleInfo::start_day() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGuildBattleScheduleInfo.start_day)
  return start_day_;
}
inline void mdGuildBattleScheduleInfo::set_start_day(::google::protobuf::int32 value) {
  set_has_start_day();
  start_day_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGuildBattleScheduleInfo.start_day)
}

// required int32 start_hour = 4;
inline bool mdGuildBattleScheduleInfo::has_start_hour() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdGuildBattleScheduleInfo::set_has_start_hour() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdGuildBattleScheduleInfo::clear_has_start_hour() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdGuildBattleScheduleInfo::clear_start_hour() {
  start_hour_ = 0;
  clear_has_start_hour();
}
inline ::google::protobuf::int32 mdGuildBattleScheduleInfo::start_hour() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGuildBattleScheduleInfo.start_hour)
  return start_hour_;
}
inline void mdGuildBattleScheduleInfo::set_start_hour(::google::protobuf::int32 value) {
  set_has_start_hour();
  start_hour_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGuildBattleScheduleInfo.start_hour)
}

// required int32 start_min = 5;
inline bool mdGuildBattleScheduleInfo::has_start_min() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdGuildBattleScheduleInfo::set_has_start_min() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdGuildBattleScheduleInfo::clear_has_start_min() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdGuildBattleScheduleInfo::clear_start_min() {
  start_min_ = 0;
  clear_has_start_min();
}
inline ::google::protobuf::int32 mdGuildBattleScheduleInfo::start_min() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGuildBattleScheduleInfo.start_min)
  return start_min_;
}
inline void mdGuildBattleScheduleInfo::set_start_min(::google::protobuf::int32 value) {
  set_has_start_min();
  start_min_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGuildBattleScheduleInfo.start_min)
}

// required int32 end_day = 6;
inline bool mdGuildBattleScheduleInfo::has_end_day() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdGuildBattleScheduleInfo::set_has_end_day() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdGuildBattleScheduleInfo::clear_has_end_day() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdGuildBattleScheduleInfo::clear_end_day() {
  end_day_ = 0;
  clear_has_end_day();
}
inline ::google::protobuf::int32 mdGuildBattleScheduleInfo::end_day() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGuildBattleScheduleInfo.end_day)
  return end_day_;
}
inline void mdGuildBattleScheduleInfo::set_end_day(::google::protobuf::int32 value) {
  set_has_end_day();
  end_day_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGuildBattleScheduleInfo.end_day)
}

// required int32 end_hour = 7;
inline bool mdGuildBattleScheduleInfo::has_end_hour() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mdGuildBattleScheduleInfo::set_has_end_hour() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mdGuildBattleScheduleInfo::clear_has_end_hour() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mdGuildBattleScheduleInfo::clear_end_hour() {
  end_hour_ = 0;
  clear_has_end_hour();
}
inline ::google::protobuf::int32 mdGuildBattleScheduleInfo::end_hour() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGuildBattleScheduleInfo.end_hour)
  return end_hour_;
}
inline void mdGuildBattleScheduleInfo::set_end_hour(::google::protobuf::int32 value) {
  set_has_end_hour();
  end_hour_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGuildBattleScheduleInfo.end_hour)
}

// required int32 end_min = 8;
inline bool mdGuildBattleScheduleInfo::has_end_min() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void mdGuildBattleScheduleInfo::set_has_end_min() {
  _has_bits_[0] |= 0x00000080u;
}
inline void mdGuildBattleScheduleInfo::clear_has_end_min() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void mdGuildBattleScheduleInfo::clear_end_min() {
  end_min_ = 0;
  clear_has_end_min();
}
inline ::google::protobuf::int32 mdGuildBattleScheduleInfo::end_min() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGuildBattleScheduleInfo.end_min)
  return end_min_;
}
inline void mdGuildBattleScheduleInfo::set_end_min(::google::protobuf::int32 value) {
  set_has_end_min();
  end_min_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGuildBattleScheduleInfo.end_min)
}

// -------------------------------------------------------------------

// mdGuildSkill

// required int32 id = 1;
inline bool mdGuildSkill::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdGuildSkill::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdGuildSkill::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdGuildSkill::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 mdGuildSkill::id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGuildSkill.id)
  return id_;
}
inline void mdGuildSkill::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGuildSkill.id)
}

// required int32 level = 2;
inline bool mdGuildSkill::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdGuildSkill::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdGuildSkill::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdGuildSkill::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 mdGuildSkill::level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGuildSkill.level)
  return level_;
}
inline void mdGuildSkill::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGuildSkill.level)
}

// required int32 upgrade_cost_gold = 3;
inline bool mdGuildSkill::has_upgrade_cost_gold() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdGuildSkill::set_has_upgrade_cost_gold() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdGuildSkill::clear_has_upgrade_cost_gold() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdGuildSkill::clear_upgrade_cost_gold() {
  upgrade_cost_gold_ = 0;
  clear_has_upgrade_cost_gold();
}
inline ::google::protobuf::int32 mdGuildSkill::upgrade_cost_gold() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGuildSkill.upgrade_cost_gold)
  return upgrade_cost_gold_;
}
inline void mdGuildSkill::set_upgrade_cost_gold(::google::protobuf::int32 value) {
  set_has_upgrade_cost_gold();
  upgrade_cost_gold_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGuildSkill.upgrade_cost_gold)
}

// required int32 upgrade_req_guild_level = 4;
inline bool mdGuildSkill::has_upgrade_req_guild_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdGuildSkill::set_has_upgrade_req_guild_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdGuildSkill::clear_has_upgrade_req_guild_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdGuildSkill::clear_upgrade_req_guild_level() {
  upgrade_req_guild_level_ = 0;
  clear_has_upgrade_req_guild_level();
}
inline ::google::protobuf::int32 mdGuildSkill::upgrade_req_guild_level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGuildSkill.upgrade_req_guild_level)
  return upgrade_req_guild_level_;
}
inline void mdGuildSkill::set_upgrade_req_guild_level(::google::protobuf::int32 value) {
  set_has_upgrade_req_guild_level();
  upgrade_req_guild_level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGuildSkill.upgrade_req_guild_level)
}

// required int32 buy_cost_gold = 5;
inline bool mdGuildSkill::has_buy_cost_gold() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdGuildSkill::set_has_buy_cost_gold() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdGuildSkill::clear_has_buy_cost_gold() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdGuildSkill::clear_buy_cost_gold() {
  buy_cost_gold_ = 0;
  clear_has_buy_cost_gold();
}
inline ::google::protobuf::int32 mdGuildSkill::buy_cost_gold() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGuildSkill.buy_cost_gold)
  return buy_cost_gold_;
}
inline void mdGuildSkill::set_buy_cost_gold(::google::protobuf::int32 value) {
  set_has_buy_cost_gold();
  buy_cost_gold_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGuildSkill.buy_cost_gold)
}

// required int32 buff_option_type = 6;
inline bool mdGuildSkill::has_buff_option_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdGuildSkill::set_has_buff_option_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdGuildSkill::clear_has_buff_option_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdGuildSkill::clear_buff_option_type() {
  buff_option_type_ = 0;
  clear_has_buff_option_type();
}
inline ::google::protobuf::int32 mdGuildSkill::buff_option_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGuildSkill.buff_option_type)
  return buff_option_type_;
}
inline void mdGuildSkill::set_buff_option_type(::google::protobuf::int32 value) {
  set_has_buff_option_type();
  buff_option_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGuildSkill.buff_option_type)
}

// required float buff_option_value = 7;
inline bool mdGuildSkill::has_buff_option_value() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mdGuildSkill::set_has_buff_option_value() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mdGuildSkill::clear_has_buff_option_value() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mdGuildSkill::clear_buff_option_value() {
  buff_option_value_ = 0;
  clear_has_buff_option_value();
}
inline float mdGuildSkill::buff_option_value() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGuildSkill.buff_option_value)
  return buff_option_value_;
}
inline void mdGuildSkill::set_buff_option_value(float value) {
  set_has_buff_option_value();
  buff_option_value_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGuildSkill.buff_option_value)
}

// required int32 buff_time_sec = 8;
inline bool mdGuildSkill::has_buff_time_sec() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void mdGuildSkill::set_has_buff_time_sec() {
  _has_bits_[0] |= 0x00000080u;
}
inline void mdGuildSkill::clear_has_buff_time_sec() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void mdGuildSkill::clear_buff_time_sec() {
  buff_time_sec_ = 0;
  clear_has_buff_time_sec();
}
inline ::google::protobuf::int32 mdGuildSkill::buff_time_sec() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGuildSkill.buff_time_sec)
  return buff_time_sec_;
}
inline void mdGuildSkill::set_buff_time_sec(::google::protobuf::int32 value) {
  set_has_buff_time_sec();
  buff_time_sec_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGuildSkill.buff_time_sec)
}

// -------------------------------------------------------------------

// mdGuildExp

// required int32 level = 1;
inline bool mdGuildExp::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdGuildExp::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdGuildExp::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdGuildExp::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 mdGuildExp::level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGuildExp.level)
  return level_;
}
inline void mdGuildExp::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGuildExp.level)
}

// required int32 exp_max = 2;
inline bool mdGuildExp::has_exp_max() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdGuildExp::set_has_exp_max() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdGuildExp::clear_has_exp_max() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdGuildExp::clear_exp_max() {
  exp_max_ = 0;
  clear_has_exp_max();
}
inline ::google::protobuf::int32 mdGuildExp::exp_max() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGuildExp.exp_max)
  return exp_max_;
}
inline void mdGuildExp::set_exp_max(::google::protobuf::int32 value) {
  set_has_exp_max();
  exp_max_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGuildExp.exp_max)
}

// -------------------------------------------------------------------

// mdGuildSupportItem

// required int32 item_template_id = 1;
inline bool mdGuildSupportItem::has_item_template_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdGuildSupportItem::set_has_item_template_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdGuildSupportItem::clear_has_item_template_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdGuildSupportItem::clear_item_template_id() {
  item_template_id_ = 0;
  clear_has_item_template_id();
}
inline ::google::protobuf::int32 mdGuildSupportItem::item_template_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGuildSupportItem.item_template_id)
  return item_template_id_;
}
inline void mdGuildSupportItem::set_item_template_id(::google::protobuf::int32 value) {
  set_has_item_template_id();
  item_template_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGuildSupportItem.item_template_id)
}

// required int32 support_max_count = 2;
inline bool mdGuildSupportItem::has_support_max_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdGuildSupportItem::set_has_support_max_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdGuildSupportItem::clear_has_support_max_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdGuildSupportItem::clear_support_max_count() {
  support_max_count_ = 0;
  clear_has_support_max_count();
}
inline ::google::protobuf::int32 mdGuildSupportItem::support_max_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGuildSupportItem.support_max_count)
  return support_max_count_;
}
inline void mdGuildSupportItem::set_support_max_count(::google::protobuf::int32 value) {
  set_has_support_max_count();
  support_max_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGuildSupportItem.support_max_count)
}

// -------------------------------------------------------------------

// mdGuildMercenary

// required int32 id = 1;
inline bool mdGuildMercenary::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdGuildMercenary::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdGuildMercenary::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdGuildMercenary::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 mdGuildMercenary::id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGuildMercenary.id)
  return id_;
}
inline void mdGuildMercenary::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGuildMercenary.id)
}

// required int32 mastery_type = 2;
inline bool mdGuildMercenary::has_mastery_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdGuildMercenary::set_has_mastery_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdGuildMercenary::clear_has_mastery_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdGuildMercenary::clear_mastery_type() {
  mastery_type_ = 0;
  clear_has_mastery_type();
}
inline ::google::protobuf::int32 mdGuildMercenary::mastery_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGuildMercenary.mastery_type)
  return mastery_type_;
}
inline void mdGuildMercenary::set_mastery_type(::google::protobuf::int32 value) {
  set_has_mastery_type();
  mastery_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGuildMercenary.mastery_type)
}

// required int32 max_armor_override = 3;
inline bool mdGuildMercenary::has_max_armor_override() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdGuildMercenary::set_has_max_armor_override() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdGuildMercenary::clear_has_max_armor_override() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdGuildMercenary::clear_max_armor_override() {
  max_armor_override_ = 0;
  clear_has_max_armor_override();
}
inline ::google::protobuf::int32 mdGuildMercenary::max_armor_override() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGuildMercenary.max_armor_override)
  return max_armor_override_;
}
inline void mdGuildMercenary::set_max_armor_override(::google::protobuf::int32 value) {
  set_has_max_armor_override();
  max_armor_override_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGuildMercenary.max_armor_override)
}

// required int32 skill_id_1 = 4;
inline bool mdGuildMercenary::has_skill_id_1() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdGuildMercenary::set_has_skill_id_1() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdGuildMercenary::clear_has_skill_id_1() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdGuildMercenary::clear_skill_id_1() {
  skill_id_1_ = 0;
  clear_has_skill_id_1();
}
inline ::google::protobuf::int32 mdGuildMercenary::skill_id_1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGuildMercenary.skill_id_1)
  return skill_id_1_;
}
inline void mdGuildMercenary::set_skill_id_1(::google::protobuf::int32 value) {
  set_has_skill_id_1();
  skill_id_1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGuildMercenary.skill_id_1)
}

// required int32 skill_id_2 = 5;
inline bool mdGuildMercenary::has_skill_id_2() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdGuildMercenary::set_has_skill_id_2() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdGuildMercenary::clear_has_skill_id_2() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdGuildMercenary::clear_skill_id_2() {
  skill_id_2_ = 0;
  clear_has_skill_id_2();
}
inline ::google::protobuf::int32 mdGuildMercenary::skill_id_2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGuildMercenary.skill_id_2)
  return skill_id_2_;
}
inline void mdGuildMercenary::set_skill_id_2(::google::protobuf::int32 value) {
  set_has_skill_id_2();
  skill_id_2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGuildMercenary.skill_id_2)
}

// required int32 skill_id_3 = 6;
inline bool mdGuildMercenary::has_skill_id_3() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdGuildMercenary::set_has_skill_id_3() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdGuildMercenary::clear_has_skill_id_3() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdGuildMercenary::clear_skill_id_3() {
  skill_id_3_ = 0;
  clear_has_skill_id_3();
}
inline ::google::protobuf::int32 mdGuildMercenary::skill_id_3() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGuildMercenary.skill_id_3)
  return skill_id_3_;
}
inline void mdGuildMercenary::set_skill_id_3(::google::protobuf::int32 value) {
  set_has_skill_id_3();
  skill_id_3_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGuildMercenary.skill_id_3)
}

// required int32 max_use_count = 7;
inline bool mdGuildMercenary::has_max_use_count() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mdGuildMercenary::set_has_max_use_count() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mdGuildMercenary::clear_has_max_use_count() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mdGuildMercenary::clear_max_use_count() {
  max_use_count_ = 0;
  clear_has_max_use_count();
}
inline ::google::protobuf::int32 mdGuildMercenary::max_use_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGuildMercenary.max_use_count)
  return max_use_count_;
}
inline void mdGuildMercenary::set_max_use_count(::google::protobuf::int32 value) {
  set_has_max_use_count();
  max_use_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGuildMercenary.max_use_count)
}

// required bool is_usable = 8;
inline bool mdGuildMercenary::has_is_usable() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void mdGuildMercenary::set_has_is_usable() {
  _has_bits_[0] |= 0x00000080u;
}
inline void mdGuildMercenary::clear_has_is_usable() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void mdGuildMercenary::clear_is_usable() {
  is_usable_ = false;
  clear_has_is_usable();
}
inline bool mdGuildMercenary::is_usable() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGuildMercenary.is_usable)
  return is_usable_;
}
inline void mdGuildMercenary::set_is_usable(bool value) {
  set_has_is_usable();
  is_usable_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGuildMercenary.is_usable)
}

// -------------------------------------------------------------------

// mdGuildMercenarySkill

// required int32 skill_id = 1;
inline bool mdGuildMercenarySkill::has_skill_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdGuildMercenarySkill::set_has_skill_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdGuildMercenarySkill::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdGuildMercenarySkill::clear_skill_id() {
  skill_id_ = 0;
  clear_has_skill_id();
}
inline ::google::protobuf::int32 mdGuildMercenarySkill::skill_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGuildMercenarySkill.skill_id)
  return skill_id_;
}
inline void mdGuildMercenarySkill::set_skill_id(::google::protobuf::int32 value) {
  set_has_skill_id();
  skill_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGuildMercenarySkill.skill_id)
}

// required int32 require_mercenary_level = 2;
inline bool mdGuildMercenarySkill::has_require_mercenary_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdGuildMercenarySkill::set_has_require_mercenary_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdGuildMercenarySkill::clear_has_require_mercenary_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdGuildMercenarySkill::clear_require_mercenary_level() {
  require_mercenary_level_ = 0;
  clear_has_require_mercenary_level();
}
inline ::google::protobuf::int32 mdGuildMercenarySkill::require_mercenary_level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGuildMercenarySkill.require_mercenary_level)
  return require_mercenary_level_;
}
inline void mdGuildMercenarySkill::set_require_mercenary_level(::google::protobuf::int32 value) {
  set_has_require_mercenary_level();
  require_mercenary_level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGuildMercenarySkill.require_mercenary_level)
}

// required int32 cool_time_sec = 3;
inline bool mdGuildMercenarySkill::has_cool_time_sec() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdGuildMercenarySkill::set_has_cool_time_sec() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdGuildMercenarySkill::clear_has_cool_time_sec() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdGuildMercenarySkill::clear_cool_time_sec() {
  cool_time_sec_ = 0;
  clear_has_cool_time_sec();
}
inline ::google::protobuf::int32 mdGuildMercenarySkill::cool_time_sec() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGuildMercenarySkill.cool_time_sec)
  return cool_time_sec_;
}
inline void mdGuildMercenarySkill::set_cool_time_sec(::google::protobuf::int32 value) {
  set_has_cool_time_sec();
  cool_time_sec_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGuildMercenarySkill.cool_time_sec)
}

// -------------------------------------------------------------------

// mdGuildMercenaryMastery

// required int32 id = 1;
inline bool mdGuildMercenaryMastery::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdGuildMercenaryMastery::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdGuildMercenaryMastery::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdGuildMercenaryMastery::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 mdGuildMercenaryMastery::id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGuildMercenaryMastery.id)
  return id_;
}
inline void mdGuildMercenaryMastery::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGuildMercenaryMastery.id)
}

// required int32 level = 2;
inline bool mdGuildMercenaryMastery::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdGuildMercenaryMastery::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdGuildMercenaryMastery::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdGuildMercenaryMastery::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 mdGuildMercenaryMastery::level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGuildMercenaryMastery.level)
  return level_;
}
inline void mdGuildMercenaryMastery::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGuildMercenaryMastery.level)
}

// required int32 max_exp = 3;
inline bool mdGuildMercenaryMastery::has_max_exp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdGuildMercenaryMastery::set_has_max_exp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdGuildMercenaryMastery::clear_has_max_exp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdGuildMercenaryMastery::clear_max_exp() {
  max_exp_ = 0;
  clear_has_max_exp();
}
inline ::google::protobuf::int32 mdGuildMercenaryMastery::max_exp() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGuildMercenaryMastery.max_exp)
  return max_exp_;
}
inline void mdGuildMercenaryMastery::set_max_exp(::google::protobuf::int32 value) {
  set_has_max_exp();
  max_exp_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGuildMercenaryMastery.max_exp)
}

// required int32 option_id_1 = 10;
inline bool mdGuildMercenaryMastery::has_option_id_1() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdGuildMercenaryMastery::set_has_option_id_1() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdGuildMercenaryMastery::clear_has_option_id_1() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdGuildMercenaryMastery::clear_option_id_1() {
  option_id_1_ = 0;
  clear_has_option_id_1();
}
inline ::google::protobuf::int32 mdGuildMercenaryMastery::option_id_1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGuildMercenaryMastery.option_id_1)
  return option_id_1_;
}
inline void mdGuildMercenaryMastery::set_option_id_1(::google::protobuf::int32 value) {
  set_has_option_id_1();
  option_id_1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGuildMercenaryMastery.option_id_1)
}

// required float option_value_1 = 11;
inline bool mdGuildMercenaryMastery::has_option_value_1() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdGuildMercenaryMastery::set_has_option_value_1() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdGuildMercenaryMastery::clear_has_option_value_1() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdGuildMercenaryMastery::clear_option_value_1() {
  option_value_1_ = 0;
  clear_has_option_value_1();
}
inline float mdGuildMercenaryMastery::option_value_1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGuildMercenaryMastery.option_value_1)
  return option_value_1_;
}
inline void mdGuildMercenaryMastery::set_option_value_1(float value) {
  set_has_option_value_1();
  option_value_1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGuildMercenaryMastery.option_value_1)
}

// required int32 option_id_2 = 12;
inline bool mdGuildMercenaryMastery::has_option_id_2() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdGuildMercenaryMastery::set_has_option_id_2() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdGuildMercenaryMastery::clear_has_option_id_2() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdGuildMercenaryMastery::clear_option_id_2() {
  option_id_2_ = 0;
  clear_has_option_id_2();
}
inline ::google::protobuf::int32 mdGuildMercenaryMastery::option_id_2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGuildMercenaryMastery.option_id_2)
  return option_id_2_;
}
inline void mdGuildMercenaryMastery::set_option_id_2(::google::protobuf::int32 value) {
  set_has_option_id_2();
  option_id_2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGuildMercenaryMastery.option_id_2)
}

// required float option_value_2 = 13;
inline bool mdGuildMercenaryMastery::has_option_value_2() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mdGuildMercenaryMastery::set_has_option_value_2() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mdGuildMercenaryMastery::clear_has_option_value_2() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mdGuildMercenaryMastery::clear_option_value_2() {
  option_value_2_ = 0;
  clear_has_option_value_2();
}
inline float mdGuildMercenaryMastery::option_value_2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGuildMercenaryMastery.option_value_2)
  return option_value_2_;
}
inline void mdGuildMercenaryMastery::set_option_value_2(float value) {
  set_has_option_value_2();
  option_value_2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGuildMercenaryMastery.option_value_2)
}

// required int32 option_id_3 = 14;
inline bool mdGuildMercenaryMastery::has_option_id_3() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void mdGuildMercenaryMastery::set_has_option_id_3() {
  _has_bits_[0] |= 0x00000080u;
}
inline void mdGuildMercenaryMastery::clear_has_option_id_3() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void mdGuildMercenaryMastery::clear_option_id_3() {
  option_id_3_ = 0;
  clear_has_option_id_3();
}
inline ::google::protobuf::int32 mdGuildMercenaryMastery::option_id_3() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGuildMercenaryMastery.option_id_3)
  return option_id_3_;
}
inline void mdGuildMercenaryMastery::set_option_id_3(::google::protobuf::int32 value) {
  set_has_option_id_3();
  option_id_3_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGuildMercenaryMastery.option_id_3)
}

// required float option_value_3 = 15;
inline bool mdGuildMercenaryMastery::has_option_value_3() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void mdGuildMercenaryMastery::set_has_option_value_3() {
  _has_bits_[0] |= 0x00000100u;
}
inline void mdGuildMercenaryMastery::clear_has_option_value_3() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void mdGuildMercenaryMastery::clear_option_value_3() {
  option_value_3_ = 0;
  clear_has_option_value_3();
}
inline float mdGuildMercenaryMastery::option_value_3() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGuildMercenaryMastery.option_value_3)
  return option_value_3_;
}
inline void mdGuildMercenaryMastery::set_option_value_3(float value) {
  set_has_option_value_3();
  option_value_3_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGuildMercenaryMastery.option_value_3)
}

// -------------------------------------------------------------------

// mdGuildMercenaryDonation

// required .b2.protocol.masterdata.mdGuildMercenaryDonation.DonationType donation_type = 1;
inline bool mdGuildMercenaryDonation::has_donation_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdGuildMercenaryDonation::set_has_donation_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdGuildMercenaryDonation::clear_has_donation_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdGuildMercenaryDonation::clear_donation_type() {
  donation_type_ = 1;
  clear_has_donation_type();
}
inline ::b2::protocol::masterdata::mdGuildMercenaryDonation_DonationType mdGuildMercenaryDonation::donation_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGuildMercenaryDonation.donation_type)
  return static_cast< ::b2::protocol::masterdata::mdGuildMercenaryDonation_DonationType >(donation_type_);
}
inline void mdGuildMercenaryDonation::set_donation_type(::b2::protocol::masterdata::mdGuildMercenaryDonation_DonationType value) {
  assert(::b2::protocol::masterdata::mdGuildMercenaryDonation_DonationType_IsValid(value));
  set_has_donation_type();
  donation_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGuildMercenaryDonation.donation_type)
}

// required int32 item_template_id = 2;
inline bool mdGuildMercenaryDonation::has_item_template_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdGuildMercenaryDonation::set_has_item_template_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdGuildMercenaryDonation::clear_has_item_template_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdGuildMercenaryDonation::clear_item_template_id() {
  item_template_id_ = 0;
  clear_has_item_template_id();
}
inline ::google::protobuf::int32 mdGuildMercenaryDonation::item_template_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGuildMercenaryDonation.item_template_id)
  return item_template_id_;
}
inline void mdGuildMercenaryDonation::set_item_template_id(::google::protobuf::int32 value) {
  set_has_item_template_id();
  item_template_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGuildMercenaryDonation.item_template_id)
}

// required int32 donation_amount = 3;
inline bool mdGuildMercenaryDonation::has_donation_amount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdGuildMercenaryDonation::set_has_donation_amount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdGuildMercenaryDonation::clear_has_donation_amount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdGuildMercenaryDonation::clear_donation_amount() {
  donation_amount_ = 0;
  clear_has_donation_amount();
}
inline ::google::protobuf::int32 mdGuildMercenaryDonation::donation_amount() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGuildMercenaryDonation.donation_amount)
  return donation_amount_;
}
inline void mdGuildMercenaryDonation::set_donation_amount(::google::protobuf::int32 value) {
  set_has_donation_amount();
  donation_amount_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGuildMercenaryDonation.donation_amount)
}

// required int32 exp_increment = 4;
inline bool mdGuildMercenaryDonation::has_exp_increment() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdGuildMercenaryDonation::set_has_exp_increment() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdGuildMercenaryDonation::clear_has_exp_increment() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdGuildMercenaryDonation::clear_exp_increment() {
  exp_increment_ = 0;
  clear_has_exp_increment();
}
inline ::google::protobuf::int32 mdGuildMercenaryDonation::exp_increment() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGuildMercenaryDonation.exp_increment)
  return exp_increment_;
}
inline void mdGuildMercenaryDonation::set_exp_increment(::google::protobuf::int32 value) {
  set_has_exp_increment();
  exp_increment_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGuildMercenaryDonation.exp_increment)
}

// -------------------------------------------------------------------

// mdStageFixedDrop

// required int32 stage_id = 1;
inline bool mdStageFixedDrop::has_stage_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdStageFixedDrop::set_has_stage_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdStageFixedDrop::clear_has_stage_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdStageFixedDrop::clear_stage_id() {
  stage_id_ = 0;
  clear_has_stage_id();
}
inline ::google::protobuf::int32 mdStageFixedDrop::stage_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdStageFixedDrop.stage_id)
  return stage_id_;
}
inline void mdStageFixedDrop::set_stage_id(::google::protobuf::int32 value) {
  set_has_stage_id();
  stage_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdStageFixedDrop.stage_id)
}

// required int32 idx = 2;
inline bool mdStageFixedDrop::has_idx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdStageFixedDrop::set_has_idx() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdStageFixedDrop::clear_has_idx() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdStageFixedDrop::clear_idx() {
  idx_ = 0;
  clear_has_idx();
}
inline ::google::protobuf::int32 mdStageFixedDrop::idx() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdStageFixedDrop.idx)
  return idx_;
}
inline void mdStageFixedDrop::set_idx(::google::protobuf::int32 value) {
  set_has_idx();
  idx_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdStageFixedDrop.idx)
}

// required int32 template_id = 3;
inline bool mdStageFixedDrop::has_template_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdStageFixedDrop::set_has_template_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdStageFixedDrop::clear_has_template_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdStageFixedDrop::clear_template_id() {
  template_id_ = 0;
  clear_has_template_id();
}
inline ::google::protobuf::int32 mdStageFixedDrop::template_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdStageFixedDrop.template_id)
  return template_id_;
}
inline void mdStageFixedDrop::set_template_id(::google::protobuf::int32 value) {
  set_has_template_id();
  template_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdStageFixedDrop.template_id)
}

// required int32 min = 4;
inline bool mdStageFixedDrop::has_min() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdStageFixedDrop::set_has_min() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdStageFixedDrop::clear_has_min() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdStageFixedDrop::clear_min() {
  min_ = 0;
  clear_has_min();
}
inline ::google::protobuf::int32 mdStageFixedDrop::min() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdStageFixedDrop.min)
  return min_;
}
inline void mdStageFixedDrop::set_min(::google::protobuf::int32 value) {
  set_has_min();
  min_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdStageFixedDrop.min)
}

// required int32 max = 5;
inline bool mdStageFixedDrop::has_max() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdStageFixedDrop::set_has_max() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdStageFixedDrop::clear_has_max() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdStageFixedDrop::clear_max() {
  max_ = 0;
  clear_has_max();
}
inline ::google::protobuf::int32 mdStageFixedDrop::max() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdStageFixedDrop.max)
  return max_;
}
inline void mdStageFixedDrop::set_max(::google::protobuf::int32 value) {
  set_has_max();
  max_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdStageFixedDrop.max)
}

// required int32 rate = 6;
inline bool mdStageFixedDrop::has_rate() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdStageFixedDrop::set_has_rate() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdStageFixedDrop::clear_has_rate() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdStageFixedDrop::clear_rate() {
  rate_ = 0;
  clear_has_rate();
}
inline ::google::protobuf::int32 mdStageFixedDrop::rate() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdStageFixedDrop.rate)
  return rate_;
}
inline void mdStageFixedDrop::set_rate(::google::protobuf::int32 value) {
  set_has_rate();
  rate_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdStageFixedDrop.rate)
}

// -------------------------------------------------------------------

// mdShopCashBonus

// required int32 id = 1;
inline bool mdShopCashBonus::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdShopCashBonus::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdShopCashBonus::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdShopCashBonus::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 mdShopCashBonus::id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopCashBonus.id)
  return id_;
}
inline void mdShopCashBonus::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopCashBonus.id)
}

// required int32 increase_rate = 2;
inline bool mdShopCashBonus::has_increase_rate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdShopCashBonus::set_has_increase_rate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdShopCashBonus::clear_has_increase_rate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdShopCashBonus::clear_increase_rate() {
  increase_rate_ = 0;
  clear_has_increase_rate();
}
inline ::google::protobuf::int32 mdShopCashBonus::increase_rate() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopCashBonus.increase_rate)
  return increase_rate_;
}
inline void mdShopCashBonus::set_increase_rate(::google::protobuf::int32 value) {
  set_has_increase_rate();
  increase_rate_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopCashBonus.increase_rate)
}

// required int64 start_time = 4;
inline bool mdShopCashBonus::has_start_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdShopCashBonus::set_has_start_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdShopCashBonus::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdShopCashBonus::clear_start_time() {
  start_time_ = GOOGLE_LONGLONG(0);
  clear_has_start_time();
}
inline ::google::protobuf::int64 mdShopCashBonus::start_time() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopCashBonus.start_time)
  return start_time_;
}
inline void mdShopCashBonus::set_start_time(::google::protobuf::int64 value) {
  set_has_start_time();
  start_time_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopCashBonus.start_time)
}

// required int64 end_time = 5;
inline bool mdShopCashBonus::has_end_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdShopCashBonus::set_has_end_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdShopCashBonus::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdShopCashBonus::clear_end_time() {
  end_time_ = GOOGLE_LONGLONG(0);
  clear_has_end_time();
}
inline ::google::protobuf::int64 mdShopCashBonus::end_time() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopCashBonus.end_time)
  return end_time_;
}
inline void mdShopCashBonus::set_end_time(::google::protobuf::int64 value) {
  set_has_end_time();
  end_time_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopCashBonus.end_time)
}

// -------------------------------------------------------------------

// mdShopFundsSale

// required int32 id = 1;
inline bool mdShopFundsSale::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdShopFundsSale::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdShopFundsSale::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdShopFundsSale::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 mdShopFundsSale::id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopFundsSale.id)
  return id_;
}
inline void mdShopFundsSale::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopFundsSale.id)
}

// required int32 discount_rate = 2;
inline bool mdShopFundsSale::has_discount_rate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdShopFundsSale::set_has_discount_rate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdShopFundsSale::clear_has_discount_rate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdShopFundsSale::clear_discount_rate() {
  discount_rate_ = 0;
  clear_has_discount_rate();
}
inline ::google::protobuf::int32 mdShopFundsSale::discount_rate() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopFundsSale.discount_rate)
  return discount_rate_;
}
inline void mdShopFundsSale::set_discount_rate(::google::protobuf::int32 value) {
  set_has_discount_rate();
  discount_rate_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopFundsSale.discount_rate)
}

// required int64 start_time = 4;
inline bool mdShopFundsSale::has_start_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdShopFundsSale::set_has_start_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdShopFundsSale::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdShopFundsSale::clear_start_time() {
  start_time_ = GOOGLE_LONGLONG(0);
  clear_has_start_time();
}
inline ::google::protobuf::int64 mdShopFundsSale::start_time() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopFundsSale.start_time)
  return start_time_;
}
inline void mdShopFundsSale::set_start_time(::google::protobuf::int64 value) {
  set_has_start_time();
  start_time_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopFundsSale.start_time)
}

// required int64 end_time = 5;
inline bool mdShopFundsSale::has_end_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdShopFundsSale::set_has_end_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdShopFundsSale::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdShopFundsSale::clear_end_time() {
  end_time_ = GOOGLE_LONGLONG(0);
  clear_has_end_time();
}
inline ::google::protobuf::int64 mdShopFundsSale::end_time() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopFundsSale.end_time)
  return end_time_;
}
inline void mdShopFundsSale::set_end_time(::google::protobuf::int64 value) {
  set_has_end_time();
  end_time_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopFundsSale.end_time)
}

// -------------------------------------------------------------------

// mdShopLotteryPrice

// required bool continuous = 1;
inline bool mdShopLotteryPrice::has_continuous() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdShopLotteryPrice::set_has_continuous() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdShopLotteryPrice::clear_has_continuous() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdShopLotteryPrice::clear_continuous() {
  continuous_ = false;
  clear_has_continuous();
}
inline bool mdShopLotteryPrice::continuous() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopLotteryPrice.continuous)
  return continuous_;
}
inline void mdShopLotteryPrice::set_continuous(bool value) {
  set_has_continuous();
  continuous_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopLotteryPrice.continuous)
}

// required bool is_again = 2;
inline bool mdShopLotteryPrice::has_is_again() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdShopLotteryPrice::set_has_is_again() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdShopLotteryPrice::clear_has_is_again() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdShopLotteryPrice::clear_is_again() {
  is_again_ = false;
  clear_has_is_again();
}
inline bool mdShopLotteryPrice::is_again() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopLotteryPrice.is_again)
  return is_again_;
}
inline void mdShopLotteryPrice::set_is_again(bool value) {
  set_has_is_again();
  is_again_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopLotteryPrice.is_again)
}

// required int32 gem = 3;
inline bool mdShopLotteryPrice::has_gem() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdShopLotteryPrice::set_has_gem() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdShopLotteryPrice::clear_has_gem() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdShopLotteryPrice::clear_gem() {
  gem_ = 0;
  clear_has_gem();
}
inline ::google::protobuf::int32 mdShopLotteryPrice::gem() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopLotteryPrice.gem)
  return gem_;
}
inline void mdShopLotteryPrice::set_gem(::google::protobuf::int32 value) {
  set_has_gem();
  gem_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopLotteryPrice.gem)
}

// required int32 calculated_gem = 4;
inline bool mdShopLotteryPrice::has_calculated_gem() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdShopLotteryPrice::set_has_calculated_gem() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdShopLotteryPrice::clear_has_calculated_gem() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdShopLotteryPrice::clear_calculated_gem() {
  calculated_gem_ = 0;
  clear_has_calculated_gem();
}
inline ::google::protobuf::int32 mdShopLotteryPrice::calculated_gem() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopLotteryPrice.calculated_gem)
  return calculated_gem_;
}
inline void mdShopLotteryPrice::set_calculated_gem(::google::protobuf::int32 value) {
  set_has_calculated_gem();
  calculated_gem_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopLotteryPrice.calculated_gem)
}

// required int32 social_point = 5;
inline bool mdShopLotteryPrice::has_social_point() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdShopLotteryPrice::set_has_social_point() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdShopLotteryPrice::clear_has_social_point() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdShopLotteryPrice::clear_social_point() {
  social_point_ = 0;
  clear_has_social_point();
}
inline ::google::protobuf::int32 mdShopLotteryPrice::social_point() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopLotteryPrice.social_point)
  return social_point_;
}
inline void mdShopLotteryPrice::set_social_point(::google::protobuf::int32 value) {
  set_has_social_point();
  social_point_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopLotteryPrice.social_point)
}

// -------------------------------------------------------------------

// mdShopLotteryPossibleGrade

// required .b2.protocol.commondata.Shop.DrawPriceType draw_price_type = 1;
inline bool mdShopLotteryPossibleGrade::has_draw_price_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdShopLotteryPossibleGrade::set_has_draw_price_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdShopLotteryPossibleGrade::clear_has_draw_price_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdShopLotteryPossibleGrade::clear_draw_price_type() {
  draw_price_type_ = 1;
  clear_has_draw_price_type();
}
inline ::b2::protocol::commondata::Shop_DrawPriceType mdShopLotteryPossibleGrade::draw_price_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopLotteryPossibleGrade.draw_price_type)
  return static_cast< ::b2::protocol::commondata::Shop_DrawPriceType >(draw_price_type_);
}
inline void mdShopLotteryPossibleGrade::set_draw_price_type(::b2::protocol::commondata::Shop_DrawPriceType value) {
  assert(::b2::protocol::commondata::Shop_DrawPriceType_IsValid(value));
  set_has_draw_price_type();
  draw_price_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopLotteryPossibleGrade.draw_price_type)
}

// required bool is_continuous = 2;
inline bool mdShopLotteryPossibleGrade::has_is_continuous() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdShopLotteryPossibleGrade::set_has_is_continuous() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdShopLotteryPossibleGrade::clear_has_is_continuous() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdShopLotteryPossibleGrade::clear_is_continuous() {
  is_continuous_ = false;
  clear_has_is_continuous();
}
inline bool mdShopLotteryPossibleGrade::is_continuous() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopLotteryPossibleGrade.is_continuous)
  return is_continuous_;
}
inline void mdShopLotteryPossibleGrade::set_is_continuous(bool value) {
  set_has_is_continuous();
  is_continuous_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopLotteryPossibleGrade.is_continuous)
}

// required int32 min_grade = 3;
inline bool mdShopLotteryPossibleGrade::has_min_grade() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdShopLotteryPossibleGrade::set_has_min_grade() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdShopLotteryPossibleGrade::clear_has_min_grade() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdShopLotteryPossibleGrade::clear_min_grade() {
  min_grade_ = 0;
  clear_has_min_grade();
}
inline ::google::protobuf::int32 mdShopLotteryPossibleGrade::min_grade() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopLotteryPossibleGrade.min_grade)
  return min_grade_;
}
inline void mdShopLotteryPossibleGrade::set_min_grade(::google::protobuf::int32 value) {
  set_has_min_grade();
  min_grade_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopLotteryPossibleGrade.min_grade)
}

// required int32 max_grade = 4;
inline bool mdShopLotteryPossibleGrade::has_max_grade() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdShopLotteryPossibleGrade::set_has_max_grade() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdShopLotteryPossibleGrade::clear_has_max_grade() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdShopLotteryPossibleGrade::clear_max_grade() {
  max_grade_ = 0;
  clear_has_max_grade();
}
inline ::google::protobuf::int32 mdShopLotteryPossibleGrade::max_grade() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopLotteryPossibleGrade.max_grade)
  return max_grade_;
}
inline void mdShopLotteryPossibleGrade::set_max_grade(::google::protobuf::int32 value) {
  set_has_max_grade();
  max_grade_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopLotteryPossibleGrade.max_grade)
}

// -------------------------------------------------------------------

// mdShopLotterySpecialGrade

// required int32 min_grade = 1;
inline bool mdShopLotterySpecialGrade::has_min_grade() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdShopLotterySpecialGrade::set_has_min_grade() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdShopLotterySpecialGrade::clear_has_min_grade() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdShopLotterySpecialGrade::clear_min_grade() {
  min_grade_ = 0;
  clear_has_min_grade();
}
inline ::google::protobuf::int32 mdShopLotterySpecialGrade::min_grade() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopLotterySpecialGrade.min_grade)
  return min_grade_;
}
inline void mdShopLotterySpecialGrade::set_min_grade(::google::protobuf::int32 value) {
  set_has_min_grade();
  min_grade_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopLotterySpecialGrade.min_grade)
}

// required int32 max_grade = 2;
inline bool mdShopLotterySpecialGrade::has_max_grade() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdShopLotterySpecialGrade::set_has_max_grade() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdShopLotterySpecialGrade::clear_has_max_grade() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdShopLotterySpecialGrade::clear_max_grade() {
  max_grade_ = 0;
  clear_has_max_grade();
}
inline ::google::protobuf::int32 mdShopLotterySpecialGrade::max_grade() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopLotterySpecialGrade.max_grade)
  return max_grade_;
}
inline void mdShopLotterySpecialGrade::set_max_grade(::google::protobuf::int32 value) {
  set_has_max_grade();
  max_grade_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopLotterySpecialGrade.max_grade)
}

// -------------------------------------------------------------------

// mdShopLotteryDailyLimit

// required .b2.protocol.commondata.Shop.DrawPriceType draw_price_type = 1;
inline bool mdShopLotteryDailyLimit::has_draw_price_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdShopLotteryDailyLimit::set_has_draw_price_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdShopLotteryDailyLimit::clear_has_draw_price_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdShopLotteryDailyLimit::clear_draw_price_type() {
  draw_price_type_ = 1;
  clear_has_draw_price_type();
}
inline ::b2::protocol::commondata::Shop_DrawPriceType mdShopLotteryDailyLimit::draw_price_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopLotteryDailyLimit.draw_price_type)
  return static_cast< ::b2::protocol::commondata::Shop_DrawPriceType >(draw_price_type_);
}
inline void mdShopLotteryDailyLimit::set_draw_price_type(::b2::protocol::commondata::Shop_DrawPriceType value) {
  assert(::b2::protocol::commondata::Shop_DrawPriceType_IsValid(value));
  set_has_draw_price_type();
  draw_price_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopLotteryDailyLimit.draw_price_type)
}

// required bool is_continuous = 2;
inline bool mdShopLotteryDailyLimit::has_is_continuous() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdShopLotteryDailyLimit::set_has_is_continuous() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdShopLotteryDailyLimit::clear_has_is_continuous() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdShopLotteryDailyLimit::clear_is_continuous() {
  is_continuous_ = false;
  clear_has_is_continuous();
}
inline bool mdShopLotteryDailyLimit::is_continuous() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopLotteryDailyLimit.is_continuous)
  return is_continuous_;
}
inline void mdShopLotteryDailyLimit::set_is_continuous(bool value) {
  set_has_is_continuous();
  is_continuous_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopLotteryDailyLimit.is_continuous)
}

// required int32 limit_count = 3;
inline bool mdShopLotteryDailyLimit::has_limit_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdShopLotteryDailyLimit::set_has_limit_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdShopLotteryDailyLimit::clear_has_limit_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdShopLotteryDailyLimit::clear_limit_count() {
  limit_count_ = 0;
  clear_has_limit_count();
}
inline ::google::protobuf::int32 mdShopLotteryDailyLimit::limit_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopLotteryDailyLimit.limit_count)
  return limit_count_;
}
inline void mdShopLotteryDailyLimit::set_limit_count(::google::protobuf::int32 value) {
  set_has_limit_count();
  limit_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopLotteryDailyLimit.limit_count)
}

// -------------------------------------------------------------------

// mdShopLotterySale

// required .b2.protocol.commondata.Shop.DrawPriceType draw_price_type = 1;
inline bool mdShopLotterySale::has_draw_price_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdShopLotterySale::set_has_draw_price_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdShopLotterySale::clear_has_draw_price_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdShopLotterySale::clear_draw_price_type() {
  draw_price_type_ = 1;
  clear_has_draw_price_type();
}
inline ::b2::protocol::commondata::Shop_DrawPriceType mdShopLotterySale::draw_price_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopLotterySale.draw_price_type)
  return static_cast< ::b2::protocol::commondata::Shop_DrawPriceType >(draw_price_type_);
}
inline void mdShopLotterySale::set_draw_price_type(::b2::protocol::commondata::Shop_DrawPriceType value) {
  assert(::b2::protocol::commondata::Shop_DrawPriceType_IsValid(value));
  set_has_draw_price_type();
  draw_price_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopLotterySale.draw_price_type)
}

// required bool is_continuous = 2;
inline bool mdShopLotterySale::has_is_continuous() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdShopLotterySale::set_has_is_continuous() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdShopLotterySale::clear_has_is_continuous() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdShopLotterySale::clear_is_continuous() {
  is_continuous_ = false;
  clear_has_is_continuous();
}
inline bool mdShopLotterySale::is_continuous() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopLotterySale.is_continuous)
  return is_continuous_;
}
inline void mdShopLotterySale::set_is_continuous(bool value) {
  set_has_is_continuous();
  is_continuous_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopLotterySale.is_continuous)
}

// required int32 discount_rate = 3;
inline bool mdShopLotterySale::has_discount_rate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdShopLotterySale::set_has_discount_rate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdShopLotterySale::clear_has_discount_rate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdShopLotterySale::clear_discount_rate() {
  discount_rate_ = 0;
  clear_has_discount_rate();
}
inline ::google::protobuf::int32 mdShopLotterySale::discount_rate() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopLotterySale.discount_rate)
  return discount_rate_;
}
inline void mdShopLotterySale::set_discount_rate(::google::protobuf::int32 value) {
  set_has_discount_rate();
  discount_rate_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopLotterySale.discount_rate)
}

// required int64 start_time = 5;
inline bool mdShopLotterySale::has_start_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdShopLotterySale::set_has_start_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdShopLotterySale::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdShopLotterySale::clear_start_time() {
  start_time_ = GOOGLE_LONGLONG(0);
  clear_has_start_time();
}
inline ::google::protobuf::int64 mdShopLotterySale::start_time() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopLotterySale.start_time)
  return start_time_;
}
inline void mdShopLotterySale::set_start_time(::google::protobuf::int64 value) {
  set_has_start_time();
  start_time_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopLotterySale.start_time)
}

// required int64 end_time = 6;
inline bool mdShopLotterySale::has_end_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdShopLotterySale::set_has_end_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdShopLotterySale::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdShopLotterySale::clear_end_time() {
  end_time_ = GOOGLE_LONGLONG(0);
  clear_has_end_time();
}
inline ::google::protobuf::int64 mdShopLotterySale::end_time() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopLotterySale.end_time)
  return end_time_;
}
inline void mdShopLotterySale::set_end_time(::google::protobuf::int64 value) {
  set_has_end_time();
  end_time_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopLotterySale.end_time)
}

// -------------------------------------------------------------------

// mdItemInfo

// required int32 md_template_id = 1;
inline bool mdItemInfo::has_md_template_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdItemInfo::set_has_md_template_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdItemInfo::clear_has_md_template_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdItemInfo::clear_md_template_id() {
  md_template_id_ = 0;
  clear_has_md_template_id();
}
inline ::google::protobuf::int32 mdItemInfo::md_template_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemInfo.md_template_id)
  return md_template_id_;
}
inline void mdItemInfo::set_md_template_id(::google::protobuf::int32 value) {
  set_has_md_template_id();
  md_template_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemInfo.md_template_id)
}

// required .b2.protocol.commondata.GroupPrefix md_group_id = 2;
inline bool mdItemInfo::has_md_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdItemInfo::set_has_md_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdItemInfo::clear_has_md_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdItemInfo::clear_md_group_id() {
  md_group_id_ = 1;
  clear_has_md_group_id();
}
inline ::b2::protocol::commondata::GroupPrefix mdItemInfo::md_group_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemInfo.md_group_id)
  return static_cast< ::b2::protocol::commondata::GroupPrefix >(md_group_id_);
}
inline void mdItemInfo::set_md_group_id(::b2::protocol::commondata::GroupPrefix value) {
  assert(::b2::protocol::commondata::GroupPrefix_IsValid(value));
  set_has_md_group_id();
  md_group_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemInfo.md_group_id)
}

// required int32 md_set_id = 3;
inline bool mdItemInfo::has_md_set_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdItemInfo::set_has_md_set_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdItemInfo::clear_has_md_set_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdItemInfo::clear_md_set_id() {
  md_set_id_ = 0;
  clear_has_md_set_id();
}
inline ::google::protobuf::int32 mdItemInfo::md_set_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemInfo.md_set_id)
  return md_set_id_;
}
inline void mdItemInfo::set_md_set_id(::google::protobuf::int32 value) {
  set_has_md_set_id();
  md_set_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemInfo.md_set_id)
}

// required .b2.protocol.commondata.Item.TYPE md_type = 4;
inline bool mdItemInfo::has_md_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdItemInfo::set_has_md_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdItemInfo::clear_has_md_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdItemInfo::clear_md_type() {
  md_type_ = 1;
  clear_has_md_type();
}
inline ::b2::protocol::commondata::Item_TYPE mdItemInfo::md_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemInfo.md_type)
  return static_cast< ::b2::protocol::commondata::Item_TYPE >(md_type_);
}
inline void mdItemInfo::set_md_type(::b2::protocol::commondata::Item_TYPE value) {
  assert(::b2::protocol::commondata::Item_TYPE_IsValid(value));
  set_has_md_type();
  md_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemInfo.md_type)
}

// required int32 md_grade = 5;
inline bool mdItemInfo::has_md_grade() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdItemInfo::set_has_md_grade() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdItemInfo::clear_has_md_grade() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdItemInfo::clear_md_grade() {
  md_grade_ = 0;
  clear_has_md_grade();
}
inline ::google::protobuf::int32 mdItemInfo::md_grade() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemInfo.md_grade)
  return md_grade_;
}
inline void mdItemInfo::set_md_grade(::google::protobuf::int32 value) {
  set_has_md_grade();
  md_grade_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemInfo.md_grade)
}

// required .b2.protocol.commondata.Inventory.TYPE md_inventory_type = 6;
inline bool mdItemInfo::has_md_inventory_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdItemInfo::set_has_md_inventory_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdItemInfo::clear_has_md_inventory_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdItemInfo::clear_md_inventory_type() {
  md_inventory_type_ = 2;
  clear_has_md_inventory_type();
}
inline ::b2::protocol::commondata::Inventory_TYPE mdItemInfo::md_inventory_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemInfo.md_inventory_type)
  return static_cast< ::b2::protocol::commondata::Inventory_TYPE >(md_inventory_type_);
}
inline void mdItemInfo::set_md_inventory_type(::b2::protocol::commondata::Inventory_TYPE value) {
  assert(::b2::protocol::commondata::Inventory_TYPE_IsValid(value));
  set_has_md_inventory_type();
  md_inventory_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemInfo.md_inventory_type)
}

// required .b2.protocol.commondata.EquipPosition md_equip_position = 7;
inline bool mdItemInfo::has_md_equip_position() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mdItemInfo::set_has_md_equip_position() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mdItemInfo::clear_has_md_equip_position() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mdItemInfo::clear_md_equip_position() {
  md_equip_position_ = 0;
  clear_has_md_equip_position();
}
inline ::b2::protocol::commondata::EquipPosition mdItemInfo::md_equip_position() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemInfo.md_equip_position)
  return static_cast< ::b2::protocol::commondata::EquipPosition >(md_equip_position_);
}
inline void mdItemInfo::set_md_equip_position(::b2::protocol::commondata::EquipPosition value) {
  assert(::b2::protocol::commondata::EquipPosition_IsValid(value));
  set_has_md_equip_position();
  md_equip_position_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemInfo.md_equip_position)
}

// required int32 md_max_levelup = 8;
inline bool mdItemInfo::has_md_max_levelup() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void mdItemInfo::set_has_md_max_levelup() {
  _has_bits_[0] |= 0x00000080u;
}
inline void mdItemInfo::clear_has_md_max_levelup() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void mdItemInfo::clear_md_max_levelup() {
  md_max_levelup_ = 0;
  clear_has_md_max_levelup();
}
inline ::google::protobuf::int32 mdItemInfo::md_max_levelup() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemInfo.md_max_levelup)
  return md_max_levelup_;
}
inline void mdItemInfo::set_md_max_levelup(::google::protobuf::int32 value) {
  set_has_md_max_levelup();
  md_max_levelup_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemInfo.md_max_levelup)
}

// required int32 md_main_attribute = 9;
inline bool mdItemInfo::has_md_main_attribute() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void mdItemInfo::set_has_md_main_attribute() {
  _has_bits_[0] |= 0x00000100u;
}
inline void mdItemInfo::clear_has_md_main_attribute() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void mdItemInfo::clear_md_main_attribute() {
  md_main_attribute_ = 0;
  clear_has_md_main_attribute();
}
inline ::google::protobuf::int32 mdItemInfo::md_main_attribute() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemInfo.md_main_attribute)
  return md_main_attribute_;
}
inline void mdItemInfo::set_md_main_attribute(::google::protobuf::int32 value) {
  set_has_md_main_attribute();
  md_main_attribute_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemInfo.md_main_attribute)
}

// required float md_level_factor = 10;
inline bool mdItemInfo::has_md_level_factor() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void mdItemInfo::set_has_md_level_factor() {
  _has_bits_[0] |= 0x00000200u;
}
inline void mdItemInfo::clear_has_md_level_factor() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void mdItemInfo::clear_md_level_factor() {
  md_level_factor_ = 0;
  clear_has_md_level_factor();
}
inline float mdItemInfo::md_level_factor() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemInfo.md_level_factor)
  return md_level_factor_;
}
inline void mdItemInfo::set_md_level_factor(float value) {
  set_has_md_level_factor();
  md_level_factor_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemInfo.md_level_factor)
}

// required int32 md_unique_option_id1 = 11;
inline bool mdItemInfo::has_md_unique_option_id1() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void mdItemInfo::set_has_md_unique_option_id1() {
  _has_bits_[0] |= 0x00000400u;
}
inline void mdItemInfo::clear_has_md_unique_option_id1() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void mdItemInfo::clear_md_unique_option_id1() {
  md_unique_option_id1_ = 0;
  clear_has_md_unique_option_id1();
}
inline ::google::protobuf::int32 mdItemInfo::md_unique_option_id1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemInfo.md_unique_option_id1)
  return md_unique_option_id1_;
}
inline void mdItemInfo::set_md_unique_option_id1(::google::protobuf::int32 value) {
  set_has_md_unique_option_id1();
  md_unique_option_id1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemInfo.md_unique_option_id1)
}

// required float md_unique_option_value1 = 12;
inline bool mdItemInfo::has_md_unique_option_value1() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void mdItemInfo::set_has_md_unique_option_value1() {
  _has_bits_[0] |= 0x00000800u;
}
inline void mdItemInfo::clear_has_md_unique_option_value1() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void mdItemInfo::clear_md_unique_option_value1() {
  md_unique_option_value1_ = 0;
  clear_has_md_unique_option_value1();
}
inline float mdItemInfo::md_unique_option_value1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemInfo.md_unique_option_value1)
  return md_unique_option_value1_;
}
inline void mdItemInfo::set_md_unique_option_value1(float value) {
  set_has_md_unique_option_value1();
  md_unique_option_value1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemInfo.md_unique_option_value1)
}

// required int32 md_unique_option_id2 = 13;
inline bool mdItemInfo::has_md_unique_option_id2() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void mdItemInfo::set_has_md_unique_option_id2() {
  _has_bits_[0] |= 0x00001000u;
}
inline void mdItemInfo::clear_has_md_unique_option_id2() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void mdItemInfo::clear_md_unique_option_id2() {
  md_unique_option_id2_ = 0;
  clear_has_md_unique_option_id2();
}
inline ::google::protobuf::int32 mdItemInfo::md_unique_option_id2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemInfo.md_unique_option_id2)
  return md_unique_option_id2_;
}
inline void mdItemInfo::set_md_unique_option_id2(::google::protobuf::int32 value) {
  set_has_md_unique_option_id2();
  md_unique_option_id2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemInfo.md_unique_option_id2)
}

// required float md_unique_option_value2 = 14;
inline bool mdItemInfo::has_md_unique_option_value2() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void mdItemInfo::set_has_md_unique_option_value2() {
  _has_bits_[0] |= 0x00002000u;
}
inline void mdItemInfo::clear_has_md_unique_option_value2() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void mdItemInfo::clear_md_unique_option_value2() {
  md_unique_option_value2_ = 0;
  clear_has_md_unique_option_value2();
}
inline float mdItemInfo::md_unique_option_value2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemInfo.md_unique_option_value2)
  return md_unique_option_value2_;
}
inline void mdItemInfo::set_md_unique_option_value2(float value) {
  set_has_md_unique_option_value2();
  md_unique_option_value2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemInfo.md_unique_option_value2)
}

// required int32 md_unique_option_id3 = 15;
inline bool mdItemInfo::has_md_unique_option_id3() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void mdItemInfo::set_has_md_unique_option_id3() {
  _has_bits_[0] |= 0x00004000u;
}
inline void mdItemInfo::clear_has_md_unique_option_id3() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void mdItemInfo::clear_md_unique_option_id3() {
  md_unique_option_id3_ = 0;
  clear_has_md_unique_option_id3();
}
inline ::google::protobuf::int32 mdItemInfo::md_unique_option_id3() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemInfo.md_unique_option_id3)
  return md_unique_option_id3_;
}
inline void mdItemInfo::set_md_unique_option_id3(::google::protobuf::int32 value) {
  set_has_md_unique_option_id3();
  md_unique_option_id3_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemInfo.md_unique_option_id3)
}

// required float md_unique_option_value3 = 16;
inline bool mdItemInfo::has_md_unique_option_value3() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void mdItemInfo::set_has_md_unique_option_value3() {
  _has_bits_[0] |= 0x00008000u;
}
inline void mdItemInfo::clear_has_md_unique_option_value3() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void mdItemInfo::clear_md_unique_option_value3() {
  md_unique_option_value3_ = 0;
  clear_has_md_unique_option_value3();
}
inline float mdItemInfo::md_unique_option_value3() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemInfo.md_unique_option_value3)
  return md_unique_option_value3_;
}
inline void mdItemInfo::set_md_unique_option_value3(float value) {
  set_has_md_unique_option_value3();
  md_unique_option_value3_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemInfo.md_unique_option_value3)
}

// required int32 md_unique_option_id4 = 17;
inline bool mdItemInfo::has_md_unique_option_id4() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void mdItemInfo::set_has_md_unique_option_id4() {
  _has_bits_[0] |= 0x00010000u;
}
inline void mdItemInfo::clear_has_md_unique_option_id4() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void mdItemInfo::clear_md_unique_option_id4() {
  md_unique_option_id4_ = 0;
  clear_has_md_unique_option_id4();
}
inline ::google::protobuf::int32 mdItemInfo::md_unique_option_id4() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemInfo.md_unique_option_id4)
  return md_unique_option_id4_;
}
inline void mdItemInfo::set_md_unique_option_id4(::google::protobuf::int32 value) {
  set_has_md_unique_option_id4();
  md_unique_option_id4_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemInfo.md_unique_option_id4)
}

// required float md_unique_option_value4 = 18;
inline bool mdItemInfo::has_md_unique_option_value4() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void mdItemInfo::set_has_md_unique_option_value4() {
  _has_bits_[0] |= 0x00020000u;
}
inline void mdItemInfo::clear_has_md_unique_option_value4() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void mdItemInfo::clear_md_unique_option_value4() {
  md_unique_option_value4_ = 0;
  clear_has_md_unique_option_value4();
}
inline float mdItemInfo::md_unique_option_value4() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemInfo.md_unique_option_value4)
  return md_unique_option_value4_;
}
inline void mdItemInfo::set_md_unique_option_value4(float value) {
  set_has_md_unique_option_value4();
  md_unique_option_value4_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemInfo.md_unique_option_value4)
}

// required int32 md_unique_skill_id = 19;
inline bool mdItemInfo::has_md_unique_skill_id() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void mdItemInfo::set_has_md_unique_skill_id() {
  _has_bits_[0] |= 0x00040000u;
}
inline void mdItemInfo::clear_has_md_unique_skill_id() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void mdItemInfo::clear_md_unique_skill_id() {
  md_unique_skill_id_ = 0;
  clear_has_md_unique_skill_id();
}
inline ::google::protobuf::int32 mdItemInfo::md_unique_skill_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemInfo.md_unique_skill_id)
  return md_unique_skill_id_;
}
inline void mdItemInfo::set_md_unique_skill_id(::google::protobuf::int32 value) {
  set_has_md_unique_skill_id();
  md_unique_skill_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemInfo.md_unique_skill_id)
}

// required int32 seal_slot = 20;
inline bool mdItemInfo::has_seal_slot() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void mdItemInfo::set_has_seal_slot() {
  _has_bits_[0] |= 0x00080000u;
}
inline void mdItemInfo::clear_has_seal_slot() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void mdItemInfo::clear_seal_slot() {
  seal_slot_ = 0;
  clear_has_seal_slot();
}
inline ::google::protobuf::int32 mdItemInfo::seal_slot() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemInfo.seal_slot)
  return seal_slot_;
}
inline void mdItemInfo::set_seal_slot(::google::protobuf::int32 value) {
  set_has_seal_slot();
  seal_slot_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemInfo.seal_slot)
}

// required int32 seal_slot_open = 21;
inline bool mdItemInfo::has_seal_slot_open() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void mdItemInfo::set_has_seal_slot_open() {
  _has_bits_[0] |= 0x00100000u;
}
inline void mdItemInfo::clear_has_seal_slot_open() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void mdItemInfo::clear_seal_slot_open() {
  seal_slot_open_ = 0;
  clear_has_seal_slot_open();
}
inline ::google::protobuf::int32 mdItemInfo::seal_slot_open() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemInfo.seal_slot_open)
  return seal_slot_open_;
}
inline void mdItemInfo::set_seal_slot_open(::google::protobuf::int32 value) {
  set_has_seal_slot_open();
  seal_slot_open_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemInfo.seal_slot_open)
}

// required int32 md_max_grade = 22;
inline bool mdItemInfo::has_md_max_grade() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void mdItemInfo::set_has_md_max_grade() {
  _has_bits_[0] |= 0x00200000u;
}
inline void mdItemInfo::clear_has_md_max_grade() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void mdItemInfo::clear_md_max_grade() {
  md_max_grade_ = 0;
  clear_has_md_max_grade();
}
inline ::google::protobuf::int32 mdItemInfo::md_max_grade() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemInfo.md_max_grade)
  return md_max_grade_;
}
inline void mdItemInfo::set_md_max_grade(::google::protobuf::int32 value) {
  set_has_md_max_grade();
  md_max_grade_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemInfo.md_max_grade)
}

// required int32 md_random_option_count = 23;
inline bool mdItemInfo::has_md_random_option_count() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void mdItemInfo::set_has_md_random_option_count() {
  _has_bits_[0] |= 0x00400000u;
}
inline void mdItemInfo::clear_has_md_random_option_count() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void mdItemInfo::clear_md_random_option_count() {
  md_random_option_count_ = 0;
  clear_has_md_random_option_count();
}
inline ::google::protobuf::int32 mdItemInfo::md_random_option_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemInfo.md_random_option_count)
  return md_random_option_count_;
}
inline void mdItemInfo::set_md_random_option_count(::google::protobuf::int32 value) {
  set_has_md_random_option_count();
  md_random_option_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemInfo.md_random_option_count)
}

// required int32 md_next_grade_template_id = 24;
inline bool mdItemInfo::has_md_next_grade_template_id() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void mdItemInfo::set_has_md_next_grade_template_id() {
  _has_bits_[0] |= 0x00800000u;
}
inline void mdItemInfo::clear_has_md_next_grade_template_id() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void mdItemInfo::clear_md_next_grade_template_id() {
  md_next_grade_template_id_ = 0;
  clear_has_md_next_grade_template_id();
}
inline ::google::protobuf::int32 mdItemInfo::md_next_grade_template_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemInfo.md_next_grade_template_id)
  return md_next_grade_template_id_;
}
inline void mdItemInfo::set_md_next_grade_template_id(::google::protobuf::int32 value) {
  set_has_md_next_grade_template_id();
  md_next_grade_template_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemInfo.md_next_grade_template_id)
}

// required int32 md_buy_price = 25;
inline bool mdItemInfo::has_md_buy_price() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void mdItemInfo::set_has_md_buy_price() {
  _has_bits_[0] |= 0x01000000u;
}
inline void mdItemInfo::clear_has_md_buy_price() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void mdItemInfo::clear_md_buy_price() {
  md_buy_price_ = 0;
  clear_has_md_buy_price();
}
inline ::google::protobuf::int32 mdItemInfo::md_buy_price() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemInfo.md_buy_price)
  return md_buy_price_;
}
inline void mdItemInfo::set_md_buy_price(::google::protobuf::int32 value) {
  set_has_md_buy_price();
  md_buy_price_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemInfo.md_buy_price)
}

// required int32 md_sell_price = 26;
inline bool mdItemInfo::has_md_sell_price() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void mdItemInfo::set_has_md_sell_price() {
  _has_bits_[0] |= 0x02000000u;
}
inline void mdItemInfo::clear_has_md_sell_price() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void mdItemInfo::clear_md_sell_price() {
  md_sell_price_ = 0;
  clear_has_md_sell_price();
}
inline ::google::protobuf::int32 mdItemInfo::md_sell_price() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemInfo.md_sell_price)
  return md_sell_price_;
}
inline void mdItemInfo::set_md_sell_price(::google::protobuf::int32 value) {
  set_has_md_sell_price();
  md_sell_price_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemInfo.md_sell_price)
}

// required bool is_stackable = 27;
inline bool mdItemInfo::has_is_stackable() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void mdItemInfo::set_has_is_stackable() {
  _has_bits_[0] |= 0x04000000u;
}
inline void mdItemInfo::clear_has_is_stackable() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void mdItemInfo::clear_is_stackable() {
  is_stackable_ = false;
  clear_has_is_stackable();
}
inline bool mdItemInfo::is_stackable() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemInfo.is_stackable)
  return is_stackable_;
}
inline void mdItemInfo::set_is_stackable(bool value) {
  set_has_is_stackable();
  is_stackable_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemInfo.is_stackable)
}

// required bool is_saleable = 28;
inline bool mdItemInfo::has_is_saleable() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void mdItemInfo::set_has_is_saleable() {
  _has_bits_[0] |= 0x08000000u;
}
inline void mdItemInfo::clear_has_is_saleable() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void mdItemInfo::clear_is_saleable() {
  is_saleable_ = false;
  clear_has_is_saleable();
}
inline bool mdItemInfo::is_saleable() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemInfo.is_saleable)
  return is_saleable_;
}
inline void mdItemInfo::set_is_saleable(bool value) {
  set_has_is_saleable();
  is_saleable_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemInfo.is_saleable)
}

// required bool is_equipable = 29;
inline bool mdItemInfo::has_is_equipable() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void mdItemInfo::set_has_is_equipable() {
  _has_bits_[0] |= 0x10000000u;
}
inline void mdItemInfo::clear_has_is_equipable() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void mdItemInfo::clear_is_equipable() {
  is_equipable_ = false;
  clear_has_is_equipable();
}
inline bool mdItemInfo::is_equipable() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemInfo.is_equipable)
  return is_equipable_;
}
inline void mdItemInfo::set_is_equipable(bool value) {
  set_has_is_equipable();
  is_equipable_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemInfo.is_equipable)
}

// required bool is_levelupable = 30;
inline bool mdItemInfo::has_is_levelupable() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void mdItemInfo::set_has_is_levelupable() {
  _has_bits_[0] |= 0x20000000u;
}
inline void mdItemInfo::clear_has_is_levelupable() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void mdItemInfo::clear_is_levelupable() {
  is_levelupable_ = false;
  clear_has_is_levelupable();
}
inline bool mdItemInfo::is_levelupable() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemInfo.is_levelupable)
  return is_levelupable_;
}
inline void mdItemInfo::set_is_levelupable(bool value) {
  set_has_is_levelupable();
  is_levelupable_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemInfo.is_levelupable)
}

// required bool is_enhanceable = 31;
inline bool mdItemInfo::has_is_enhanceable() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void mdItemInfo::set_has_is_enhanceable() {
  _has_bits_[0] |= 0x40000000u;
}
inline void mdItemInfo::clear_has_is_enhanceable() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void mdItemInfo::clear_is_enhanceable() {
  is_enhanceable_ = false;
  clear_has_is_enhanceable();
}
inline bool mdItemInfo::is_enhanceable() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemInfo.is_enhanceable)
  return is_enhanceable_;
}
inline void mdItemInfo::set_is_enhanceable(bool value) {
  set_has_is_enhanceable();
  is_enhanceable_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemInfo.is_enhanceable)
}

// required bool is_upgradable = 32;
inline bool mdItemInfo::has_is_upgradable() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void mdItemInfo::set_has_is_upgradable() {
  _has_bits_[0] |= 0x80000000u;
}
inline void mdItemInfo::clear_has_is_upgradable() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void mdItemInfo::clear_is_upgradable() {
  is_upgradable_ = false;
  clear_has_is_upgradable();
}
inline bool mdItemInfo::is_upgradable() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemInfo.is_upgradable)
  return is_upgradable_;
}
inline void mdItemInfo::set_is_upgradable(bool value) {
  set_has_is_upgradable();
  is_upgradable_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemInfo.is_upgradable)
}

// required bool is_composable = 33;
inline bool mdItemInfo::has_is_composable() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void mdItemInfo::set_has_is_composable() {
  _has_bits_[1] |= 0x00000001u;
}
inline void mdItemInfo::clear_has_is_composable() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void mdItemInfo::clear_is_composable() {
  is_composable_ = false;
  clear_has_is_composable();
}
inline bool mdItemInfo::is_composable() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemInfo.is_composable)
  return is_composable_;
}
inline void mdItemInfo::set_is_composable(bool value) {
  set_has_is_composable();
  is_composable_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemInfo.is_composable)
}

// required bool is_surpassable = 34;
inline bool mdItemInfo::has_is_surpassable() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void mdItemInfo::set_has_is_surpassable() {
  _has_bits_[1] |= 0x00000002u;
}
inline void mdItemInfo::clear_has_is_surpassable() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void mdItemInfo::clear_is_surpassable() {
  is_surpassable_ = false;
  clear_has_is_surpassable();
}
inline bool mdItemInfo::is_surpassable() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemInfo.is_surpassable)
  return is_surpassable_;
}
inline void mdItemInfo::set_is_surpassable(bool value) {
  set_has_is_surpassable();
  is_surpassable_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemInfo.is_surpassable)
}

// required bool is_sealable = 35;
inline bool mdItemInfo::has_is_sealable() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void mdItemInfo::set_has_is_sealable() {
  _has_bits_[1] |= 0x00000004u;
}
inline void mdItemInfo::clear_has_is_sealable() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void mdItemInfo::clear_is_sealable() {
  is_sealable_ = false;
  clear_has_is_sealable();
}
inline bool mdItemInfo::is_sealable() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemInfo.is_sealable)
  return is_sealable_;
}
inline void mdItemInfo::set_is_sealable(bool value) {
  set_has_is_sealable();
  is_sealable_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemInfo.is_sealable)
}

// -------------------------------------------------------------------

// mdCostumeInfo

// required int32 md_template_id = 1;
inline bool mdCostumeInfo::has_md_template_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdCostumeInfo::set_has_md_template_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdCostumeInfo::clear_has_md_template_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdCostumeInfo::clear_md_template_id() {
  md_template_id_ = 0;
  clear_has_md_template_id();
}
inline ::google::protobuf::int32 mdCostumeInfo::md_template_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCostumeInfo.md_template_id)
  return md_template_id_;
}
inline void mdCostumeInfo::set_md_template_id(::google::protobuf::int32 value) {
  set_has_md_template_id();
  md_template_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdCostumeInfo.md_template_id)
}

// required .b2.protocol.commondata.GroupPrefix md_group_id = 2;
inline bool mdCostumeInfo::has_md_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdCostumeInfo::set_has_md_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdCostumeInfo::clear_has_md_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdCostumeInfo::clear_md_group_id() {
  md_group_id_ = 1;
  clear_has_md_group_id();
}
inline ::b2::protocol::commondata::GroupPrefix mdCostumeInfo::md_group_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCostumeInfo.md_group_id)
  return static_cast< ::b2::protocol::commondata::GroupPrefix >(md_group_id_);
}
inline void mdCostumeInfo::set_md_group_id(::b2::protocol::commondata::GroupPrefix value) {
  assert(::b2::protocol::commondata::GroupPrefix_IsValid(value));
  set_has_md_group_id();
  md_group_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdCostumeInfo.md_group_id)
}

// required int32 md_set_id = 3;
inline bool mdCostumeInfo::has_md_set_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdCostumeInfo::set_has_md_set_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdCostumeInfo::clear_has_md_set_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdCostumeInfo::clear_md_set_id() {
  md_set_id_ = 0;
  clear_has_md_set_id();
}
inline ::google::protobuf::int32 mdCostumeInfo::md_set_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCostumeInfo.md_set_id)
  return md_set_id_;
}
inline void mdCostumeInfo::set_md_set_id(::google::protobuf::int32 value) {
  set_has_md_set_id();
  md_set_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdCostumeInfo.md_set_id)
}

// required .b2.protocol.commondata.Costume.TYPE md_type = 4;
inline bool mdCostumeInfo::has_md_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdCostumeInfo::set_has_md_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdCostumeInfo::clear_has_md_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdCostumeInfo::clear_md_type() {
  md_type_ = 201;
  clear_has_md_type();
}
inline ::b2::protocol::commondata::Costume_TYPE mdCostumeInfo::md_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCostumeInfo.md_type)
  return static_cast< ::b2::protocol::commondata::Costume_TYPE >(md_type_);
}
inline void mdCostumeInfo::set_md_type(::b2::protocol::commondata::Costume_TYPE value) {
  assert(::b2::protocol::commondata::Costume_TYPE_IsValid(value));
  set_has_md_type();
  md_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdCostumeInfo.md_type)
}

// required int32 md_grade = 5;
inline bool mdCostumeInfo::has_md_grade() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdCostumeInfo::set_has_md_grade() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdCostumeInfo::clear_has_md_grade() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdCostumeInfo::clear_md_grade() {
  md_grade_ = 0;
  clear_has_md_grade();
}
inline ::google::protobuf::int32 mdCostumeInfo::md_grade() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCostumeInfo.md_grade)
  return md_grade_;
}
inline void mdCostumeInfo::set_md_grade(::google::protobuf::int32 value) {
  set_has_md_grade();
  md_grade_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdCostumeInfo.md_grade)
}

// required .b2.protocol.commondata.Inventory.TYPE md_inventory_type = 6;
inline bool mdCostumeInfo::has_md_inventory_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdCostumeInfo::set_has_md_inventory_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdCostumeInfo::clear_has_md_inventory_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdCostumeInfo::clear_md_inventory_type() {
  md_inventory_type_ = 2;
  clear_has_md_inventory_type();
}
inline ::b2::protocol::commondata::Inventory_TYPE mdCostumeInfo::md_inventory_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCostumeInfo.md_inventory_type)
  return static_cast< ::b2::protocol::commondata::Inventory_TYPE >(md_inventory_type_);
}
inline void mdCostumeInfo::set_md_inventory_type(::b2::protocol::commondata::Inventory_TYPE value) {
  assert(::b2::protocol::commondata::Inventory_TYPE_IsValid(value));
  set_has_md_inventory_type();
  md_inventory_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdCostumeInfo.md_inventory_type)
}

// required .b2.protocol.commondata.EquipPosition md_equip_position = 7;
inline bool mdCostumeInfo::has_md_equip_position() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mdCostumeInfo::set_has_md_equip_position() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mdCostumeInfo::clear_has_md_equip_position() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mdCostumeInfo::clear_md_equip_position() {
  md_equip_position_ = 0;
  clear_has_md_equip_position();
}
inline ::b2::protocol::commondata::EquipPosition mdCostumeInfo::md_equip_position() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCostumeInfo.md_equip_position)
  return static_cast< ::b2::protocol::commondata::EquipPosition >(md_equip_position_);
}
inline void mdCostumeInfo::set_md_equip_position(::b2::protocol::commondata::EquipPosition value) {
  assert(::b2::protocol::commondata::EquipPosition_IsValid(value));
  set_has_md_equip_position();
  md_equip_position_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdCostumeInfo.md_equip_position)
}

// required int32 md_max_levelup = 8;
inline bool mdCostumeInfo::has_md_max_levelup() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void mdCostumeInfo::set_has_md_max_levelup() {
  _has_bits_[0] |= 0x00000080u;
}
inline void mdCostumeInfo::clear_has_md_max_levelup() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void mdCostumeInfo::clear_md_max_levelup() {
  md_max_levelup_ = 0;
  clear_has_md_max_levelup();
}
inline ::google::protobuf::int32 mdCostumeInfo::md_max_levelup() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCostumeInfo.md_max_levelup)
  return md_max_levelup_;
}
inline void mdCostumeInfo::set_md_max_levelup(::google::protobuf::int32 value) {
  set_has_md_max_levelup();
  md_max_levelup_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdCostumeInfo.md_max_levelup)
}

// required int32 md_main_attribute = 9;
inline bool mdCostumeInfo::has_md_main_attribute() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void mdCostumeInfo::set_has_md_main_attribute() {
  _has_bits_[0] |= 0x00000100u;
}
inline void mdCostumeInfo::clear_has_md_main_attribute() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void mdCostumeInfo::clear_md_main_attribute() {
  md_main_attribute_ = 0;
  clear_has_md_main_attribute();
}
inline ::google::protobuf::int32 mdCostumeInfo::md_main_attribute() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCostumeInfo.md_main_attribute)
  return md_main_attribute_;
}
inline void mdCostumeInfo::set_md_main_attribute(::google::protobuf::int32 value) {
  set_has_md_main_attribute();
  md_main_attribute_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdCostumeInfo.md_main_attribute)
}

// required float md_level_factor = 10;
inline bool mdCostumeInfo::has_md_level_factor() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void mdCostumeInfo::set_has_md_level_factor() {
  _has_bits_[0] |= 0x00000200u;
}
inline void mdCostumeInfo::clear_has_md_level_factor() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void mdCostumeInfo::clear_md_level_factor() {
  md_level_factor_ = 0;
  clear_has_md_level_factor();
}
inline float mdCostumeInfo::md_level_factor() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCostumeInfo.md_level_factor)
  return md_level_factor_;
}
inline void mdCostumeInfo::set_md_level_factor(float value) {
  set_has_md_level_factor();
  md_level_factor_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdCostumeInfo.md_level_factor)
}

// required int32 md_unique_option_id1 = 11;
inline bool mdCostumeInfo::has_md_unique_option_id1() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void mdCostumeInfo::set_has_md_unique_option_id1() {
  _has_bits_[0] |= 0x00000400u;
}
inline void mdCostumeInfo::clear_has_md_unique_option_id1() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void mdCostumeInfo::clear_md_unique_option_id1() {
  md_unique_option_id1_ = 0;
  clear_has_md_unique_option_id1();
}
inline ::google::protobuf::int32 mdCostumeInfo::md_unique_option_id1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCostumeInfo.md_unique_option_id1)
  return md_unique_option_id1_;
}
inline void mdCostumeInfo::set_md_unique_option_id1(::google::protobuf::int32 value) {
  set_has_md_unique_option_id1();
  md_unique_option_id1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdCostumeInfo.md_unique_option_id1)
}

// required float md_unique_option_value1 = 12;
inline bool mdCostumeInfo::has_md_unique_option_value1() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void mdCostumeInfo::set_has_md_unique_option_value1() {
  _has_bits_[0] |= 0x00000800u;
}
inline void mdCostumeInfo::clear_has_md_unique_option_value1() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void mdCostumeInfo::clear_md_unique_option_value1() {
  md_unique_option_value1_ = 0;
  clear_has_md_unique_option_value1();
}
inline float mdCostumeInfo::md_unique_option_value1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCostumeInfo.md_unique_option_value1)
  return md_unique_option_value1_;
}
inline void mdCostumeInfo::set_md_unique_option_value1(float value) {
  set_has_md_unique_option_value1();
  md_unique_option_value1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdCostumeInfo.md_unique_option_value1)
}

// required int32 md_unique_option_id2 = 13;
inline bool mdCostumeInfo::has_md_unique_option_id2() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void mdCostumeInfo::set_has_md_unique_option_id2() {
  _has_bits_[0] |= 0x00001000u;
}
inline void mdCostumeInfo::clear_has_md_unique_option_id2() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void mdCostumeInfo::clear_md_unique_option_id2() {
  md_unique_option_id2_ = 0;
  clear_has_md_unique_option_id2();
}
inline ::google::protobuf::int32 mdCostumeInfo::md_unique_option_id2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCostumeInfo.md_unique_option_id2)
  return md_unique_option_id2_;
}
inline void mdCostumeInfo::set_md_unique_option_id2(::google::protobuf::int32 value) {
  set_has_md_unique_option_id2();
  md_unique_option_id2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdCostumeInfo.md_unique_option_id2)
}

// required float md_unique_option_value2 = 14;
inline bool mdCostumeInfo::has_md_unique_option_value2() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void mdCostumeInfo::set_has_md_unique_option_value2() {
  _has_bits_[0] |= 0x00002000u;
}
inline void mdCostumeInfo::clear_has_md_unique_option_value2() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void mdCostumeInfo::clear_md_unique_option_value2() {
  md_unique_option_value2_ = 0;
  clear_has_md_unique_option_value2();
}
inline float mdCostumeInfo::md_unique_option_value2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCostumeInfo.md_unique_option_value2)
  return md_unique_option_value2_;
}
inline void mdCostumeInfo::set_md_unique_option_value2(float value) {
  set_has_md_unique_option_value2();
  md_unique_option_value2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdCostumeInfo.md_unique_option_value2)
}

// required int32 md_unique_option_id3 = 15;
inline bool mdCostumeInfo::has_md_unique_option_id3() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void mdCostumeInfo::set_has_md_unique_option_id3() {
  _has_bits_[0] |= 0x00004000u;
}
inline void mdCostumeInfo::clear_has_md_unique_option_id3() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void mdCostumeInfo::clear_md_unique_option_id3() {
  md_unique_option_id3_ = 0;
  clear_has_md_unique_option_id3();
}
inline ::google::protobuf::int32 mdCostumeInfo::md_unique_option_id3() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCostumeInfo.md_unique_option_id3)
  return md_unique_option_id3_;
}
inline void mdCostumeInfo::set_md_unique_option_id3(::google::protobuf::int32 value) {
  set_has_md_unique_option_id3();
  md_unique_option_id3_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdCostumeInfo.md_unique_option_id3)
}

// required float md_unique_option_value3 = 16;
inline bool mdCostumeInfo::has_md_unique_option_value3() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void mdCostumeInfo::set_has_md_unique_option_value3() {
  _has_bits_[0] |= 0x00008000u;
}
inline void mdCostumeInfo::clear_has_md_unique_option_value3() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void mdCostumeInfo::clear_md_unique_option_value3() {
  md_unique_option_value3_ = 0;
  clear_has_md_unique_option_value3();
}
inline float mdCostumeInfo::md_unique_option_value3() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCostumeInfo.md_unique_option_value3)
  return md_unique_option_value3_;
}
inline void mdCostumeInfo::set_md_unique_option_value3(float value) {
  set_has_md_unique_option_value3();
  md_unique_option_value3_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdCostumeInfo.md_unique_option_value3)
}

// required int32 md_unique_option_id4 = 17;
inline bool mdCostumeInfo::has_md_unique_option_id4() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void mdCostumeInfo::set_has_md_unique_option_id4() {
  _has_bits_[0] |= 0x00010000u;
}
inline void mdCostumeInfo::clear_has_md_unique_option_id4() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void mdCostumeInfo::clear_md_unique_option_id4() {
  md_unique_option_id4_ = 0;
  clear_has_md_unique_option_id4();
}
inline ::google::protobuf::int32 mdCostumeInfo::md_unique_option_id4() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCostumeInfo.md_unique_option_id4)
  return md_unique_option_id4_;
}
inline void mdCostumeInfo::set_md_unique_option_id4(::google::protobuf::int32 value) {
  set_has_md_unique_option_id4();
  md_unique_option_id4_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdCostumeInfo.md_unique_option_id4)
}

// required float md_unique_option_value4 = 18;
inline bool mdCostumeInfo::has_md_unique_option_value4() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void mdCostumeInfo::set_has_md_unique_option_value4() {
  _has_bits_[0] |= 0x00020000u;
}
inline void mdCostumeInfo::clear_has_md_unique_option_value4() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void mdCostumeInfo::clear_md_unique_option_value4() {
  md_unique_option_value4_ = 0;
  clear_has_md_unique_option_value4();
}
inline float mdCostumeInfo::md_unique_option_value4() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCostumeInfo.md_unique_option_value4)
  return md_unique_option_value4_;
}
inline void mdCostumeInfo::set_md_unique_option_value4(float value) {
  set_has_md_unique_option_value4();
  md_unique_option_value4_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdCostumeInfo.md_unique_option_value4)
}

// required int32 md_unique_skill_id = 19;
inline bool mdCostumeInfo::has_md_unique_skill_id() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void mdCostumeInfo::set_has_md_unique_skill_id() {
  _has_bits_[0] |= 0x00040000u;
}
inline void mdCostumeInfo::clear_has_md_unique_skill_id() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void mdCostumeInfo::clear_md_unique_skill_id() {
  md_unique_skill_id_ = 0;
  clear_has_md_unique_skill_id();
}
inline ::google::protobuf::int32 mdCostumeInfo::md_unique_skill_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCostumeInfo.md_unique_skill_id)
  return md_unique_skill_id_;
}
inline void mdCostumeInfo::set_md_unique_skill_id(::google::protobuf::int32 value) {
  set_has_md_unique_skill_id();
  md_unique_skill_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdCostumeInfo.md_unique_skill_id)
}

// required int32 md_max_grade = 20;
inline bool mdCostumeInfo::has_md_max_grade() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void mdCostumeInfo::set_has_md_max_grade() {
  _has_bits_[0] |= 0x00080000u;
}
inline void mdCostumeInfo::clear_has_md_max_grade() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void mdCostumeInfo::clear_md_max_grade() {
  md_max_grade_ = 0;
  clear_has_md_max_grade();
}
inline ::google::protobuf::int32 mdCostumeInfo::md_max_grade() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCostumeInfo.md_max_grade)
  return md_max_grade_;
}
inline void mdCostumeInfo::set_md_max_grade(::google::protobuf::int32 value) {
  set_has_md_max_grade();
  md_max_grade_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdCostumeInfo.md_max_grade)
}

// required int32 md_random_option_count = 21;
inline bool mdCostumeInfo::has_md_random_option_count() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void mdCostumeInfo::set_has_md_random_option_count() {
  _has_bits_[0] |= 0x00100000u;
}
inline void mdCostumeInfo::clear_has_md_random_option_count() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void mdCostumeInfo::clear_md_random_option_count() {
  md_random_option_count_ = 0;
  clear_has_md_random_option_count();
}
inline ::google::protobuf::int32 mdCostumeInfo::md_random_option_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCostumeInfo.md_random_option_count)
  return md_random_option_count_;
}
inline void mdCostumeInfo::set_md_random_option_count(::google::protobuf::int32 value) {
  set_has_md_random_option_count();
  md_random_option_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdCostumeInfo.md_random_option_count)
}

// required int32 md_next_grade_template_id = 22;
inline bool mdCostumeInfo::has_md_next_grade_template_id() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void mdCostumeInfo::set_has_md_next_grade_template_id() {
  _has_bits_[0] |= 0x00200000u;
}
inline void mdCostumeInfo::clear_has_md_next_grade_template_id() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void mdCostumeInfo::clear_md_next_grade_template_id() {
  md_next_grade_template_id_ = 0;
  clear_has_md_next_grade_template_id();
}
inline ::google::protobuf::int32 mdCostumeInfo::md_next_grade_template_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCostumeInfo.md_next_grade_template_id)
  return md_next_grade_template_id_;
}
inline void mdCostumeInfo::set_md_next_grade_template_id(::google::protobuf::int32 value) {
  set_has_md_next_grade_template_id();
  md_next_grade_template_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdCostumeInfo.md_next_grade_template_id)
}

// required int32 md_buy_price = 23;
inline bool mdCostumeInfo::has_md_buy_price() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void mdCostumeInfo::set_has_md_buy_price() {
  _has_bits_[0] |= 0x00400000u;
}
inline void mdCostumeInfo::clear_has_md_buy_price() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void mdCostumeInfo::clear_md_buy_price() {
  md_buy_price_ = 0;
  clear_has_md_buy_price();
}
inline ::google::protobuf::int32 mdCostumeInfo::md_buy_price() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCostumeInfo.md_buy_price)
  return md_buy_price_;
}
inline void mdCostumeInfo::set_md_buy_price(::google::protobuf::int32 value) {
  set_has_md_buy_price();
  md_buy_price_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdCostumeInfo.md_buy_price)
}

// required int32 md_sell_price = 24;
inline bool mdCostumeInfo::has_md_sell_price() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void mdCostumeInfo::set_has_md_sell_price() {
  _has_bits_[0] |= 0x00800000u;
}
inline void mdCostumeInfo::clear_has_md_sell_price() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void mdCostumeInfo::clear_md_sell_price() {
  md_sell_price_ = 0;
  clear_has_md_sell_price();
}
inline ::google::protobuf::int32 mdCostumeInfo::md_sell_price() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCostumeInfo.md_sell_price)
  return md_sell_price_;
}
inline void mdCostumeInfo::set_md_sell_price(::google::protobuf::int32 value) {
  set_has_md_sell_price();
  md_sell_price_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdCostumeInfo.md_sell_price)
}

// required bool is_stackable = 25;
inline bool mdCostumeInfo::has_is_stackable() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void mdCostumeInfo::set_has_is_stackable() {
  _has_bits_[0] |= 0x01000000u;
}
inline void mdCostumeInfo::clear_has_is_stackable() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void mdCostumeInfo::clear_is_stackable() {
  is_stackable_ = false;
  clear_has_is_stackable();
}
inline bool mdCostumeInfo::is_stackable() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCostumeInfo.is_stackable)
  return is_stackable_;
}
inline void mdCostumeInfo::set_is_stackable(bool value) {
  set_has_is_stackable();
  is_stackable_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdCostumeInfo.is_stackable)
}

// required bool is_saleable = 26;
inline bool mdCostumeInfo::has_is_saleable() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void mdCostumeInfo::set_has_is_saleable() {
  _has_bits_[0] |= 0x02000000u;
}
inline void mdCostumeInfo::clear_has_is_saleable() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void mdCostumeInfo::clear_is_saleable() {
  is_saleable_ = false;
  clear_has_is_saleable();
}
inline bool mdCostumeInfo::is_saleable() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCostumeInfo.is_saleable)
  return is_saleable_;
}
inline void mdCostumeInfo::set_is_saleable(bool value) {
  set_has_is_saleable();
  is_saleable_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdCostumeInfo.is_saleable)
}

// required bool is_equipable = 27;
inline bool mdCostumeInfo::has_is_equipable() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void mdCostumeInfo::set_has_is_equipable() {
  _has_bits_[0] |= 0x04000000u;
}
inline void mdCostumeInfo::clear_has_is_equipable() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void mdCostumeInfo::clear_is_equipable() {
  is_equipable_ = false;
  clear_has_is_equipable();
}
inline bool mdCostumeInfo::is_equipable() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCostumeInfo.is_equipable)
  return is_equipable_;
}
inline void mdCostumeInfo::set_is_equipable(bool value) {
  set_has_is_equipable();
  is_equipable_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdCostumeInfo.is_equipable)
}

// required bool is_levelupable = 28;
inline bool mdCostumeInfo::has_is_levelupable() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void mdCostumeInfo::set_has_is_levelupable() {
  _has_bits_[0] |= 0x08000000u;
}
inline void mdCostumeInfo::clear_has_is_levelupable() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void mdCostumeInfo::clear_is_levelupable() {
  is_levelupable_ = false;
  clear_has_is_levelupable();
}
inline bool mdCostumeInfo::is_levelupable() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCostumeInfo.is_levelupable)
  return is_levelupable_;
}
inline void mdCostumeInfo::set_is_levelupable(bool value) {
  set_has_is_levelupable();
  is_levelupable_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdCostumeInfo.is_levelupable)
}

// required bool is_enhanceable = 29;
inline bool mdCostumeInfo::has_is_enhanceable() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void mdCostumeInfo::set_has_is_enhanceable() {
  _has_bits_[0] |= 0x10000000u;
}
inline void mdCostumeInfo::clear_has_is_enhanceable() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void mdCostumeInfo::clear_is_enhanceable() {
  is_enhanceable_ = false;
  clear_has_is_enhanceable();
}
inline bool mdCostumeInfo::is_enhanceable() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCostumeInfo.is_enhanceable)
  return is_enhanceable_;
}
inline void mdCostumeInfo::set_is_enhanceable(bool value) {
  set_has_is_enhanceable();
  is_enhanceable_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdCostumeInfo.is_enhanceable)
}

// required bool is_upgradable = 30;
inline bool mdCostumeInfo::has_is_upgradable() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void mdCostumeInfo::set_has_is_upgradable() {
  _has_bits_[0] |= 0x20000000u;
}
inline void mdCostumeInfo::clear_has_is_upgradable() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void mdCostumeInfo::clear_is_upgradable() {
  is_upgradable_ = false;
  clear_has_is_upgradable();
}
inline bool mdCostumeInfo::is_upgradable() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCostumeInfo.is_upgradable)
  return is_upgradable_;
}
inline void mdCostumeInfo::set_is_upgradable(bool value) {
  set_has_is_upgradable();
  is_upgradable_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdCostumeInfo.is_upgradable)
}

// required bool is_composable = 31;
inline bool mdCostumeInfo::has_is_composable() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void mdCostumeInfo::set_has_is_composable() {
  _has_bits_[0] |= 0x40000000u;
}
inline void mdCostumeInfo::clear_has_is_composable() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void mdCostumeInfo::clear_is_composable() {
  is_composable_ = false;
  clear_has_is_composable();
}
inline bool mdCostumeInfo::is_composable() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCostumeInfo.is_composable)
  return is_composable_;
}
inline void mdCostumeInfo::set_is_composable(bool value) {
  set_has_is_composable();
  is_composable_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdCostumeInfo.is_composable)
}

// required bool is_surpassable = 32;
inline bool mdCostumeInfo::has_is_surpassable() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void mdCostumeInfo::set_has_is_surpassable() {
  _has_bits_[0] |= 0x80000000u;
}
inline void mdCostumeInfo::clear_has_is_surpassable() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void mdCostumeInfo::clear_is_surpassable() {
  is_surpassable_ = false;
  clear_has_is_surpassable();
}
inline bool mdCostumeInfo::is_surpassable() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCostumeInfo.is_surpassable)
  return is_surpassable_;
}
inline void mdCostumeInfo::set_is_surpassable(bool value) {
  set_has_is_surpassable();
  is_surpassable_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdCostumeInfo.is_surpassable)
}

// -------------------------------------------------------------------

// mdShopProduct

// required int32 id = 1;
inline bool mdShopProduct::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdShopProduct::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdShopProduct::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdShopProduct::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 mdShopProduct::id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopProduct.id)
  return id_;
}
inline void mdShopProduct::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopProduct.id)
}

// required .b2.protocol.commondata.Shop.ShopType shop_type = 2;
inline bool mdShopProduct::has_shop_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdShopProduct::set_has_shop_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdShopProduct::clear_has_shop_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdShopProduct::clear_shop_type() {
  shop_type_ = 1;
  clear_has_shop_type();
}
inline ::b2::protocol::commondata::Shop_ShopType mdShopProduct::shop_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopProduct.shop_type)
  return static_cast< ::b2::protocol::commondata::Shop_ShopType >(shop_type_);
}
inline void mdShopProduct::set_shop_type(::b2::protocol::commondata::Shop_ShopType value) {
  assert(::b2::protocol::commondata::Shop_ShopType_IsValid(value));
  set_has_shop_type();
  shop_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopProduct.shop_type)
}

// required int32 shop_order = 3;
inline bool mdShopProduct::has_shop_order() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdShopProduct::set_has_shop_order() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdShopProduct::clear_has_shop_order() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdShopProduct::clear_shop_order() {
  shop_order_ = 0;
  clear_has_shop_order();
}
inline ::google::protobuf::int32 mdShopProduct::shop_order() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopProduct.shop_order)
  return shop_order_;
}
inline void mdShopProduct::set_shop_order(::google::protobuf::int32 value) {
  set_has_shop_order();
  shop_order_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopProduct.shop_order)
}

// required .b2.protocol.commondata.Shop.ProductType product_type = 4;
inline bool mdShopProduct::has_product_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdShopProduct::set_has_product_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdShopProduct::clear_has_product_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdShopProduct::clear_product_type() {
  product_type_ = 0;
  clear_has_product_type();
}
inline ::b2::protocol::commondata::Shop_ProductType mdShopProduct::product_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopProduct.product_type)
  return static_cast< ::b2::protocol::commondata::Shop_ProductType >(product_type_);
}
inline void mdShopProduct::set_product_type(::b2::protocol::commondata::Shop_ProductType value) {
  assert(::b2::protocol::commondata::Shop_ProductType_IsValid(value));
  set_has_product_type();
  product_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopProduct.product_type)
}

// required int32 product_order = 5;
inline bool mdShopProduct::has_product_order() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdShopProduct::set_has_product_order() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdShopProduct::clear_has_product_order() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdShopProduct::clear_product_order() {
  product_order_ = 0;
  clear_has_product_order();
}
inline ::google::protobuf::int32 mdShopProduct::product_order() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopProduct.product_order)
  return product_order_;
}
inline void mdShopProduct::set_product_order(::google::protobuf::int32 value) {
  set_has_product_order();
  product_order_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopProduct.product_order)
}

// required int32 product_id = 6;
inline bool mdShopProduct::has_product_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdShopProduct::set_has_product_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdShopProduct::clear_has_product_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdShopProduct::clear_product_id() {
  product_id_ = 0;
  clear_has_product_id();
}
inline ::google::protobuf::int32 mdShopProduct::product_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopProduct.product_id)
  return product_id_;
}
inline void mdShopProduct::set_product_id(::google::protobuf::int32 value) {
  set_has_product_id();
  product_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopProduct.product_id)
}

// required int32 product_count = 7;
inline bool mdShopProduct::has_product_count() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mdShopProduct::set_has_product_count() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mdShopProduct::clear_has_product_count() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mdShopProduct::clear_product_count() {
  product_count_ = 0;
  clear_has_product_count();
}
inline ::google::protobuf::int32 mdShopProduct::product_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopProduct.product_count)
  return product_count_;
}
inline void mdShopProduct::set_product_count(::google::protobuf::int32 value) {
  set_has_product_count();
  product_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopProduct.product_count)
}

// required .b2.protocol.commondata.Shop.ProductType bonus_product_type = 8;
inline bool mdShopProduct::has_bonus_product_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void mdShopProduct::set_has_bonus_product_type() {
  _has_bits_[0] |= 0x00000080u;
}
inline void mdShopProduct::clear_has_bonus_product_type() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void mdShopProduct::clear_bonus_product_type() {
  bonus_product_type_ = 0;
  clear_has_bonus_product_type();
}
inline ::b2::protocol::commondata::Shop_ProductType mdShopProduct::bonus_product_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopProduct.bonus_product_type)
  return static_cast< ::b2::protocol::commondata::Shop_ProductType >(bonus_product_type_);
}
inline void mdShopProduct::set_bonus_product_type(::b2::protocol::commondata::Shop_ProductType value) {
  assert(::b2::protocol::commondata::Shop_ProductType_IsValid(value));
  set_has_bonus_product_type();
  bonus_product_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopProduct.bonus_product_type)
}

// required int32 bonus_product_id = 9;
inline bool mdShopProduct::has_bonus_product_id() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void mdShopProduct::set_has_bonus_product_id() {
  _has_bits_[0] |= 0x00000100u;
}
inline void mdShopProduct::clear_has_bonus_product_id() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void mdShopProduct::clear_bonus_product_id() {
  bonus_product_id_ = 0;
  clear_has_bonus_product_id();
}
inline ::google::protobuf::int32 mdShopProduct::bonus_product_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopProduct.bonus_product_id)
  return bonus_product_id_;
}
inline void mdShopProduct::set_bonus_product_id(::google::protobuf::int32 value) {
  set_has_bonus_product_id();
  bonus_product_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopProduct.bonus_product_id)
}

// required int32 bonus_product_count = 10;
inline bool mdShopProduct::has_bonus_product_count() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void mdShopProduct::set_has_bonus_product_count() {
  _has_bits_[0] |= 0x00000200u;
}
inline void mdShopProduct::clear_has_bonus_product_count() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void mdShopProduct::clear_bonus_product_count() {
  bonus_product_count_ = 0;
  clear_has_bonus_product_count();
}
inline ::google::protobuf::int32 mdShopProduct::bonus_product_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopProduct.bonus_product_count)
  return bonus_product_count_;
}
inline void mdShopProduct::set_bonus_product_count(::google::protobuf::int32 value) {
  set_has_bonus_product_count();
  bonus_product_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopProduct.bonus_product_count)
}

// required int32 calculated_bonus_count = 11;
inline bool mdShopProduct::has_calculated_bonus_count() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void mdShopProduct::set_has_calculated_bonus_count() {
  _has_bits_[0] |= 0x00000400u;
}
inline void mdShopProduct::clear_has_calculated_bonus_count() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void mdShopProduct::clear_calculated_bonus_count() {
  calculated_bonus_count_ = 0;
  clear_has_calculated_bonus_count();
}
inline ::google::protobuf::int32 mdShopProduct::calculated_bonus_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopProduct.calculated_bonus_count)
  return calculated_bonus_count_;
}
inline void mdShopProduct::set_calculated_bonus_count(::google::protobuf::int32 value) {
  set_has_calculated_bonus_count();
  calculated_bonus_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopProduct.calculated_bonus_count)
}

// required .b2.protocol.commondata.Shop.BuyPriceType buy_price_type = 12;
inline bool mdShopProduct::has_buy_price_type() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void mdShopProduct::set_has_buy_price_type() {
  _has_bits_[0] |= 0x00000800u;
}
inline void mdShopProduct::clear_has_buy_price_type() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void mdShopProduct::clear_buy_price_type() {
  buy_price_type_ = 1;
  clear_has_buy_price_type();
}
inline ::b2::protocol::commondata::Shop_BuyPriceType mdShopProduct::buy_price_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopProduct.buy_price_type)
  return static_cast< ::b2::protocol::commondata::Shop_BuyPriceType >(buy_price_type_);
}
inline void mdShopProduct::set_buy_price_type(::b2::protocol::commondata::Shop_BuyPriceType value) {
  assert(::b2::protocol::commondata::Shop_BuyPriceType_IsValid(value));
  set_has_buy_price_type();
  buy_price_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopProduct.buy_price_type)
}

// required int32 price = 13;
inline bool mdShopProduct::has_price() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void mdShopProduct::set_has_price() {
  _has_bits_[0] |= 0x00001000u;
}
inline void mdShopProduct::clear_has_price() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void mdShopProduct::clear_price() {
  price_ = 0;
  clear_has_price();
}
inline ::google::protobuf::int32 mdShopProduct::price() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopProduct.price)
  return price_;
}
inline void mdShopProduct::set_price(::google::protobuf::int32 value) {
  set_has_price();
  price_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopProduct.price)
}

// required int32 calculated_price = 14;
inline bool mdShopProduct::has_calculated_price() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void mdShopProduct::set_has_calculated_price() {
  _has_bits_[0] |= 0x00002000u;
}
inline void mdShopProduct::clear_has_calculated_price() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void mdShopProduct::clear_calculated_price() {
  calculated_price_ = 0;
  clear_has_calculated_price();
}
inline ::google::protobuf::int32 mdShopProduct::calculated_price() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopProduct.calculated_price)
  return calculated_price_;
}
inline void mdShopProduct::set_calculated_price(::google::protobuf::int32 value) {
  set_has_calculated_price();
  calculated_price_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopProduct.calculated_price)
}

// required .b2.protocol.commondata.Shop.RestrictType restric_type = 15;
inline bool mdShopProduct::has_restric_type() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void mdShopProduct::set_has_restric_type() {
  _has_bits_[0] |= 0x00004000u;
}
inline void mdShopProduct::clear_has_restric_type() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void mdShopProduct::clear_restric_type() {
  restric_type_ = 0;
  clear_has_restric_type();
}
inline ::b2::protocol::commondata::Shop_RestrictType mdShopProduct::restric_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopProduct.restric_type)
  return static_cast< ::b2::protocol::commondata::Shop_RestrictType >(restric_type_);
}
inline void mdShopProduct::set_restric_type(::b2::protocol::commondata::Shop_RestrictType value) {
  assert(::b2::protocol::commondata::Shop_RestrictType_IsValid(value));
  set_has_restric_type();
  restric_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopProduct.restric_type)
}

// required int32 buy_limit_count = 16;
inline bool mdShopProduct::has_buy_limit_count() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void mdShopProduct::set_has_buy_limit_count() {
  _has_bits_[0] |= 0x00008000u;
}
inline void mdShopProduct::clear_has_buy_limit_count() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void mdShopProduct::clear_buy_limit_count() {
  buy_limit_count_ = 0;
  clear_has_buy_limit_count();
}
inline ::google::protobuf::int32 mdShopProduct::buy_limit_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopProduct.buy_limit_count)
  return buy_limit_count_;
}
inline void mdShopProduct::set_buy_limit_count(::google::protobuf::int32 value) {
  set_has_buy_limit_count();
  buy_limit_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopProduct.buy_limit_count)
}

// -------------------------------------------------------------------

// mdShopPackage

// required int32 id = 1;
inline bool mdShopPackage::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdShopPackage::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdShopPackage::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdShopPackage::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 mdShopPackage::id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopPackage.id)
  return id_;
}
inline void mdShopPackage::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopPackage.id)
}

// required int32 category = 2;
inline bool mdShopPackage::has_category() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdShopPackage::set_has_category() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdShopPackage::clear_has_category() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdShopPackage::clear_category() {
  category_ = 0;
  clear_has_category();
}
inline ::google::protobuf::int32 mdShopPackage::category() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopPackage.category)
  return category_;
}
inline void mdShopPackage::set_category(::google::protobuf::int32 value) {
  set_has_category();
  category_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopPackage.category)
}

// required int32 tab_type = 3;
inline bool mdShopPackage::has_tab_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdShopPackage::set_has_tab_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdShopPackage::clear_has_tab_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdShopPackage::clear_tab_type() {
  tab_type_ = 0;
  clear_has_tab_type();
}
inline ::google::protobuf::int32 mdShopPackage::tab_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopPackage.tab_type)
  return tab_type_;
}
inline void mdShopPackage::set_tab_type(::google::protobuf::int32 value) {
  set_has_tab_type();
  tab_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopPackage.tab_type)
}

// required string name = 4;
inline bool mdShopPackage::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdShopPackage::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdShopPackage::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdShopPackage::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& mdShopPackage::name() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopPackage.name)
  return *name_;
}
inline void mdShopPackage::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopPackage.name)
}
inline void mdShopPackage::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:b2.protocol.masterdata.mdShopPackage.name)
}
inline void mdShopPackage::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:b2.protocol.masterdata.mdShopPackage.name)
}
inline ::std::string* mdShopPackage::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:b2.protocol.masterdata.mdShopPackage.name)
  return name_;
}
inline ::std::string* mdShopPackage::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void mdShopPackage::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.masterdata.mdShopPackage.name)
}

// required int32 pay_period = 5;
inline bool mdShopPackage::has_pay_period() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdShopPackage::set_has_pay_period() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdShopPackage::clear_has_pay_period() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdShopPackage::clear_pay_period() {
  pay_period_ = 0;
  clear_has_pay_period();
}
inline ::google::protobuf::int32 mdShopPackage::pay_period() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopPackage.pay_period)
  return pay_period_;
}
inline void mdShopPackage::set_pay_period(::google::protobuf::int32 value) {
  set_has_pay_period();
  pay_period_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopPackage.pay_period)
}

// required int32 period_bonus_reward_id = 6;
inline bool mdShopPackage::has_period_bonus_reward_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdShopPackage::set_has_period_bonus_reward_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdShopPackage::clear_has_period_bonus_reward_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdShopPackage::clear_period_bonus_reward_id() {
  period_bonus_reward_id_ = 0;
  clear_has_period_bonus_reward_id();
}
inline ::google::protobuf::int32 mdShopPackage::period_bonus_reward_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopPackage.period_bonus_reward_id)
  return period_bonus_reward_id_;
}
inline void mdShopPackage::set_period_bonus_reward_id(::google::protobuf::int32 value) {
  set_has_period_bonus_reward_id();
  period_bonus_reward_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopPackage.period_bonus_reward_id)
}

// required int32 period_bonus_reward_count = 7;
inline bool mdShopPackage::has_period_bonus_reward_count() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mdShopPackage::set_has_period_bonus_reward_count() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mdShopPackage::clear_has_period_bonus_reward_count() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mdShopPackage::clear_period_bonus_reward_count() {
  period_bonus_reward_count_ = 0;
  clear_has_period_bonus_reward_count();
}
inline ::google::protobuf::int32 mdShopPackage::period_bonus_reward_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopPackage.period_bonus_reward_count)
  return period_bonus_reward_count_;
}
inline void mdShopPackage::set_period_bonus_reward_count(::google::protobuf::int32 value) {
  set_has_period_bonus_reward_count();
  period_bonus_reward_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopPackage.period_bonus_reward_count)
}

// -------------------------------------------------------------------

// mdShopPackageProduct

// required int32 package_id = 1;
inline bool mdShopPackageProduct::has_package_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdShopPackageProduct::set_has_package_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdShopPackageProduct::clear_has_package_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdShopPackageProduct::clear_package_id() {
  package_id_ = 0;
  clear_has_package_id();
}
inline ::google::protobuf::int32 mdShopPackageProduct::package_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopPackageProduct.package_id)
  return package_id_;
}
inline void mdShopPackageProduct::set_package_id(::google::protobuf::int32 value) {
  set_has_package_id();
  package_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopPackageProduct.package_id)
}

// required int32 index = 2;
inline bool mdShopPackageProduct::has_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdShopPackageProduct::set_has_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdShopPackageProduct::clear_has_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdShopPackageProduct::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 mdShopPackageProduct::index() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopPackageProduct.index)
  return index_;
}
inline void mdShopPackageProduct::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopPackageProduct.index)
}

// required .b2.protocol.commondata.ShopProduct product = 3;
inline bool mdShopPackageProduct::has_product() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdShopPackageProduct::set_has_product() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdShopPackageProduct::clear_has_product() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdShopPackageProduct::clear_product() {
  if (product_ != NULL) product_->::b2::protocol::commondata::ShopProduct::Clear();
  clear_has_product();
}
inline const ::b2::protocol::commondata::ShopProduct& mdShopPackageProduct::product() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopPackageProduct.product)
  return product_ != NULL ? *product_ : *default_instance_->product_;
}
inline ::b2::protocol::commondata::ShopProduct* mdShopPackageProduct::mutable_product() {
  set_has_product();
  if (product_ == NULL) product_ = new ::b2::protocol::commondata::ShopProduct;
  // @@protoc_insertion_point(field_mutable:b2.protocol.masterdata.mdShopPackageProduct.product)
  return product_;
}
inline ::b2::protocol::commondata::ShopProduct* mdShopPackageProduct::release_product() {
  clear_has_product();
  ::b2::protocol::commondata::ShopProduct* temp = product_;
  product_ = NULL;
  return temp;
}
inline void mdShopPackageProduct::set_allocated_product(::b2::protocol::commondata::ShopProduct* product) {
  delete product_;
  product_ = product;
  if (product) {
    set_has_product();
  } else {
    clear_has_product();
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.masterdata.mdShopPackageProduct.product)
}

// -------------------------------------------------------------------

// mdShopMileageReward

// required .b2.protocol.commondata.Shop.MileageType mileage_type = 1;
inline bool mdShopMileageReward::has_mileage_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdShopMileageReward::set_has_mileage_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdShopMileageReward::clear_has_mileage_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdShopMileageReward::clear_mileage_type() {
  mileage_type_ = 1;
  clear_has_mileage_type();
}
inline ::b2::protocol::commondata::Shop_MileageType mdShopMileageReward::mileage_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopMileageReward.mileage_type)
  return static_cast< ::b2::protocol::commondata::Shop_MileageType >(mileage_type_);
}
inline void mdShopMileageReward::set_mileage_type(::b2::protocol::commondata::Shop_MileageType value) {
  assert(::b2::protocol::commondata::Shop_MileageType_IsValid(value));
  set_has_mileage_type();
  mileage_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopMileageReward.mileage_type)
}

// required int32 index = 2;
inline bool mdShopMileageReward::has_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdShopMileageReward::set_has_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdShopMileageReward::clear_has_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdShopMileageReward::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 mdShopMileageReward::index() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopMileageReward.index)
  return index_;
}
inline void mdShopMileageReward::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopMileageReward.index)
}

// required int32 mileage = 3;
inline bool mdShopMileageReward::has_mileage() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdShopMileageReward::set_has_mileage() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdShopMileageReward::clear_has_mileage() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdShopMileageReward::clear_mileage() {
  mileage_ = 0;
  clear_has_mileage();
}
inline ::google::protobuf::int32 mdShopMileageReward::mileage() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopMileageReward.mileage)
  return mileage_;
}
inline void mdShopMileageReward::set_mileage(::google::protobuf::int32 value) {
  set_has_mileage();
  mileage_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopMileageReward.mileage)
}

// repeated .b2.protocol.commondata.Reward rewards = 4;
inline int mdShopMileageReward::rewards_size() const {
  return rewards_.size();
}
inline void mdShopMileageReward::clear_rewards() {
  rewards_.Clear();
}
inline const ::b2::protocol::commondata::Reward& mdShopMileageReward::rewards(int index) const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopMileageReward.rewards)
  return rewards_.Get(index);
}
inline ::b2::protocol::commondata::Reward* mdShopMileageReward::mutable_rewards(int index) {
  // @@protoc_insertion_point(field_mutable:b2.protocol.masterdata.mdShopMileageReward.rewards)
  return rewards_.Mutable(index);
}
inline ::b2::protocol::commondata::Reward* mdShopMileageReward::add_rewards() {
  // @@protoc_insertion_point(field_add:b2.protocol.masterdata.mdShopMileageReward.rewards)
  return rewards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward >&
mdShopMileageReward::rewards() const {
  // @@protoc_insertion_point(field_list:b2.protocol.masterdata.mdShopMileageReward.rewards)
  return rewards_;
}
inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward >*
mdShopMileageReward::mutable_rewards() {
  // @@protoc_insertion_point(field_mutable_list:b2.protocol.masterdata.mdShopMileageReward.rewards)
  return &rewards_;
}

// -------------------------------------------------------------------

// mdMarketProduct

// required int32 shop_product_id = 1;
inline bool mdMarketProduct::has_shop_product_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdMarketProduct::set_has_shop_product_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdMarketProduct::clear_has_shop_product_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdMarketProduct::clear_shop_product_id() {
  shop_product_id_ = 0;
  clear_has_shop_product_id();
}
inline ::google::protobuf::int32 mdMarketProduct::shop_product_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdMarketProduct.shop_product_id)
  return shop_product_id_;
}
inline void mdMarketProduct::set_shop_product_id(::google::protobuf::int32 value) {
  set_has_shop_product_id();
  shop_product_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdMarketProduct.shop_product_id)
}

// required string market_product_id = 2;
inline bool mdMarketProduct::has_market_product_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdMarketProduct::set_has_market_product_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdMarketProduct::clear_has_market_product_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdMarketProduct::clear_market_product_id() {
  if (market_product_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    market_product_id_->clear();
  }
  clear_has_market_product_id();
}
inline const ::std::string& mdMarketProduct::market_product_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdMarketProduct.market_product_id)
  return *market_product_id_;
}
inline void mdMarketProduct::set_market_product_id(const ::std::string& value) {
  set_has_market_product_id();
  if (market_product_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    market_product_id_ = new ::std::string;
  }
  market_product_id_->assign(value);
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdMarketProduct.market_product_id)
}
inline void mdMarketProduct::set_market_product_id(const char* value) {
  set_has_market_product_id();
  if (market_product_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    market_product_id_ = new ::std::string;
  }
  market_product_id_->assign(value);
  // @@protoc_insertion_point(field_set_char:b2.protocol.masterdata.mdMarketProduct.market_product_id)
}
inline void mdMarketProduct::set_market_product_id(const char* value, size_t size) {
  set_has_market_product_id();
  if (market_product_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    market_product_id_ = new ::std::string;
  }
  market_product_id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:b2.protocol.masterdata.mdMarketProduct.market_product_id)
}
inline ::std::string* mdMarketProduct::mutable_market_product_id() {
  set_has_market_product_id();
  if (market_product_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    market_product_id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:b2.protocol.masterdata.mdMarketProduct.market_product_id)
  return market_product_id_;
}
inline ::std::string* mdMarketProduct::release_market_product_id() {
  clear_has_market_product_id();
  if (market_product_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = market_product_id_;
    market_product_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void mdMarketProduct::set_allocated_market_product_id(::std::string* market_product_id) {
  if (market_product_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete market_product_id_;
  }
  if (market_product_id) {
    set_has_market_product_id();
    market_product_id_ = market_product_id;
  } else {
    clear_has_market_product_id();
    market_product_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.masterdata.mdMarketProduct.market_product_id)
}

// required string currency_code = 3;
inline bool mdMarketProduct::has_currency_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdMarketProduct::set_has_currency_code() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdMarketProduct::clear_has_currency_code() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdMarketProduct::clear_currency_code() {
  if (currency_code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    currency_code_->clear();
  }
  clear_has_currency_code();
}
inline const ::std::string& mdMarketProduct::currency_code() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdMarketProduct.currency_code)
  return *currency_code_;
}
inline void mdMarketProduct::set_currency_code(const ::std::string& value) {
  set_has_currency_code();
  if (currency_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    currency_code_ = new ::std::string;
  }
  currency_code_->assign(value);
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdMarketProduct.currency_code)
}
inline void mdMarketProduct::set_currency_code(const char* value) {
  set_has_currency_code();
  if (currency_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    currency_code_ = new ::std::string;
  }
  currency_code_->assign(value);
  // @@protoc_insertion_point(field_set_char:b2.protocol.masterdata.mdMarketProduct.currency_code)
}
inline void mdMarketProduct::set_currency_code(const char* value, size_t size) {
  set_has_currency_code();
  if (currency_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    currency_code_ = new ::std::string;
  }
  currency_code_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:b2.protocol.masterdata.mdMarketProduct.currency_code)
}
inline ::std::string* mdMarketProduct::mutable_currency_code() {
  set_has_currency_code();
  if (currency_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    currency_code_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:b2.protocol.masterdata.mdMarketProduct.currency_code)
  return currency_code_;
}
inline ::std::string* mdMarketProduct::release_currency_code() {
  clear_has_currency_code();
  if (currency_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = currency_code_;
    currency_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void mdMarketProduct::set_allocated_currency_code(::std::string* currency_code) {
  if (currency_code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete currency_code_;
  }
  if (currency_code) {
    set_has_currency_code();
    currency_code_ = currency_code;
  } else {
    clear_has_currency_code();
    currency_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.masterdata.mdMarketProduct.currency_code)
}

// required float price = 12;
inline bool mdMarketProduct::has_price() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdMarketProduct::set_has_price() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdMarketProduct::clear_has_price() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdMarketProduct::clear_price() {
  price_ = 0;
  clear_has_price();
}
inline float mdMarketProduct::price() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdMarketProduct.price)
  return price_;
}
inline void mdMarketProduct::set_price(float value) {
  set_has_price();
  price_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdMarketProduct.price)
}

// -------------------------------------------------------------------

// mdDailyAttendanceInfo

// required .b2.protocol.commondata.DailyAttendanceType attendance_type = 1;
inline bool mdDailyAttendanceInfo::has_attendance_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdDailyAttendanceInfo::set_has_attendance_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdDailyAttendanceInfo::clear_has_attendance_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdDailyAttendanceInfo::clear_attendance_type() {
  attendance_type_ = 1;
  clear_has_attendance_type();
}
inline ::b2::protocol::commondata::DailyAttendanceType mdDailyAttendanceInfo::attendance_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDailyAttendanceInfo.attendance_type)
  return static_cast< ::b2::protocol::commondata::DailyAttendanceType >(attendance_type_);
}
inline void mdDailyAttendanceInfo::set_attendance_type(::b2::protocol::commondata::DailyAttendanceType value) {
  assert(::b2::protocol::commondata::DailyAttendanceType_IsValid(value));
  set_has_attendance_type();
  attendance_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDailyAttendanceInfo.attendance_type)
}

// required int32 day = 2;
inline bool mdDailyAttendanceInfo::has_day() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdDailyAttendanceInfo::set_has_day() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdDailyAttendanceInfo::clear_has_day() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdDailyAttendanceInfo::clear_day() {
  day_ = 0;
  clear_has_day();
}
inline ::google::protobuf::int32 mdDailyAttendanceInfo::day() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDailyAttendanceInfo.day)
  return day_;
}
inline void mdDailyAttendanceInfo::set_day(::google::protobuf::int32 value) {
  set_has_day();
  day_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDailyAttendanceInfo.day)
}

// required int32 reward_id = 3;
inline bool mdDailyAttendanceInfo::has_reward_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdDailyAttendanceInfo::set_has_reward_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdDailyAttendanceInfo::clear_has_reward_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdDailyAttendanceInfo::clear_reward_id() {
  reward_id_ = 0;
  clear_has_reward_id();
}
inline ::google::protobuf::int32 mdDailyAttendanceInfo::reward_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDailyAttendanceInfo.reward_id)
  return reward_id_;
}
inline void mdDailyAttendanceInfo::set_reward_id(::google::protobuf::int32 value) {
  set_has_reward_id();
  reward_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDailyAttendanceInfo.reward_id)
}

// required int32 reward_count = 4;
inline bool mdDailyAttendanceInfo::has_reward_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdDailyAttendanceInfo::set_has_reward_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdDailyAttendanceInfo::clear_has_reward_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdDailyAttendanceInfo::clear_reward_count() {
  reward_count_ = 0;
  clear_has_reward_count();
}
inline ::google::protobuf::int32 mdDailyAttendanceInfo::reward_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDailyAttendanceInfo.reward_count)
  return reward_count_;
}
inline void mdDailyAttendanceInfo::set_reward_count(::google::protobuf::int32 value) {
  set_has_reward_count();
  reward_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDailyAttendanceInfo.reward_count)
}

// -------------------------------------------------------------------

// mdRaidInfo

// required int32 raid_type = 1;
inline bool mdRaidInfo::has_raid_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdRaidInfo::set_has_raid_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdRaidInfo::clear_has_raid_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdRaidInfo::clear_raid_type() {
  raid_type_ = 0;
  clear_has_raid_type();
}
inline ::google::protobuf::int32 mdRaidInfo::raid_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdRaidInfo.raid_type)
  return raid_type_;
}
inline void mdRaidInfo::set_raid_type(::google::protobuf::int32 value) {
  set_has_raid_type();
  raid_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdRaidInfo.raid_type)
}

// required int32 step = 2;
inline bool mdRaidInfo::has_step() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdRaidInfo::set_has_step() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdRaidInfo::clear_has_step() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdRaidInfo::clear_step() {
  step_ = 0;
  clear_has_step();
}
inline ::google::protobuf::int32 mdRaidInfo::step() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdRaidInfo.step)
  return step_;
}
inline void mdRaidInfo::set_step(::google::protobuf::int32 value) {
  set_has_step();
  step_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdRaidInfo.step)
}

// required int32 difficulty_scale = 3;
inline bool mdRaidInfo::has_difficulty_scale() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdRaidInfo::set_has_difficulty_scale() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdRaidInfo::clear_has_difficulty_scale() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdRaidInfo::clear_difficulty_scale() {
  difficulty_scale_ = 0;
  clear_has_difficulty_scale();
}
inline ::google::protobuf::int32 mdRaidInfo::difficulty_scale() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdRaidInfo.difficulty_scale)
  return difficulty_scale_;
}
inline void mdRaidInfo::set_difficulty_scale(::google::protobuf::int32 value) {
  set_has_difficulty_scale();
  difficulty_scale_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdRaidInfo.difficulty_scale)
}

// required int32 recommend_power = 4;
inline bool mdRaidInfo::has_recommend_power() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdRaidInfo::set_has_recommend_power() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdRaidInfo::clear_has_recommend_power() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdRaidInfo::clear_recommend_power() {
  recommend_power_ = 0;
  clear_has_recommend_power();
}
inline ::google::protobuf::int32 mdRaidInfo::recommend_power() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdRaidInfo.recommend_power)
  return recommend_power_;
}
inline void mdRaidInfo::set_recommend_power(::google::protobuf::int32 value) {
  set_has_recommend_power();
  recommend_power_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdRaidInfo.recommend_power)
}

// required int32 recommend_attack = 5;
inline bool mdRaidInfo::has_recommend_attack() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdRaidInfo::set_has_recommend_attack() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdRaidInfo::clear_has_recommend_attack() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdRaidInfo::clear_recommend_attack() {
  recommend_attack_ = 0;
  clear_has_recommend_attack();
}
inline ::google::protobuf::int32 mdRaidInfo::recommend_attack() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdRaidInfo.recommend_attack)
  return recommend_attack_;
}
inline void mdRaidInfo::set_recommend_attack(::google::protobuf::int32 value) {
  set_has_recommend_attack();
  recommend_attack_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdRaidInfo.recommend_attack)
}

// required int32 recommend_defense = 6;
inline bool mdRaidInfo::has_recommend_defense() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdRaidInfo::set_has_recommend_defense() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdRaidInfo::clear_has_recommend_defense() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdRaidInfo::clear_recommend_defense() {
  recommend_defense_ = 0;
  clear_has_recommend_defense();
}
inline ::google::protobuf::int32 mdRaidInfo::recommend_defense() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdRaidInfo.recommend_defense)
  return recommend_defense_;
}
inline void mdRaidInfo::set_recommend_defense(::google::protobuf::int32 value) {
  set_has_recommend_defense();
  recommend_defense_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdRaidInfo.recommend_defense)
}

// required int32 reward_id = 7;
inline bool mdRaidInfo::has_reward_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mdRaidInfo::set_has_reward_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mdRaidInfo::clear_has_reward_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mdRaidInfo::clear_reward_id() {
  reward_id_ = 0;
  clear_has_reward_id();
}
inline ::google::protobuf::int32 mdRaidInfo::reward_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdRaidInfo.reward_id)
  return reward_id_;
}
inline void mdRaidInfo::set_reward_id(::google::protobuf::int32 value) {
  set_has_reward_id();
  reward_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdRaidInfo.reward_id)
}

// required int32 reward_min_count = 8;
inline bool mdRaidInfo::has_reward_min_count() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void mdRaidInfo::set_has_reward_min_count() {
  _has_bits_[0] |= 0x00000080u;
}
inline void mdRaidInfo::clear_has_reward_min_count() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void mdRaidInfo::clear_reward_min_count() {
  reward_min_count_ = 0;
  clear_has_reward_min_count();
}
inline ::google::protobuf::int32 mdRaidInfo::reward_min_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdRaidInfo.reward_min_count)
  return reward_min_count_;
}
inline void mdRaidInfo::set_reward_min_count(::google::protobuf::int32 value) {
  set_has_reward_min_count();
  reward_min_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdRaidInfo.reward_min_count)
}

// required int32 reward_max_count = 9;
inline bool mdRaidInfo::has_reward_max_count() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void mdRaidInfo::set_has_reward_max_count() {
  _has_bits_[0] |= 0x00000100u;
}
inline void mdRaidInfo::clear_has_reward_max_count() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void mdRaidInfo::clear_reward_max_count() {
  reward_max_count_ = 0;
  clear_has_reward_max_count();
}
inline ::google::protobuf::int32 mdRaidInfo::reward_max_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdRaidInfo.reward_max_count)
  return reward_max_count_;
}
inline void mdRaidInfo::set_reward_max_count(::google::protobuf::int32 value) {
  set_has_reward_max_count();
  reward_max_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdRaidInfo.reward_max_count)
}

// required int32 main_reward_id = 10;
inline bool mdRaidInfo::has_main_reward_id() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void mdRaidInfo::set_has_main_reward_id() {
  _has_bits_[0] |= 0x00000200u;
}
inline void mdRaidInfo::clear_has_main_reward_id() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void mdRaidInfo::clear_main_reward_id() {
  main_reward_id_ = 0;
  clear_has_main_reward_id();
}
inline ::google::protobuf::int32 mdRaidInfo::main_reward_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdRaidInfo.main_reward_id)
  return main_reward_id_;
}
inline void mdRaidInfo::set_main_reward_id(::google::protobuf::int32 value) {
  set_has_main_reward_id();
  main_reward_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdRaidInfo.main_reward_id)
}

// required int32 main_reward_min_count = 11;
inline bool mdRaidInfo::has_main_reward_min_count() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void mdRaidInfo::set_has_main_reward_min_count() {
  _has_bits_[0] |= 0x00000400u;
}
inline void mdRaidInfo::clear_has_main_reward_min_count() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void mdRaidInfo::clear_main_reward_min_count() {
  main_reward_min_count_ = 0;
  clear_has_main_reward_min_count();
}
inline ::google::protobuf::int32 mdRaidInfo::main_reward_min_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdRaidInfo.main_reward_min_count)
  return main_reward_min_count_;
}
inline void mdRaidInfo::set_main_reward_min_count(::google::protobuf::int32 value) {
  set_has_main_reward_min_count();
  main_reward_min_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdRaidInfo.main_reward_min_count)
}

// required int32 main_reward_max_count = 12;
inline bool mdRaidInfo::has_main_reward_max_count() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void mdRaidInfo::set_has_main_reward_max_count() {
  _has_bits_[0] |= 0x00000800u;
}
inline void mdRaidInfo::clear_has_main_reward_max_count() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void mdRaidInfo::clear_main_reward_max_count() {
  main_reward_max_count_ = 0;
  clear_has_main_reward_max_count();
}
inline ::google::protobuf::int32 mdRaidInfo::main_reward_max_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdRaidInfo.main_reward_max_count)
  return main_reward_max_count_;
}
inline void mdRaidInfo::set_main_reward_max_count(::google::protobuf::int32 value) {
  set_has_main_reward_max_count();
  main_reward_max_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdRaidInfo.main_reward_max_count)
}

// required int32 reward_item_min_grade = 20;
inline bool mdRaidInfo::has_reward_item_min_grade() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void mdRaidInfo::set_has_reward_item_min_grade() {
  _has_bits_[0] |= 0x00001000u;
}
inline void mdRaidInfo::clear_has_reward_item_min_grade() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void mdRaidInfo::clear_reward_item_min_grade() {
  reward_item_min_grade_ = 0;
  clear_has_reward_item_min_grade();
}
inline ::google::protobuf::int32 mdRaidInfo::reward_item_min_grade() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdRaidInfo.reward_item_min_grade)
  return reward_item_min_grade_;
}
inline void mdRaidInfo::set_reward_item_min_grade(::google::protobuf::int32 value) {
  set_has_reward_item_min_grade();
  reward_item_min_grade_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdRaidInfo.reward_item_min_grade)
}

// required int32 reward_item_max_grade = 21;
inline bool mdRaidInfo::has_reward_item_max_grade() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void mdRaidInfo::set_has_reward_item_max_grade() {
  _has_bits_[0] |= 0x00002000u;
}
inline void mdRaidInfo::clear_has_reward_item_max_grade() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void mdRaidInfo::clear_reward_item_max_grade() {
  reward_item_max_grade_ = 0;
  clear_has_reward_item_max_grade();
}
inline ::google::protobuf::int32 mdRaidInfo::reward_item_max_grade() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdRaidInfo.reward_item_max_grade)
  return reward_item_max_grade_;
}
inline void mdRaidInfo::set_reward_item_max_grade(::google::protobuf::int32 value) {
  set_has_reward_item_max_grade();
  reward_item_max_grade_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdRaidInfo.reward_item_max_grade)
}

// -------------------------------------------------------------------

// mdMonsterInfo

// required int32 id = 1;
inline bool mdMonsterInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdMonsterInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdMonsterInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdMonsterInfo::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 mdMonsterInfo::id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdMonsterInfo.id)
  return id_;
}
inline void mdMonsterInfo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdMonsterInfo.id)
}

// required string name = 2;
inline bool mdMonsterInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdMonsterInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdMonsterInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdMonsterInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& mdMonsterInfo::name() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdMonsterInfo.name)
  return *name_;
}
inline void mdMonsterInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdMonsterInfo.name)
}
inline void mdMonsterInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:b2.protocol.masterdata.mdMonsterInfo.name)
}
inline void mdMonsterInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:b2.protocol.masterdata.mdMonsterInfo.name)
}
inline ::std::string* mdMonsterInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:b2.protocol.masterdata.mdMonsterInfo.name)
  return name_;
}
inline ::std::string* mdMonsterInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void mdMonsterInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.masterdata.mdMonsterInfo.name)
}

// required string symbol = 3;
inline bool mdMonsterInfo::has_symbol() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdMonsterInfo::set_has_symbol() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdMonsterInfo::clear_has_symbol() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdMonsterInfo::clear_symbol() {
  if (symbol_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    symbol_->clear();
  }
  clear_has_symbol();
}
inline const ::std::string& mdMonsterInfo::symbol() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdMonsterInfo.symbol)
  return *symbol_;
}
inline void mdMonsterInfo::set_symbol(const ::std::string& value) {
  set_has_symbol();
  if (symbol_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    symbol_ = new ::std::string;
  }
  symbol_->assign(value);
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdMonsterInfo.symbol)
}
inline void mdMonsterInfo::set_symbol(const char* value) {
  set_has_symbol();
  if (symbol_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    symbol_ = new ::std::string;
  }
  symbol_->assign(value);
  // @@protoc_insertion_point(field_set_char:b2.protocol.masterdata.mdMonsterInfo.symbol)
}
inline void mdMonsterInfo::set_symbol(const char* value, size_t size) {
  set_has_symbol();
  if (symbol_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    symbol_ = new ::std::string;
  }
  symbol_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:b2.protocol.masterdata.mdMonsterInfo.symbol)
}
inline ::std::string* mdMonsterInfo::mutable_symbol() {
  set_has_symbol();
  if (symbol_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    symbol_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:b2.protocol.masterdata.mdMonsterInfo.symbol)
  return symbol_;
}
inline ::std::string* mdMonsterInfo::release_symbol() {
  clear_has_symbol();
  if (symbol_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = symbol_;
    symbol_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void mdMonsterInfo::set_allocated_symbol(::std::string* symbol) {
  if (symbol_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete symbol_;
  }
  if (symbol) {
    set_has_symbol();
    symbol_ = symbol;
  } else {
    clear_has_symbol();
    symbol_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.masterdata.mdMonsterInfo.symbol)
}

// required string grade = 4;
inline bool mdMonsterInfo::has_grade() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdMonsterInfo::set_has_grade() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdMonsterInfo::clear_has_grade() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdMonsterInfo::clear_grade() {
  if (grade_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    grade_->clear();
  }
  clear_has_grade();
}
inline const ::std::string& mdMonsterInfo::grade() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdMonsterInfo.grade)
  return *grade_;
}
inline void mdMonsterInfo::set_grade(const ::std::string& value) {
  set_has_grade();
  if (grade_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    grade_ = new ::std::string;
  }
  grade_->assign(value);
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdMonsterInfo.grade)
}
inline void mdMonsterInfo::set_grade(const char* value) {
  set_has_grade();
  if (grade_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    grade_ = new ::std::string;
  }
  grade_->assign(value);
  // @@protoc_insertion_point(field_set_char:b2.protocol.masterdata.mdMonsterInfo.grade)
}
inline void mdMonsterInfo::set_grade(const char* value, size_t size) {
  set_has_grade();
  if (grade_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    grade_ = new ::std::string;
  }
  grade_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:b2.protocol.masterdata.mdMonsterInfo.grade)
}
inline ::std::string* mdMonsterInfo::mutable_grade() {
  set_has_grade();
  if (grade_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    grade_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:b2.protocol.masterdata.mdMonsterInfo.grade)
  return grade_;
}
inline ::std::string* mdMonsterInfo::release_grade() {
  clear_has_grade();
  if (grade_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = grade_;
    grade_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void mdMonsterInfo::set_allocated_grade(::std::string* grade) {
  if (grade_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete grade_;
  }
  if (grade) {
    set_has_grade();
    grade_ = grade;
  } else {
    clear_has_grade();
    grade_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.masterdata.mdMonsterInfo.grade)
}

// required string type = 5;
inline bool mdMonsterInfo::has_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdMonsterInfo::set_has_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdMonsterInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdMonsterInfo::clear_type() {
  if (type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_->clear();
  }
  clear_has_type();
}
inline const ::std::string& mdMonsterInfo::type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdMonsterInfo.type)
  return *type_;
}
inline void mdMonsterInfo::set_type(const ::std::string& value) {
  set_has_type();
  if (type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_ = new ::std::string;
  }
  type_->assign(value);
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdMonsterInfo.type)
}
inline void mdMonsterInfo::set_type(const char* value) {
  set_has_type();
  if (type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_ = new ::std::string;
  }
  type_->assign(value);
  // @@protoc_insertion_point(field_set_char:b2.protocol.masterdata.mdMonsterInfo.type)
}
inline void mdMonsterInfo::set_type(const char* value, size_t size) {
  set_has_type();
  if (type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_ = new ::std::string;
  }
  type_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:b2.protocol.masterdata.mdMonsterInfo.type)
}
inline ::std::string* mdMonsterInfo::mutable_type() {
  set_has_type();
  if (type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:b2.protocol.masterdata.mdMonsterInfo.type)
  return type_;
}
inline ::std::string* mdMonsterInfo::release_type() {
  clear_has_type();
  if (type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = type_;
    type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void mdMonsterInfo::set_allocated_type(::std::string* type) {
  if (type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete type_;
  }
  if (type) {
    set_has_type();
    type_ = type;
  } else {
    clear_has_type();
    type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.masterdata.mdMonsterInfo.type)
}

// required string desc = 6;
inline bool mdMonsterInfo::has_desc() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdMonsterInfo::set_has_desc() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdMonsterInfo::clear_has_desc() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdMonsterInfo::clear_desc() {
  if (desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_->clear();
  }
  clear_has_desc();
}
inline const ::std::string& mdMonsterInfo::desc() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdMonsterInfo.desc)
  return *desc_;
}
inline void mdMonsterInfo::set_desc(const ::std::string& value) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  desc_->assign(value);
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdMonsterInfo.desc)
}
inline void mdMonsterInfo::set_desc(const char* value) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  desc_->assign(value);
  // @@protoc_insertion_point(field_set_char:b2.protocol.masterdata.mdMonsterInfo.desc)
}
inline void mdMonsterInfo::set_desc(const char* value, size_t size) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  desc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:b2.protocol.masterdata.mdMonsterInfo.desc)
}
inline ::std::string* mdMonsterInfo::mutable_desc() {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:b2.protocol.masterdata.mdMonsterInfo.desc)
  return desc_;
}
inline ::std::string* mdMonsterInfo::release_desc() {
  clear_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = desc_;
    desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void mdMonsterInfo::set_allocated_desc(::std::string* desc) {
  if (desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete desc_;
  }
  if (desc) {
    set_has_desc();
    desc_ = desc;
  } else {
    clear_has_desc();
    desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.masterdata.mdMonsterInfo.desc)
}

// required int32 hp_scale = 7;
inline bool mdMonsterInfo::has_hp_scale() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mdMonsterInfo::set_has_hp_scale() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mdMonsterInfo::clear_has_hp_scale() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mdMonsterInfo::clear_hp_scale() {
  hp_scale_ = 0;
  clear_has_hp_scale();
}
inline ::google::protobuf::int32 mdMonsterInfo::hp_scale() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdMonsterInfo.hp_scale)
  return hp_scale_;
}
inline void mdMonsterInfo::set_hp_scale(::google::protobuf::int32 value) {
  set_has_hp_scale();
  hp_scale_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdMonsterInfo.hp_scale)
}

// required int32 attack_defense_level_scale = 8;
inline bool mdMonsterInfo::has_attack_defense_level_scale() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void mdMonsterInfo::set_has_attack_defense_level_scale() {
  _has_bits_[0] |= 0x00000080u;
}
inline void mdMonsterInfo::clear_has_attack_defense_level_scale() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void mdMonsterInfo::clear_attack_defense_level_scale() {
  attack_defense_level_scale_ = 0;
  clear_has_attack_defense_level_scale();
}
inline ::google::protobuf::int32 mdMonsterInfo::attack_defense_level_scale() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdMonsterInfo.attack_defense_level_scale)
  return attack_defense_level_scale_;
}
inline void mdMonsterInfo::set_attack_defense_level_scale(::google::protobuf::int32 value) {
  set_has_attack_defense_level_scale();
  attack_defense_level_scale_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdMonsterInfo.attack_defense_level_scale)
}

// required int32 max_armor_override = 9;
inline bool mdMonsterInfo::has_max_armor_override() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void mdMonsterInfo::set_has_max_armor_override() {
  _has_bits_[0] |= 0x00000100u;
}
inline void mdMonsterInfo::clear_has_max_armor_override() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void mdMonsterInfo::clear_max_armor_override() {
  max_armor_override_ = 0;
  clear_has_max_armor_override();
}
inline ::google::protobuf::int32 mdMonsterInfo::max_armor_override() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdMonsterInfo.max_armor_override)
  return max_armor_override_;
}
inline void mdMonsterInfo::set_max_armor_override(::google::protobuf::int32 value) {
  set_has_max_armor_override();
  max_armor_override_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdMonsterInfo.max_armor_override)
}

// -------------------------------------------------------------------

// mdGeneralLottery

// required int32 id = 1;
inline bool mdGeneralLottery::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdGeneralLottery::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdGeneralLottery::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdGeneralLottery::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 mdGeneralLottery::id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGeneralLottery.id)
  return id_;
}
inline void mdGeneralLottery::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGeneralLottery.id)
}

// required .b2.protocol.commondata.LotteryGrade grade = 2;
inline bool mdGeneralLottery::has_grade() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdGeneralLottery::set_has_grade() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdGeneralLottery::clear_has_grade() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdGeneralLottery::clear_grade() {
  grade_ = 1;
  clear_has_grade();
}
inline ::b2::protocol::commondata::LotteryGrade mdGeneralLottery::grade() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGeneralLottery.grade)
  return static_cast< ::b2::protocol::commondata::LotteryGrade >(grade_);
}
inline void mdGeneralLottery::set_grade(::b2::protocol::commondata::LotteryGrade value) {
  assert(::b2::protocol::commondata::LotteryGrade_IsValid(value));
  set_has_grade();
  grade_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGeneralLottery.grade)
}

// required .b2.protocol.commondata.Item.CharacterType character_type = 3;
inline bool mdGeneralLottery::has_character_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdGeneralLottery::set_has_character_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdGeneralLottery::clear_has_character_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdGeneralLottery::clear_character_type() {
  character_type_ = 0;
  clear_has_character_type();
}
inline ::b2::protocol::commondata::Item_CharacterType mdGeneralLottery::character_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGeneralLottery.character_type)
  return static_cast< ::b2::protocol::commondata::Item_CharacterType >(character_type_);
}
inline void mdGeneralLottery::set_character_type(::b2::protocol::commondata::Item_CharacterType value) {
  assert(::b2::protocol::commondata::Item_CharacterType_IsValid(value));
  set_has_character_type();
  character_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGeneralLottery.character_type)
}

// required .b2.protocol.commondata.EquipCategory equip_category = 4;
inline bool mdGeneralLottery::has_equip_category() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdGeneralLottery::set_has_equip_category() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdGeneralLottery::clear_has_equip_category() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdGeneralLottery::clear_equip_category() {
  equip_category_ = 0;
  clear_has_equip_category();
}
inline ::b2::protocol::commondata::EquipCategory mdGeneralLottery::equip_category() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGeneralLottery.equip_category)
  return static_cast< ::b2::protocol::commondata::EquipCategory >(equip_category_);
}
inline void mdGeneralLottery::set_equip_category(::b2::protocol::commondata::EquipCategory value) {
  assert(::b2::protocol::commondata::EquipCategory_IsValid(value));
  set_has_equip_category();
  equip_category_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGeneralLottery.equip_category)
}

// -------------------------------------------------------------------

// mdFixedGradeLottery

// required int32 id = 1;
inline bool mdFixedGradeLottery::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdFixedGradeLottery::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdFixedGradeLottery::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdFixedGradeLottery::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 mdFixedGradeLottery::id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFixedGradeLottery.id)
  return id_;
}
inline void mdFixedGradeLottery::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFixedGradeLottery.id)
}

// required .b2.protocol.commondata.Item.CharacterType character_type = 2;
inline bool mdFixedGradeLottery::has_character_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdFixedGradeLottery::set_has_character_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdFixedGradeLottery::clear_has_character_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdFixedGradeLottery::clear_character_type() {
  character_type_ = 0;
  clear_has_character_type();
}
inline ::b2::protocol::commondata::Item_CharacterType mdFixedGradeLottery::character_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFixedGradeLottery.character_type)
  return static_cast< ::b2::protocol::commondata::Item_CharacterType >(character_type_);
}
inline void mdFixedGradeLottery::set_character_type(::b2::protocol::commondata::Item_CharacterType value) {
  assert(::b2::protocol::commondata::Item_CharacterType_IsValid(value));
  set_has_character_type();
  character_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFixedGradeLottery.character_type)
}

// required .b2.protocol.commondata.EquipCategory equip_category = 3;
inline bool mdFixedGradeLottery::has_equip_category() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdFixedGradeLottery::set_has_equip_category() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdFixedGradeLottery::clear_has_equip_category() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdFixedGradeLottery::clear_equip_category() {
  equip_category_ = 0;
  clear_has_equip_category();
}
inline ::b2::protocol::commondata::EquipCategory mdFixedGradeLottery::equip_category() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFixedGradeLottery.equip_category)
  return static_cast< ::b2::protocol::commondata::EquipCategory >(equip_category_);
}
inline void mdFixedGradeLottery::set_equip_category(::b2::protocol::commondata::EquipCategory value) {
  assert(::b2::protocol::commondata::EquipCategory_IsValid(value));
  set_has_equip_category();
  equip_category_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFixedGradeLottery.equip_category)
}

// required int32 item_grade = 4;
inline bool mdFixedGradeLottery::has_item_grade() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdFixedGradeLottery::set_has_item_grade() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdFixedGradeLottery::clear_has_item_grade() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdFixedGradeLottery::clear_item_grade() {
  item_grade_ = 0;
  clear_has_item_grade();
}
inline ::google::protobuf::int32 mdFixedGradeLottery::item_grade() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFixedGradeLottery.item_grade)
  return item_grade_;
}
inline void mdFixedGradeLottery::set_item_grade(::google::protobuf::int32 value) {
  set_has_item_grade();
  item_grade_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFixedGradeLottery.item_grade)
}

// -------------------------------------------------------------------

// mdPrefixSelectiveLottery

// required int32 id = 1;
inline bool mdPrefixSelectiveLottery::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdPrefixSelectiveLottery::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdPrefixSelectiveLottery::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdPrefixSelectiveLottery::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 mdPrefixSelectiveLottery::id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdPrefixSelectiveLottery.id)
  return id_;
}
inline void mdPrefixSelectiveLottery::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdPrefixSelectiveLottery.id)
}

// required .b2.protocol.commondata.Item.CharacterType character_type = 2;
inline bool mdPrefixSelectiveLottery::has_character_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdPrefixSelectiveLottery::set_has_character_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdPrefixSelectiveLottery::clear_has_character_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdPrefixSelectiveLottery::clear_character_type() {
  character_type_ = 0;
  clear_has_character_type();
}
inline ::b2::protocol::commondata::Item_CharacterType mdPrefixSelectiveLottery::character_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdPrefixSelectiveLottery.character_type)
  return static_cast< ::b2::protocol::commondata::Item_CharacterType >(character_type_);
}
inline void mdPrefixSelectiveLottery::set_character_type(::b2::protocol::commondata::Item_CharacterType value) {
  assert(::b2::protocol::commondata::Item_CharacterType_IsValid(value));
  set_has_character_type();
  character_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdPrefixSelectiveLottery.character_type)
}

// required .b2.protocol.commondata.GroupPrefix group_id = 3;
inline bool mdPrefixSelectiveLottery::has_group_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdPrefixSelectiveLottery::set_has_group_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdPrefixSelectiveLottery::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdPrefixSelectiveLottery::clear_group_id() {
  group_id_ = 1;
  clear_has_group_id();
}
inline ::b2::protocol::commondata::GroupPrefix mdPrefixSelectiveLottery::group_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdPrefixSelectiveLottery.group_id)
  return static_cast< ::b2::protocol::commondata::GroupPrefix >(group_id_);
}
inline void mdPrefixSelectiveLottery::set_group_id(::b2::protocol::commondata::GroupPrefix value) {
  assert(::b2::protocol::commondata::GroupPrefix_IsValid(value));
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdPrefixSelectiveLottery.group_id)
}

// required .b2.protocol.commondata.EquipCategory equip_category = 4;
inline bool mdPrefixSelectiveLottery::has_equip_category() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdPrefixSelectiveLottery::set_has_equip_category() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdPrefixSelectiveLottery::clear_has_equip_category() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdPrefixSelectiveLottery::clear_equip_category() {
  equip_category_ = 0;
  clear_has_equip_category();
}
inline ::b2::protocol::commondata::EquipCategory mdPrefixSelectiveLottery::equip_category() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdPrefixSelectiveLottery.equip_category)
  return static_cast< ::b2::protocol::commondata::EquipCategory >(equip_category_);
}
inline void mdPrefixSelectiveLottery::set_equip_category(::b2::protocol::commondata::EquipCategory value) {
  assert(::b2::protocol::commondata::EquipCategory_IsValid(value));
  set_has_equip_category();
  equip_category_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdPrefixSelectiveLottery.equip_category)
}

// required int32 item_grade = 5;
inline bool mdPrefixSelectiveLottery::has_item_grade() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdPrefixSelectiveLottery::set_has_item_grade() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdPrefixSelectiveLottery::clear_has_item_grade() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdPrefixSelectiveLottery::clear_item_grade() {
  item_grade_ = 0;
  clear_has_item_grade();
}
inline ::google::protobuf::int32 mdPrefixSelectiveLottery::item_grade() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdPrefixSelectiveLottery.item_grade)
  return item_grade_;
}
inline void mdPrefixSelectiveLottery::set_item_grade(::google::protobuf::int32 value) {
  set_has_item_grade();
  item_grade_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdPrefixSelectiveLottery.item_grade)
}

// required int32 surpass_level = 6;
inline bool mdPrefixSelectiveLottery::has_surpass_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdPrefixSelectiveLottery::set_has_surpass_level() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdPrefixSelectiveLottery::clear_has_surpass_level() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdPrefixSelectiveLottery::clear_surpass_level() {
  surpass_level_ = 0;
  clear_has_surpass_level();
}
inline ::google::protobuf::int32 mdPrefixSelectiveLottery::surpass_level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdPrefixSelectiveLottery.surpass_level)
  return surpass_level_;
}
inline void mdPrefixSelectiveLottery::set_surpass_level(::google::protobuf::int32 value) {
  set_has_surpass_level();
  surpass_level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdPrefixSelectiveLottery.surpass_level)
}

// required int32 quality = 7;
inline bool mdPrefixSelectiveLottery::has_quality() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mdPrefixSelectiveLottery::set_has_quality() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mdPrefixSelectiveLottery::clear_has_quality() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mdPrefixSelectiveLottery::clear_quality() {
  quality_ = 0;
  clear_has_quality();
}
inline ::google::protobuf::int32 mdPrefixSelectiveLottery::quality() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdPrefixSelectiveLottery.quality)
  return quality_;
}
inline void mdPrefixSelectiveLottery::set_quality(::google::protobuf::int32 value) {
  set_has_quality();
  quality_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdPrefixSelectiveLottery.quality)
}

// -------------------------------------------------------------------

// mdSelectiveLottery

// required int32 id = 1;
inline bool mdSelectiveLottery::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdSelectiveLottery::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdSelectiveLottery::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdSelectiveLottery::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 mdSelectiveLottery::id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSelectiveLottery.id)
  return id_;
}
inline void mdSelectiveLottery::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSelectiveLottery.id)
}

// required .b2.protocol.commondata.Item.CharacterType character_type = 2;
inline bool mdSelectiveLottery::has_character_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdSelectiveLottery::set_has_character_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdSelectiveLottery::clear_has_character_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdSelectiveLottery::clear_character_type() {
  character_type_ = 0;
  clear_has_character_type();
}
inline ::b2::protocol::commondata::Item_CharacterType mdSelectiveLottery::character_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSelectiveLottery.character_type)
  return static_cast< ::b2::protocol::commondata::Item_CharacterType >(character_type_);
}
inline void mdSelectiveLottery::set_character_type(::b2::protocol::commondata::Item_CharacterType value) {
  assert(::b2::protocol::commondata::Item_CharacterType_IsValid(value));
  set_has_character_type();
  character_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSelectiveLottery.character_type)
}

// required .b2.protocol.commondata.EquipCategory equip_category = 3;
inline bool mdSelectiveLottery::has_equip_category() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdSelectiveLottery::set_has_equip_category() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdSelectiveLottery::clear_has_equip_category() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdSelectiveLottery::clear_equip_category() {
  equip_category_ = 0;
  clear_has_equip_category();
}
inline ::b2::protocol::commondata::EquipCategory mdSelectiveLottery::equip_category() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSelectiveLottery.equip_category)
  return static_cast< ::b2::protocol::commondata::EquipCategory >(equip_category_);
}
inline void mdSelectiveLottery::set_equip_category(::b2::protocol::commondata::EquipCategory value) {
  assert(::b2::protocol::commondata::EquipCategory_IsValid(value));
  set_has_equip_category();
  equip_category_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSelectiveLottery.equip_category)
}

// required int32 item_grade = 4;
inline bool mdSelectiveLottery::has_item_grade() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdSelectiveLottery::set_has_item_grade() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdSelectiveLottery::clear_has_item_grade() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdSelectiveLottery::clear_item_grade() {
  item_grade_ = 0;
  clear_has_item_grade();
}
inline ::google::protobuf::int32 mdSelectiveLottery::item_grade() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSelectiveLottery.item_grade)
  return item_grade_;
}
inline void mdSelectiveLottery::set_item_grade(::google::protobuf::int32 value) {
  set_has_item_grade();
  item_grade_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSelectiveLottery.item_grade)
}

// -------------------------------------------------------------------

// mdAdditionalMatchCost

// required int32 count = 1;
inline bool mdAdditionalMatchCost::has_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdAdditionalMatchCost::set_has_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdAdditionalMatchCost::clear_has_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdAdditionalMatchCost::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 mdAdditionalMatchCost::count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdAdditionalMatchCost.count)
  return count_;
}
inline void mdAdditionalMatchCost::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdAdditionalMatchCost.count)
}

// required int32 cost = 2;
inline bool mdAdditionalMatchCost::has_cost() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdAdditionalMatchCost::set_has_cost() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdAdditionalMatchCost::clear_has_cost() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdAdditionalMatchCost::clear_cost() {
  cost_ = 0;
  clear_has_cost();
}
inline ::google::protobuf::int32 mdAdditionalMatchCost::cost() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdAdditionalMatchCost.cost)
  return cost_;
}
inline void mdAdditionalMatchCost::set_cost(::google::protobuf::int32 value) {
  set_has_cost();
  cost_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdAdditionalMatchCost.cost)
}

// -------------------------------------------------------------------

// mdDuelRewardBoxInfo

// required .b2.protocol.commondata.DuelMode duel_mode = 1;
inline bool mdDuelRewardBoxInfo::has_duel_mode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdDuelRewardBoxInfo::set_has_duel_mode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdDuelRewardBoxInfo::clear_has_duel_mode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdDuelRewardBoxInfo::clear_duel_mode() {
  duel_mode_ = 0;
  clear_has_duel_mode();
}
inline ::b2::protocol::commondata::DuelMode mdDuelRewardBoxInfo::duel_mode() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDuelRewardBoxInfo.duel_mode)
  return static_cast< ::b2::protocol::commondata::DuelMode >(duel_mode_);
}
inline void mdDuelRewardBoxInfo::set_duel_mode(::b2::protocol::commondata::DuelMode value) {
  assert(::b2::protocol::commondata::DuelMode_IsValid(value));
  set_has_duel_mode();
  duel_mode_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDuelRewardBoxInfo.duel_mode)
}

// required .b2.protocol.commondata.RewardBoxGrade grade = 2;
inline bool mdDuelRewardBoxInfo::has_grade() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdDuelRewardBoxInfo::set_has_grade() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdDuelRewardBoxInfo::clear_has_grade() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdDuelRewardBoxInfo::clear_grade() {
  grade_ = 0;
  clear_has_grade();
}
inline ::b2::protocol::commondata::RewardBoxGrade mdDuelRewardBoxInfo::grade() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDuelRewardBoxInfo.grade)
  return static_cast< ::b2::protocol::commondata::RewardBoxGrade >(grade_);
}
inline void mdDuelRewardBoxInfo::set_grade(::b2::protocol::commondata::RewardBoxGrade value) {
  assert(::b2::protocol::commondata::RewardBoxGrade_IsValid(value));
  set_has_grade();
  grade_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDuelRewardBoxInfo.grade)
}

// required int32 win_count = 3;
inline bool mdDuelRewardBoxInfo::has_win_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdDuelRewardBoxInfo::set_has_win_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdDuelRewardBoxInfo::clear_has_win_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdDuelRewardBoxInfo::clear_win_count() {
  win_count_ = 0;
  clear_has_win_count();
}
inline ::google::protobuf::int32 mdDuelRewardBoxInfo::win_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDuelRewardBoxInfo.win_count)
  return win_count_;
}
inline void mdDuelRewardBoxInfo::set_win_count(::google::protobuf::int32 value) {
  set_has_win_count();
  win_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDuelRewardBoxInfo.win_count)
}

// repeated int32 reward_group_ids = 10;
inline int mdDuelRewardBoxInfo::reward_group_ids_size() const {
  return reward_group_ids_.size();
}
inline void mdDuelRewardBoxInfo::clear_reward_group_ids() {
  reward_group_ids_.Clear();
}
inline ::google::protobuf::int32 mdDuelRewardBoxInfo::reward_group_ids(int index) const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDuelRewardBoxInfo.reward_group_ids)
  return reward_group_ids_.Get(index);
}
inline void mdDuelRewardBoxInfo::set_reward_group_ids(int index, ::google::protobuf::int32 value) {
  reward_group_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDuelRewardBoxInfo.reward_group_ids)
}
inline void mdDuelRewardBoxInfo::add_reward_group_ids(::google::protobuf::int32 value) {
  reward_group_ids_.Add(value);
  // @@protoc_insertion_point(field_add:b2.protocol.masterdata.mdDuelRewardBoxInfo.reward_group_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
mdDuelRewardBoxInfo::reward_group_ids() const {
  // @@protoc_insertion_point(field_list:b2.protocol.masterdata.mdDuelRewardBoxInfo.reward_group_ids)
  return reward_group_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
mdDuelRewardBoxInfo::mutable_reward_group_ids() {
  // @@protoc_insertion_point(field_mutable_list:b2.protocol.masterdata.mdDuelRewardBoxInfo.reward_group_ids)
  return &reward_group_ids_;
}

// -------------------------------------------------------------------

// mdRandomRewardGroupInfo

// required int32 group_id = 1;
inline bool mdRandomRewardGroupInfo::has_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdRandomRewardGroupInfo::set_has_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdRandomRewardGroupInfo::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdRandomRewardGroupInfo::clear_group_id() {
  group_id_ = 0;
  clear_has_group_id();
}
inline ::google::protobuf::int32 mdRandomRewardGroupInfo::group_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdRandomRewardGroupInfo.group_id)
  return group_id_;
}
inline void mdRandomRewardGroupInfo::set_group_id(::google::protobuf::int32 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdRandomRewardGroupInfo.group_id)
}

// required int32 index = 2;
inline bool mdRandomRewardGroupInfo::has_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdRandomRewardGroupInfo::set_has_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdRandomRewardGroupInfo::clear_has_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdRandomRewardGroupInfo::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 mdRandomRewardGroupInfo::index() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdRandomRewardGroupInfo.index)
  return index_;
}
inline void mdRandomRewardGroupInfo::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdRandomRewardGroupInfo.index)
}

// required int32 reward_id = 3;
inline bool mdRandomRewardGroupInfo::has_reward_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdRandomRewardGroupInfo::set_has_reward_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdRandomRewardGroupInfo::clear_has_reward_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdRandomRewardGroupInfo::clear_reward_id() {
  reward_id_ = 0;
  clear_has_reward_id();
}
inline ::google::protobuf::int32 mdRandomRewardGroupInfo::reward_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdRandomRewardGroupInfo.reward_id)
  return reward_id_;
}
inline void mdRandomRewardGroupInfo::set_reward_id(::google::protobuf::int32 value) {
  set_has_reward_id();
  reward_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdRandomRewardGroupInfo.reward_id)
}

// required int32 rate = 4;
inline bool mdRandomRewardGroupInfo::has_rate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdRandomRewardGroupInfo::set_has_rate() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdRandomRewardGroupInfo::clear_has_rate() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdRandomRewardGroupInfo::clear_rate() {
  rate_ = 0;
  clear_has_rate();
}
inline ::google::protobuf::int32 mdRandomRewardGroupInfo::rate() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdRandomRewardGroupInfo.rate)
  return rate_;
}
inline void mdRandomRewardGroupInfo::set_rate(::google::protobuf::int32 value) {
  set_has_rate();
  rate_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdRandomRewardGroupInfo.rate)
}

// required int32 min_count = 5;
inline bool mdRandomRewardGroupInfo::has_min_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdRandomRewardGroupInfo::set_has_min_count() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdRandomRewardGroupInfo::clear_has_min_count() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdRandomRewardGroupInfo::clear_min_count() {
  min_count_ = 0;
  clear_has_min_count();
}
inline ::google::protobuf::int32 mdRandomRewardGroupInfo::min_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdRandomRewardGroupInfo.min_count)
  return min_count_;
}
inline void mdRandomRewardGroupInfo::set_min_count(::google::protobuf::int32 value) {
  set_has_min_count();
  min_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdRandomRewardGroupInfo.min_count)
}

// required int32 max_count = 6;
inline bool mdRandomRewardGroupInfo::has_max_count() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdRandomRewardGroupInfo::set_has_max_count() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdRandomRewardGroupInfo::clear_has_max_count() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdRandomRewardGroupInfo::clear_max_count() {
  max_count_ = 0;
  clear_has_max_count();
}
inline ::google::protobuf::int32 mdRandomRewardGroupInfo::max_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdRandomRewardGroupInfo.max_count)
  return max_count_;
}
inline void mdRandomRewardGroupInfo::set_max_count(::google::protobuf::int32 value) {
  set_has_max_count();
  max_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdRandomRewardGroupInfo.max_count)
}

// -------------------------------------------------------------------

// mdAssaultVictoryRewardInfo

// required .b2.protocol.commondata.MatchResult.TYPE match_result = 1;
inline bool mdAssaultVictoryRewardInfo::has_match_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdAssaultVictoryRewardInfo::set_has_match_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdAssaultVictoryRewardInfo::clear_has_match_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdAssaultVictoryRewardInfo::clear_match_result() {
  match_result_ = 0;
  clear_has_match_result();
}
inline ::b2::protocol::commondata::MatchResult_TYPE mdAssaultVictoryRewardInfo::match_result() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdAssaultVictoryRewardInfo.match_result)
  return static_cast< ::b2::protocol::commondata::MatchResult_TYPE >(match_result_);
}
inline void mdAssaultVictoryRewardInfo::set_match_result(::b2::protocol::commondata::MatchResult_TYPE value) {
  assert(::b2::protocol::commondata::MatchResult_TYPE_IsValid(value));
  set_has_match_result();
  match_result_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdAssaultVictoryRewardInfo.match_result)
}

// required int32 reward_id = 2;
inline bool mdAssaultVictoryRewardInfo::has_reward_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdAssaultVictoryRewardInfo::set_has_reward_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdAssaultVictoryRewardInfo::clear_has_reward_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdAssaultVictoryRewardInfo::clear_reward_id() {
  reward_id_ = 0;
  clear_has_reward_id();
}
inline ::google::protobuf::int32 mdAssaultVictoryRewardInfo::reward_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdAssaultVictoryRewardInfo.reward_id)
  return reward_id_;
}
inline void mdAssaultVictoryRewardInfo::set_reward_id(::google::protobuf::int32 value) {
  set_has_reward_id();
  reward_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdAssaultVictoryRewardInfo.reward_id)
}

// required int32 reward_count = 3;
inline bool mdAssaultVictoryRewardInfo::has_reward_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdAssaultVictoryRewardInfo::set_has_reward_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdAssaultVictoryRewardInfo::clear_has_reward_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdAssaultVictoryRewardInfo::clear_reward_count() {
  reward_count_ = 0;
  clear_has_reward_count();
}
inline ::google::protobuf::int32 mdAssaultVictoryRewardInfo::reward_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdAssaultVictoryRewardInfo.reward_count)
  return reward_count_;
}
inline void mdAssaultVictoryRewardInfo::set_reward_count(::google::protobuf::int32 value) {
  set_has_reward_count();
  reward_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdAssaultVictoryRewardInfo.reward_count)
}

// -------------------------------------------------------------------

// mdAssaultMvpRewardInfo

// required int32 reward_id = 1;
inline bool mdAssaultMvpRewardInfo::has_reward_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdAssaultMvpRewardInfo::set_has_reward_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdAssaultMvpRewardInfo::clear_has_reward_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdAssaultMvpRewardInfo::clear_reward_id() {
  reward_id_ = 0;
  clear_has_reward_id();
}
inline ::google::protobuf::int32 mdAssaultMvpRewardInfo::reward_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdAssaultMvpRewardInfo.reward_id)
  return reward_id_;
}
inline void mdAssaultMvpRewardInfo::set_reward_id(::google::protobuf::int32 value) {
  set_has_reward_id();
  reward_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdAssaultMvpRewardInfo.reward_id)
}

// required int32 reward_min_count = 2;
inline bool mdAssaultMvpRewardInfo::has_reward_min_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdAssaultMvpRewardInfo::set_has_reward_min_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdAssaultMvpRewardInfo::clear_has_reward_min_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdAssaultMvpRewardInfo::clear_reward_min_count() {
  reward_min_count_ = 0;
  clear_has_reward_min_count();
}
inline ::google::protobuf::int32 mdAssaultMvpRewardInfo::reward_min_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdAssaultMvpRewardInfo.reward_min_count)
  return reward_min_count_;
}
inline void mdAssaultMvpRewardInfo::set_reward_min_count(::google::protobuf::int32 value) {
  set_has_reward_min_count();
  reward_min_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdAssaultMvpRewardInfo.reward_min_count)
}

// required int32 reward_max_count = 3;
inline bool mdAssaultMvpRewardInfo::has_reward_max_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdAssaultMvpRewardInfo::set_has_reward_max_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdAssaultMvpRewardInfo::clear_has_reward_max_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdAssaultMvpRewardInfo::clear_reward_max_count() {
  reward_max_count_ = 0;
  clear_has_reward_max_count();
}
inline ::google::protobuf::int32 mdAssaultMvpRewardInfo::reward_max_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdAssaultMvpRewardInfo.reward_max_count)
  return reward_max_count_;
}
inline void mdAssaultMvpRewardInfo::set_reward_max_count(::google::protobuf::int32 value) {
  set_has_reward_max_count();
  reward_max_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdAssaultMvpRewardInfo.reward_max_count)
}

// -------------------------------------------------------------------

// mdCollectionReward

// required .b2.protocol.commondata.CollectionCategory collection_category = 1;
inline bool mdCollectionReward::has_collection_category() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdCollectionReward::set_has_collection_category() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdCollectionReward::clear_has_collection_category() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdCollectionReward::clear_collection_category() {
  collection_category_ = 1;
  clear_has_collection_category();
}
inline ::b2::protocol::commondata::CollectionCategory mdCollectionReward::collection_category() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCollectionReward.collection_category)
  return static_cast< ::b2::protocol::commondata::CollectionCategory >(collection_category_);
}
inline void mdCollectionReward::set_collection_category(::b2::protocol::commondata::CollectionCategory value) {
  assert(::b2::protocol::commondata::CollectionCategory_IsValid(value));
  set_has_collection_category();
  collection_category_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdCollectionReward.collection_category)
}

// required int32 grade = 2;
inline bool mdCollectionReward::has_grade() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdCollectionReward::set_has_grade() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdCollectionReward::clear_has_grade() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdCollectionReward::clear_grade() {
  grade_ = 0;
  clear_has_grade();
}
inline ::google::protobuf::int32 mdCollectionReward::grade() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCollectionReward.grade)
  return grade_;
}
inline void mdCollectionReward::set_grade(::google::protobuf::int32 value) {
  set_has_grade();
  grade_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdCollectionReward.grade)
}

// required int32 reward_id = 3;
inline bool mdCollectionReward::has_reward_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdCollectionReward::set_has_reward_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdCollectionReward::clear_has_reward_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdCollectionReward::clear_reward_id() {
  reward_id_ = 0;
  clear_has_reward_id();
}
inline ::google::protobuf::int32 mdCollectionReward::reward_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCollectionReward.reward_id)
  return reward_id_;
}
inline void mdCollectionReward::set_reward_id(::google::protobuf::int32 value) {
  set_has_reward_id();
  reward_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdCollectionReward.reward_id)
}

// required int32 reward_count = 4;
inline bool mdCollectionReward::has_reward_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdCollectionReward::set_has_reward_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdCollectionReward::clear_has_reward_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdCollectionReward::clear_reward_count() {
  reward_count_ = 0;
  clear_has_reward_count();
}
inline ::google::protobuf::int32 mdCollectionReward::reward_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdCollectionReward.reward_count)
  return reward_count_;
}
inline void mdCollectionReward::set_reward_count(::google::protobuf::int32 value) {
  set_has_reward_count();
  reward_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdCollectionReward.reward_count)
}

// -------------------------------------------------------------------

// mdItemSet

// required int32 set_id = 1;
inline bool mdItemSet::has_set_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdItemSet::set_has_set_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdItemSet::clear_has_set_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdItemSet::clear_set_id() {
  set_id_ = 0;
  clear_has_set_id();
}
inline ::google::protobuf::int32 mdItemSet::set_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemSet.set_id)
  return set_id_;
}
inline void mdItemSet::set_set_id(::google::protobuf::int32 value) {
  set_has_set_id();
  set_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemSet.set_id)
}

// required string name = 2;
inline bool mdItemSet::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdItemSet::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdItemSet::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdItemSet::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& mdItemSet::name() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemSet.name)
  return *name_;
}
inline void mdItemSet::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemSet.name)
}
inline void mdItemSet::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:b2.protocol.masterdata.mdItemSet.name)
}
inline void mdItemSet::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:b2.protocol.masterdata.mdItemSet.name)
}
inline ::std::string* mdItemSet::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:b2.protocol.masterdata.mdItemSet.name)
  return name_;
}
inline ::std::string* mdItemSet::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void mdItemSet::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.masterdata.mdItemSet.name)
}

// required int32 set_option_id_set2 = 3;
inline bool mdItemSet::has_set_option_id_set2() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdItemSet::set_has_set_option_id_set2() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdItemSet::clear_has_set_option_id_set2() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdItemSet::clear_set_option_id_set2() {
  set_option_id_set2_ = 0;
  clear_has_set_option_id_set2();
}
inline ::google::protobuf::int32 mdItemSet::set_option_id_set2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemSet.set_option_id_set2)
  return set_option_id_set2_;
}
inline void mdItemSet::set_set_option_id_set2(::google::protobuf::int32 value) {
  set_has_set_option_id_set2();
  set_option_id_set2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemSet.set_option_id_set2)
}

// required float set_value_set2 = 4;
inline bool mdItemSet::has_set_value_set2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdItemSet::set_has_set_value_set2() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdItemSet::clear_has_set_value_set2() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdItemSet::clear_set_value_set2() {
  set_value_set2_ = 0;
  clear_has_set_value_set2();
}
inline float mdItemSet::set_value_set2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemSet.set_value_set2)
  return set_value_set2_;
}
inline void mdItemSet::set_set_value_set2(float value) {
  set_has_set_value_set2();
  set_value_set2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemSet.set_value_set2)
}

// required int32 set_option_id_set3 = 5;
inline bool mdItemSet::has_set_option_id_set3() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdItemSet::set_has_set_option_id_set3() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdItemSet::clear_has_set_option_id_set3() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdItemSet::clear_set_option_id_set3() {
  set_option_id_set3_ = 0;
  clear_has_set_option_id_set3();
}
inline ::google::protobuf::int32 mdItemSet::set_option_id_set3() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemSet.set_option_id_set3)
  return set_option_id_set3_;
}
inline void mdItemSet::set_set_option_id_set3(::google::protobuf::int32 value) {
  set_has_set_option_id_set3();
  set_option_id_set3_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemSet.set_option_id_set3)
}

// required float set_value_set3 = 6;
inline bool mdItemSet::has_set_value_set3() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdItemSet::set_has_set_value_set3() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdItemSet::clear_has_set_value_set3() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdItemSet::clear_set_value_set3() {
  set_value_set3_ = 0;
  clear_has_set_value_set3();
}
inline float mdItemSet::set_value_set3() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemSet.set_value_set3)
  return set_value_set3_;
}
inline void mdItemSet::set_set_value_set3(float value) {
  set_has_set_value_set3();
  set_value_set3_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemSet.set_value_set3)
}

// required int32 set_option_id_set4 = 7;
inline bool mdItemSet::has_set_option_id_set4() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mdItemSet::set_has_set_option_id_set4() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mdItemSet::clear_has_set_option_id_set4() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mdItemSet::clear_set_option_id_set4() {
  set_option_id_set4_ = 0;
  clear_has_set_option_id_set4();
}
inline ::google::protobuf::int32 mdItemSet::set_option_id_set4() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemSet.set_option_id_set4)
  return set_option_id_set4_;
}
inline void mdItemSet::set_set_option_id_set4(::google::protobuf::int32 value) {
  set_has_set_option_id_set4();
  set_option_id_set4_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemSet.set_option_id_set4)
}

// required float set_value_set4 = 8;
inline bool mdItemSet::has_set_value_set4() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void mdItemSet::set_has_set_value_set4() {
  _has_bits_[0] |= 0x00000080u;
}
inline void mdItemSet::clear_has_set_value_set4() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void mdItemSet::clear_set_value_set4() {
  set_value_set4_ = 0;
  clear_has_set_value_set4();
}
inline float mdItemSet::set_value_set4() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdItemSet.set_value_set4)
  return set_value_set4_;
}
inline void mdItemSet::set_set_value_set4(float value) {
  set_has_set_value_set4();
  set_value_set4_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdItemSet.set_value_set4)
}

// -------------------------------------------------------------------

// mdSelectItemOption

// required int32 option_id = 1;
inline bool mdSelectItemOption::has_option_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdSelectItemOption::set_has_option_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdSelectItemOption::clear_has_option_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdSelectItemOption::clear_option_id() {
  option_id_ = 0;
  clear_has_option_id();
}
inline ::google::protobuf::int32 mdSelectItemOption::option_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSelectItemOption.option_id)
  return option_id_;
}
inline void mdSelectItemOption::set_option_id(::google::protobuf::int32 value) {
  set_has_option_id();
  option_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSelectItemOption.option_id)
}

// required int32 grade = 2;
inline bool mdSelectItemOption::has_grade() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdSelectItemOption::set_has_grade() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdSelectItemOption::clear_has_grade() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdSelectItemOption::clear_grade() {
  grade_ = 0;
  clear_has_grade();
}
inline ::google::protobuf::int32 mdSelectItemOption::grade() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSelectItemOption.grade)
  return grade_;
}
inline void mdSelectItemOption::set_grade(::google::protobuf::int32 value) {
  set_has_grade();
  grade_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSelectItemOption.grade)
}

// required int32 equip_position = 3;
inline bool mdSelectItemOption::has_equip_position() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdSelectItemOption::set_has_equip_position() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdSelectItemOption::clear_has_equip_position() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdSelectItemOption::clear_equip_position() {
  equip_position_ = 0;
  clear_has_equip_position();
}
inline ::google::protobuf::int32 mdSelectItemOption::equip_position() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSelectItemOption.equip_position)
  return equip_position_;
}
inline void mdSelectItemOption::set_equip_position(::google::protobuf::int32 value) {
  set_has_equip_position();
  equip_position_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSelectItemOption.equip_position)
}

// required float prob = 4;
inline bool mdSelectItemOption::has_prob() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdSelectItemOption::set_has_prob() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdSelectItemOption::clear_has_prob() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdSelectItemOption::clear_prob() {
  prob_ = 0;
  clear_has_prob();
}
inline float mdSelectItemOption::prob() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSelectItemOption.prob)
  return prob_;
}
inline void mdSelectItemOption::set_prob(float value) {
  set_has_prob();
  prob_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSelectItemOption.prob)
}

// required int32 decimal_point = 5;
inline bool mdSelectItemOption::has_decimal_point() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdSelectItemOption::set_has_decimal_point() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdSelectItemOption::clear_has_decimal_point() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdSelectItemOption::clear_decimal_point() {
  decimal_point_ = 0;
  clear_has_decimal_point();
}
inline ::google::protobuf::int32 mdSelectItemOption::decimal_point() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSelectItemOption.decimal_point)
  return decimal_point_;
}
inline void mdSelectItemOption::set_decimal_point(::google::protobuf::int32 value) {
  set_has_decimal_point();
  decimal_point_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSelectItemOption.decimal_point)
}

// required float min = 6;
inline bool mdSelectItemOption::has_min() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdSelectItemOption::set_has_min() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdSelectItemOption::clear_has_min() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdSelectItemOption::clear_min() {
  min_ = 0;
  clear_has_min();
}
inline float mdSelectItemOption::min() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSelectItemOption.min)
  return min_;
}
inline void mdSelectItemOption::set_min(float value) {
  set_has_min();
  min_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSelectItemOption.min)
}

// required float max = 7;
inline bool mdSelectItemOption::has_max() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mdSelectItemOption::set_has_max() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mdSelectItemOption::clear_has_max() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mdSelectItemOption::clear_max() {
  max_ = 0;
  clear_has_max();
}
inline float mdSelectItemOption::max() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSelectItemOption.max)
  return max_;
}
inline void mdSelectItemOption::set_max(float value) {
  set_has_max();
  max_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSelectItemOption.max)
}

// -------------------------------------------------------------------

// mdSelectItemSealOption

// required int32 option_id = 1;
inline bool mdSelectItemSealOption::has_option_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdSelectItemSealOption::set_has_option_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdSelectItemSealOption::clear_has_option_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdSelectItemSealOption::clear_option_id() {
  option_id_ = 0;
  clear_has_option_id();
}
inline ::google::protobuf::int32 mdSelectItemSealOption::option_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSelectItemSealOption.option_id)
  return option_id_;
}
inline void mdSelectItemSealOption::set_option_id(::google::protobuf::int32 value) {
  set_has_option_id();
  option_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSelectItemSealOption.option_id)
}

// required int32 slot = 2;
inline bool mdSelectItemSealOption::has_slot() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdSelectItemSealOption::set_has_slot() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdSelectItemSealOption::clear_has_slot() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdSelectItemSealOption::clear_slot() {
  slot_ = 0;
  clear_has_slot();
}
inline ::google::protobuf::int32 mdSelectItemSealOption::slot() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSelectItemSealOption.slot)
  return slot_;
}
inline void mdSelectItemSealOption::set_slot(::google::protobuf::int32 value) {
  set_has_slot();
  slot_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSelectItemSealOption.slot)
}

// required float prob = 3;
inline bool mdSelectItemSealOption::has_prob() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdSelectItemSealOption::set_has_prob() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdSelectItemSealOption::clear_has_prob() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdSelectItemSealOption::clear_prob() {
  prob_ = 0;
  clear_has_prob();
}
inline float mdSelectItemSealOption::prob() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSelectItemSealOption.prob)
  return prob_;
}
inline void mdSelectItemSealOption::set_prob(float value) {
  set_has_prob();
  prob_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSelectItemSealOption.prob)
}

// required int32 decimal_point = 4;
inline bool mdSelectItemSealOption::has_decimal_point() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdSelectItemSealOption::set_has_decimal_point() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdSelectItemSealOption::clear_has_decimal_point() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdSelectItemSealOption::clear_decimal_point() {
  decimal_point_ = 0;
  clear_has_decimal_point();
}
inline ::google::protobuf::int32 mdSelectItemSealOption::decimal_point() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSelectItemSealOption.decimal_point)
  return decimal_point_;
}
inline void mdSelectItemSealOption::set_decimal_point(::google::protobuf::int32 value) {
  set_has_decimal_point();
  decimal_point_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSelectItemSealOption.decimal_point)
}

// required float min = 5;
inline bool mdSelectItemSealOption::has_min() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdSelectItemSealOption::set_has_min() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdSelectItemSealOption::clear_has_min() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdSelectItemSealOption::clear_min() {
  min_ = 0;
  clear_has_min();
}
inline float mdSelectItemSealOption::min() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSelectItemSealOption.min)
  return min_;
}
inline void mdSelectItemSealOption::set_min(float value) {
  set_has_min();
  min_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSelectItemSealOption.min)
}

// required float max = 6;
inline bool mdSelectItemSealOption::has_max() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdSelectItemSealOption::set_has_max() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdSelectItemSealOption::clear_has_max() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdSelectItemSealOption::clear_max() {
  max_ = 0;
  clear_has_max();
}
inline float mdSelectItemSealOption::max() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSelectItemSealOption.max)
  return max_;
}
inline void mdSelectItemSealOption::set_max(float value) {
  set_has_max();
  max_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSelectItemSealOption.max)
}

// -------------------------------------------------------------------

// mdEventAttendance

// required int32 event_id = 1;
inline bool mdEventAttendance::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdEventAttendance::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdEventAttendance::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdEventAttendance::clear_event_id() {
  event_id_ = 0;
  clear_has_event_id();
}
inline ::google::protobuf::int32 mdEventAttendance::event_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdEventAttendance.event_id)
  return event_id_;
}
inline void mdEventAttendance::set_event_id(::google::protobuf::int32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdEventAttendance.event_id)
}

// required string title = 2;
inline bool mdEventAttendance::has_title() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdEventAttendance::set_has_title() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdEventAttendance::clear_has_title() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdEventAttendance::clear_title() {
  if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_->clear();
  }
  clear_has_title();
}
inline const ::std::string& mdEventAttendance::title() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdEventAttendance.title)
  return *title_;
}
inline void mdEventAttendance::set_title(const ::std::string& value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  title_->assign(value);
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdEventAttendance.title)
}
inline void mdEventAttendance::set_title(const char* value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  title_->assign(value);
  // @@protoc_insertion_point(field_set_char:b2.protocol.masterdata.mdEventAttendance.title)
}
inline void mdEventAttendance::set_title(const char* value, size_t size) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  title_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:b2.protocol.masterdata.mdEventAttendance.title)
}
inline ::std::string* mdEventAttendance::mutable_title() {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:b2.protocol.masterdata.mdEventAttendance.title)
  return title_;
}
inline ::std::string* mdEventAttendance::release_title() {
  clear_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = title_;
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void mdEventAttendance::set_allocated_title(::std::string* title) {
  if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete title_;
  }
  if (title) {
    set_has_title();
    title_ = title;
  } else {
    clear_has_title();
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.masterdata.mdEventAttendance.title)
}

// required int32 total_attendance_days = 3;
inline bool mdEventAttendance::has_total_attendance_days() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdEventAttendance::set_has_total_attendance_days() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdEventAttendance::clear_has_total_attendance_days() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdEventAttendance::clear_total_attendance_days() {
  total_attendance_days_ = 0;
  clear_has_total_attendance_days();
}
inline ::google::protobuf::int32 mdEventAttendance::total_attendance_days() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdEventAttendance.total_attendance_days)
  return total_attendance_days_;
}
inline void mdEventAttendance::set_total_attendance_days(::google::protobuf::int32 value) {
  set_has_total_attendance_days();
  total_attendance_days_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdEventAttendance.total_attendance_days)
}

// required int64 start_time = 4;
inline bool mdEventAttendance::has_start_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdEventAttendance::set_has_start_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdEventAttendance::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdEventAttendance::clear_start_time() {
  start_time_ = GOOGLE_LONGLONG(0);
  clear_has_start_time();
}
inline ::google::protobuf::int64 mdEventAttendance::start_time() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdEventAttendance.start_time)
  return start_time_;
}
inline void mdEventAttendance::set_start_time(::google::protobuf::int64 value) {
  set_has_start_time();
  start_time_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdEventAttendance.start_time)
}

// required int64 end_time = 5;
inline bool mdEventAttendance::has_end_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdEventAttendance::set_has_end_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdEventAttendance::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdEventAttendance::clear_end_time() {
  end_time_ = GOOGLE_LONGLONG(0);
  clear_has_end_time();
}
inline ::google::protobuf::int64 mdEventAttendance::end_time() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdEventAttendance.end_time)
  return end_time_;
}
inline void mdEventAttendance::set_end_time(::google::protobuf::int64 value) {
  set_has_end_time();
  end_time_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdEventAttendance.end_time)
}

// required string explain = 6;
inline bool mdEventAttendance::has_explain() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdEventAttendance::set_has_explain() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdEventAttendance::clear_has_explain() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdEventAttendance::clear_explain() {
  if (explain_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    explain_->clear();
  }
  clear_has_explain();
}
inline const ::std::string& mdEventAttendance::explain() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdEventAttendance.explain)
  return *explain_;
}
inline void mdEventAttendance::set_explain(const ::std::string& value) {
  set_has_explain();
  if (explain_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    explain_ = new ::std::string;
  }
  explain_->assign(value);
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdEventAttendance.explain)
}
inline void mdEventAttendance::set_explain(const char* value) {
  set_has_explain();
  if (explain_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    explain_ = new ::std::string;
  }
  explain_->assign(value);
  // @@protoc_insertion_point(field_set_char:b2.protocol.masterdata.mdEventAttendance.explain)
}
inline void mdEventAttendance::set_explain(const char* value, size_t size) {
  set_has_explain();
  if (explain_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    explain_ = new ::std::string;
  }
  explain_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:b2.protocol.masterdata.mdEventAttendance.explain)
}
inline ::std::string* mdEventAttendance::mutable_explain() {
  set_has_explain();
  if (explain_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    explain_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:b2.protocol.masterdata.mdEventAttendance.explain)
  return explain_;
}
inline ::std::string* mdEventAttendance::release_explain() {
  clear_has_explain();
  if (explain_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = explain_;
    explain_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void mdEventAttendance::set_allocated_explain(::std::string* explain) {
  if (explain_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete explain_;
  }
  if (explain) {
    set_has_explain();
    explain_ = explain;
  } else {
    clear_has_explain();
    explain_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.masterdata.mdEventAttendance.explain)
}

// required string event_url = 7;
inline bool mdEventAttendance::has_event_url() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mdEventAttendance::set_has_event_url() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mdEventAttendance::clear_has_event_url() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mdEventAttendance::clear_event_url() {
  if (event_url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    event_url_->clear();
  }
  clear_has_event_url();
}
inline const ::std::string& mdEventAttendance::event_url() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdEventAttendance.event_url)
  return *event_url_;
}
inline void mdEventAttendance::set_event_url(const ::std::string& value) {
  set_has_event_url();
  if (event_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    event_url_ = new ::std::string;
  }
  event_url_->assign(value);
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdEventAttendance.event_url)
}
inline void mdEventAttendance::set_event_url(const char* value) {
  set_has_event_url();
  if (event_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    event_url_ = new ::std::string;
  }
  event_url_->assign(value);
  // @@protoc_insertion_point(field_set_char:b2.protocol.masterdata.mdEventAttendance.event_url)
}
inline void mdEventAttendance::set_event_url(const char* value, size_t size) {
  set_has_event_url();
  if (event_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    event_url_ = new ::std::string;
  }
  event_url_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:b2.protocol.masterdata.mdEventAttendance.event_url)
}
inline ::std::string* mdEventAttendance::mutable_event_url() {
  set_has_event_url();
  if (event_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    event_url_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:b2.protocol.masterdata.mdEventAttendance.event_url)
  return event_url_;
}
inline ::std::string* mdEventAttendance::release_event_url() {
  clear_has_event_url();
  if (event_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = event_url_;
    event_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void mdEventAttendance::set_allocated_event_url(::std::string* event_url) {
  if (event_url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete event_url_;
  }
  if (event_url) {
    set_has_event_url();
    event_url_ = event_url;
  } else {
    clear_has_event_url();
    event_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.masterdata.mdEventAttendance.event_url)
}

// required .b2.protocol.masterdata.mdEventAttendance.BonusType bonus_type = 8;
inline bool mdEventAttendance::has_bonus_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void mdEventAttendance::set_has_bonus_type() {
  _has_bits_[0] |= 0x00000080u;
}
inline void mdEventAttendance::clear_has_bonus_type() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void mdEventAttendance::clear_bonus_type() {
  bonus_type_ = 0;
  clear_has_bonus_type();
}
inline ::b2::protocol::masterdata::mdEventAttendance_BonusType mdEventAttendance::bonus_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdEventAttendance.bonus_type)
  return static_cast< ::b2::protocol::masterdata::mdEventAttendance_BonusType >(bonus_type_);
}
inline void mdEventAttendance::set_bonus_type(::b2::protocol::masterdata::mdEventAttendance_BonusType value) {
  assert(::b2::protocol::masterdata::mdEventAttendance_BonusType_IsValid(value));
  set_has_bonus_type();
  bonus_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdEventAttendance.bonus_type)
}

// -------------------------------------------------------------------

// mdEventAttendanceReward

// required int32 event_id = 1;
inline bool mdEventAttendanceReward::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdEventAttendanceReward::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdEventAttendanceReward::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdEventAttendanceReward::clear_event_id() {
  event_id_ = 0;
  clear_has_event_id();
}
inline ::google::protobuf::int32 mdEventAttendanceReward::event_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdEventAttendanceReward.event_id)
  return event_id_;
}
inline void mdEventAttendanceReward::set_event_id(::google::protobuf::int32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdEventAttendanceReward.event_id)
}

// required int32 day = 2;
inline bool mdEventAttendanceReward::has_day() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdEventAttendanceReward::set_has_day() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdEventAttendanceReward::clear_has_day() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdEventAttendanceReward::clear_day() {
  day_ = 0;
  clear_has_day();
}
inline ::google::protobuf::int32 mdEventAttendanceReward::day() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdEventAttendanceReward.day)
  return day_;
}
inline void mdEventAttendanceReward::set_day(::google::protobuf::int32 value) {
  set_has_day();
  day_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdEventAttendanceReward.day)
}

// required int32 reward_id = 3;
inline bool mdEventAttendanceReward::has_reward_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdEventAttendanceReward::set_has_reward_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdEventAttendanceReward::clear_has_reward_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdEventAttendanceReward::clear_reward_id() {
  reward_id_ = 0;
  clear_has_reward_id();
}
inline ::google::protobuf::int32 mdEventAttendanceReward::reward_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdEventAttendanceReward.reward_id)
  return reward_id_;
}
inline void mdEventAttendanceReward::set_reward_id(::google::protobuf::int32 value) {
  set_has_reward_id();
  reward_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdEventAttendanceReward.reward_id)
}

// required int32 reward_count = 4;
inline bool mdEventAttendanceReward::has_reward_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdEventAttendanceReward::set_has_reward_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdEventAttendanceReward::clear_has_reward_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdEventAttendanceReward::clear_reward_count() {
  reward_count_ = 0;
  clear_has_reward_count();
}
inline ::google::protobuf::int32 mdEventAttendanceReward::reward_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdEventAttendanceReward.reward_count)
  return reward_count_;
}
inline void mdEventAttendanceReward::set_reward_count(::google::protobuf::int32 value) {
  set_has_reward_count();
  reward_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdEventAttendanceReward.reward_count)
}

// -------------------------------------------------------------------

// mdDailyPlayTimeReward

// required int32 reward_index = 1;
inline bool mdDailyPlayTimeReward::has_reward_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdDailyPlayTimeReward::set_has_reward_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdDailyPlayTimeReward::clear_has_reward_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdDailyPlayTimeReward::clear_reward_index() {
  reward_index_ = 0;
  clear_has_reward_index();
}
inline ::google::protobuf::int32 mdDailyPlayTimeReward::reward_index() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDailyPlayTimeReward.reward_index)
  return reward_index_;
}
inline void mdDailyPlayTimeReward::set_reward_index(::google::protobuf::int32 value) {
  set_has_reward_index();
  reward_index_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDailyPlayTimeReward.reward_index)
}

// required int32 play_time_inmin = 2;
inline bool mdDailyPlayTimeReward::has_play_time_inmin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdDailyPlayTimeReward::set_has_play_time_inmin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdDailyPlayTimeReward::clear_has_play_time_inmin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdDailyPlayTimeReward::clear_play_time_inmin() {
  play_time_inmin_ = 0;
  clear_has_play_time_inmin();
}
inline ::google::protobuf::int32 mdDailyPlayTimeReward::play_time_inmin() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDailyPlayTimeReward.play_time_inmin)
  return play_time_inmin_;
}
inline void mdDailyPlayTimeReward::set_play_time_inmin(::google::protobuf::int32 value) {
  set_has_play_time_inmin();
  play_time_inmin_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDailyPlayTimeReward.play_time_inmin)
}

// required int32 reward_id = 3;
inline bool mdDailyPlayTimeReward::has_reward_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdDailyPlayTimeReward::set_has_reward_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdDailyPlayTimeReward::clear_has_reward_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdDailyPlayTimeReward::clear_reward_id() {
  reward_id_ = 0;
  clear_has_reward_id();
}
inline ::google::protobuf::int32 mdDailyPlayTimeReward::reward_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDailyPlayTimeReward.reward_id)
  return reward_id_;
}
inline void mdDailyPlayTimeReward::set_reward_id(::google::protobuf::int32 value) {
  set_has_reward_id();
  reward_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDailyPlayTimeReward.reward_id)
}

// required int32 reward_count = 4;
inline bool mdDailyPlayTimeReward::has_reward_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdDailyPlayTimeReward::set_has_reward_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdDailyPlayTimeReward::clear_has_reward_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdDailyPlayTimeReward::clear_reward_count() {
  reward_count_ = 0;
  clear_has_reward_count();
}
inline ::google::protobuf::int32 mdDailyPlayTimeReward::reward_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDailyPlayTimeReward.reward_count)
  return reward_count_;
}
inline void mdDailyPlayTimeReward::set_reward_count(::google::protobuf::int32 value) {
  set_has_reward_count();
  reward_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDailyPlayTimeReward.reward_count)
}

// -------------------------------------------------------------------

// mdTutorialInfo

// required int32 tutorial_id = 1;
inline bool mdTutorialInfo::has_tutorial_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdTutorialInfo::set_has_tutorial_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdTutorialInfo::clear_has_tutorial_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdTutorialInfo::clear_tutorial_id() {
  tutorial_id_ = 0;
  clear_has_tutorial_id();
}
inline ::google::protobuf::int32 mdTutorialInfo::tutorial_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTutorialInfo.tutorial_id)
  return tutorial_id_;
}
inline void mdTutorialInfo::set_tutorial_id(::google::protobuf::int32 value) {
  set_has_tutorial_id();
  tutorial_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTutorialInfo.tutorial_id)
}

// required int32 prev_tutorial_id = 2;
inline bool mdTutorialInfo::has_prev_tutorial_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdTutorialInfo::set_has_prev_tutorial_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdTutorialInfo::clear_has_prev_tutorial_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdTutorialInfo::clear_prev_tutorial_id() {
  prev_tutorial_id_ = 0;
  clear_has_prev_tutorial_id();
}
inline ::google::protobuf::int32 mdTutorialInfo::prev_tutorial_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTutorialInfo.prev_tutorial_id)
  return prev_tutorial_id_;
}
inline void mdTutorialInfo::set_prev_tutorial_id(::google::protobuf::int32 value) {
  set_has_prev_tutorial_id();
  prev_tutorial_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTutorialInfo.prev_tutorial_id)
}

// required int32 character_level = 3;
inline bool mdTutorialInfo::has_character_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdTutorialInfo::set_has_character_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdTutorialInfo::clear_has_character_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdTutorialInfo::clear_character_level() {
  character_level_ = 0;
  clear_has_character_level();
}
inline ::google::protobuf::int32 mdTutorialInfo::character_level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTutorialInfo.character_level)
  return character_level_;
}
inline void mdTutorialInfo::set_character_level(::google::protobuf::int32 value) {
  set_has_character_level();
  character_level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTutorialInfo.character_level)
}

// required int32 act_cleared = 4;
inline bool mdTutorialInfo::has_act_cleared() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdTutorialInfo::set_has_act_cleared() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdTutorialInfo::clear_has_act_cleared() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdTutorialInfo::clear_act_cleared() {
  act_cleared_ = 0;
  clear_has_act_cleared();
}
inline ::google::protobuf::int32 mdTutorialInfo::act_cleared() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTutorialInfo.act_cleared)
  return act_cleared_;
}
inline void mdTutorialInfo::set_act_cleared(::google::protobuf::int32 value) {
  set_has_act_cleared();
  act_cleared_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTutorialInfo.act_cleared)
}

// required int32 cash = 5;
inline bool mdTutorialInfo::has_cash() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdTutorialInfo::set_has_cash() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdTutorialInfo::clear_has_cash() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdTutorialInfo::clear_cash() {
  cash_ = 0;
  clear_has_cash();
}
inline ::google::protobuf::int32 mdTutorialInfo::cash() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTutorialInfo.cash)
  return cash_;
}
inline void mdTutorialInfo::set_cash(::google::protobuf::int32 value) {
  set_has_cash();
  cash_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTutorialInfo.cash)
}

// required int32 gold = 6;
inline bool mdTutorialInfo::has_gold() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdTutorialInfo::set_has_gold() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdTutorialInfo::clear_has_gold() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdTutorialInfo::clear_gold() {
  gold_ = 0;
  clear_has_gold();
}
inline ::google::protobuf::int32 mdTutorialInfo::gold() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTutorialInfo.gold)
  return gold_;
}
inline void mdTutorialInfo::set_gold(::google::protobuf::int32 value) {
  set_has_gold();
  gold_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTutorialInfo.gold)
}

// required int32 reward_id1 = 7;
inline bool mdTutorialInfo::has_reward_id1() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mdTutorialInfo::set_has_reward_id1() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mdTutorialInfo::clear_has_reward_id1() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mdTutorialInfo::clear_reward_id1() {
  reward_id1_ = 0;
  clear_has_reward_id1();
}
inline ::google::protobuf::int32 mdTutorialInfo::reward_id1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTutorialInfo.reward_id1)
  return reward_id1_;
}
inline void mdTutorialInfo::set_reward_id1(::google::protobuf::int32 value) {
  set_has_reward_id1();
  reward_id1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTutorialInfo.reward_id1)
}

// required int32 reward_count1 = 8;
inline bool mdTutorialInfo::has_reward_count1() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void mdTutorialInfo::set_has_reward_count1() {
  _has_bits_[0] |= 0x00000080u;
}
inline void mdTutorialInfo::clear_has_reward_count1() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void mdTutorialInfo::clear_reward_count1() {
  reward_count1_ = 0;
  clear_has_reward_count1();
}
inline ::google::protobuf::int32 mdTutorialInfo::reward_count1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTutorialInfo.reward_count1)
  return reward_count1_;
}
inline void mdTutorialInfo::set_reward_count1(::google::protobuf::int32 value) {
  set_has_reward_count1();
  reward_count1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTutorialInfo.reward_count1)
}

// required int32 reward_id2 = 9;
inline bool mdTutorialInfo::has_reward_id2() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void mdTutorialInfo::set_has_reward_id2() {
  _has_bits_[0] |= 0x00000100u;
}
inline void mdTutorialInfo::clear_has_reward_id2() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void mdTutorialInfo::clear_reward_id2() {
  reward_id2_ = 0;
  clear_has_reward_id2();
}
inline ::google::protobuf::int32 mdTutorialInfo::reward_id2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTutorialInfo.reward_id2)
  return reward_id2_;
}
inline void mdTutorialInfo::set_reward_id2(::google::protobuf::int32 value) {
  set_has_reward_id2();
  reward_id2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTutorialInfo.reward_id2)
}

// required int32 reward_count2 = 10;
inline bool mdTutorialInfo::has_reward_count2() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void mdTutorialInfo::set_has_reward_count2() {
  _has_bits_[0] |= 0x00000200u;
}
inline void mdTutorialInfo::clear_has_reward_count2() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void mdTutorialInfo::clear_reward_count2() {
  reward_count2_ = 0;
  clear_has_reward_count2();
}
inline ::google::protobuf::int32 mdTutorialInfo::reward_count2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTutorialInfo.reward_count2)
  return reward_count2_;
}
inline void mdTutorialInfo::set_reward_count2(::google::protobuf::int32 value) {
  set_has_reward_count2();
  reward_count2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTutorialInfo.reward_count2)
}

// required int32 reward_id3 = 11;
inline bool mdTutorialInfo::has_reward_id3() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void mdTutorialInfo::set_has_reward_id3() {
  _has_bits_[0] |= 0x00000400u;
}
inline void mdTutorialInfo::clear_has_reward_id3() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void mdTutorialInfo::clear_reward_id3() {
  reward_id3_ = 0;
  clear_has_reward_id3();
}
inline ::google::protobuf::int32 mdTutorialInfo::reward_id3() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTutorialInfo.reward_id3)
  return reward_id3_;
}
inline void mdTutorialInfo::set_reward_id3(::google::protobuf::int32 value) {
  set_has_reward_id3();
  reward_id3_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTutorialInfo.reward_id3)
}

// required int32 reward_count3 = 12;
inline bool mdTutorialInfo::has_reward_count3() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void mdTutorialInfo::set_has_reward_count3() {
  _has_bits_[0] |= 0x00000800u;
}
inline void mdTutorialInfo::clear_has_reward_count3() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void mdTutorialInfo::clear_reward_count3() {
  reward_count3_ = 0;
  clear_has_reward_count3();
}
inline ::google::protobuf::int32 mdTutorialInfo::reward_count3() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTutorialInfo.reward_count3)
  return reward_count3_;
}
inline void mdTutorialInfo::set_reward_count3(::google::protobuf::int32 value) {
  set_has_reward_count3();
  reward_count3_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTutorialInfo.reward_count3)
}

// -------------------------------------------------------------------

// mdAetherOptionInfo

// required int32 option_id = 1;
inline bool mdAetherOptionInfo::has_option_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdAetherOptionInfo::set_has_option_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdAetherOptionInfo::clear_has_option_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdAetherOptionInfo::clear_option_id() {
  option_id_ = 0;
  clear_has_option_id();
}
inline ::google::protobuf::int32 mdAetherOptionInfo::option_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdAetherOptionInfo.option_id)
  return option_id_;
}
inline void mdAetherOptionInfo::set_option_id(::google::protobuf::int32 value) {
  set_has_option_id();
  option_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdAetherOptionInfo.option_id)
}

// required int32 option_group = 2;
inline bool mdAetherOptionInfo::has_option_group() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdAetherOptionInfo::set_has_option_group() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdAetherOptionInfo::clear_has_option_group() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdAetherOptionInfo::clear_option_group() {
  option_group_ = 0;
  clear_has_option_group();
}
inline ::google::protobuf::int32 mdAetherOptionInfo::option_group() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdAetherOptionInfo.option_group)
  return option_group_;
}
inline void mdAetherOptionInfo::set_option_group(::google::protobuf::int32 value) {
  set_has_option_group();
  option_group_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdAetherOptionInfo.option_group)
}

// required int32 grade = 3;
inline bool mdAetherOptionInfo::has_grade() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdAetherOptionInfo::set_has_grade() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdAetherOptionInfo::clear_has_grade() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdAetherOptionInfo::clear_grade() {
  grade_ = 0;
  clear_has_grade();
}
inline ::google::protobuf::int32 mdAetherOptionInfo::grade() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdAetherOptionInfo.grade)
  return grade_;
}
inline void mdAetherOptionInfo::set_grade(::google::protobuf::int32 value) {
  set_has_grade();
  grade_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdAetherOptionInfo.grade)
}

// required float default_value = 4;
inline bool mdAetherOptionInfo::has_default_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdAetherOptionInfo::set_has_default_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdAetherOptionInfo::clear_has_default_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdAetherOptionInfo::clear_default_value() {
  default_value_ = 0;
  clear_has_default_value();
}
inline float mdAetherOptionInfo::default_value() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdAetherOptionInfo.default_value)
  return default_value_;
}
inline void mdAetherOptionInfo::set_default_value(float value) {
  set_has_default_value();
  default_value_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdAetherOptionInfo.default_value)
}

// required float increase_value_per_level = 5;
inline bool mdAetherOptionInfo::has_increase_value_per_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdAetherOptionInfo::set_has_increase_value_per_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdAetherOptionInfo::clear_has_increase_value_per_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdAetherOptionInfo::clear_increase_value_per_level() {
  increase_value_per_level_ = 0;
  clear_has_increase_value_per_level();
}
inline float mdAetherOptionInfo::increase_value_per_level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdAetherOptionInfo.increase_value_per_level)
  return increase_value_per_level_;
}
inline void mdAetherOptionInfo::set_increase_value_per_level(float value) {
  set_has_increase_value_per_level();
  increase_value_per_level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdAetherOptionInfo.increase_value_per_level)
}

// -------------------------------------------------------------------

// mdAetherSlotInfo

// required int32 slot_id = 1;
inline bool mdAetherSlotInfo::has_slot_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdAetherSlotInfo::set_has_slot_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdAetherSlotInfo::clear_has_slot_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdAetherSlotInfo::clear_slot_id() {
  slot_id_ = 0;
  clear_has_slot_id();
}
inline ::google::protobuf::int32 mdAetherSlotInfo::slot_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdAetherSlotInfo.slot_id)
  return slot_id_;
}
inline void mdAetherSlotInfo::set_slot_id(::google::protobuf::int32 value) {
  set_has_slot_id();
  slot_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdAetherSlotInfo.slot_id)
}

// required int32 option_id = 2;
inline bool mdAetherSlotInfo::has_option_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdAetherSlotInfo::set_has_option_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdAetherSlotInfo::clear_has_option_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdAetherSlotInfo::clear_option_id() {
  option_id_ = 0;
  clear_has_option_id();
}
inline ::google::protobuf::int32 mdAetherSlotInfo::option_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdAetherSlotInfo.option_id)
  return option_id_;
}
inline void mdAetherSlotInfo::set_option_id(::google::protobuf::int32 value) {
  set_has_option_id();
  option_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdAetherSlotInfo.option_id)
}

// -------------------------------------------------------------------

// mdAetherEnhanceInfo

// required int32 enhance_level = 1;
inline bool mdAetherEnhanceInfo::has_enhance_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdAetherEnhanceInfo::set_has_enhance_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdAetherEnhanceInfo::clear_has_enhance_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdAetherEnhanceInfo::clear_enhance_level() {
  enhance_level_ = 0;
  clear_has_enhance_level();
}
inline ::google::protobuf::int32 mdAetherEnhanceInfo::enhance_level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdAetherEnhanceInfo.enhance_level)
  return enhance_level_;
}
inline void mdAetherEnhanceInfo::set_enhance_level(::google::protobuf::int32 value) {
  set_has_enhance_level();
  enhance_level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdAetherEnhanceInfo.enhance_level)
}

// required int32 grade = 2;
inline bool mdAetherEnhanceInfo::has_grade() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdAetherEnhanceInfo::set_has_grade() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdAetherEnhanceInfo::clear_has_grade() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdAetherEnhanceInfo::clear_grade() {
  grade_ = 0;
  clear_has_grade();
}
inline ::google::protobuf::int32 mdAetherEnhanceInfo::grade() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdAetherEnhanceInfo.grade)
  return grade_;
}
inline void mdAetherEnhanceInfo::set_grade(::google::protobuf::int32 value) {
  set_has_grade();
  grade_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdAetherEnhanceInfo.grade)
}

// required int32 aether_piece_cost = 3;
inline bool mdAetherEnhanceInfo::has_aether_piece_cost() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdAetherEnhanceInfo::set_has_aether_piece_cost() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdAetherEnhanceInfo::clear_has_aether_piece_cost() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdAetherEnhanceInfo::clear_aether_piece_cost() {
  aether_piece_cost_ = 0;
  clear_has_aether_piece_cost();
}
inline ::google::protobuf::int32 mdAetherEnhanceInfo::aether_piece_cost() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdAetherEnhanceInfo.aether_piece_cost)
  return aether_piece_cost_;
}
inline void mdAetherEnhanceInfo::set_aether_piece_cost(::google::protobuf::int32 value) {
  set_has_aether_piece_cost();
  aether_piece_cost_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdAetherEnhanceInfo.aether_piece_cost)
}

// required int32 enhance_rate = 4;
inline bool mdAetherEnhanceInfo::has_enhance_rate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdAetherEnhanceInfo::set_has_enhance_rate() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdAetherEnhanceInfo::clear_has_enhance_rate() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdAetherEnhanceInfo::clear_enhance_rate() {
  enhance_rate_ = 0;
  clear_has_enhance_rate();
}
inline ::google::protobuf::int32 mdAetherEnhanceInfo::enhance_rate() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdAetherEnhanceInfo.enhance_rate)
  return enhance_rate_;
}
inline void mdAetherEnhanceInfo::set_enhance_rate(::google::protobuf::int32 value) {
  set_has_enhance_rate();
  enhance_rate_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdAetherEnhanceInfo.enhance_rate)
}

// required int32 dismantle_amount = 5;
inline bool mdAetherEnhanceInfo::has_dismantle_amount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdAetherEnhanceInfo::set_has_dismantle_amount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdAetherEnhanceInfo::clear_has_dismantle_amount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdAetherEnhanceInfo::clear_dismantle_amount() {
  dismantle_amount_ = 0;
  clear_has_dismantle_amount();
}
inline ::google::protobuf::int32 mdAetherEnhanceInfo::dismantle_amount() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdAetherEnhanceInfo.dismantle_amount)
  return dismantle_amount_;
}
inline void mdAetherEnhanceInfo::set_dismantle_amount(::google::protobuf::int32 value) {
  set_has_dismantle_amount();
  dismantle_amount_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdAetherEnhanceInfo.dismantle_amount)
}

// required int32 sell_price = 6;
inline bool mdAetherEnhanceInfo::has_sell_price() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdAetherEnhanceInfo::set_has_sell_price() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdAetherEnhanceInfo::clear_has_sell_price() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdAetherEnhanceInfo::clear_sell_price() {
  sell_price_ = 0;
  clear_has_sell_price();
}
inline ::google::protobuf::int32 mdAetherEnhanceInfo::sell_price() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdAetherEnhanceInfo.sell_price)
  return sell_price_;
}
inline void mdAetherEnhanceInfo::set_sell_price(::google::protobuf::int32 value) {
  set_has_sell_price();
  sell_price_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdAetherEnhanceInfo.sell_price)
}

// -------------------------------------------------------------------

// mdAetherEnhanceOptionInfo

// required int32 enhance_level = 1;
inline bool mdAetherEnhanceOptionInfo::has_enhance_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdAetherEnhanceOptionInfo::set_has_enhance_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdAetherEnhanceOptionInfo::clear_has_enhance_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdAetherEnhanceOptionInfo::clear_enhance_level() {
  enhance_level_ = 0;
  clear_has_enhance_level();
}
inline ::google::protobuf::int32 mdAetherEnhanceOptionInfo::enhance_level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdAetherEnhanceOptionInfo.enhance_level)
  return enhance_level_;
}
inline void mdAetherEnhanceOptionInfo::set_enhance_level(::google::protobuf::int32 value) {
  set_has_enhance_level();
  enhance_level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdAetherEnhanceOptionInfo.enhance_level)
}

// required int32 tier = 2;
inline bool mdAetherEnhanceOptionInfo::has_tier() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdAetherEnhanceOptionInfo::set_has_tier() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdAetherEnhanceOptionInfo::clear_has_tier() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdAetherEnhanceOptionInfo::clear_tier() {
  tier_ = 0;
  clear_has_tier();
}
inline ::google::protobuf::int32 mdAetherEnhanceOptionInfo::tier() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdAetherEnhanceOptionInfo.tier)
  return tier_;
}
inline void mdAetherEnhanceOptionInfo::set_tier(::google::protobuf::int32 value) {
  set_has_tier();
  tier_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdAetherEnhanceOptionInfo.tier)
}

// required int32 state_main_option = 3;
inline bool mdAetherEnhanceOptionInfo::has_state_main_option() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdAetherEnhanceOptionInfo::set_has_state_main_option() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdAetherEnhanceOptionInfo::clear_has_state_main_option() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdAetherEnhanceOptionInfo::clear_state_main_option() {
  state_main_option_ = 0;
  clear_has_state_main_option();
}
inline ::google::protobuf::int32 mdAetherEnhanceOptionInfo::state_main_option() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdAetherEnhanceOptionInfo.state_main_option)
  return state_main_option_;
}
inline void mdAetherEnhanceOptionInfo::set_state_main_option(::google::protobuf::int32 value) {
  set_has_state_main_option();
  state_main_option_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdAetherEnhanceOptionInfo.state_main_option)
}

// required int32 state_sub_option = 4;
inline bool mdAetherEnhanceOptionInfo::has_state_sub_option() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdAetherEnhanceOptionInfo::set_has_state_sub_option() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdAetherEnhanceOptionInfo::clear_has_state_sub_option() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdAetherEnhanceOptionInfo::clear_state_sub_option() {
  state_sub_option_ = 0;
  clear_has_state_sub_option();
}
inline ::google::protobuf::int32 mdAetherEnhanceOptionInfo::state_sub_option() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdAetherEnhanceOptionInfo.state_sub_option)
  return state_sub_option_;
}
inline void mdAetherEnhanceOptionInfo::set_state_sub_option(::google::protobuf::int32 value) {
  set_has_state_sub_option();
  state_sub_option_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdAetherEnhanceOptionInfo.state_sub_option)
}

// -------------------------------------------------------------------

// mdAetherSetOptionInfo

// required int32 type = 1;
inline bool mdAetherSetOptionInfo::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdAetherSetOptionInfo::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdAetherSetOptionInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdAetherSetOptionInfo::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 mdAetherSetOptionInfo::type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdAetherSetOptionInfo.type)
  return type_;
}
inline void mdAetherSetOptionInfo::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdAetherSetOptionInfo.type)
}

// required int32 tier = 2;
inline bool mdAetherSetOptionInfo::has_tier() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdAetherSetOptionInfo::set_has_tier() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdAetherSetOptionInfo::clear_has_tier() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdAetherSetOptionInfo::clear_tier() {
  tier_ = 0;
  clear_has_tier();
}
inline ::google::protobuf::int32 mdAetherSetOptionInfo::tier() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdAetherSetOptionInfo.tier)
  return tier_;
}
inline void mdAetherSetOptionInfo::set_tier(::google::protobuf::int32 value) {
  set_has_tier();
  tier_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdAetherSetOptionInfo.tier)
}

// required int32 set_option_id = 3;
inline bool mdAetherSetOptionInfo::has_set_option_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdAetherSetOptionInfo::set_has_set_option_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdAetherSetOptionInfo::clear_has_set_option_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdAetherSetOptionInfo::clear_set_option_id() {
  set_option_id_ = 0;
  clear_has_set_option_id();
}
inline ::google::protobuf::int32 mdAetherSetOptionInfo::set_option_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdAetherSetOptionInfo.set_option_id)
  return set_option_id_;
}
inline void mdAetherSetOptionInfo::set_set_option_id(::google::protobuf::int32 value) {
  set_has_set_option_id();
  set_option_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdAetherSetOptionInfo.set_option_id)
}

// required int32 min_apply_count = 4;
inline bool mdAetherSetOptionInfo::has_min_apply_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdAetherSetOptionInfo::set_has_min_apply_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdAetherSetOptionInfo::clear_has_min_apply_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdAetherSetOptionInfo::clear_min_apply_count() {
  min_apply_count_ = 0;
  clear_has_min_apply_count();
}
inline ::google::protobuf::int32 mdAetherSetOptionInfo::min_apply_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdAetherSetOptionInfo.min_apply_count)
  return min_apply_count_;
}
inline void mdAetherSetOptionInfo::set_min_apply_count(::google::protobuf::int32 value) {
  set_has_min_apply_count();
  min_apply_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdAetherSetOptionInfo.min_apply_count)
}

// required int32 trigger_rate = 5;
inline bool mdAetherSetOptionInfo::has_trigger_rate() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdAetherSetOptionInfo::set_has_trigger_rate() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdAetherSetOptionInfo::clear_has_trigger_rate() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdAetherSetOptionInfo::clear_trigger_rate() {
  trigger_rate_ = 0;
  clear_has_trigger_rate();
}
inline ::google::protobuf::int32 mdAetherSetOptionInfo::trigger_rate() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdAetherSetOptionInfo.trigger_rate)
  return trigger_rate_;
}
inline void mdAetherSetOptionInfo::set_trigger_rate(::google::protobuf::int32 value) {
  set_has_trigger_rate();
  trigger_rate_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdAetherSetOptionInfo.trigger_rate)
}

// required int32 cooldown_second = 6;
inline bool mdAetherSetOptionInfo::has_cooldown_second() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdAetherSetOptionInfo::set_has_cooldown_second() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdAetherSetOptionInfo::clear_has_cooldown_second() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdAetherSetOptionInfo::clear_cooldown_second() {
  cooldown_second_ = 0;
  clear_has_cooldown_second();
}
inline ::google::protobuf::int32 mdAetherSetOptionInfo::cooldown_second() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdAetherSetOptionInfo.cooldown_second)
  return cooldown_second_;
}
inline void mdAetherSetOptionInfo::set_cooldown_second(::google::protobuf::int32 value) {
  set_has_cooldown_second();
  cooldown_second_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdAetherSetOptionInfo.cooldown_second)
}

// required int32 damage_rate = 7;
inline bool mdAetherSetOptionInfo::has_damage_rate() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mdAetherSetOptionInfo::set_has_damage_rate() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mdAetherSetOptionInfo::clear_has_damage_rate() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mdAetherSetOptionInfo::clear_damage_rate() {
  damage_rate_ = 0;
  clear_has_damage_rate();
}
inline ::google::protobuf::int32 mdAetherSetOptionInfo::damage_rate() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdAetherSetOptionInfo.damage_rate)
  return damage_rate_;
}
inline void mdAetherSetOptionInfo::set_damage_rate(::google::protobuf::int32 value) {
  set_has_damage_rate();
  damage_rate_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdAetherSetOptionInfo.damage_rate)
}

// -------------------------------------------------------------------

// mdDuelModeReward

// required .b2.protocol.commondata.DuelMode duel_mode = 1;
inline bool mdDuelModeReward::has_duel_mode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdDuelModeReward::set_has_duel_mode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdDuelModeReward::clear_has_duel_mode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdDuelModeReward::clear_duel_mode() {
  duel_mode_ = 0;
  clear_has_duel_mode();
}
inline ::b2::protocol::commondata::DuelMode mdDuelModeReward::duel_mode() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDuelModeReward.duel_mode)
  return static_cast< ::b2::protocol::commondata::DuelMode >(duel_mode_);
}
inline void mdDuelModeReward::set_duel_mode(::b2::protocol::commondata::DuelMode value) {
  assert(::b2::protocol::commondata::DuelMode_IsValid(value));
  set_has_duel_mode();
  duel_mode_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDuelModeReward.duel_mode)
}

// required .b2.protocol.commondata.MatchResult.TYPE match_result = 2;
inline bool mdDuelModeReward::has_match_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdDuelModeReward::set_has_match_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdDuelModeReward::clear_has_match_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdDuelModeReward::clear_match_result() {
  match_result_ = 0;
  clear_has_match_result();
}
inline ::b2::protocol::commondata::MatchResult_TYPE mdDuelModeReward::match_result() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDuelModeReward.match_result)
  return static_cast< ::b2::protocol::commondata::MatchResult_TYPE >(match_result_);
}
inline void mdDuelModeReward::set_match_result(::b2::protocol::commondata::MatchResult_TYPE value) {
  assert(::b2::protocol::commondata::MatchResult_TYPE_IsValid(value));
  set_has_match_result();
  match_result_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDuelModeReward.match_result)
}

// repeated .b2.protocol.commondata.Reward rewards = 3;
inline int mdDuelModeReward::rewards_size() const {
  return rewards_.size();
}
inline void mdDuelModeReward::clear_rewards() {
  rewards_.Clear();
}
inline const ::b2::protocol::commondata::Reward& mdDuelModeReward::rewards(int index) const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDuelModeReward.rewards)
  return rewards_.Get(index);
}
inline ::b2::protocol::commondata::Reward* mdDuelModeReward::mutable_rewards(int index) {
  // @@protoc_insertion_point(field_mutable:b2.protocol.masterdata.mdDuelModeReward.rewards)
  return rewards_.Mutable(index);
}
inline ::b2::protocol::commondata::Reward* mdDuelModeReward::add_rewards() {
  // @@protoc_insertion_point(field_add:b2.protocol.masterdata.mdDuelModeReward.rewards)
  return rewards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward >&
mdDuelModeReward::rewards() const {
  // @@protoc_insertion_point(field_list:b2.protocol.masterdata.mdDuelModeReward.rewards)
  return rewards_;
}
inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward >*
mdDuelModeReward::mutable_rewards() {
  // @@protoc_insertion_point(field_mutable_list:b2.protocol.masterdata.mdDuelModeReward.rewards)
  return &rewards_;
}

// -------------------------------------------------------------------

// mdRaidExp

// required int32 raid_type = 1;
inline bool mdRaidExp::has_raid_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdRaidExp::set_has_raid_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdRaidExp::clear_has_raid_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdRaidExp::clear_raid_type() {
  raid_type_ = 0;
  clear_has_raid_type();
}
inline ::google::protobuf::int32 mdRaidExp::raid_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdRaidExp.raid_type)
  return raid_type_;
}
inline void mdRaidExp::set_raid_type(::google::protobuf::int32 value) {
  set_has_raid_type();
  raid_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdRaidExp.raid_type)
}

// required int32 step = 2;
inline bool mdRaidExp::has_step() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdRaidExp::set_has_step() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdRaidExp::clear_has_step() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdRaidExp::clear_step() {
  step_ = 0;
  clear_has_step();
}
inline ::google::protobuf::int32 mdRaidExp::step() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdRaidExp.step)
  return step_;
}
inline void mdRaidExp::set_step(::google::protobuf::int32 value) {
  set_has_step();
  step_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdRaidExp.step)
}

// required int32 exp = 3;
inline bool mdRaidExp::has_exp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdRaidExp::set_has_exp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdRaidExp::clear_has_exp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdRaidExp::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 mdRaidExp::exp() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdRaidExp.exp)
  return exp_;
}
inline void mdRaidExp::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdRaidExp.exp)
}

// -------------------------------------------------------------------

// mdUnitySkillMission

// required .b2.protocol.commondata.Character.TYPE main_character_type = 1;
inline bool mdUnitySkillMission::has_main_character_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdUnitySkillMission::set_has_main_character_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdUnitySkillMission::clear_has_main_character_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdUnitySkillMission::clear_main_character_type() {
  main_character_type_ = 1;
  clear_has_main_character_type();
}
inline ::b2::protocol::commondata::Character_TYPE mdUnitySkillMission::main_character_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdUnitySkillMission.main_character_type)
  return static_cast< ::b2::protocol::commondata::Character_TYPE >(main_character_type_);
}
inline void mdUnitySkillMission::set_main_character_type(::b2::protocol::commondata::Character_TYPE value) {
  assert(::b2::protocol::commondata::Character_TYPE_IsValid(value));
  set_has_main_character_type();
  main_character_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdUnitySkillMission.main_character_type)
}

// required .b2.protocol.commondata.Character.TYPE unity_character_type = 2;
inline bool mdUnitySkillMission::has_unity_character_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdUnitySkillMission::set_has_unity_character_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdUnitySkillMission::clear_has_unity_character_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdUnitySkillMission::clear_unity_character_type() {
  unity_character_type_ = 1;
  clear_has_unity_character_type();
}
inline ::b2::protocol::commondata::Character_TYPE mdUnitySkillMission::unity_character_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdUnitySkillMission.unity_character_type)
  return static_cast< ::b2::protocol::commondata::Character_TYPE >(unity_character_type_);
}
inline void mdUnitySkillMission::set_unity_character_type(::b2::protocol::commondata::Character_TYPE value) {
  assert(::b2::protocol::commondata::Character_TYPE_IsValid(value));
  set_has_unity_character_type();
  unity_character_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdUnitySkillMission.unity_character_type)
}

// required int32 step = 3;
inline bool mdUnitySkillMission::has_step() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdUnitySkillMission::set_has_step() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdUnitySkillMission::clear_has_step() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdUnitySkillMission::clear_step() {
  step_ = 0;
  clear_has_step();
}
inline ::google::protobuf::int32 mdUnitySkillMission::step() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdUnitySkillMission.step)
  return step_;
}
inline void mdUnitySkillMission::set_step(::google::protobuf::int32 value) {
  set_has_step();
  step_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdUnitySkillMission.step)
}

// required int32 index = 4;
inline bool mdUnitySkillMission::has_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdUnitySkillMission::set_has_index() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdUnitySkillMission::clear_has_index() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdUnitySkillMission::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 mdUnitySkillMission::index() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdUnitySkillMission.index)
  return index_;
}
inline void mdUnitySkillMission::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdUnitySkillMission.index)
}

// required .b2.protocol.commondata.UnitySkillEventType event_type = 5;
inline bool mdUnitySkillMission::has_event_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdUnitySkillMission::set_has_event_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdUnitySkillMission::clear_has_event_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdUnitySkillMission::clear_event_type() {
  event_type_ = 1;
  clear_has_event_type();
}
inline ::b2::protocol::commondata::UnitySkillEventType mdUnitySkillMission::event_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdUnitySkillMission.event_type)
  return static_cast< ::b2::protocol::commondata::UnitySkillEventType >(event_type_);
}
inline void mdUnitySkillMission::set_event_type(::b2::protocol::commondata::UnitySkillEventType value) {
  assert(::b2::protocol::commondata::UnitySkillEventType_IsValid(value));
  set_has_event_type();
  event_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdUnitySkillMission.event_type)
}

// required int32 condition1 = 6;
inline bool mdUnitySkillMission::has_condition1() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdUnitySkillMission::set_has_condition1() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdUnitySkillMission::clear_has_condition1() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdUnitySkillMission::clear_condition1() {
  condition1_ = 0;
  clear_has_condition1();
}
inline ::google::protobuf::int32 mdUnitySkillMission::condition1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdUnitySkillMission.condition1)
  return condition1_;
}
inline void mdUnitySkillMission::set_condition1(::google::protobuf::int32 value) {
  set_has_condition1();
  condition1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdUnitySkillMission.condition1)
}

// required int32 condition2 = 7;
inline bool mdUnitySkillMission::has_condition2() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mdUnitySkillMission::set_has_condition2() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mdUnitySkillMission::clear_has_condition2() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mdUnitySkillMission::clear_condition2() {
  condition2_ = 0;
  clear_has_condition2();
}
inline ::google::protobuf::int32 mdUnitySkillMission::condition2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdUnitySkillMission.condition2)
  return condition2_;
}
inline void mdUnitySkillMission::set_condition2(::google::protobuf::int32 value) {
  set_has_condition2();
  condition2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdUnitySkillMission.condition2)
}

// required int32 condition3 = 8;
inline bool mdUnitySkillMission::has_condition3() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void mdUnitySkillMission::set_has_condition3() {
  _has_bits_[0] |= 0x00000080u;
}
inline void mdUnitySkillMission::clear_has_condition3() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void mdUnitySkillMission::clear_condition3() {
  condition3_ = 0;
  clear_has_condition3();
}
inline ::google::protobuf::int32 mdUnitySkillMission::condition3() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdUnitySkillMission.condition3)
  return condition3_;
}
inline void mdUnitySkillMission::set_condition3(::google::protobuf::int32 value) {
  set_has_condition3();
  condition3_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdUnitySkillMission.condition3)
}

// required int32 condition4 = 9;
inline bool mdUnitySkillMission::has_condition4() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void mdUnitySkillMission::set_has_condition4() {
  _has_bits_[0] |= 0x00000100u;
}
inline void mdUnitySkillMission::clear_has_condition4() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void mdUnitySkillMission::clear_condition4() {
  condition4_ = 0;
  clear_has_condition4();
}
inline ::google::protobuf::int32 mdUnitySkillMission::condition4() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdUnitySkillMission.condition4)
  return condition4_;
}
inline void mdUnitySkillMission::set_condition4(::google::protobuf::int32 value) {
  set_has_condition4();
  condition4_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdUnitySkillMission.condition4)
}

// required int32 goal_count = 10;
inline bool mdUnitySkillMission::has_goal_count() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void mdUnitySkillMission::set_has_goal_count() {
  _has_bits_[0] |= 0x00000200u;
}
inline void mdUnitySkillMission::clear_has_goal_count() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void mdUnitySkillMission::clear_goal_count() {
  goal_count_ = 0;
  clear_has_goal_count();
}
inline ::google::protobuf::int32 mdUnitySkillMission::goal_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdUnitySkillMission.goal_count)
  return goal_count_;
}
inline void mdUnitySkillMission::set_goal_count(::google::protobuf::int32 value) {
  set_has_goal_count();
  goal_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdUnitySkillMission.goal_count)
}

// required int32 reward_id = 11;
inline bool mdUnitySkillMission::has_reward_id() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void mdUnitySkillMission::set_has_reward_id() {
  _has_bits_[0] |= 0x00000400u;
}
inline void mdUnitySkillMission::clear_has_reward_id() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void mdUnitySkillMission::clear_reward_id() {
  reward_id_ = 0;
  clear_has_reward_id();
}
inline ::google::protobuf::int32 mdUnitySkillMission::reward_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdUnitySkillMission.reward_id)
  return reward_id_;
}
inline void mdUnitySkillMission::set_reward_id(::google::protobuf::int32 value) {
  set_has_reward_id();
  reward_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdUnitySkillMission.reward_id)
}

// required int32 reward_count = 12;
inline bool mdUnitySkillMission::has_reward_count() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void mdUnitySkillMission::set_has_reward_count() {
  _has_bits_[0] |= 0x00000800u;
}
inline void mdUnitySkillMission::clear_has_reward_count() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void mdUnitySkillMission::clear_reward_count() {
  reward_count_ = 0;
  clear_has_reward_count();
}
inline ::google::protobuf::int32 mdUnitySkillMission::reward_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdUnitySkillMission.reward_count)
  return reward_count_;
}
inline void mdUnitySkillMission::set_reward_count(::google::protobuf::int32 value) {
  set_has_reward_count();
  reward_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdUnitySkillMission.reward_count)
}

// -------------------------------------------------------------------

// mdUnitySkillOption

// required .b2.protocol.commondata.Character.TYPE main_character_type = 1;
inline bool mdUnitySkillOption::has_main_character_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdUnitySkillOption::set_has_main_character_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdUnitySkillOption::clear_has_main_character_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdUnitySkillOption::clear_main_character_type() {
  main_character_type_ = 1;
  clear_has_main_character_type();
}
inline ::b2::protocol::commondata::Character_TYPE mdUnitySkillOption::main_character_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdUnitySkillOption.main_character_type)
  return static_cast< ::b2::protocol::commondata::Character_TYPE >(main_character_type_);
}
inline void mdUnitySkillOption::set_main_character_type(::b2::protocol::commondata::Character_TYPE value) {
  assert(::b2::protocol::commondata::Character_TYPE_IsValid(value));
  set_has_main_character_type();
  main_character_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdUnitySkillOption.main_character_type)
}

// required .b2.protocol.commondata.Character.TYPE unity_character_type = 2;
inline bool mdUnitySkillOption::has_unity_character_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdUnitySkillOption::set_has_unity_character_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdUnitySkillOption::clear_has_unity_character_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdUnitySkillOption::clear_unity_character_type() {
  unity_character_type_ = 1;
  clear_has_unity_character_type();
}
inline ::b2::protocol::commondata::Character_TYPE mdUnitySkillOption::unity_character_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdUnitySkillOption.unity_character_type)
  return static_cast< ::b2::protocol::commondata::Character_TYPE >(unity_character_type_);
}
inline void mdUnitySkillOption::set_unity_character_type(::b2::protocol::commondata::Character_TYPE value) {
  assert(::b2::protocol::commondata::Character_TYPE_IsValid(value));
  set_has_unity_character_type();
  unity_character_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdUnitySkillOption.unity_character_type)
}

// required int32 step = 3;
inline bool mdUnitySkillOption::has_step() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdUnitySkillOption::set_has_step() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdUnitySkillOption::clear_has_step() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdUnitySkillOption::clear_step() {
  step_ = 0;
  clear_has_step();
}
inline ::google::protobuf::int32 mdUnitySkillOption::step() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdUnitySkillOption.step)
  return step_;
}
inline void mdUnitySkillOption::set_step(::google::protobuf::int32 value) {
  set_has_step();
  step_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdUnitySkillOption.step)
}

// required int32 option_id = 4;
inline bool mdUnitySkillOption::has_option_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdUnitySkillOption::set_has_option_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdUnitySkillOption::clear_has_option_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdUnitySkillOption::clear_option_id() {
  option_id_ = 0;
  clear_has_option_id();
}
inline ::google::protobuf::int32 mdUnitySkillOption::option_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdUnitySkillOption.option_id)
  return option_id_;
}
inline void mdUnitySkillOption::set_option_id(::google::protobuf::int32 value) {
  set_has_option_id();
  option_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdUnitySkillOption.option_id)
}

// required double option_value = 5;
inline bool mdUnitySkillOption::has_option_value() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdUnitySkillOption::set_has_option_value() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdUnitySkillOption::clear_has_option_value() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdUnitySkillOption::clear_option_value() {
  option_value_ = 0;
  clear_has_option_value();
}
inline double mdUnitySkillOption::option_value() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdUnitySkillOption.option_value)
  return option_value_;
}
inline void mdUnitySkillOption::set_option_value(double value) {
  set_has_option_value();
  option_value_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdUnitySkillOption.option_value)
}

// required double power = 6;
inline bool mdUnitySkillOption::has_power() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdUnitySkillOption::set_has_power() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdUnitySkillOption::clear_has_power() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdUnitySkillOption::clear_power() {
  power_ = 0;
  clear_has_power();
}
inline double mdUnitySkillOption::power() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdUnitySkillOption.power)
  return power_;
}
inline void mdUnitySkillOption::set_power(double value) {
  set_has_power();
  power_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdUnitySkillOption.power)
}

// -------------------------------------------------------------------

// mdUnitySkillAwakenMission

// required .b2.protocol.commondata.Character.TYPE character_type = 1;
inline bool mdUnitySkillAwakenMission::has_character_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdUnitySkillAwakenMission::set_has_character_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdUnitySkillAwakenMission::clear_has_character_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdUnitySkillAwakenMission::clear_character_type() {
  character_type_ = 1;
  clear_has_character_type();
}
inline ::b2::protocol::commondata::Character_TYPE mdUnitySkillAwakenMission::character_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdUnitySkillAwakenMission.character_type)
  return static_cast< ::b2::protocol::commondata::Character_TYPE >(character_type_);
}
inline void mdUnitySkillAwakenMission::set_character_type(::b2::protocol::commondata::Character_TYPE value) {
  assert(::b2::protocol::commondata::Character_TYPE_IsValid(value));
  set_has_character_type();
  character_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdUnitySkillAwakenMission.character_type)
}

// required int32 mission_id = 2;
inline bool mdUnitySkillAwakenMission::has_mission_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdUnitySkillAwakenMission::set_has_mission_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdUnitySkillAwakenMission::clear_has_mission_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdUnitySkillAwakenMission::clear_mission_id() {
  mission_id_ = 0;
  clear_has_mission_id();
}
inline ::google::protobuf::int32 mdUnitySkillAwakenMission::mission_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdUnitySkillAwakenMission.mission_id)
  return mission_id_;
}
inline void mdUnitySkillAwakenMission::set_mission_id(::google::protobuf::int32 value) {
  set_has_mission_id();
  mission_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdUnitySkillAwakenMission.mission_id)
}

// required int32 req_item_id_1 = 3;
inline bool mdUnitySkillAwakenMission::has_req_item_id_1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdUnitySkillAwakenMission::set_has_req_item_id_1() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdUnitySkillAwakenMission::clear_has_req_item_id_1() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdUnitySkillAwakenMission::clear_req_item_id_1() {
  req_item_id_1_ = 0;
  clear_has_req_item_id_1();
}
inline ::google::protobuf::int32 mdUnitySkillAwakenMission::req_item_id_1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdUnitySkillAwakenMission.req_item_id_1)
  return req_item_id_1_;
}
inline void mdUnitySkillAwakenMission::set_req_item_id_1(::google::protobuf::int32 value) {
  set_has_req_item_id_1();
  req_item_id_1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdUnitySkillAwakenMission.req_item_id_1)
}

// required int32 req_item_count_1 = 4;
inline bool mdUnitySkillAwakenMission::has_req_item_count_1() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdUnitySkillAwakenMission::set_has_req_item_count_1() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdUnitySkillAwakenMission::clear_has_req_item_count_1() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdUnitySkillAwakenMission::clear_req_item_count_1() {
  req_item_count_1_ = 0;
  clear_has_req_item_count_1();
}
inline ::google::protobuf::int32 mdUnitySkillAwakenMission::req_item_count_1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdUnitySkillAwakenMission.req_item_count_1)
  return req_item_count_1_;
}
inline void mdUnitySkillAwakenMission::set_req_item_count_1(::google::protobuf::int32 value) {
  set_has_req_item_count_1();
  req_item_count_1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdUnitySkillAwakenMission.req_item_count_1)
}

// required int32 req_item_id_2 = 5;
inline bool mdUnitySkillAwakenMission::has_req_item_id_2() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdUnitySkillAwakenMission::set_has_req_item_id_2() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdUnitySkillAwakenMission::clear_has_req_item_id_2() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdUnitySkillAwakenMission::clear_req_item_id_2() {
  req_item_id_2_ = 0;
  clear_has_req_item_id_2();
}
inline ::google::protobuf::int32 mdUnitySkillAwakenMission::req_item_id_2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdUnitySkillAwakenMission.req_item_id_2)
  return req_item_id_2_;
}
inline void mdUnitySkillAwakenMission::set_req_item_id_2(::google::protobuf::int32 value) {
  set_has_req_item_id_2();
  req_item_id_2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdUnitySkillAwakenMission.req_item_id_2)
}

// required int32 req_item_count_2 = 6;
inline bool mdUnitySkillAwakenMission::has_req_item_count_2() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdUnitySkillAwakenMission::set_has_req_item_count_2() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdUnitySkillAwakenMission::clear_has_req_item_count_2() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdUnitySkillAwakenMission::clear_req_item_count_2() {
  req_item_count_2_ = 0;
  clear_has_req_item_count_2();
}
inline ::google::protobuf::int32 mdUnitySkillAwakenMission::req_item_count_2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdUnitySkillAwakenMission.req_item_count_2)
  return req_item_count_2_;
}
inline void mdUnitySkillAwakenMission::set_req_item_count_2(::google::protobuf::int32 value) {
  set_has_req_item_count_2();
  req_item_count_2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdUnitySkillAwakenMission.req_item_count_2)
}

// required int32 req_gold = 7;
inline bool mdUnitySkillAwakenMission::has_req_gold() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mdUnitySkillAwakenMission::set_has_req_gold() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mdUnitySkillAwakenMission::clear_has_req_gold() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mdUnitySkillAwakenMission::clear_req_gold() {
  req_gold_ = 0;
  clear_has_req_gold();
}
inline ::google::protobuf::int32 mdUnitySkillAwakenMission::req_gold() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdUnitySkillAwakenMission.req_gold)
  return req_gold_;
}
inline void mdUnitySkillAwakenMission::set_req_gold(::google::protobuf::int32 value) {
  set_has_req_gold();
  req_gold_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdUnitySkillAwakenMission.req_gold)
}

// required int32 success_rate = 8;
inline bool mdUnitySkillAwakenMission::has_success_rate() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void mdUnitySkillAwakenMission::set_has_success_rate() {
  _has_bits_[0] |= 0x00000080u;
}
inline void mdUnitySkillAwakenMission::clear_has_success_rate() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void mdUnitySkillAwakenMission::clear_success_rate() {
  success_rate_ = 0;
  clear_has_success_rate();
}
inline ::google::protobuf::int32 mdUnitySkillAwakenMission::success_rate() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdUnitySkillAwakenMission.success_rate)
  return success_rate_;
}
inline void mdUnitySkillAwakenMission::set_success_rate(::google::protobuf::int32 value) {
  set_has_success_rate();
  success_rate_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdUnitySkillAwakenMission.success_rate)
}

// required int32 success_rate_add = 9;
inline bool mdUnitySkillAwakenMission::has_success_rate_add() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void mdUnitySkillAwakenMission::set_has_success_rate_add() {
  _has_bits_[0] |= 0x00000100u;
}
inline void mdUnitySkillAwakenMission::clear_has_success_rate_add() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void mdUnitySkillAwakenMission::clear_success_rate_add() {
  success_rate_add_ = 0;
  clear_has_success_rate_add();
}
inline ::google::protobuf::int32 mdUnitySkillAwakenMission::success_rate_add() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdUnitySkillAwakenMission.success_rate_add)
  return success_rate_add_;
}
inline void mdUnitySkillAwakenMission::set_success_rate_add(::google::protobuf::int32 value) {
  set_has_success_rate_add();
  success_rate_add_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdUnitySkillAwakenMission.success_rate_add)
}

// -------------------------------------------------------------------

// mdRestReward

// required int32 id = 1;
inline bool mdRestReward::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdRestReward::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdRestReward::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdRestReward::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 mdRestReward::id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdRestReward.id)
  return id_;
}
inline void mdRestReward::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdRestReward.id)
}

// required int32 reward_id = 2;
inline bool mdRestReward::has_reward_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdRestReward::set_has_reward_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdRestReward::clear_has_reward_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdRestReward::clear_reward_id() {
  reward_id_ = 0;
  clear_has_reward_id();
}
inline ::google::protobuf::int32 mdRestReward::reward_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdRestReward.reward_id)
  return reward_id_;
}
inline void mdRestReward::set_reward_id(::google::protobuf::int32 value) {
  set_has_reward_id();
  reward_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdRestReward.reward_id)
}

// required float reward_count_per_point = 3;
inline bool mdRestReward::has_reward_count_per_point() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdRestReward::set_has_reward_count_per_point() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdRestReward::clear_has_reward_count_per_point() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdRestReward::clear_reward_count_per_point() {
  reward_count_per_point_ = 0;
  clear_has_reward_count_per_point();
}
inline float mdRestReward::reward_count_per_point() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdRestReward.reward_count_per_point)
  return reward_count_per_point_;
}
inline void mdRestReward::set_reward_count_per_point(float value) {
  set_has_reward_count_per_point();
  reward_count_per_point_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdRestReward.reward_count_per_point)
}

// -------------------------------------------------------------------

// mdEventInfo

// required int32 event_id = 1;
inline bool mdEventInfo::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdEventInfo::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdEventInfo::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdEventInfo::clear_event_id() {
  event_id_ = 0;
  clear_has_event_id();
}
inline ::google::protobuf::int32 mdEventInfo::event_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdEventInfo.event_id)
  return event_id_;
}
inline void mdEventInfo::set_event_id(::google::protobuf::int32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdEventInfo.event_id)
}

// required .b2.protocol.commondata.EventCategory event_category = 2;
inline bool mdEventInfo::has_event_category() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdEventInfo::set_has_event_category() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdEventInfo::clear_has_event_category() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdEventInfo::clear_event_category() {
  event_category_ = 1;
  clear_has_event_category();
}
inline ::b2::protocol::commondata::EventCategory mdEventInfo::event_category() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdEventInfo.event_category)
  return static_cast< ::b2::protocol::commondata::EventCategory >(event_category_);
}
inline void mdEventInfo::set_event_category(::b2::protocol::commondata::EventCategory value) {
  assert(::b2::protocol::commondata::EventCategory_IsValid(value));
  set_has_event_category();
  event_category_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdEventInfo.event_category)
}

// required string event_tab_name = 3;
inline bool mdEventInfo::has_event_tab_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdEventInfo::set_has_event_tab_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdEventInfo::clear_has_event_tab_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdEventInfo::clear_event_tab_name() {
  if (event_tab_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    event_tab_name_->clear();
  }
  clear_has_event_tab_name();
}
inline const ::std::string& mdEventInfo::event_tab_name() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdEventInfo.event_tab_name)
  return *event_tab_name_;
}
inline void mdEventInfo::set_event_tab_name(const ::std::string& value) {
  set_has_event_tab_name();
  if (event_tab_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    event_tab_name_ = new ::std::string;
  }
  event_tab_name_->assign(value);
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdEventInfo.event_tab_name)
}
inline void mdEventInfo::set_event_tab_name(const char* value) {
  set_has_event_tab_name();
  if (event_tab_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    event_tab_name_ = new ::std::string;
  }
  event_tab_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:b2.protocol.masterdata.mdEventInfo.event_tab_name)
}
inline void mdEventInfo::set_event_tab_name(const char* value, size_t size) {
  set_has_event_tab_name();
  if (event_tab_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    event_tab_name_ = new ::std::string;
  }
  event_tab_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:b2.protocol.masterdata.mdEventInfo.event_tab_name)
}
inline ::std::string* mdEventInfo::mutable_event_tab_name() {
  set_has_event_tab_name();
  if (event_tab_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    event_tab_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:b2.protocol.masterdata.mdEventInfo.event_tab_name)
  return event_tab_name_;
}
inline ::std::string* mdEventInfo::release_event_tab_name() {
  clear_has_event_tab_name();
  if (event_tab_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = event_tab_name_;
    event_tab_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void mdEventInfo::set_allocated_event_tab_name(::std::string* event_tab_name) {
  if (event_tab_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete event_tab_name_;
  }
  if (event_tab_name) {
    set_has_event_tab_name();
    event_tab_name_ = event_tab_name;
  } else {
    clear_has_event_tab_name();
    event_tab_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.masterdata.mdEventInfo.event_tab_name)
}

// required string title = 4;
inline bool mdEventInfo::has_title() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdEventInfo::set_has_title() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdEventInfo::clear_has_title() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdEventInfo::clear_title() {
  if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_->clear();
  }
  clear_has_title();
}
inline const ::std::string& mdEventInfo::title() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdEventInfo.title)
  return *title_;
}
inline void mdEventInfo::set_title(const ::std::string& value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  title_->assign(value);
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdEventInfo.title)
}
inline void mdEventInfo::set_title(const char* value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  title_->assign(value);
  // @@protoc_insertion_point(field_set_char:b2.protocol.masterdata.mdEventInfo.title)
}
inline void mdEventInfo::set_title(const char* value, size_t size) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  title_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:b2.protocol.masterdata.mdEventInfo.title)
}
inline ::std::string* mdEventInfo::mutable_title() {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:b2.protocol.masterdata.mdEventInfo.title)
  return title_;
}
inline ::std::string* mdEventInfo::release_title() {
  clear_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = title_;
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void mdEventInfo::set_allocated_title(::std::string* title) {
  if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete title_;
  }
  if (title) {
    set_has_title();
    title_ = title;
  } else {
    clear_has_title();
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.masterdata.mdEventInfo.title)
}

// required int64 start_time = 5;
inline bool mdEventInfo::has_start_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdEventInfo::set_has_start_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdEventInfo::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdEventInfo::clear_start_time() {
  start_time_ = GOOGLE_LONGLONG(0);
  clear_has_start_time();
}
inline ::google::protobuf::int64 mdEventInfo::start_time() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdEventInfo.start_time)
  return start_time_;
}
inline void mdEventInfo::set_start_time(::google::protobuf::int64 value) {
  set_has_start_time();
  start_time_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdEventInfo.start_time)
}

// required int64 end_time = 6;
inline bool mdEventInfo::has_end_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdEventInfo::set_has_end_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdEventInfo::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdEventInfo::clear_end_time() {
  end_time_ = GOOGLE_LONGLONG(0);
  clear_has_end_time();
}
inline ::google::protobuf::int64 mdEventInfo::end_time() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdEventInfo.end_time)
  return end_time_;
}
inline void mdEventInfo::set_end_time(::google::protobuf::int64 value) {
  set_has_end_time();
  end_time_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdEventInfo.end_time)
}

// required string explain = 7;
inline bool mdEventInfo::has_explain() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mdEventInfo::set_has_explain() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mdEventInfo::clear_has_explain() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mdEventInfo::clear_explain() {
  if (explain_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    explain_->clear();
  }
  clear_has_explain();
}
inline const ::std::string& mdEventInfo::explain() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdEventInfo.explain)
  return *explain_;
}
inline void mdEventInfo::set_explain(const ::std::string& value) {
  set_has_explain();
  if (explain_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    explain_ = new ::std::string;
  }
  explain_->assign(value);
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdEventInfo.explain)
}
inline void mdEventInfo::set_explain(const char* value) {
  set_has_explain();
  if (explain_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    explain_ = new ::std::string;
  }
  explain_->assign(value);
  // @@protoc_insertion_point(field_set_char:b2.protocol.masterdata.mdEventInfo.explain)
}
inline void mdEventInfo::set_explain(const char* value, size_t size) {
  set_has_explain();
  if (explain_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    explain_ = new ::std::string;
  }
  explain_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:b2.protocol.masterdata.mdEventInfo.explain)
}
inline ::std::string* mdEventInfo::mutable_explain() {
  set_has_explain();
  if (explain_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    explain_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:b2.protocol.masterdata.mdEventInfo.explain)
  return explain_;
}
inline ::std::string* mdEventInfo::release_explain() {
  clear_has_explain();
  if (explain_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = explain_;
    explain_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void mdEventInfo::set_allocated_explain(::std::string* explain) {
  if (explain_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete explain_;
  }
  if (explain) {
    set_has_explain();
    explain_ = explain;
  } else {
    clear_has_explain();
    explain_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.masterdata.mdEventInfo.explain)
}

// required string banner_url = 8;
inline bool mdEventInfo::has_banner_url() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void mdEventInfo::set_has_banner_url() {
  _has_bits_[0] |= 0x00000080u;
}
inline void mdEventInfo::clear_has_banner_url() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void mdEventInfo::clear_banner_url() {
  if (banner_url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    banner_url_->clear();
  }
  clear_has_banner_url();
}
inline const ::std::string& mdEventInfo::banner_url() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdEventInfo.banner_url)
  return *banner_url_;
}
inline void mdEventInfo::set_banner_url(const ::std::string& value) {
  set_has_banner_url();
  if (banner_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    banner_url_ = new ::std::string;
  }
  banner_url_->assign(value);
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdEventInfo.banner_url)
}
inline void mdEventInfo::set_banner_url(const char* value) {
  set_has_banner_url();
  if (banner_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    banner_url_ = new ::std::string;
  }
  banner_url_->assign(value);
  // @@protoc_insertion_point(field_set_char:b2.protocol.masterdata.mdEventInfo.banner_url)
}
inline void mdEventInfo::set_banner_url(const char* value, size_t size) {
  set_has_banner_url();
  if (banner_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    banner_url_ = new ::std::string;
  }
  banner_url_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:b2.protocol.masterdata.mdEventInfo.banner_url)
}
inline ::std::string* mdEventInfo::mutable_banner_url() {
  set_has_banner_url();
  if (banner_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    banner_url_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:b2.protocol.masterdata.mdEventInfo.banner_url)
  return banner_url_;
}
inline ::std::string* mdEventInfo::release_banner_url() {
  clear_has_banner_url();
  if (banner_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = banner_url_;
    banner_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void mdEventInfo::set_allocated_banner_url(::std::string* banner_url) {
  if (banner_url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete banner_url_;
  }
  if (banner_url) {
    set_has_banner_url();
    banner_url_ = banner_url;
  } else {
    clear_has_banner_url();
    banner_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.masterdata.mdEventInfo.banner_url)
}

// required string link_text = 9;
inline bool mdEventInfo::has_link_text() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void mdEventInfo::set_has_link_text() {
  _has_bits_[0] |= 0x00000100u;
}
inline void mdEventInfo::clear_has_link_text() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void mdEventInfo::clear_link_text() {
  if (link_text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    link_text_->clear();
  }
  clear_has_link_text();
}
inline const ::std::string& mdEventInfo::link_text() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdEventInfo.link_text)
  return *link_text_;
}
inline void mdEventInfo::set_link_text(const ::std::string& value) {
  set_has_link_text();
  if (link_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    link_text_ = new ::std::string;
  }
  link_text_->assign(value);
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdEventInfo.link_text)
}
inline void mdEventInfo::set_link_text(const char* value) {
  set_has_link_text();
  if (link_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    link_text_ = new ::std::string;
  }
  link_text_->assign(value);
  // @@protoc_insertion_point(field_set_char:b2.protocol.masterdata.mdEventInfo.link_text)
}
inline void mdEventInfo::set_link_text(const char* value, size_t size) {
  set_has_link_text();
  if (link_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    link_text_ = new ::std::string;
  }
  link_text_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:b2.protocol.masterdata.mdEventInfo.link_text)
}
inline ::std::string* mdEventInfo::mutable_link_text() {
  set_has_link_text();
  if (link_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    link_text_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:b2.protocol.masterdata.mdEventInfo.link_text)
  return link_text_;
}
inline ::std::string* mdEventInfo::release_link_text() {
  clear_has_link_text();
  if (link_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = link_text_;
    link_text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void mdEventInfo::set_allocated_link_text(::std::string* link_text) {
  if (link_text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete link_text_;
  }
  if (link_text) {
    set_has_link_text();
    link_text_ = link_text;
  } else {
    clear_has_link_text();
    link_text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.masterdata.mdEventInfo.link_text)
}

// required string link_url = 10;
inline bool mdEventInfo::has_link_url() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void mdEventInfo::set_has_link_url() {
  _has_bits_[0] |= 0x00000200u;
}
inline void mdEventInfo::clear_has_link_url() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void mdEventInfo::clear_link_url() {
  if (link_url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    link_url_->clear();
  }
  clear_has_link_url();
}
inline const ::std::string& mdEventInfo::link_url() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdEventInfo.link_url)
  return *link_url_;
}
inline void mdEventInfo::set_link_url(const ::std::string& value) {
  set_has_link_url();
  if (link_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    link_url_ = new ::std::string;
  }
  link_url_->assign(value);
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdEventInfo.link_url)
}
inline void mdEventInfo::set_link_url(const char* value) {
  set_has_link_url();
  if (link_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    link_url_ = new ::std::string;
  }
  link_url_->assign(value);
  // @@protoc_insertion_point(field_set_char:b2.protocol.masterdata.mdEventInfo.link_url)
}
inline void mdEventInfo::set_link_url(const char* value, size_t size) {
  set_has_link_url();
  if (link_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    link_url_ = new ::std::string;
  }
  link_url_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:b2.protocol.masterdata.mdEventInfo.link_url)
}
inline ::std::string* mdEventInfo::mutable_link_url() {
  set_has_link_url();
  if (link_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    link_url_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:b2.protocol.masterdata.mdEventInfo.link_url)
  return link_url_;
}
inline ::std::string* mdEventInfo::release_link_url() {
  clear_has_link_url();
  if (link_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = link_url_;
    link_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void mdEventInfo::set_allocated_link_url(::std::string* link_url) {
  if (link_url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete link_url_;
  }
  if (link_url) {
    set_has_link_url();
    link_url_ = link_url;
  } else {
    clear_has_link_url();
    link_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.masterdata.mdEventInfo.link_url)
}

// required int32 tab_order = 11;
inline bool mdEventInfo::has_tab_order() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void mdEventInfo::set_has_tab_order() {
  _has_bits_[0] |= 0x00000400u;
}
inline void mdEventInfo::clear_has_tab_order() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void mdEventInfo::clear_tab_order() {
  tab_order_ = 0;
  clear_has_tab_order();
}
inline ::google::protobuf::int32 mdEventInfo::tab_order() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdEventInfo.tab_order)
  return tab_order_;
}
inline void mdEventInfo::set_tab_order(::google::protobuf::int32 value) {
  set_has_tab_order();
  tab_order_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdEventInfo.tab_order)
}

// required int32 event_sub_category = 12;
inline bool mdEventInfo::has_event_sub_category() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void mdEventInfo::set_has_event_sub_category() {
  _has_bits_[0] |= 0x00000800u;
}
inline void mdEventInfo::clear_has_event_sub_category() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void mdEventInfo::clear_event_sub_category() {
  event_sub_category_ = 0;
  clear_has_event_sub_category();
}
inline ::google::protobuf::int32 mdEventInfo::event_sub_category() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdEventInfo.event_sub_category)
  return event_sub_category_;
}
inline void mdEventInfo::set_event_sub_category(::google::protobuf::int32 value) {
  set_has_event_sub_category();
  event_sub_category_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdEventInfo.event_sub_category)
}

// -------------------------------------------------------------------

// mdPointEvent

// required int32 event_id = 1;
inline bool mdPointEvent::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdPointEvent::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdPointEvent::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdPointEvent::clear_event_id() {
  event_id_ = 0;
  clear_has_event_id();
}
inline ::google::protobuf::int32 mdPointEvent::event_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdPointEvent.event_id)
  return event_id_;
}
inline void mdPointEvent::set_event_id(::google::protobuf::int32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdPointEvent.event_id)
}

// required int32 event_type = 2;
inline bool mdPointEvent::has_event_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdPointEvent::set_has_event_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdPointEvent::clear_has_event_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdPointEvent::clear_event_type() {
  event_type_ = 0;
  clear_has_event_type();
}
inline ::google::protobuf::int32 mdPointEvent::event_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdPointEvent.event_type)
  return event_type_;
}
inline void mdPointEvent::set_event_type(::google::protobuf::int32 value) {
  set_has_event_type();
  event_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdPointEvent.event_type)
}

// required int32 point = 3;
inline bool mdPointEvent::has_point() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdPointEvent::set_has_point() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdPointEvent::clear_has_point() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdPointEvent::clear_point() {
  point_ = 0;
  clear_has_point();
}
inline ::google::protobuf::int32 mdPointEvent::point() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdPointEvent.point)
  return point_;
}
inline void mdPointEvent::set_point(::google::protobuf::int32 value) {
  set_has_point();
  point_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdPointEvent.point)
}

// required int32 index = 4;
inline bool mdPointEvent::has_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdPointEvent::set_has_index() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdPointEvent::clear_has_index() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdPointEvent::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 mdPointEvent::index() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdPointEvent.index)
  return index_;
}
inline void mdPointEvent::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdPointEvent.index)
}

// required int32 condition1 = 5;
inline bool mdPointEvent::has_condition1() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdPointEvent::set_has_condition1() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdPointEvent::clear_has_condition1() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdPointEvent::clear_condition1() {
  condition1_ = 0;
  clear_has_condition1();
}
inline ::google::protobuf::int32 mdPointEvent::condition1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdPointEvent.condition1)
  return condition1_;
}
inline void mdPointEvent::set_condition1(::google::protobuf::int32 value) {
  set_has_condition1();
  condition1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdPointEvent.condition1)
}

// required int32 condition2 = 6;
inline bool mdPointEvent::has_condition2() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdPointEvent::set_has_condition2() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdPointEvent::clear_has_condition2() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdPointEvent::clear_condition2() {
  condition2_ = 0;
  clear_has_condition2();
}
inline ::google::protobuf::int32 mdPointEvent::condition2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdPointEvent.condition2)
  return condition2_;
}
inline void mdPointEvent::set_condition2(::google::protobuf::int32 value) {
  set_has_condition2();
  condition2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdPointEvent.condition2)
}

// required int32 condition3 = 7;
inline bool mdPointEvent::has_condition3() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mdPointEvent::set_has_condition3() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mdPointEvent::clear_has_condition3() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mdPointEvent::clear_condition3() {
  condition3_ = 0;
  clear_has_condition3();
}
inline ::google::protobuf::int32 mdPointEvent::condition3() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdPointEvent.condition3)
  return condition3_;
}
inline void mdPointEvent::set_condition3(::google::protobuf::int32 value) {
  set_has_condition3();
  condition3_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdPointEvent.condition3)
}

// required int32 condition4 = 8;
inline bool mdPointEvent::has_condition4() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void mdPointEvent::set_has_condition4() {
  _has_bits_[0] |= 0x00000080u;
}
inline void mdPointEvent::clear_has_condition4() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void mdPointEvent::clear_condition4() {
  condition4_ = 0;
  clear_has_condition4();
}
inline ::google::protobuf::int32 mdPointEvent::condition4() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdPointEvent.condition4)
  return condition4_;
}
inline void mdPointEvent::set_condition4(::google::protobuf::int32 value) {
  set_has_condition4();
  condition4_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdPointEvent.condition4)
}

// -------------------------------------------------------------------

// mdPointEventReward

// required int32 event_id = 1;
inline bool mdPointEventReward::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdPointEventReward::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdPointEventReward::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdPointEventReward::clear_event_id() {
  event_id_ = 0;
  clear_has_event_id();
}
inline ::google::protobuf::int32 mdPointEventReward::event_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdPointEventReward.event_id)
  return event_id_;
}
inline void mdPointEventReward::set_event_id(::google::protobuf::int32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdPointEventReward.event_id)
}

// required int32 index = 2;
inline bool mdPointEventReward::has_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdPointEventReward::set_has_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdPointEventReward::clear_has_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdPointEventReward::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 mdPointEventReward::index() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdPointEventReward.index)
  return index_;
}
inline void mdPointEventReward::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdPointEventReward.index)
}

// required int32 reward_id = 3;
inline bool mdPointEventReward::has_reward_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdPointEventReward::set_has_reward_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdPointEventReward::clear_has_reward_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdPointEventReward::clear_reward_id() {
  reward_id_ = 0;
  clear_has_reward_id();
}
inline ::google::protobuf::int32 mdPointEventReward::reward_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdPointEventReward.reward_id)
  return reward_id_;
}
inline void mdPointEventReward::set_reward_id(::google::protobuf::int32 value) {
  set_has_reward_id();
  reward_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdPointEventReward.reward_id)
}

// required int32 reward_count = 4;
inline bool mdPointEventReward::has_reward_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdPointEventReward::set_has_reward_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdPointEventReward::clear_has_reward_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdPointEventReward::clear_reward_count() {
  reward_count_ = 0;
  clear_has_reward_count();
}
inline ::google::protobuf::int32 mdPointEventReward::reward_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdPointEventReward.reward_count)
  return reward_count_;
}
inline void mdPointEventReward::set_reward_count(::google::protobuf::int32 value) {
  set_has_reward_count();
  reward_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdPointEventReward.reward_count)
}

// required int32 need_point = 5;
inline bool mdPointEventReward::has_need_point() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdPointEventReward::set_has_need_point() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdPointEventReward::clear_has_need_point() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdPointEventReward::clear_need_point() {
  need_point_ = 0;
  clear_has_need_point();
}
inline ::google::protobuf::int32 mdPointEventReward::need_point() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdPointEventReward.need_point)
  return need_point_;
}
inline void mdPointEventReward::set_need_point(::google::protobuf::int32 value) {
  set_has_need_point();
  need_point_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdPointEventReward.need_point)
}

// required int32 tab_group_id = 6;
inline bool mdPointEventReward::has_tab_group_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdPointEventReward::set_has_tab_group_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdPointEventReward::clear_has_tab_group_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdPointEventReward::clear_tab_group_id() {
  tab_group_id_ = 0;
  clear_has_tab_group_id();
}
inline ::google::protobuf::int32 mdPointEventReward::tab_group_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdPointEventReward.tab_group_id)
  return tab_group_id_;
}
inline void mdPointEventReward::set_tab_group_id(::google::protobuf::int32 value) {
  set_has_tab_group_id();
  tab_group_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdPointEventReward.tab_group_id)
}

// required int32 buy_limit_count = 7;
inline bool mdPointEventReward::has_buy_limit_count() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mdPointEventReward::set_has_buy_limit_count() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mdPointEventReward::clear_has_buy_limit_count() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mdPointEventReward::clear_buy_limit_count() {
  buy_limit_count_ = 0;
  clear_has_buy_limit_count();
}
inline ::google::protobuf::int32 mdPointEventReward::buy_limit_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdPointEventReward.buy_limit_count)
  return buy_limit_count_;
}
inline void mdPointEventReward::set_buy_limit_count(::google::protobuf::int32 value) {
  set_has_buy_limit_count();
  buy_limit_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdPointEventReward.buy_limit_count)
}

// -------------------------------------------------------------------

// mdGemPurchaseEventReward

// required int32 event_id = 1;
inline bool mdGemPurchaseEventReward::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdGemPurchaseEventReward::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdGemPurchaseEventReward::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdGemPurchaseEventReward::clear_event_id() {
  event_id_ = 0;
  clear_has_event_id();
}
inline ::google::protobuf::int32 mdGemPurchaseEventReward::event_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGemPurchaseEventReward.event_id)
  return event_id_;
}
inline void mdGemPurchaseEventReward::set_event_id(::google::protobuf::int32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGemPurchaseEventReward.event_id)
}

// required int32 index = 2;
inline bool mdGemPurchaseEventReward::has_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdGemPurchaseEventReward::set_has_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdGemPurchaseEventReward::clear_has_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdGemPurchaseEventReward::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 mdGemPurchaseEventReward::index() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGemPurchaseEventReward.index)
  return index_;
}
inline void mdGemPurchaseEventReward::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGemPurchaseEventReward.index)
}

// required int32 goal_count = 3;
inline bool mdGemPurchaseEventReward::has_goal_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdGemPurchaseEventReward::set_has_goal_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdGemPurchaseEventReward::clear_has_goal_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdGemPurchaseEventReward::clear_goal_count() {
  goal_count_ = 0;
  clear_has_goal_count();
}
inline ::google::protobuf::int32 mdGemPurchaseEventReward::goal_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGemPurchaseEventReward.goal_count)
  return goal_count_;
}
inline void mdGemPurchaseEventReward::set_goal_count(::google::protobuf::int32 value) {
  set_has_goal_count();
  goal_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGemPurchaseEventReward.goal_count)
}

// required int32 reward_id1 = 4;
inline bool mdGemPurchaseEventReward::has_reward_id1() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdGemPurchaseEventReward::set_has_reward_id1() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdGemPurchaseEventReward::clear_has_reward_id1() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdGemPurchaseEventReward::clear_reward_id1() {
  reward_id1_ = 0;
  clear_has_reward_id1();
}
inline ::google::protobuf::int32 mdGemPurchaseEventReward::reward_id1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGemPurchaseEventReward.reward_id1)
  return reward_id1_;
}
inline void mdGemPurchaseEventReward::set_reward_id1(::google::protobuf::int32 value) {
  set_has_reward_id1();
  reward_id1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGemPurchaseEventReward.reward_id1)
}

// required int32 reward_count1 = 5;
inline bool mdGemPurchaseEventReward::has_reward_count1() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdGemPurchaseEventReward::set_has_reward_count1() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdGemPurchaseEventReward::clear_has_reward_count1() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdGemPurchaseEventReward::clear_reward_count1() {
  reward_count1_ = 0;
  clear_has_reward_count1();
}
inline ::google::protobuf::int32 mdGemPurchaseEventReward::reward_count1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGemPurchaseEventReward.reward_count1)
  return reward_count1_;
}
inline void mdGemPurchaseEventReward::set_reward_count1(::google::protobuf::int32 value) {
  set_has_reward_count1();
  reward_count1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGemPurchaseEventReward.reward_count1)
}

// required int32 reward_id2 = 6;
inline bool mdGemPurchaseEventReward::has_reward_id2() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdGemPurchaseEventReward::set_has_reward_id2() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdGemPurchaseEventReward::clear_has_reward_id2() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdGemPurchaseEventReward::clear_reward_id2() {
  reward_id2_ = 0;
  clear_has_reward_id2();
}
inline ::google::protobuf::int32 mdGemPurchaseEventReward::reward_id2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGemPurchaseEventReward.reward_id2)
  return reward_id2_;
}
inline void mdGemPurchaseEventReward::set_reward_id2(::google::protobuf::int32 value) {
  set_has_reward_id2();
  reward_id2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGemPurchaseEventReward.reward_id2)
}

// required int32 reward_count2 = 7;
inline bool mdGemPurchaseEventReward::has_reward_count2() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mdGemPurchaseEventReward::set_has_reward_count2() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mdGemPurchaseEventReward::clear_has_reward_count2() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mdGemPurchaseEventReward::clear_reward_count2() {
  reward_count2_ = 0;
  clear_has_reward_count2();
}
inline ::google::protobuf::int32 mdGemPurchaseEventReward::reward_count2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGemPurchaseEventReward.reward_count2)
  return reward_count2_;
}
inline void mdGemPurchaseEventReward::set_reward_count2(::google::protobuf::int32 value) {
  set_has_reward_count2();
  reward_count2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGemPurchaseEventReward.reward_count2)
}

// required int32 reward_id3 = 8;
inline bool mdGemPurchaseEventReward::has_reward_id3() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void mdGemPurchaseEventReward::set_has_reward_id3() {
  _has_bits_[0] |= 0x00000080u;
}
inline void mdGemPurchaseEventReward::clear_has_reward_id3() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void mdGemPurchaseEventReward::clear_reward_id3() {
  reward_id3_ = 0;
  clear_has_reward_id3();
}
inline ::google::protobuf::int32 mdGemPurchaseEventReward::reward_id3() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGemPurchaseEventReward.reward_id3)
  return reward_id3_;
}
inline void mdGemPurchaseEventReward::set_reward_id3(::google::protobuf::int32 value) {
  set_has_reward_id3();
  reward_id3_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGemPurchaseEventReward.reward_id3)
}

// required int32 reward_count3 = 9;
inline bool mdGemPurchaseEventReward::has_reward_count3() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void mdGemPurchaseEventReward::set_has_reward_count3() {
  _has_bits_[0] |= 0x00000100u;
}
inline void mdGemPurchaseEventReward::clear_has_reward_count3() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void mdGemPurchaseEventReward::clear_reward_count3() {
  reward_count3_ = 0;
  clear_has_reward_count3();
}
inline ::google::protobuf::int32 mdGemPurchaseEventReward::reward_count3() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdGemPurchaseEventReward.reward_count3)
  return reward_count3_;
}
inline void mdGemPurchaseEventReward::set_reward_count3(::google::protobuf::int32 value) {
  set_has_reward_count3();
  reward_count3_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdGemPurchaseEventReward.reward_count3)
}

// -------------------------------------------------------------------

// mdLevelUpEvent

// required int32 event_id = 1;
inline bool mdLevelUpEvent::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdLevelUpEvent::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdLevelUpEvent::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdLevelUpEvent::clear_event_id() {
  event_id_ = 0;
  clear_has_event_id();
}
inline ::google::protobuf::int32 mdLevelUpEvent::event_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdLevelUpEvent.event_id)
  return event_id_;
}
inline void mdLevelUpEvent::set_event_id(::google::protobuf::int32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdLevelUpEvent.event_id)
}

// required int32 index = 2;
inline bool mdLevelUpEvent::has_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdLevelUpEvent::set_has_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdLevelUpEvent::clear_has_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdLevelUpEvent::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 mdLevelUpEvent::index() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdLevelUpEvent.index)
  return index_;
}
inline void mdLevelUpEvent::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdLevelUpEvent.index)
}

// required int32 level = 3;
inline bool mdLevelUpEvent::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdLevelUpEvent::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdLevelUpEvent::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdLevelUpEvent::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 mdLevelUpEvent::level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdLevelUpEvent.level)
  return level_;
}
inline void mdLevelUpEvent::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdLevelUpEvent.level)
}

// required int32 reward_id = 4;
inline bool mdLevelUpEvent::has_reward_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdLevelUpEvent::set_has_reward_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdLevelUpEvent::clear_has_reward_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdLevelUpEvent::clear_reward_id() {
  reward_id_ = 0;
  clear_has_reward_id();
}
inline ::google::protobuf::int32 mdLevelUpEvent::reward_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdLevelUpEvent.reward_id)
  return reward_id_;
}
inline void mdLevelUpEvent::set_reward_id(::google::protobuf::int32 value) {
  set_has_reward_id();
  reward_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdLevelUpEvent.reward_id)
}

// required int32 reward_count = 5;
inline bool mdLevelUpEvent::has_reward_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdLevelUpEvent::set_has_reward_count() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdLevelUpEvent::clear_has_reward_count() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdLevelUpEvent::clear_reward_count() {
  reward_count_ = 0;
  clear_has_reward_count();
}
inline ::google::protobuf::int32 mdLevelUpEvent::reward_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdLevelUpEvent.reward_count)
  return reward_count_;
}
inline void mdLevelUpEvent::set_reward_count(::google::protobuf::int32 value) {
  set_has_reward_count();
  reward_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdLevelUpEvent.reward_count)
}

// -------------------------------------------------------------------

// mdHotTimeEvent

// required int32 event_id = 1;
inline bool mdHotTimeEvent::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdHotTimeEvent::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdHotTimeEvent::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdHotTimeEvent::clear_event_id() {
  event_id_ = 0;
  clear_has_event_id();
}
inline ::google::protobuf::int32 mdHotTimeEvent::event_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdHotTimeEvent.event_id)
  return event_id_;
}
inline void mdHotTimeEvent::set_event_id(::google::protobuf::int32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdHotTimeEvent.event_id)
}

// required int32 day_of_week = 2;
inline bool mdHotTimeEvent::has_day_of_week() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdHotTimeEvent::set_has_day_of_week() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdHotTimeEvent::clear_has_day_of_week() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdHotTimeEvent::clear_day_of_week() {
  day_of_week_ = 0;
  clear_has_day_of_week();
}
inline ::google::protobuf::int32 mdHotTimeEvent::day_of_week() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdHotTimeEvent.day_of_week)
  return day_of_week_;
}
inline void mdHotTimeEvent::set_day_of_week(::google::protobuf::int32 value) {
  set_has_day_of_week();
  day_of_week_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdHotTimeEvent.day_of_week)
}

// required int32 index = 3;
inline bool mdHotTimeEvent::has_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdHotTimeEvent::set_has_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdHotTimeEvent::clear_has_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdHotTimeEvent::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 mdHotTimeEvent::index() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdHotTimeEvent.index)
  return index_;
}
inline void mdHotTimeEvent::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdHotTimeEvent.index)
}

// required .b2.protocol.commondata.HotTimeBuffType buff_type = 4;
inline bool mdHotTimeEvent::has_buff_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdHotTimeEvent::set_has_buff_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdHotTimeEvent::clear_has_buff_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdHotTimeEvent::clear_buff_type() {
  buff_type_ = 1;
  clear_has_buff_type();
}
inline ::b2::protocol::commondata::HotTimeBuffType mdHotTimeEvent::buff_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdHotTimeEvent.buff_type)
  return static_cast< ::b2::protocol::commondata::HotTimeBuffType >(buff_type_);
}
inline void mdHotTimeEvent::set_buff_type(::b2::protocol::commondata::HotTimeBuffType value) {
  assert(::b2::protocol::commondata::HotTimeBuffType_IsValid(value));
  set_has_buff_type();
  buff_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdHotTimeEvent.buff_type)
}

// required int32 begin_hour = 5;
inline bool mdHotTimeEvent::has_begin_hour() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdHotTimeEvent::set_has_begin_hour() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdHotTimeEvent::clear_has_begin_hour() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdHotTimeEvent::clear_begin_hour() {
  begin_hour_ = 0;
  clear_has_begin_hour();
}
inline ::google::protobuf::int32 mdHotTimeEvent::begin_hour() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdHotTimeEvent.begin_hour)
  return begin_hour_;
}
inline void mdHotTimeEvent::set_begin_hour(::google::protobuf::int32 value) {
  set_has_begin_hour();
  begin_hour_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdHotTimeEvent.begin_hour)
}

// required int32 begin_min = 6;
inline bool mdHotTimeEvent::has_begin_min() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdHotTimeEvent::set_has_begin_min() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdHotTimeEvent::clear_has_begin_min() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdHotTimeEvent::clear_begin_min() {
  begin_min_ = 0;
  clear_has_begin_min();
}
inline ::google::protobuf::int32 mdHotTimeEvent::begin_min() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdHotTimeEvent.begin_min)
  return begin_min_;
}
inline void mdHotTimeEvent::set_begin_min(::google::protobuf::int32 value) {
  set_has_begin_min();
  begin_min_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdHotTimeEvent.begin_min)
}

// required int32 end_hour = 7;
inline bool mdHotTimeEvent::has_end_hour() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mdHotTimeEvent::set_has_end_hour() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mdHotTimeEvent::clear_has_end_hour() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mdHotTimeEvent::clear_end_hour() {
  end_hour_ = 0;
  clear_has_end_hour();
}
inline ::google::protobuf::int32 mdHotTimeEvent::end_hour() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdHotTimeEvent.end_hour)
  return end_hour_;
}
inline void mdHotTimeEvent::set_end_hour(::google::protobuf::int32 value) {
  set_has_end_hour();
  end_hour_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdHotTimeEvent.end_hour)
}

// required int32 end_min = 8;
inline bool mdHotTimeEvent::has_end_min() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void mdHotTimeEvent::set_has_end_min() {
  _has_bits_[0] |= 0x00000080u;
}
inline void mdHotTimeEvent::clear_has_end_min() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void mdHotTimeEvent::clear_end_min() {
  end_min_ = 0;
  clear_has_end_min();
}
inline ::google::protobuf::int32 mdHotTimeEvent::end_min() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdHotTimeEvent.end_min)
  return end_min_;
}
inline void mdHotTimeEvent::set_end_min(::google::protobuf::int32 value) {
  set_has_end_min();
  end_min_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdHotTimeEvent.end_min)
}

// required int32 increase_rate = 9;
inline bool mdHotTimeEvent::has_increase_rate() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void mdHotTimeEvent::set_has_increase_rate() {
  _has_bits_[0] |= 0x00000100u;
}
inline void mdHotTimeEvent::clear_has_increase_rate() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void mdHotTimeEvent::clear_increase_rate() {
  increase_rate_ = 0;
  clear_has_increase_rate();
}
inline ::google::protobuf::int32 mdHotTimeEvent::increase_rate() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdHotTimeEvent.increase_rate)
  return increase_rate_;
}
inline void mdHotTimeEvent::set_increase_rate(::google::protobuf::int32 value) {
  set_has_increase_rate();
  increase_rate_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdHotTimeEvent.increase_rate)
}

// -------------------------------------------------------------------

// mdSeasonMissionEvent

// required int32 event_id = 1;
inline bool mdSeasonMissionEvent::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdSeasonMissionEvent::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdSeasonMissionEvent::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdSeasonMissionEvent::clear_event_id() {
  event_id_ = 0;
  clear_has_event_id();
}
inline ::google::protobuf::int32 mdSeasonMissionEvent::event_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSeasonMissionEvent.event_id)
  return event_id_;
}
inline void mdSeasonMissionEvent::set_event_id(::google::protobuf::int32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSeasonMissionEvent.event_id)
}

// required int32 day = 2;
inline bool mdSeasonMissionEvent::has_day() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdSeasonMissionEvent::set_has_day() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdSeasonMissionEvent::clear_has_day() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdSeasonMissionEvent::clear_day() {
  day_ = 0;
  clear_has_day();
}
inline ::google::protobuf::int32 mdSeasonMissionEvent::day() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSeasonMissionEvent.day)
  return day_;
}
inline void mdSeasonMissionEvent::set_day(::google::protobuf::int32 value) {
  set_has_day();
  day_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSeasonMissionEvent.day)
}

// required int32 index = 3;
inline bool mdSeasonMissionEvent::has_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdSeasonMissionEvent::set_has_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdSeasonMissionEvent::clear_has_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdSeasonMissionEvent::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 mdSeasonMissionEvent::index() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSeasonMissionEvent.index)
  return index_;
}
inline void mdSeasonMissionEvent::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSeasonMissionEvent.index)
}

// required int32 event_type = 4;
inline bool mdSeasonMissionEvent::has_event_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdSeasonMissionEvent::set_has_event_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdSeasonMissionEvent::clear_has_event_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdSeasonMissionEvent::clear_event_type() {
  event_type_ = 0;
  clear_has_event_type();
}
inline ::google::protobuf::int32 mdSeasonMissionEvent::event_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSeasonMissionEvent.event_type)
  return event_type_;
}
inline void mdSeasonMissionEvent::set_event_type(::google::protobuf::int32 value) {
  set_has_event_type();
  event_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSeasonMissionEvent.event_type)
}

// required int32 condition1 = 5;
inline bool mdSeasonMissionEvent::has_condition1() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdSeasonMissionEvent::set_has_condition1() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdSeasonMissionEvent::clear_has_condition1() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdSeasonMissionEvent::clear_condition1() {
  condition1_ = 0;
  clear_has_condition1();
}
inline ::google::protobuf::int32 mdSeasonMissionEvent::condition1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSeasonMissionEvent.condition1)
  return condition1_;
}
inline void mdSeasonMissionEvent::set_condition1(::google::protobuf::int32 value) {
  set_has_condition1();
  condition1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSeasonMissionEvent.condition1)
}

// required int32 condition2 = 6;
inline bool mdSeasonMissionEvent::has_condition2() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdSeasonMissionEvent::set_has_condition2() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdSeasonMissionEvent::clear_has_condition2() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdSeasonMissionEvent::clear_condition2() {
  condition2_ = 0;
  clear_has_condition2();
}
inline ::google::protobuf::int32 mdSeasonMissionEvent::condition2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSeasonMissionEvent.condition2)
  return condition2_;
}
inline void mdSeasonMissionEvent::set_condition2(::google::protobuf::int32 value) {
  set_has_condition2();
  condition2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSeasonMissionEvent.condition2)
}

// required int32 condition3 = 7;
inline bool mdSeasonMissionEvent::has_condition3() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mdSeasonMissionEvent::set_has_condition3() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mdSeasonMissionEvent::clear_has_condition3() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mdSeasonMissionEvent::clear_condition3() {
  condition3_ = 0;
  clear_has_condition3();
}
inline ::google::protobuf::int32 mdSeasonMissionEvent::condition3() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSeasonMissionEvent.condition3)
  return condition3_;
}
inline void mdSeasonMissionEvent::set_condition3(::google::protobuf::int32 value) {
  set_has_condition3();
  condition3_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSeasonMissionEvent.condition3)
}

// required int32 condition4 = 8;
inline bool mdSeasonMissionEvent::has_condition4() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void mdSeasonMissionEvent::set_has_condition4() {
  _has_bits_[0] |= 0x00000080u;
}
inline void mdSeasonMissionEvent::clear_has_condition4() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void mdSeasonMissionEvent::clear_condition4() {
  condition4_ = 0;
  clear_has_condition4();
}
inline ::google::protobuf::int32 mdSeasonMissionEvent::condition4() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSeasonMissionEvent.condition4)
  return condition4_;
}
inline void mdSeasonMissionEvent::set_condition4(::google::protobuf::int32 value) {
  set_has_condition4();
  condition4_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSeasonMissionEvent.condition4)
}

// required int32 goalCount = 9;
inline bool mdSeasonMissionEvent::has_goalcount() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void mdSeasonMissionEvent::set_has_goalcount() {
  _has_bits_[0] |= 0x00000100u;
}
inline void mdSeasonMissionEvent::clear_has_goalcount() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void mdSeasonMissionEvent::clear_goalcount() {
  goalcount_ = 0;
  clear_has_goalcount();
}
inline ::google::protobuf::int32 mdSeasonMissionEvent::goalcount() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSeasonMissionEvent.goalCount)
  return goalcount_;
}
inline void mdSeasonMissionEvent::set_goalcount(::google::protobuf::int32 value) {
  set_has_goalcount();
  goalcount_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSeasonMissionEvent.goalCount)
}

// required int32 reward_id = 10;
inline bool mdSeasonMissionEvent::has_reward_id() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void mdSeasonMissionEvent::set_has_reward_id() {
  _has_bits_[0] |= 0x00000200u;
}
inline void mdSeasonMissionEvent::clear_has_reward_id() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void mdSeasonMissionEvent::clear_reward_id() {
  reward_id_ = 0;
  clear_has_reward_id();
}
inline ::google::protobuf::int32 mdSeasonMissionEvent::reward_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSeasonMissionEvent.reward_id)
  return reward_id_;
}
inline void mdSeasonMissionEvent::set_reward_id(::google::protobuf::int32 value) {
  set_has_reward_id();
  reward_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSeasonMissionEvent.reward_id)
}

// required int32 reward_count = 11;
inline bool mdSeasonMissionEvent::has_reward_count() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void mdSeasonMissionEvent::set_has_reward_count() {
  _has_bits_[0] |= 0x00000400u;
}
inline void mdSeasonMissionEvent::clear_has_reward_count() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void mdSeasonMissionEvent::clear_reward_count() {
  reward_count_ = 0;
  clear_has_reward_count();
}
inline ::google::protobuf::int32 mdSeasonMissionEvent::reward_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSeasonMissionEvent.reward_count)
  return reward_count_;
}
inline void mdSeasonMissionEvent::set_reward_count(::google::protobuf::int32 value) {
  set_has_reward_count();
  reward_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSeasonMissionEvent.reward_count)
}

// required int32 tutorial_id = 12;
inline bool mdSeasonMissionEvent::has_tutorial_id() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void mdSeasonMissionEvent::set_has_tutorial_id() {
  _has_bits_[0] |= 0x00000800u;
}
inline void mdSeasonMissionEvent::clear_has_tutorial_id() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void mdSeasonMissionEvent::clear_tutorial_id() {
  tutorial_id_ = 0;
  clear_has_tutorial_id();
}
inline ::google::protobuf::int32 mdSeasonMissionEvent::tutorial_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSeasonMissionEvent.tutorial_id)
  return tutorial_id_;
}
inline void mdSeasonMissionEvent::set_tutorial_id(::google::protobuf::int32 value) {
  set_has_tutorial_id();
  tutorial_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSeasonMissionEvent.tutorial_id)
}

// -------------------------------------------------------------------

// mdStageClearEvent

// required int32 event_id = 1;
inline bool mdStageClearEvent::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdStageClearEvent::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdStageClearEvent::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdStageClearEvent::clear_event_id() {
  event_id_ = 0;
  clear_has_event_id();
}
inline ::google::protobuf::int32 mdStageClearEvent::event_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdStageClearEvent.event_id)
  return event_id_;
}
inline void mdStageClearEvent::set_event_id(::google::protobuf::int32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdStageClearEvent.event_id)
}

// required int32 index = 2;
inline bool mdStageClearEvent::has_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdStageClearEvent::set_has_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdStageClearEvent::clear_has_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdStageClearEvent::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 mdStageClearEvent::index() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdStageClearEvent.index)
  return index_;
}
inline void mdStageClearEvent::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdStageClearEvent.index)
}

// required int32 stage = 3;
inline bool mdStageClearEvent::has_stage() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdStageClearEvent::set_has_stage() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdStageClearEvent::clear_has_stage() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdStageClearEvent::clear_stage() {
  stage_ = 0;
  clear_has_stage();
}
inline ::google::protobuf::int32 mdStageClearEvent::stage() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdStageClearEvent.stage)
  return stage_;
}
inline void mdStageClearEvent::set_stage(::google::protobuf::int32 value) {
  set_has_stage();
  stage_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdStageClearEvent.stage)
}

// required int32 reward_id = 4;
inline bool mdStageClearEvent::has_reward_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdStageClearEvent::set_has_reward_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdStageClearEvent::clear_has_reward_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdStageClearEvent::clear_reward_id() {
  reward_id_ = 0;
  clear_has_reward_id();
}
inline ::google::protobuf::int32 mdStageClearEvent::reward_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdStageClearEvent.reward_id)
  return reward_id_;
}
inline void mdStageClearEvent::set_reward_id(::google::protobuf::int32 value) {
  set_has_reward_id();
  reward_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdStageClearEvent.reward_id)
}

// required int32 reward_count = 5;
inline bool mdStageClearEvent::has_reward_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdStageClearEvent::set_has_reward_count() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdStageClearEvent::clear_has_reward_count() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdStageClearEvent::clear_reward_count() {
  reward_count_ = 0;
  clear_has_reward_count();
}
inline ::google::protobuf::int32 mdStageClearEvent::reward_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdStageClearEvent.reward_count)
  return reward_count_;
}
inline void mdStageClearEvent::set_reward_count(::google::protobuf::int32 value) {
  set_has_reward_count();
  reward_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdStageClearEvent.reward_count)
}

// -------------------------------------------------------------------

// mdKakaoFriendInviteReward

// required .b2.protocol.commondata.FriendInviteRewardType invite_reward_type = 1;
inline bool mdKakaoFriendInviteReward::has_invite_reward_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdKakaoFriendInviteReward::set_has_invite_reward_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdKakaoFriendInviteReward::clear_has_invite_reward_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdKakaoFriendInviteReward::clear_invite_reward_type() {
  invite_reward_type_ = 1;
  clear_has_invite_reward_type();
}
inline ::b2::protocol::commondata::FriendInviteRewardType mdKakaoFriendInviteReward::invite_reward_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdKakaoFriendInviteReward.invite_reward_type)
  return static_cast< ::b2::protocol::commondata::FriendInviteRewardType >(invite_reward_type_);
}
inline void mdKakaoFriendInviteReward::set_invite_reward_type(::b2::protocol::commondata::FriendInviteRewardType value) {
  assert(::b2::protocol::commondata::FriendInviteRewardType_IsValid(value));
  set_has_invite_reward_type();
  invite_reward_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdKakaoFriendInviteReward.invite_reward_type)
}

// required int32 reward_index = 2;
inline bool mdKakaoFriendInviteReward::has_reward_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdKakaoFriendInviteReward::set_has_reward_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdKakaoFriendInviteReward::clear_has_reward_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdKakaoFriendInviteReward::clear_reward_index() {
  reward_index_ = 0;
  clear_has_reward_index();
}
inline ::google::protobuf::int32 mdKakaoFriendInviteReward::reward_index() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdKakaoFriendInviteReward.reward_index)
  return reward_index_;
}
inline void mdKakaoFriendInviteReward::set_reward_index(::google::protobuf::int32 value) {
  set_has_reward_index();
  reward_index_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdKakaoFriendInviteReward.reward_index)
}

// required int32 goal_count = 3;
inline bool mdKakaoFriendInviteReward::has_goal_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdKakaoFriendInviteReward::set_has_goal_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdKakaoFriendInviteReward::clear_has_goal_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdKakaoFriendInviteReward::clear_goal_count() {
  goal_count_ = 0;
  clear_has_goal_count();
}
inline ::google::protobuf::int32 mdKakaoFriendInviteReward::goal_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdKakaoFriendInviteReward.goal_count)
  return goal_count_;
}
inline void mdKakaoFriendInviteReward::set_goal_count(::google::protobuf::int32 value) {
  set_has_goal_count();
  goal_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdKakaoFriendInviteReward.goal_count)
}

// required int32 reward_id = 4;
inline bool mdKakaoFriendInviteReward::has_reward_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdKakaoFriendInviteReward::set_has_reward_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdKakaoFriendInviteReward::clear_has_reward_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdKakaoFriendInviteReward::clear_reward_id() {
  reward_id_ = 0;
  clear_has_reward_id();
}
inline ::google::protobuf::int32 mdKakaoFriendInviteReward::reward_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdKakaoFriendInviteReward.reward_id)
  return reward_id_;
}
inline void mdKakaoFriendInviteReward::set_reward_id(::google::protobuf::int32 value) {
  set_has_reward_id();
  reward_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdKakaoFriendInviteReward.reward_id)
}

// required int32 reward_count = 5;
inline bool mdKakaoFriendInviteReward::has_reward_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdKakaoFriendInviteReward::set_has_reward_count() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdKakaoFriendInviteReward::clear_has_reward_count() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdKakaoFriendInviteReward::clear_reward_count() {
  reward_count_ = 0;
  clear_has_reward_count();
}
inline ::google::protobuf::int32 mdKakaoFriendInviteReward::reward_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdKakaoFriendInviteReward.reward_count)
  return reward_count_;
}
inline void mdKakaoFriendInviteReward::set_reward_count(::google::protobuf::int32 value) {
  set_has_reward_count();
  reward_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdKakaoFriendInviteReward.reward_count)
}

// -------------------------------------------------------------------

// mdHotTimeProduct

// required int32 buff_type = 1;
inline bool mdHotTimeProduct::has_buff_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdHotTimeProduct::set_has_buff_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdHotTimeProduct::clear_has_buff_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdHotTimeProduct::clear_buff_type() {
  buff_type_ = 0;
  clear_has_buff_type();
}
inline ::google::protobuf::int32 mdHotTimeProduct::buff_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdHotTimeProduct.buff_type)
  return buff_type_;
}
inline void mdHotTimeProduct::set_buff_type(::google::protobuf::int32 value) {
  set_has_buff_type();
  buff_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdHotTimeProduct.buff_type)
}

// required int32 period_hour = 2;
inline bool mdHotTimeProduct::has_period_hour() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdHotTimeProduct::set_has_period_hour() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdHotTimeProduct::clear_has_period_hour() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdHotTimeProduct::clear_period_hour() {
  period_hour_ = 0;
  clear_has_period_hour();
}
inline ::google::protobuf::int32 mdHotTimeProduct::period_hour() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdHotTimeProduct.period_hour)
  return period_hour_;
}
inline void mdHotTimeProduct::set_period_hour(::google::protobuf::int32 value) {
  set_has_period_hour();
  period_hour_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdHotTimeProduct.period_hour)
}

// required int32 price = 3;
inline bool mdHotTimeProduct::has_price() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdHotTimeProduct::set_has_price() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdHotTimeProduct::clear_has_price() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdHotTimeProduct::clear_price() {
  price_ = 0;
  clear_has_price();
}
inline ::google::protobuf::int32 mdHotTimeProduct::price() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdHotTimeProduct.price)
  return price_;
}
inline void mdHotTimeProduct::set_price(::google::protobuf::int32 value) {
  set_has_price();
  price_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdHotTimeProduct.price)
}

// required int32 increase_rate = 4;
inline bool mdHotTimeProduct::has_increase_rate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdHotTimeProduct::set_has_increase_rate() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdHotTimeProduct::clear_has_increase_rate() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdHotTimeProduct::clear_increase_rate() {
  increase_rate_ = 0;
  clear_has_increase_rate();
}
inline ::google::protobuf::int32 mdHotTimeProduct::increase_rate() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdHotTimeProduct.increase_rate)
  return increase_rate_;
}
inline void mdHotTimeProduct::set_increase_rate(::google::protobuf::int32 value) {
  set_has_increase_rate();
  increase_rate_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdHotTimeProduct.increase_rate)
}

// -------------------------------------------------------------------

// mdMagicShopProduct

// required int32 id = 1;
inline bool mdMagicShopProduct::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdMagicShopProduct::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdMagicShopProduct::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdMagicShopProduct::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 mdMagicShopProduct::id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdMagicShopProduct.id)
  return id_;
}
inline void mdMagicShopProduct::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdMagicShopProduct.id)
}

// required int32 magic_shop_group_type = 2;
inline bool mdMagicShopProduct::has_magic_shop_group_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdMagicShopProduct::set_has_magic_shop_group_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdMagicShopProduct::clear_has_magic_shop_group_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdMagicShopProduct::clear_magic_shop_group_type() {
  magic_shop_group_type_ = 0;
  clear_has_magic_shop_group_type();
}
inline ::google::protobuf::int32 mdMagicShopProduct::magic_shop_group_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdMagicShopProduct.magic_shop_group_type)
  return magic_shop_group_type_;
}
inline void mdMagicShopProduct::set_magic_shop_group_type(::google::protobuf::int32 value) {
  set_has_magic_shop_group_type();
  magic_shop_group_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdMagicShopProduct.magic_shop_group_type)
}

// required int32 product_type = 3;
inline bool mdMagicShopProduct::has_product_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdMagicShopProduct::set_has_product_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdMagicShopProduct::clear_has_product_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdMagicShopProduct::clear_product_type() {
  product_type_ = 0;
  clear_has_product_type();
}
inline ::google::protobuf::int32 mdMagicShopProduct::product_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdMagicShopProduct.product_type)
  return product_type_;
}
inline void mdMagicShopProduct::set_product_type(::google::protobuf::int32 value) {
  set_has_product_type();
  product_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdMagicShopProduct.product_type)
}

// required int32 product_detail = 4;
inline bool mdMagicShopProduct::has_product_detail() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdMagicShopProduct::set_has_product_detail() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdMagicShopProduct::clear_has_product_detail() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdMagicShopProduct::clear_product_detail() {
  product_detail_ = 0;
  clear_has_product_detail();
}
inline ::google::protobuf::int32 mdMagicShopProduct::product_detail() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdMagicShopProduct.product_detail)
  return product_detail_;
}
inline void mdMagicShopProduct::set_product_detail(::google::protobuf::int32 value) {
  set_has_product_detail();
  product_detail_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdMagicShopProduct.product_detail)
}

// required int32 product_count = 5;
inline bool mdMagicShopProduct::has_product_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdMagicShopProduct::set_has_product_count() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdMagicShopProduct::clear_has_product_count() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdMagicShopProduct::clear_product_count() {
  product_count_ = 0;
  clear_has_product_count();
}
inline ::google::protobuf::int32 mdMagicShopProduct::product_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdMagicShopProduct.product_count)
  return product_count_;
}
inline void mdMagicShopProduct::set_product_count(::google::protobuf::int32 value) {
  set_has_product_count();
  product_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdMagicShopProduct.product_count)
}

// required int32 price_type = 6;
inline bool mdMagicShopProduct::has_price_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdMagicShopProduct::set_has_price_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdMagicShopProduct::clear_has_price_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdMagicShopProduct::clear_price_type() {
  price_type_ = 0;
  clear_has_price_type();
}
inline ::google::protobuf::int32 mdMagicShopProduct::price_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdMagicShopProduct.price_type)
  return price_type_;
}
inline void mdMagicShopProduct::set_price_type(::google::protobuf::int32 value) {
  set_has_price_type();
  price_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdMagicShopProduct.price_type)
}

// required int32 price = 7;
inline bool mdMagicShopProduct::has_price() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mdMagicShopProduct::set_has_price() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mdMagicShopProduct::clear_has_price() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mdMagicShopProduct::clear_price() {
  price_ = 0;
  clear_has_price();
}
inline ::google::protobuf::int32 mdMagicShopProduct::price() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdMagicShopProduct.price)
  return price_;
}
inline void mdMagicShopProduct::set_price(::google::protobuf::int32 value) {
  set_has_price();
  price_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdMagicShopProduct.price)
}

// -------------------------------------------------------------------

// mdMagicShopRenewalCost

// required int32 renewal_count = 1;
inline bool mdMagicShopRenewalCost::has_renewal_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdMagicShopRenewalCost::set_has_renewal_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdMagicShopRenewalCost::clear_has_renewal_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdMagicShopRenewalCost::clear_renewal_count() {
  renewal_count_ = 0;
  clear_has_renewal_count();
}
inline ::google::protobuf::int32 mdMagicShopRenewalCost::renewal_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdMagicShopRenewalCost.renewal_count)
  return renewal_count_;
}
inline void mdMagicShopRenewalCost::set_renewal_count(::google::protobuf::int32 value) {
  set_has_renewal_count();
  renewal_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdMagicShopRenewalCost.renewal_count)
}

// required int32 gem_cost = 2;
inline bool mdMagicShopRenewalCost::has_gem_cost() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdMagicShopRenewalCost::set_has_gem_cost() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdMagicShopRenewalCost::clear_has_gem_cost() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdMagicShopRenewalCost::clear_gem_cost() {
  gem_cost_ = 0;
  clear_has_gem_cost();
}
inline ::google::protobuf::int32 mdMagicShopRenewalCost::gem_cost() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdMagicShopRenewalCost.gem_cost)
  return gem_cost_;
}
inline void mdMagicShopRenewalCost::set_gem_cost(::google::protobuf::int32 value) {
  set_has_gem_cost();
  gem_cost_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdMagicShopRenewalCost.gem_cost)
}

// -------------------------------------------------------------------

// mdDuelModeSettleSchedule

// required .b2.protocol.commondata.ContentsMode mode_type = 1;
inline bool mdDuelModeSettleSchedule::has_mode_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdDuelModeSettleSchedule::set_has_mode_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdDuelModeSettleSchedule::clear_has_mode_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdDuelModeSettleSchedule::clear_mode_type() {
  mode_type_ = 1;
  clear_has_mode_type();
}
inline ::b2::protocol::commondata::ContentsMode mdDuelModeSettleSchedule::mode_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDuelModeSettleSchedule.mode_type)
  return static_cast< ::b2::protocol::commondata::ContentsMode >(mode_type_);
}
inline void mdDuelModeSettleSchedule::set_mode_type(::b2::protocol::commondata::ContentsMode value) {
  assert(::b2::protocol::commondata::ContentsMode_IsValid(value));
  set_has_mode_type();
  mode_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDuelModeSettleSchedule.mode_type)
}

// required .b2.protocol.commondata.ContentsModeState ranking_settle_state = 2;
inline bool mdDuelModeSettleSchedule::has_ranking_settle_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdDuelModeSettleSchedule::set_has_ranking_settle_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdDuelModeSettleSchedule::clear_has_ranking_settle_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdDuelModeSettleSchedule::clear_ranking_settle_state() {
  ranking_settle_state_ = 0;
  clear_has_ranking_settle_state();
}
inline ::b2::protocol::commondata::ContentsModeState mdDuelModeSettleSchedule::ranking_settle_state() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDuelModeSettleSchedule.ranking_settle_state)
  return static_cast< ::b2::protocol::commondata::ContentsModeState >(ranking_settle_state_);
}
inline void mdDuelModeSettleSchedule::set_ranking_settle_state(::b2::protocol::commondata::ContentsModeState value) {
  assert(::b2::protocol::commondata::ContentsModeState_IsValid(value));
  set_has_ranking_settle_state();
  ranking_settle_state_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDuelModeSettleSchedule.ranking_settle_state)
}

// required .b2.protocol.commondata.DayOfWeek day = 3;
inline bool mdDuelModeSettleSchedule::has_day() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdDuelModeSettleSchedule::set_has_day() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdDuelModeSettleSchedule::clear_has_day() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdDuelModeSettleSchedule::clear_day() {
  day_ = 1;
  clear_has_day();
}
inline ::b2::protocol::commondata::DayOfWeek mdDuelModeSettleSchedule::day() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDuelModeSettleSchedule.day)
  return static_cast< ::b2::protocol::commondata::DayOfWeek >(day_);
}
inline void mdDuelModeSettleSchedule::set_day(::b2::protocol::commondata::DayOfWeek value) {
  assert(::b2::protocol::commondata::DayOfWeek_IsValid(value));
  set_has_day();
  day_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDuelModeSettleSchedule.day)
}

// required int32 end_hour = 4;
inline bool mdDuelModeSettleSchedule::has_end_hour() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdDuelModeSettleSchedule::set_has_end_hour() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdDuelModeSettleSchedule::clear_has_end_hour() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdDuelModeSettleSchedule::clear_end_hour() {
  end_hour_ = 0;
  clear_has_end_hour();
}
inline ::google::protobuf::int32 mdDuelModeSettleSchedule::end_hour() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDuelModeSettleSchedule.end_hour)
  return end_hour_;
}
inline void mdDuelModeSettleSchedule::set_end_hour(::google::protobuf::int32 value) {
  set_has_end_hour();
  end_hour_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDuelModeSettleSchedule.end_hour)
}

// required int32 end_min = 5;
inline bool mdDuelModeSettleSchedule::has_end_min() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdDuelModeSettleSchedule::set_has_end_min() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdDuelModeSettleSchedule::clear_has_end_min() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdDuelModeSettleSchedule::clear_end_min() {
  end_min_ = 0;
  clear_has_end_min();
}
inline ::google::protobuf::int32 mdDuelModeSettleSchedule::end_min() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDuelModeSettleSchedule.end_min)
  return end_min_;
}
inline void mdDuelModeSettleSchedule::set_end_min(::google::protobuf::int32 value) {
  set_has_end_min();
  end_min_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDuelModeSettleSchedule.end_min)
}

// -------------------------------------------------------------------

// mdShopLevelUpPackage

// required int32 package_id = 1;
inline bool mdShopLevelUpPackage::has_package_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdShopLevelUpPackage::set_has_package_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdShopLevelUpPackage::clear_has_package_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdShopLevelUpPackage::clear_package_id() {
  package_id_ = 0;
  clear_has_package_id();
}
inline ::google::protobuf::int32 mdShopLevelUpPackage::package_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopLevelUpPackage.package_id)
  return package_id_;
}
inline void mdShopLevelUpPackage::set_package_id(::google::protobuf::int32 value) {
  set_has_package_id();
  package_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopLevelUpPackage.package_id)
}

// required .b2.protocol.commondata.Character.TYPE character_type = 2;
inline bool mdShopLevelUpPackage::has_character_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdShopLevelUpPackage::set_has_character_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdShopLevelUpPackage::clear_has_character_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdShopLevelUpPackage::clear_character_type() {
  character_type_ = 1;
  clear_has_character_type();
}
inline ::b2::protocol::commondata::Character_TYPE mdShopLevelUpPackage::character_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopLevelUpPackage.character_type)
  return static_cast< ::b2::protocol::commondata::Character_TYPE >(character_type_);
}
inline void mdShopLevelUpPackage::set_character_type(::b2::protocol::commondata::Character_TYPE value) {
  assert(::b2::protocol::commondata::Character_TYPE_IsValid(value));
  set_has_character_type();
  character_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopLevelUpPackage.character_type)
}

// required int32 level = 3;
inline bool mdShopLevelUpPackage::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdShopLevelUpPackage::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdShopLevelUpPackage::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdShopLevelUpPackage::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 mdShopLevelUpPackage::level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopLevelUpPackage.level)
  return level_;
}
inline void mdShopLevelUpPackage::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopLevelUpPackage.level)
}

// required int32 reward_id = 4;
inline bool mdShopLevelUpPackage::has_reward_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdShopLevelUpPackage::set_has_reward_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdShopLevelUpPackage::clear_has_reward_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdShopLevelUpPackage::clear_reward_id() {
  reward_id_ = 0;
  clear_has_reward_id();
}
inline ::google::protobuf::int32 mdShopLevelUpPackage::reward_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopLevelUpPackage.reward_id)
  return reward_id_;
}
inline void mdShopLevelUpPackage::set_reward_id(::google::protobuf::int32 value) {
  set_has_reward_id();
  reward_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopLevelUpPackage.reward_id)
}

// required int32 reward_count = 5;
inline bool mdShopLevelUpPackage::has_reward_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdShopLevelUpPackage::set_has_reward_count() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdShopLevelUpPackage::clear_has_reward_count() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdShopLevelUpPackage::clear_reward_count() {
  reward_count_ = 0;
  clear_has_reward_count();
}
inline ::google::protobuf::int32 mdShopLevelUpPackage::reward_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopLevelUpPackage.reward_count)
  return reward_count_;
}
inline void mdShopLevelUpPackage::set_reward_count(::google::protobuf::int32 value) {
  set_has_reward_count();
  reward_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopLevelUpPackage.reward_count)
}

// -------------------------------------------------------------------

// mdShopReachLevelPackage

// required int32 package_id = 1;
inline bool mdShopReachLevelPackage::has_package_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdShopReachLevelPackage::set_has_package_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdShopReachLevelPackage::clear_has_package_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdShopReachLevelPackage::clear_package_id() {
  package_id_ = 0;
  clear_has_package_id();
}
inline ::google::protobuf::int32 mdShopReachLevelPackage::package_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopReachLevelPackage.package_id)
  return package_id_;
}
inline void mdShopReachLevelPackage::set_package_id(::google::protobuf::int32 value) {
  set_has_package_id();
  package_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopReachLevelPackage.package_id)
}

// required .b2.protocol.commondata.Character.TYPE character_type = 2;
inline bool mdShopReachLevelPackage::has_character_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdShopReachLevelPackage::set_has_character_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdShopReachLevelPackage::clear_has_character_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdShopReachLevelPackage::clear_character_type() {
  character_type_ = 1;
  clear_has_character_type();
}
inline ::b2::protocol::commondata::Character_TYPE mdShopReachLevelPackage::character_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopReachLevelPackage.character_type)
  return static_cast< ::b2::protocol::commondata::Character_TYPE >(character_type_);
}
inline void mdShopReachLevelPackage::set_character_type(::b2::protocol::commondata::Character_TYPE value) {
  assert(::b2::protocol::commondata::Character_TYPE_IsValid(value));
  set_has_character_type();
  character_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopReachLevelPackage.character_type)
}

// required int32 reach_level = 3;
inline bool mdShopReachLevelPackage::has_reach_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdShopReachLevelPackage::set_has_reach_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdShopReachLevelPackage::clear_has_reach_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdShopReachLevelPackage::clear_reach_level() {
  reach_level_ = 0;
  clear_has_reach_level();
}
inline ::google::protobuf::int32 mdShopReachLevelPackage::reach_level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopReachLevelPackage.reach_level)
  return reach_level_;
}
inline void mdShopReachLevelPackage::set_reach_level(::google::protobuf::int32 value) {
  set_has_reach_level();
  reach_level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopReachLevelPackage.reach_level)
}

// required int32 limit_level = 4;
inline bool mdShopReachLevelPackage::has_limit_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdShopReachLevelPackage::set_has_limit_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdShopReachLevelPackage::clear_has_limit_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdShopReachLevelPackage::clear_limit_level() {
  limit_level_ = 0;
  clear_has_limit_level();
}
inline ::google::protobuf::int32 mdShopReachLevelPackage::limit_level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopReachLevelPackage.limit_level)
  return limit_level_;
}
inline void mdShopReachLevelPackage::set_limit_level(::google::protobuf::int32 value) {
  set_has_limit_level();
  limit_level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopReachLevelPackage.limit_level)
}

// required int32 buy_reward_id = 5;
inline bool mdShopReachLevelPackage::has_buy_reward_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdShopReachLevelPackage::set_has_buy_reward_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdShopReachLevelPackage::clear_has_buy_reward_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdShopReachLevelPackage::clear_buy_reward_id() {
  buy_reward_id_ = 0;
  clear_has_buy_reward_id();
}
inline ::google::protobuf::int32 mdShopReachLevelPackage::buy_reward_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopReachLevelPackage.buy_reward_id)
  return buy_reward_id_;
}
inline void mdShopReachLevelPackage::set_buy_reward_id(::google::protobuf::int32 value) {
  set_has_buy_reward_id();
  buy_reward_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopReachLevelPackage.buy_reward_id)
}

// required int32 buy_reward_count = 6;
inline bool mdShopReachLevelPackage::has_buy_reward_count() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdShopReachLevelPackage::set_has_buy_reward_count() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdShopReachLevelPackage::clear_has_buy_reward_count() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdShopReachLevelPackage::clear_buy_reward_count() {
  buy_reward_count_ = 0;
  clear_has_buy_reward_count();
}
inline ::google::protobuf::int32 mdShopReachLevelPackage::buy_reward_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopReachLevelPackage.buy_reward_count)
  return buy_reward_count_;
}
inline void mdShopReachLevelPackage::set_buy_reward_count(::google::protobuf::int32 value) {
  set_has_buy_reward_count();
  buy_reward_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopReachLevelPackage.buy_reward_count)
}

// required int32 complete_reward_id = 7;
inline bool mdShopReachLevelPackage::has_complete_reward_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mdShopReachLevelPackage::set_has_complete_reward_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mdShopReachLevelPackage::clear_has_complete_reward_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mdShopReachLevelPackage::clear_complete_reward_id() {
  complete_reward_id_ = 0;
  clear_has_complete_reward_id();
}
inline ::google::protobuf::int32 mdShopReachLevelPackage::complete_reward_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopReachLevelPackage.complete_reward_id)
  return complete_reward_id_;
}
inline void mdShopReachLevelPackage::set_complete_reward_id(::google::protobuf::int32 value) {
  set_has_complete_reward_id();
  complete_reward_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopReachLevelPackage.complete_reward_id)
}

// required int32 complete_reward_count = 8;
inline bool mdShopReachLevelPackage::has_complete_reward_count() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void mdShopReachLevelPackage::set_has_complete_reward_count() {
  _has_bits_[0] |= 0x00000080u;
}
inline void mdShopReachLevelPackage::clear_has_complete_reward_count() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void mdShopReachLevelPackage::clear_complete_reward_count() {
  complete_reward_count_ = 0;
  clear_has_complete_reward_count();
}
inline ::google::protobuf::int32 mdShopReachLevelPackage::complete_reward_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopReachLevelPackage.complete_reward_count)
  return complete_reward_count_;
}
inline void mdShopReachLevelPackage::set_complete_reward_count(::google::protobuf::int32 value) {
  set_has_complete_reward_count();
  complete_reward_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopReachLevelPackage.complete_reward_count)
}

// required int32 expire_day = 9;
inline bool mdShopReachLevelPackage::has_expire_day() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void mdShopReachLevelPackage::set_has_expire_day() {
  _has_bits_[0] |= 0x00000100u;
}
inline void mdShopReachLevelPackage::clear_has_expire_day() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void mdShopReachLevelPackage::clear_expire_day() {
  expire_day_ = 0;
  clear_has_expire_day();
}
inline ::google::protobuf::int32 mdShopReachLevelPackage::expire_day() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopReachLevelPackage.expire_day)
  return expire_day_;
}
inline void mdShopReachLevelPackage::set_expire_day(::google::protobuf::int32 value) {
  set_has_expire_day();
  expire_day_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopReachLevelPackage.expire_day)
}

// -------------------------------------------------------------------

// mdShopFlatRatePackageBonus

// required int32 index = 1;
inline bool mdShopFlatRatePackageBonus::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdShopFlatRatePackageBonus::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdShopFlatRatePackageBonus::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdShopFlatRatePackageBonus::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 mdShopFlatRatePackageBonus::index() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopFlatRatePackageBonus.index)
  return index_;
}
inline void mdShopFlatRatePackageBonus::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopFlatRatePackageBonus.index)
}

// required int32 reward_id = 2;
inline bool mdShopFlatRatePackageBonus::has_reward_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdShopFlatRatePackageBonus::set_has_reward_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdShopFlatRatePackageBonus::clear_has_reward_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdShopFlatRatePackageBonus::clear_reward_id() {
  reward_id_ = 0;
  clear_has_reward_id();
}
inline ::google::protobuf::int32 mdShopFlatRatePackageBonus::reward_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopFlatRatePackageBonus.reward_id)
  return reward_id_;
}
inline void mdShopFlatRatePackageBonus::set_reward_id(::google::protobuf::int32 value) {
  set_has_reward_id();
  reward_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopFlatRatePackageBonus.reward_id)
}

// required int32 reward_count = 3;
inline bool mdShopFlatRatePackageBonus::has_reward_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdShopFlatRatePackageBonus::set_has_reward_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdShopFlatRatePackageBonus::clear_has_reward_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdShopFlatRatePackageBonus::clear_reward_count() {
  reward_count_ = 0;
  clear_has_reward_count();
}
inline ::google::protobuf::int32 mdShopFlatRatePackageBonus::reward_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopFlatRatePackageBonus.reward_count)
  return reward_count_;
}
inline void mdShopFlatRatePackageBonus::set_reward_count(::google::protobuf::int32 value) {
  set_has_reward_count();
  reward_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopFlatRatePackageBonus.reward_count)
}

// -------------------------------------------------------------------

// mdShopPackageTab

// required int32 tab_type = 1;
inline bool mdShopPackageTab::has_tab_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdShopPackageTab::set_has_tab_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdShopPackageTab::clear_has_tab_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdShopPackageTab::clear_tab_type() {
  tab_type_ = 0;
  clear_has_tab_type();
}
inline ::google::protobuf::int32 mdShopPackageTab::tab_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopPackageTab.tab_type)
  return tab_type_;
}
inline void mdShopPackageTab::set_tab_type(::google::protobuf::int32 value) {
  set_has_tab_type();
  tab_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopPackageTab.tab_type)
}

// required int32 sort_order = 2;
inline bool mdShopPackageTab::has_sort_order() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdShopPackageTab::set_has_sort_order() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdShopPackageTab::clear_has_sort_order() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdShopPackageTab::clear_sort_order() {
  sort_order_ = 0;
  clear_has_sort_order();
}
inline ::google::protobuf::int32 mdShopPackageTab::sort_order() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopPackageTab.sort_order)
  return sort_order_;
}
inline void mdShopPackageTab::set_sort_order(::google::protobuf::int32 value) {
  set_has_sort_order();
  sort_order_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopPackageTab.sort_order)
}

// required bool is_open = 3;
inline bool mdShopPackageTab::has_is_open() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdShopPackageTab::set_has_is_open() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdShopPackageTab::clear_has_is_open() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdShopPackageTab::clear_is_open() {
  is_open_ = false;
  clear_has_is_open();
}
inline bool mdShopPackageTab::is_open() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdShopPackageTab.is_open)
  return is_open_;
}
inline void mdShopPackageTab::set_is_open(bool value) {
  set_has_is_open();
  is_open_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdShopPackageTab.is_open)
}

// -------------------------------------------------------------------

// mdWebUrl

// required string key = 1;
inline bool mdWebUrl::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdWebUrl::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdWebUrl::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdWebUrl::clear_key() {
  if (key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_->clear();
  }
  clear_has_key();
}
inline const ::std::string& mdWebUrl::key() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdWebUrl.key)
  return *key_;
}
inline void mdWebUrl::set_key(const ::std::string& value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  key_->assign(value);
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdWebUrl.key)
}
inline void mdWebUrl::set_key(const char* value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  key_->assign(value);
  // @@protoc_insertion_point(field_set_char:b2.protocol.masterdata.mdWebUrl.key)
}
inline void mdWebUrl::set_key(const char* value, size_t size) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  key_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:b2.protocol.masterdata.mdWebUrl.key)
}
inline ::std::string* mdWebUrl::mutable_key() {
  set_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:b2.protocol.masterdata.mdWebUrl.key)
  return key_;
}
inline ::std::string* mdWebUrl::release_key() {
  clear_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = key_;
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void mdWebUrl::set_allocated_key(::std::string* key) {
  if (key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete key_;
  }
  if (key) {
    set_has_key();
    key_ = key;
  } else {
    clear_has_key();
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.masterdata.mdWebUrl.key)
}

// required string url = 2;
inline bool mdWebUrl::has_url() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdWebUrl::set_has_url() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdWebUrl::clear_has_url() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdWebUrl::clear_url() {
  if (url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_->clear();
  }
  clear_has_url();
}
inline const ::std::string& mdWebUrl::url() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdWebUrl.url)
  return *url_;
}
inline void mdWebUrl::set_url(const ::std::string& value) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  url_->assign(value);
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdWebUrl.url)
}
inline void mdWebUrl::set_url(const char* value) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  url_->assign(value);
  // @@protoc_insertion_point(field_set_char:b2.protocol.masterdata.mdWebUrl.url)
}
inline void mdWebUrl::set_url(const char* value, size_t size) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  url_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:b2.protocol.masterdata.mdWebUrl.url)
}
inline ::std::string* mdWebUrl::mutable_url() {
  set_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:b2.protocol.masterdata.mdWebUrl.url)
  return url_;
}
inline ::std::string* mdWebUrl::release_url() {
  clear_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = url_;
    url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void mdWebUrl::set_allocated_url(::std::string* url) {
  if (url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete url_;
  }
  if (url) {
    set_has_url();
    url_ = url;
  } else {
    clear_has_url();
    url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.masterdata.mdWebUrl.url)
}

// -------------------------------------------------------------------

// mdTenLotteryEvent

// required int32 event_id = 1;
inline bool mdTenLotteryEvent::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdTenLotteryEvent::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdTenLotteryEvent::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdTenLotteryEvent::clear_event_id() {
  event_id_ = 0;
  clear_has_event_id();
}
inline ::google::protobuf::int32 mdTenLotteryEvent::event_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTenLotteryEvent.event_id)
  return event_id_;
}
inline void mdTenLotteryEvent::set_event_id(::google::protobuf::int32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTenLotteryEvent.event_id)
}

// required int32 index = 2;
inline bool mdTenLotteryEvent::has_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdTenLotteryEvent::set_has_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdTenLotteryEvent::clear_has_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdTenLotteryEvent::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 mdTenLotteryEvent::index() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTenLotteryEvent.index)
  return index_;
}
inline void mdTenLotteryEvent::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTenLotteryEvent.index)
}

// required int32 goal_lottery_count = 3;
inline bool mdTenLotteryEvent::has_goal_lottery_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdTenLotteryEvent::set_has_goal_lottery_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdTenLotteryEvent::clear_has_goal_lottery_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdTenLotteryEvent::clear_goal_lottery_count() {
  goal_lottery_count_ = 0;
  clear_has_goal_lottery_count();
}
inline ::google::protobuf::int32 mdTenLotteryEvent::goal_lottery_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTenLotteryEvent.goal_lottery_count)
  return goal_lottery_count_;
}
inline void mdTenLotteryEvent::set_goal_lottery_count(::google::protobuf::int32 value) {
  set_has_goal_lottery_count();
  goal_lottery_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTenLotteryEvent.goal_lottery_count)
}

// repeated .b2.protocol.commondata.RawReward rewards = 4;
inline int mdTenLotteryEvent::rewards_size() const {
  return rewards_.size();
}
inline void mdTenLotteryEvent::clear_rewards() {
  rewards_.Clear();
}
inline const ::b2::protocol::commondata::RawReward& mdTenLotteryEvent::rewards(int index) const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTenLotteryEvent.rewards)
  return rewards_.Get(index);
}
inline ::b2::protocol::commondata::RawReward* mdTenLotteryEvent::mutable_rewards(int index) {
  // @@protoc_insertion_point(field_mutable:b2.protocol.masterdata.mdTenLotteryEvent.rewards)
  return rewards_.Mutable(index);
}
inline ::b2::protocol::commondata::RawReward* mdTenLotteryEvent::add_rewards() {
  // @@protoc_insertion_point(field_add:b2.protocol.masterdata.mdTenLotteryEvent.rewards)
  return rewards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::RawReward >&
mdTenLotteryEvent::rewards() const {
  // @@protoc_insertion_point(field_list:b2.protocol.masterdata.mdTenLotteryEvent.rewards)
  return rewards_;
}
inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::RawReward >*
mdTenLotteryEvent::mutable_rewards() {
  // @@protoc_insertion_point(field_mutable_list:b2.protocol.masterdata.mdTenLotteryEvent.rewards)
  return &rewards_;
}

// -------------------------------------------------------------------

// mdSpendGemEvent

// required int32 event_id = 1;
inline bool mdSpendGemEvent::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdSpendGemEvent::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdSpendGemEvent::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdSpendGemEvent::clear_event_id() {
  event_id_ = 0;
  clear_has_event_id();
}
inline ::google::protobuf::int32 mdSpendGemEvent::event_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSpendGemEvent.event_id)
  return event_id_;
}
inline void mdSpendGemEvent::set_event_id(::google::protobuf::int32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSpendGemEvent.event_id)
}

// required int32 index = 2;
inline bool mdSpendGemEvent::has_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdSpendGemEvent::set_has_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdSpendGemEvent::clear_has_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdSpendGemEvent::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 mdSpendGemEvent::index() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSpendGemEvent.index)
  return index_;
}
inline void mdSpendGemEvent::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSpendGemEvent.index)
}

// required int32 goal_spend_count = 3;
inline bool mdSpendGemEvent::has_goal_spend_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdSpendGemEvent::set_has_goal_spend_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdSpendGemEvent::clear_has_goal_spend_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdSpendGemEvent::clear_goal_spend_count() {
  goal_spend_count_ = 0;
  clear_has_goal_spend_count();
}
inline ::google::protobuf::int32 mdSpendGemEvent::goal_spend_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSpendGemEvent.goal_spend_count)
  return goal_spend_count_;
}
inline void mdSpendGemEvent::set_goal_spend_count(::google::protobuf::int32 value) {
  set_has_goal_spend_count();
  goal_spend_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSpendGemEvent.goal_spend_count)
}

// repeated .b2.protocol.commondata.RawReward rewards = 4;
inline int mdSpendGemEvent::rewards_size() const {
  return rewards_.size();
}
inline void mdSpendGemEvent::clear_rewards() {
  rewards_.Clear();
}
inline const ::b2::protocol::commondata::RawReward& mdSpendGemEvent::rewards(int index) const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSpendGemEvent.rewards)
  return rewards_.Get(index);
}
inline ::b2::protocol::commondata::RawReward* mdSpendGemEvent::mutable_rewards(int index) {
  // @@protoc_insertion_point(field_mutable:b2.protocol.masterdata.mdSpendGemEvent.rewards)
  return rewards_.Mutable(index);
}
inline ::b2::protocol::commondata::RawReward* mdSpendGemEvent::add_rewards() {
  // @@protoc_insertion_point(field_add:b2.protocol.masterdata.mdSpendGemEvent.rewards)
  return rewards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::RawReward >&
mdSpendGemEvent::rewards() const {
  // @@protoc_insertion_point(field_list:b2.protocol.masterdata.mdSpendGemEvent.rewards)
  return rewards_;
}
inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::RawReward >*
mdSpendGemEvent::mutable_rewards() {
  // @@protoc_insertion_point(field_mutable_list:b2.protocol.masterdata.mdSpendGemEvent.rewards)
  return &rewards_;
}

// -------------------------------------------------------------------

// mdTenLotterySavingsEvent

// required int32 event_id = 1;
inline bool mdTenLotterySavingsEvent::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdTenLotterySavingsEvent::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdTenLotterySavingsEvent::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdTenLotterySavingsEvent::clear_event_id() {
  event_id_ = 0;
  clear_has_event_id();
}
inline ::google::protobuf::int32 mdTenLotterySavingsEvent::event_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTenLotterySavingsEvent.event_id)
  return event_id_;
}
inline void mdTenLotterySavingsEvent::set_event_id(::google::protobuf::int32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTenLotterySavingsEvent.event_id)
}

// required int32 gain_point = 2;
inline bool mdTenLotterySavingsEvent::has_gain_point() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdTenLotterySavingsEvent::set_has_gain_point() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdTenLotterySavingsEvent::clear_has_gain_point() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdTenLotterySavingsEvent::clear_gain_point() {
  gain_point_ = 0;
  clear_has_gain_point();
}
inline ::google::protobuf::int32 mdTenLotterySavingsEvent::gain_point() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTenLotterySavingsEvent.gain_point)
  return gain_point_;
}
inline void mdTenLotterySavingsEvent::set_gain_point(::google::protobuf::int32 value) {
  set_has_gain_point();
  gain_point_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTenLotterySavingsEvent.gain_point)
}

// required int32 need_point = 3;
inline bool mdTenLotterySavingsEvent::has_need_point() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdTenLotterySavingsEvent::set_has_need_point() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdTenLotterySavingsEvent::clear_has_need_point() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdTenLotterySavingsEvent::clear_need_point() {
  need_point_ = 0;
  clear_has_need_point();
}
inline ::google::protobuf::int32 mdTenLotterySavingsEvent::need_point() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTenLotterySavingsEvent.need_point)
  return need_point_;
}
inline void mdTenLotterySavingsEvent::set_need_point(::google::protobuf::int32 value) {
  set_has_need_point();
  need_point_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTenLotterySavingsEvent.need_point)
}

// repeated .b2.protocol.commondata.RawReward rewards = 4;
inline int mdTenLotterySavingsEvent::rewards_size() const {
  return rewards_.size();
}
inline void mdTenLotterySavingsEvent::clear_rewards() {
  rewards_.Clear();
}
inline const ::b2::protocol::commondata::RawReward& mdTenLotterySavingsEvent::rewards(int index) const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTenLotterySavingsEvent.rewards)
  return rewards_.Get(index);
}
inline ::b2::protocol::commondata::RawReward* mdTenLotterySavingsEvent::mutable_rewards(int index) {
  // @@protoc_insertion_point(field_mutable:b2.protocol.masterdata.mdTenLotterySavingsEvent.rewards)
  return rewards_.Mutable(index);
}
inline ::b2::protocol::commondata::RawReward* mdTenLotterySavingsEvent::add_rewards() {
  // @@protoc_insertion_point(field_add:b2.protocol.masterdata.mdTenLotterySavingsEvent.rewards)
  return rewards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::RawReward >&
mdTenLotterySavingsEvent::rewards() const {
  // @@protoc_insertion_point(field_list:b2.protocol.masterdata.mdTenLotterySavingsEvent.rewards)
  return rewards_;
}
inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::RawReward >*
mdTenLotterySavingsEvent::mutable_rewards() {
  // @@protoc_insertion_point(field_mutable_list:b2.protocol.masterdata.mdTenLotterySavingsEvent.rewards)
  return &rewards_;
}

// -------------------------------------------------------------------

// mdDiceEventMission

// required int32 event_id = 1;
inline bool mdDiceEventMission::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdDiceEventMission::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdDiceEventMission::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdDiceEventMission::clear_event_id() {
  event_id_ = 0;
  clear_has_event_id();
}
inline ::google::protobuf::int32 mdDiceEventMission::event_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDiceEventMission.event_id)
  return event_id_;
}
inline void mdDiceEventMission::set_event_id(::google::protobuf::int32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDiceEventMission.event_id)
}

// required int32 event_type = 2;
inline bool mdDiceEventMission::has_event_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdDiceEventMission::set_has_event_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdDiceEventMission::clear_has_event_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdDiceEventMission::clear_event_type() {
  event_type_ = 0;
  clear_has_event_type();
}
inline ::google::protobuf::int32 mdDiceEventMission::event_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDiceEventMission.event_type)
  return event_type_;
}
inline void mdDiceEventMission::set_event_type(::google::protobuf::int32 value) {
  set_has_event_type();
  event_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDiceEventMission.event_type)
}

// required int32 goal_count = 3;
inline bool mdDiceEventMission::has_goal_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdDiceEventMission::set_has_goal_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdDiceEventMission::clear_has_goal_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdDiceEventMission::clear_goal_count() {
  goal_count_ = 0;
  clear_has_goal_count();
}
inline ::google::protobuf::int32 mdDiceEventMission::goal_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDiceEventMission.goal_count)
  return goal_count_;
}
inline void mdDiceEventMission::set_goal_count(::google::protobuf::int32 value) {
  set_has_goal_count();
  goal_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDiceEventMission.goal_count)
}

// required int32 point = 4;
inline bool mdDiceEventMission::has_point() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdDiceEventMission::set_has_point() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdDiceEventMission::clear_has_point() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdDiceEventMission::clear_point() {
  point_ = 0;
  clear_has_point();
}
inline ::google::protobuf::int32 mdDiceEventMission::point() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDiceEventMission.point)
  return point_;
}
inline void mdDiceEventMission::set_point(::google::protobuf::int32 value) {
  set_has_point();
  point_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDiceEventMission.point)
}

// -------------------------------------------------------------------

// mdDiceEventCell

// required int32 event_id = 1;
inline bool mdDiceEventCell::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdDiceEventCell::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdDiceEventCell::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdDiceEventCell::clear_event_id() {
  event_id_ = 0;
  clear_has_event_id();
}
inline ::google::protobuf::int32 mdDiceEventCell::event_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDiceEventCell.event_id)
  return event_id_;
}
inline void mdDiceEventCell::set_event_id(::google::protobuf::int32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDiceEventCell.event_id)
}

// required int32 cell_number = 2;
inline bool mdDiceEventCell::has_cell_number() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdDiceEventCell::set_has_cell_number() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdDiceEventCell::clear_has_cell_number() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdDiceEventCell::clear_cell_number() {
  cell_number_ = 0;
  clear_has_cell_number();
}
inline ::google::protobuf::int32 mdDiceEventCell::cell_number() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDiceEventCell.cell_number)
  return cell_number_;
}
inline void mdDiceEventCell::set_cell_number(::google::protobuf::int32 value) {
  set_has_cell_number();
  cell_number_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDiceEventCell.cell_number)
}

// required .b2.protocol.commondata.DiceEventCellType cell_type = 3;
inline bool mdDiceEventCell::has_cell_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdDiceEventCell::set_has_cell_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdDiceEventCell::clear_has_cell_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdDiceEventCell::clear_cell_type() {
  cell_type_ = 1;
  clear_has_cell_type();
}
inline ::b2::protocol::commondata::DiceEventCellType mdDiceEventCell::cell_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDiceEventCell.cell_type)
  return static_cast< ::b2::protocol::commondata::DiceEventCellType >(cell_type_);
}
inline void mdDiceEventCell::set_cell_type(::b2::protocol::commondata::DiceEventCellType value) {
  assert(::b2::protocol::commondata::DiceEventCellType_IsValid(value));
  set_has_cell_type();
  cell_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDiceEventCell.cell_type)
}

// required int32 reward_id = 4;
inline bool mdDiceEventCell::has_reward_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdDiceEventCell::set_has_reward_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdDiceEventCell::clear_has_reward_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdDiceEventCell::clear_reward_id() {
  reward_id_ = 0;
  clear_has_reward_id();
}
inline ::google::protobuf::int32 mdDiceEventCell::reward_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDiceEventCell.reward_id)
  return reward_id_;
}
inline void mdDiceEventCell::set_reward_id(::google::protobuf::int32 value) {
  set_has_reward_id();
  reward_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDiceEventCell.reward_id)
}

// required int32 reward_count = 5;
inline bool mdDiceEventCell::has_reward_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdDiceEventCell::set_has_reward_count() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdDiceEventCell::clear_has_reward_count() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdDiceEventCell::clear_reward_count() {
  reward_count_ = 0;
  clear_has_reward_count();
}
inline ::google::protobuf::int32 mdDiceEventCell::reward_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDiceEventCell.reward_count)
  return reward_count_;
}
inline void mdDiceEventCell::set_reward_count(::google::protobuf::int32 value) {
  set_has_reward_count();
  reward_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDiceEventCell.reward_count)
}

// required int32 effect_value = 6;
inline bool mdDiceEventCell::has_effect_value() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdDiceEventCell::set_has_effect_value() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdDiceEventCell::clear_has_effect_value() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdDiceEventCell::clear_effect_value() {
  effect_value_ = 0;
  clear_has_effect_value();
}
inline ::google::protobuf::int32 mdDiceEventCell::effect_value() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDiceEventCell.effect_value)
  return effect_value_;
}
inline void mdDiceEventCell::set_effect_value(::google::protobuf::int32 value) {
  set_has_effect_value();
  effect_value_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDiceEventCell.effect_value)
}

// -------------------------------------------------------------------

// mdDiceEventFinishReward

// required int32 event_id = 1;
inline bool mdDiceEventFinishReward::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdDiceEventFinishReward::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdDiceEventFinishReward::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdDiceEventFinishReward::clear_event_id() {
  event_id_ = 0;
  clear_has_event_id();
}
inline ::google::protobuf::int32 mdDiceEventFinishReward::event_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDiceEventFinishReward.event_id)
  return event_id_;
}
inline void mdDiceEventFinishReward::set_event_id(::google::protobuf::int32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDiceEventFinishReward.event_id)
}

// required int32 number = 2;
inline bool mdDiceEventFinishReward::has_number() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdDiceEventFinishReward::set_has_number() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdDiceEventFinishReward::clear_has_number() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdDiceEventFinishReward::clear_number() {
  number_ = 0;
  clear_has_number();
}
inline ::google::protobuf::int32 mdDiceEventFinishReward::number() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDiceEventFinishReward.number)
  return number_;
}
inline void mdDiceEventFinishReward::set_number(::google::protobuf::int32 value) {
  set_has_number();
  number_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDiceEventFinishReward.number)
}

// required int32 reward_id = 3;
inline bool mdDiceEventFinishReward::has_reward_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdDiceEventFinishReward::set_has_reward_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdDiceEventFinishReward::clear_has_reward_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdDiceEventFinishReward::clear_reward_id() {
  reward_id_ = 0;
  clear_has_reward_id();
}
inline ::google::protobuf::int32 mdDiceEventFinishReward::reward_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDiceEventFinishReward.reward_id)
  return reward_id_;
}
inline void mdDiceEventFinishReward::set_reward_id(::google::protobuf::int32 value) {
  set_has_reward_id();
  reward_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDiceEventFinishReward.reward_id)
}

// required int32 reward_count = 4;
inline bool mdDiceEventFinishReward::has_reward_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdDiceEventFinishReward::set_has_reward_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdDiceEventFinishReward::clear_has_reward_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdDiceEventFinishReward::clear_reward_count() {
  reward_count_ = 0;
  clear_has_reward_count();
}
inline ::google::protobuf::int32 mdDiceEventFinishReward::reward_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDiceEventFinishReward.reward_count)
  return reward_count_;
}
inline void mdDiceEventFinishReward::set_reward_count(::google::protobuf::int32 value) {
  set_has_reward_count();
  reward_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDiceEventFinishReward.reward_count)
}

// -------------------------------------------------------------------

// mdDiceEventBuyPoint

// required int32 event_id = 1;
inline bool mdDiceEventBuyPoint::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdDiceEventBuyPoint::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdDiceEventBuyPoint::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdDiceEventBuyPoint::clear_event_id() {
  event_id_ = 0;
  clear_has_event_id();
}
inline ::google::protobuf::int32 mdDiceEventBuyPoint::event_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDiceEventBuyPoint.event_id)
  return event_id_;
}
inline void mdDiceEventBuyPoint::set_event_id(::google::protobuf::int32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDiceEventBuyPoint.event_id)
}

// required int32 buy_count = 2;
inline bool mdDiceEventBuyPoint::has_buy_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdDiceEventBuyPoint::set_has_buy_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdDiceEventBuyPoint::clear_has_buy_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdDiceEventBuyPoint::clear_buy_count() {
  buy_count_ = 0;
  clear_has_buy_count();
}
inline ::google::protobuf::int32 mdDiceEventBuyPoint::buy_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDiceEventBuyPoint.buy_count)
  return buy_count_;
}
inline void mdDiceEventBuyPoint::set_buy_count(::google::protobuf::int32 value) {
  set_has_buy_count();
  buy_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDiceEventBuyPoint.buy_count)
}

// required int32 gem = 3;
inline bool mdDiceEventBuyPoint::has_gem() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdDiceEventBuyPoint::set_has_gem() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdDiceEventBuyPoint::clear_has_gem() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdDiceEventBuyPoint::clear_gem() {
  gem_ = 0;
  clear_has_gem();
}
inline ::google::protobuf::int32 mdDiceEventBuyPoint::gem() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDiceEventBuyPoint.gem)
  return gem_;
}
inline void mdDiceEventBuyPoint::set_gem(::google::protobuf::int32 value) {
  set_has_gem();
  gem_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDiceEventBuyPoint.gem)
}

// required int32 point = 4;
inline bool mdDiceEventBuyPoint::has_point() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdDiceEventBuyPoint::set_has_point() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdDiceEventBuyPoint::clear_has_point() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdDiceEventBuyPoint::clear_point() {
  point_ = 0;
  clear_has_point();
}
inline ::google::protobuf::int32 mdDiceEventBuyPoint::point() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDiceEventBuyPoint.point)
  return point_;
}
inline void mdDiceEventBuyPoint::set_point(::google::protobuf::int32 value) {
  set_has_point();
  point_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDiceEventBuyPoint.point)
}

// -------------------------------------------------------------------

// mdDiceEventMileage

// required int32 event_id = 1;
inline bool mdDiceEventMileage::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdDiceEventMileage::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdDiceEventMileage::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdDiceEventMileage::clear_event_id() {
  event_id_ = 0;
  clear_has_event_id();
}
inline ::google::protobuf::int32 mdDiceEventMileage::event_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDiceEventMileage.event_id)
  return event_id_;
}
inline void mdDiceEventMileage::set_event_id(::google::protobuf::int32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDiceEventMileage.event_id)
}

// required int32 index = 2;
inline bool mdDiceEventMileage::has_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdDiceEventMileage::set_has_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdDiceEventMileage::clear_has_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdDiceEventMileage::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 mdDiceEventMileage::index() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDiceEventMileage.index)
  return index_;
}
inline void mdDiceEventMileage::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDiceEventMileage.index)
}

// required int32 dice_count = 3;
inline bool mdDiceEventMileage::has_dice_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdDiceEventMileage::set_has_dice_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdDiceEventMileage::clear_has_dice_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdDiceEventMileage::clear_dice_count() {
  dice_count_ = 0;
  clear_has_dice_count();
}
inline ::google::protobuf::int32 mdDiceEventMileage::dice_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDiceEventMileage.dice_count)
  return dice_count_;
}
inline void mdDiceEventMileage::set_dice_count(::google::protobuf::int32 value) {
  set_has_dice_count();
  dice_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDiceEventMileage.dice_count)
}

// required int32 reward_id1 = 7;
inline bool mdDiceEventMileage::has_reward_id1() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdDiceEventMileage::set_has_reward_id1() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdDiceEventMileage::clear_has_reward_id1() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdDiceEventMileage::clear_reward_id1() {
  reward_id1_ = 0;
  clear_has_reward_id1();
}
inline ::google::protobuf::int32 mdDiceEventMileage::reward_id1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDiceEventMileage.reward_id1)
  return reward_id1_;
}
inline void mdDiceEventMileage::set_reward_id1(::google::protobuf::int32 value) {
  set_has_reward_id1();
  reward_id1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDiceEventMileage.reward_id1)
}

// required int32 reward_count1 = 8;
inline bool mdDiceEventMileage::has_reward_count1() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdDiceEventMileage::set_has_reward_count1() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdDiceEventMileage::clear_has_reward_count1() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdDiceEventMileage::clear_reward_count1() {
  reward_count1_ = 0;
  clear_has_reward_count1();
}
inline ::google::protobuf::int32 mdDiceEventMileage::reward_count1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDiceEventMileage.reward_count1)
  return reward_count1_;
}
inline void mdDiceEventMileage::set_reward_count1(::google::protobuf::int32 value) {
  set_has_reward_count1();
  reward_count1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDiceEventMileage.reward_count1)
}

// required int32 reward_id2 = 9;
inline bool mdDiceEventMileage::has_reward_id2() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdDiceEventMileage::set_has_reward_id2() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdDiceEventMileage::clear_has_reward_id2() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdDiceEventMileage::clear_reward_id2() {
  reward_id2_ = 0;
  clear_has_reward_id2();
}
inline ::google::protobuf::int32 mdDiceEventMileage::reward_id2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDiceEventMileage.reward_id2)
  return reward_id2_;
}
inline void mdDiceEventMileage::set_reward_id2(::google::protobuf::int32 value) {
  set_has_reward_id2();
  reward_id2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDiceEventMileage.reward_id2)
}

// required int32 reward_count2 = 10;
inline bool mdDiceEventMileage::has_reward_count2() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mdDiceEventMileage::set_has_reward_count2() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mdDiceEventMileage::clear_has_reward_count2() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mdDiceEventMileage::clear_reward_count2() {
  reward_count2_ = 0;
  clear_has_reward_count2();
}
inline ::google::protobuf::int32 mdDiceEventMileage::reward_count2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDiceEventMileage.reward_count2)
  return reward_count2_;
}
inline void mdDiceEventMileage::set_reward_count2(::google::protobuf::int32 value) {
  set_has_reward_count2();
  reward_count2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDiceEventMileage.reward_count2)
}

// required int32 reward_id3 = 11;
inline bool mdDiceEventMileage::has_reward_id3() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void mdDiceEventMileage::set_has_reward_id3() {
  _has_bits_[0] |= 0x00000080u;
}
inline void mdDiceEventMileage::clear_has_reward_id3() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void mdDiceEventMileage::clear_reward_id3() {
  reward_id3_ = 0;
  clear_has_reward_id3();
}
inline ::google::protobuf::int32 mdDiceEventMileage::reward_id3() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDiceEventMileage.reward_id3)
  return reward_id3_;
}
inline void mdDiceEventMileage::set_reward_id3(::google::protobuf::int32 value) {
  set_has_reward_id3();
  reward_id3_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDiceEventMileage.reward_id3)
}

// required int32 reward_count3 = 12;
inline bool mdDiceEventMileage::has_reward_count3() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void mdDiceEventMileage::set_has_reward_count3() {
  _has_bits_[0] |= 0x00000100u;
}
inline void mdDiceEventMileage::clear_has_reward_count3() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void mdDiceEventMileage::clear_reward_count3() {
  reward_count3_ = 0;
  clear_has_reward_count3();
}
inline ::google::protobuf::int32 mdDiceEventMileage::reward_count3() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDiceEventMileage.reward_count3)
  return reward_count3_;
}
inline void mdDiceEventMileage::set_reward_count3(::google::protobuf::int32 value) {
  set_has_reward_count3();
  reward_count3_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDiceEventMileage.reward_count3)
}

// -------------------------------------------------------------------

// mdDonationEventInfo

// required int32 donation_open_id = 1;
inline bool mdDonationEventInfo::has_donation_open_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdDonationEventInfo::set_has_donation_open_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdDonationEventInfo::clear_has_donation_open_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdDonationEventInfo::clear_donation_open_id() {
  donation_open_id_ = 0;
  clear_has_donation_open_id();
}
inline ::google::protobuf::int32 mdDonationEventInfo::donation_open_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDonationEventInfo.donation_open_id)
  return donation_open_id_;
}
inline void mdDonationEventInfo::set_donation_open_id(::google::protobuf::int32 value) {
  set_has_donation_open_id();
  donation_open_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDonationEventInfo.donation_open_id)
}

// required string title = 2;
inline bool mdDonationEventInfo::has_title() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdDonationEventInfo::set_has_title() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdDonationEventInfo::clear_has_title() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdDonationEventInfo::clear_title() {
  if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_->clear();
  }
  clear_has_title();
}
inline const ::std::string& mdDonationEventInfo::title() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDonationEventInfo.title)
  return *title_;
}
inline void mdDonationEventInfo::set_title(const ::std::string& value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  title_->assign(value);
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDonationEventInfo.title)
}
inline void mdDonationEventInfo::set_title(const char* value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  title_->assign(value);
  // @@protoc_insertion_point(field_set_char:b2.protocol.masterdata.mdDonationEventInfo.title)
}
inline void mdDonationEventInfo::set_title(const char* value, size_t size) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  title_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:b2.protocol.masterdata.mdDonationEventInfo.title)
}
inline ::std::string* mdDonationEventInfo::mutable_title() {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:b2.protocol.masterdata.mdDonationEventInfo.title)
  return title_;
}
inline ::std::string* mdDonationEventInfo::release_title() {
  clear_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = title_;
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void mdDonationEventInfo::set_allocated_title(::std::string* title) {
  if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete title_;
  }
  if (title) {
    set_has_title();
    title_ = title;
  } else {
    clear_has_title();
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.masterdata.mdDonationEventInfo.title)
}

// required string description = 3;
inline bool mdDonationEventInfo::has_description() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdDonationEventInfo::set_has_description() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdDonationEventInfo::clear_has_description() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdDonationEventInfo::clear_description() {
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_->clear();
  }
  clear_has_description();
}
inline const ::std::string& mdDonationEventInfo::description() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDonationEventInfo.description)
  return *description_;
}
inline void mdDonationEventInfo::set_description(const ::std::string& value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDonationEventInfo.description)
}
inline void mdDonationEventInfo::set_description(const char* value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set_char:b2.protocol.masterdata.mdDonationEventInfo.description)
}
inline void mdDonationEventInfo::set_description(const char* value, size_t size) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:b2.protocol.masterdata.mdDonationEventInfo.description)
}
inline ::std::string* mdDonationEventInfo::mutable_description() {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:b2.protocol.masterdata.mdDonationEventInfo.description)
  return description_;
}
inline ::std::string* mdDonationEventInfo::release_description() {
  clear_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = description_;
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void mdDonationEventInfo::set_allocated_description(::std::string* description) {
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete description_;
  }
  if (description) {
    set_has_description();
    description_ = description;
  } else {
    clear_has_description();
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.masterdata.mdDonationEventInfo.description)
}

// required string banner_url = 4;
inline bool mdDonationEventInfo::has_banner_url() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdDonationEventInfo::set_has_banner_url() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdDonationEventInfo::clear_has_banner_url() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdDonationEventInfo::clear_banner_url() {
  if (banner_url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    banner_url_->clear();
  }
  clear_has_banner_url();
}
inline const ::std::string& mdDonationEventInfo::banner_url() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDonationEventInfo.banner_url)
  return *banner_url_;
}
inline void mdDonationEventInfo::set_banner_url(const ::std::string& value) {
  set_has_banner_url();
  if (banner_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    banner_url_ = new ::std::string;
  }
  banner_url_->assign(value);
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDonationEventInfo.banner_url)
}
inline void mdDonationEventInfo::set_banner_url(const char* value) {
  set_has_banner_url();
  if (banner_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    banner_url_ = new ::std::string;
  }
  banner_url_->assign(value);
  // @@protoc_insertion_point(field_set_char:b2.protocol.masterdata.mdDonationEventInfo.banner_url)
}
inline void mdDonationEventInfo::set_banner_url(const char* value, size_t size) {
  set_has_banner_url();
  if (banner_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    banner_url_ = new ::std::string;
  }
  banner_url_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:b2.protocol.masterdata.mdDonationEventInfo.banner_url)
}
inline ::std::string* mdDonationEventInfo::mutable_banner_url() {
  set_has_banner_url();
  if (banner_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    banner_url_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:b2.protocol.masterdata.mdDonationEventInfo.banner_url)
  return banner_url_;
}
inline ::std::string* mdDonationEventInfo::release_banner_url() {
  clear_has_banner_url();
  if (banner_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = banner_url_;
    banner_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void mdDonationEventInfo::set_allocated_banner_url(::std::string* banner_url) {
  if (banner_url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete banner_url_;
  }
  if (banner_url) {
    set_has_banner_url();
    banner_url_ = banner_url;
  } else {
    clear_has_banner_url();
    banner_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.masterdata.mdDonationEventInfo.banner_url)
}

// required string link_text = 5;
inline bool mdDonationEventInfo::has_link_text() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdDonationEventInfo::set_has_link_text() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdDonationEventInfo::clear_has_link_text() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdDonationEventInfo::clear_link_text() {
  if (link_text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    link_text_->clear();
  }
  clear_has_link_text();
}
inline const ::std::string& mdDonationEventInfo::link_text() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDonationEventInfo.link_text)
  return *link_text_;
}
inline void mdDonationEventInfo::set_link_text(const ::std::string& value) {
  set_has_link_text();
  if (link_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    link_text_ = new ::std::string;
  }
  link_text_->assign(value);
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDonationEventInfo.link_text)
}
inline void mdDonationEventInfo::set_link_text(const char* value) {
  set_has_link_text();
  if (link_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    link_text_ = new ::std::string;
  }
  link_text_->assign(value);
  // @@protoc_insertion_point(field_set_char:b2.protocol.masterdata.mdDonationEventInfo.link_text)
}
inline void mdDonationEventInfo::set_link_text(const char* value, size_t size) {
  set_has_link_text();
  if (link_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    link_text_ = new ::std::string;
  }
  link_text_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:b2.protocol.masterdata.mdDonationEventInfo.link_text)
}
inline ::std::string* mdDonationEventInfo::mutable_link_text() {
  set_has_link_text();
  if (link_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    link_text_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:b2.protocol.masterdata.mdDonationEventInfo.link_text)
  return link_text_;
}
inline ::std::string* mdDonationEventInfo::release_link_text() {
  clear_has_link_text();
  if (link_text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = link_text_;
    link_text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void mdDonationEventInfo::set_allocated_link_text(::std::string* link_text) {
  if (link_text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete link_text_;
  }
  if (link_text) {
    set_has_link_text();
    link_text_ = link_text;
  } else {
    clear_has_link_text();
    link_text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.masterdata.mdDonationEventInfo.link_text)
}

// required string link_url = 6;
inline bool mdDonationEventInfo::has_link_url() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdDonationEventInfo::set_has_link_url() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdDonationEventInfo::clear_has_link_url() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdDonationEventInfo::clear_link_url() {
  if (link_url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    link_url_->clear();
  }
  clear_has_link_url();
}
inline const ::std::string& mdDonationEventInfo::link_url() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDonationEventInfo.link_url)
  return *link_url_;
}
inline void mdDonationEventInfo::set_link_url(const ::std::string& value) {
  set_has_link_url();
  if (link_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    link_url_ = new ::std::string;
  }
  link_url_->assign(value);
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDonationEventInfo.link_url)
}
inline void mdDonationEventInfo::set_link_url(const char* value) {
  set_has_link_url();
  if (link_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    link_url_ = new ::std::string;
  }
  link_url_->assign(value);
  // @@protoc_insertion_point(field_set_char:b2.protocol.masterdata.mdDonationEventInfo.link_url)
}
inline void mdDonationEventInfo::set_link_url(const char* value, size_t size) {
  set_has_link_url();
  if (link_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    link_url_ = new ::std::string;
  }
  link_url_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:b2.protocol.masterdata.mdDonationEventInfo.link_url)
}
inline ::std::string* mdDonationEventInfo::mutable_link_url() {
  set_has_link_url();
  if (link_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    link_url_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:b2.protocol.masterdata.mdDonationEventInfo.link_url)
  return link_url_;
}
inline ::std::string* mdDonationEventInfo::release_link_url() {
  clear_has_link_url();
  if (link_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = link_url_;
    link_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void mdDonationEventInfo::set_allocated_link_url(::std::string* link_url) {
  if (link_url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete link_url_;
  }
  if (link_url) {
    set_has_link_url();
    link_url_ = link_url;
  } else {
    clear_has_link_url();
    link_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.masterdata.mdDonationEventInfo.link_url)
}

// required int64 start_time = 7;
inline bool mdDonationEventInfo::has_start_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mdDonationEventInfo::set_has_start_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mdDonationEventInfo::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mdDonationEventInfo::clear_start_time() {
  start_time_ = GOOGLE_LONGLONG(0);
  clear_has_start_time();
}
inline ::google::protobuf::int64 mdDonationEventInfo::start_time() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDonationEventInfo.start_time)
  return start_time_;
}
inline void mdDonationEventInfo::set_start_time(::google::protobuf::int64 value) {
  set_has_start_time();
  start_time_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDonationEventInfo.start_time)
}

// required int64 end_time = 8;
inline bool mdDonationEventInfo::has_end_time() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void mdDonationEventInfo::set_has_end_time() {
  _has_bits_[0] |= 0x00000080u;
}
inline void mdDonationEventInfo::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void mdDonationEventInfo::clear_end_time() {
  end_time_ = GOOGLE_LONGLONG(0);
  clear_has_end_time();
}
inline ::google::protobuf::int64 mdDonationEventInfo::end_time() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDonationEventInfo.end_time)
  return end_time_;
}
inline void mdDonationEventInfo::set_end_time(::google::protobuf::int64 value) {
  set_has_end_time();
  end_time_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDonationEventInfo.end_time)
}

// required int64 expire_time = 9;
inline bool mdDonationEventInfo::has_expire_time() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void mdDonationEventInfo::set_has_expire_time() {
  _has_bits_[0] |= 0x00000100u;
}
inline void mdDonationEventInfo::clear_has_expire_time() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void mdDonationEventInfo::clear_expire_time() {
  expire_time_ = GOOGLE_LONGLONG(0);
  clear_has_expire_time();
}
inline ::google::protobuf::int64 mdDonationEventInfo::expire_time() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDonationEventInfo.expire_time)
  return expire_time_;
}
inline void mdDonationEventInfo::set_expire_time(::google::protobuf::int64 value) {
  set_has_expire_time();
  expire_time_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDonationEventInfo.expire_time)
}

// required int32 donation_template_id = 11;
inline bool mdDonationEventInfo::has_donation_template_id() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void mdDonationEventInfo::set_has_donation_template_id() {
  _has_bits_[0] |= 0x00000200u;
}
inline void mdDonationEventInfo::clear_has_donation_template_id() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void mdDonationEventInfo::clear_donation_template_id() {
  donation_template_id_ = 0;
  clear_has_donation_template_id();
}
inline ::google::protobuf::int32 mdDonationEventInfo::donation_template_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDonationEventInfo.donation_template_id)
  return donation_template_id_;
}
inline void mdDonationEventInfo::set_donation_template_id(::google::protobuf::int32 value) {
  set_has_donation_template_id();
  donation_template_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDonationEventInfo.donation_template_id)
}

// required int32 cost_type = 12;
inline bool mdDonationEventInfo::has_cost_type() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void mdDonationEventInfo::set_has_cost_type() {
  _has_bits_[0] |= 0x00000400u;
}
inline void mdDonationEventInfo::clear_has_cost_type() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void mdDonationEventInfo::clear_cost_type() {
  cost_type_ = 0;
  clear_has_cost_type();
}
inline ::google::protobuf::int32 mdDonationEventInfo::cost_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDonationEventInfo.cost_type)
  return cost_type_;
}
inline void mdDonationEventInfo::set_cost_type(::google::protobuf::int32 value) {
  set_has_cost_type();
  cost_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDonationEventInfo.cost_type)
}

// required int32 cost = 13;
inline bool mdDonationEventInfo::has_cost() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void mdDonationEventInfo::set_has_cost() {
  _has_bits_[0] |= 0x00000800u;
}
inline void mdDonationEventInfo::clear_has_cost() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void mdDonationEventInfo::clear_cost() {
  cost_ = 0;
  clear_has_cost();
}
inline ::google::protobuf::int32 mdDonationEventInfo::cost() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDonationEventInfo.cost)
  return cost_;
}
inline void mdDonationEventInfo::set_cost(::google::protobuf::int32 value) {
  set_has_cost();
  cost_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDonationEventInfo.cost)
}

// required int32 extra_cost = 14;
inline bool mdDonationEventInfo::has_extra_cost() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void mdDonationEventInfo::set_has_extra_cost() {
  _has_bits_[0] |= 0x00001000u;
}
inline void mdDonationEventInfo::clear_has_extra_cost() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void mdDonationEventInfo::clear_extra_cost() {
  extra_cost_ = 0;
  clear_has_extra_cost();
}
inline ::google::protobuf::int32 mdDonationEventInfo::extra_cost() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDonationEventInfo.extra_cost)
  return extra_cost_;
}
inline void mdDonationEventInfo::set_extra_cost(::google::protobuf::int32 value) {
  set_has_extra_cost();
  extra_cost_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDonationEventInfo.extra_cost)
}

// required int32 cut_off_point = 15;
inline bool mdDonationEventInfo::has_cut_off_point() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void mdDonationEventInfo::set_has_cut_off_point() {
  _has_bits_[0] |= 0x00002000u;
}
inline void mdDonationEventInfo::clear_has_cut_off_point() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void mdDonationEventInfo::clear_cut_off_point() {
  cut_off_point_ = 0;
  clear_has_cut_off_point();
}
inline ::google::protobuf::int32 mdDonationEventInfo::cut_off_point() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDonationEventInfo.cut_off_point)
  return cut_off_point_;
}
inline void mdDonationEventInfo::set_cut_off_point(::google::protobuf::int32 value) {
  set_has_cut_off_point();
  cut_off_point_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDonationEventInfo.cut_off_point)
}

// required int32 obtain_point = 16;
inline bool mdDonationEventInfo::has_obtain_point() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void mdDonationEventInfo::set_has_obtain_point() {
  _has_bits_[0] |= 0x00004000u;
}
inline void mdDonationEventInfo::clear_has_obtain_point() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void mdDonationEventInfo::clear_obtain_point() {
  obtain_point_ = 0;
  clear_has_obtain_point();
}
inline ::google::protobuf::int32 mdDonationEventInfo::obtain_point() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDonationEventInfo.obtain_point)
  return obtain_point_;
}
inline void mdDonationEventInfo::set_obtain_point(::google::protobuf::int32 value) {
  set_has_obtain_point();
  obtain_point_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDonationEventInfo.obtain_point)
}

// required int32 bundle_cost = 17;
inline bool mdDonationEventInfo::has_bundle_cost() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void mdDonationEventInfo::set_has_bundle_cost() {
  _has_bits_[0] |= 0x00008000u;
}
inline void mdDonationEventInfo::clear_has_bundle_cost() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void mdDonationEventInfo::clear_bundle_cost() {
  bundle_cost_ = 0;
  clear_has_bundle_cost();
}
inline ::google::protobuf::int32 mdDonationEventInfo::bundle_cost() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDonationEventInfo.bundle_cost)
  return bundle_cost_;
}
inline void mdDonationEventInfo::set_bundle_cost(::google::protobuf::int32 value) {
  set_has_bundle_cost();
  bundle_cost_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDonationEventInfo.bundle_cost)
}

// required int32 extra_bundle_cost = 18;
inline bool mdDonationEventInfo::has_extra_bundle_cost() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void mdDonationEventInfo::set_has_extra_bundle_cost() {
  _has_bits_[0] |= 0x00010000u;
}
inline void mdDonationEventInfo::clear_has_extra_bundle_cost() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void mdDonationEventInfo::clear_extra_bundle_cost() {
  extra_bundle_cost_ = 0;
  clear_has_extra_bundle_cost();
}
inline ::google::protobuf::int32 mdDonationEventInfo::extra_bundle_cost() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDonationEventInfo.extra_bundle_cost)
  return extra_bundle_cost_;
}
inline void mdDonationEventInfo::set_extra_bundle_cost(::google::protobuf::int32 value) {
  set_has_extra_bundle_cost();
  extra_bundle_cost_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDonationEventInfo.extra_bundle_cost)
}

// required int32 bundle_obtain_point = 19;
inline bool mdDonationEventInfo::has_bundle_obtain_point() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void mdDonationEventInfo::set_has_bundle_obtain_point() {
  _has_bits_[0] |= 0x00020000u;
}
inline void mdDonationEventInfo::clear_has_bundle_obtain_point() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void mdDonationEventInfo::clear_bundle_obtain_point() {
  bundle_obtain_point_ = 0;
  clear_has_bundle_obtain_point();
}
inline ::google::protobuf::int32 mdDonationEventInfo::bundle_obtain_point() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDonationEventInfo.bundle_obtain_point)
  return bundle_obtain_point_;
}
inline void mdDonationEventInfo::set_bundle_obtain_point(::google::protobuf::int32 value) {
  set_has_bundle_obtain_point();
  bundle_obtain_point_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDonationEventInfo.bundle_obtain_point)
}

// required int32 serial_donation_count = 20;
inline bool mdDonationEventInfo::has_serial_donation_count() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void mdDonationEventInfo::set_has_serial_donation_count() {
  _has_bits_[0] |= 0x00040000u;
}
inline void mdDonationEventInfo::clear_has_serial_donation_count() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void mdDonationEventInfo::clear_serial_donation_count() {
  serial_donation_count_ = 0;
  clear_has_serial_donation_count();
}
inline ::google::protobuf::int32 mdDonationEventInfo::serial_donation_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDonationEventInfo.serial_donation_count)
  return serial_donation_count_;
}
inline void mdDonationEventInfo::set_serial_donation_count(::google::protobuf::int32 value) {
  set_has_serial_donation_count();
  serial_donation_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDonationEventInfo.serial_donation_count)
}

// -------------------------------------------------------------------

// mdDonationPointRankingRewardInfo

// required int32 donation_id = 1;
inline bool mdDonationPointRankingRewardInfo::has_donation_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdDonationPointRankingRewardInfo::set_has_donation_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdDonationPointRankingRewardInfo::clear_has_donation_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdDonationPointRankingRewardInfo::clear_donation_id() {
  donation_id_ = 0;
  clear_has_donation_id();
}
inline ::google::protobuf::int32 mdDonationPointRankingRewardInfo::donation_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDonationPointRankingRewardInfo.donation_id)
  return donation_id_;
}
inline void mdDonationPointRankingRewardInfo::set_donation_id(::google::protobuf::int32 value) {
  set_has_donation_id();
  donation_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDonationPointRankingRewardInfo.donation_id)
}

// required int32 rank = 2;
inline bool mdDonationPointRankingRewardInfo::has_rank() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdDonationPointRankingRewardInfo::set_has_rank() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdDonationPointRankingRewardInfo::clear_has_rank() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdDonationPointRankingRewardInfo::clear_rank() {
  rank_ = 0;
  clear_has_rank();
}
inline ::google::protobuf::int32 mdDonationPointRankingRewardInfo::rank() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDonationPointRankingRewardInfo.rank)
  return rank_;
}
inline void mdDonationPointRankingRewardInfo::set_rank(::google::protobuf::int32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDonationPointRankingRewardInfo.rank)
}

// required int32 reward_id1 = 3;
inline bool mdDonationPointRankingRewardInfo::has_reward_id1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdDonationPointRankingRewardInfo::set_has_reward_id1() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdDonationPointRankingRewardInfo::clear_has_reward_id1() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdDonationPointRankingRewardInfo::clear_reward_id1() {
  reward_id1_ = 0;
  clear_has_reward_id1();
}
inline ::google::protobuf::int32 mdDonationPointRankingRewardInfo::reward_id1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDonationPointRankingRewardInfo.reward_id1)
  return reward_id1_;
}
inline void mdDonationPointRankingRewardInfo::set_reward_id1(::google::protobuf::int32 value) {
  set_has_reward_id1();
  reward_id1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDonationPointRankingRewardInfo.reward_id1)
}

// required int32 reward_count1 = 4;
inline bool mdDonationPointRankingRewardInfo::has_reward_count1() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdDonationPointRankingRewardInfo::set_has_reward_count1() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdDonationPointRankingRewardInfo::clear_has_reward_count1() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdDonationPointRankingRewardInfo::clear_reward_count1() {
  reward_count1_ = 0;
  clear_has_reward_count1();
}
inline ::google::protobuf::int32 mdDonationPointRankingRewardInfo::reward_count1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDonationPointRankingRewardInfo.reward_count1)
  return reward_count1_;
}
inline void mdDonationPointRankingRewardInfo::set_reward_count1(::google::protobuf::int32 value) {
  set_has_reward_count1();
  reward_count1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDonationPointRankingRewardInfo.reward_count1)
}

// required int32 reward_id2 = 5;
inline bool mdDonationPointRankingRewardInfo::has_reward_id2() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdDonationPointRankingRewardInfo::set_has_reward_id2() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdDonationPointRankingRewardInfo::clear_has_reward_id2() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdDonationPointRankingRewardInfo::clear_reward_id2() {
  reward_id2_ = 0;
  clear_has_reward_id2();
}
inline ::google::protobuf::int32 mdDonationPointRankingRewardInfo::reward_id2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDonationPointRankingRewardInfo.reward_id2)
  return reward_id2_;
}
inline void mdDonationPointRankingRewardInfo::set_reward_id2(::google::protobuf::int32 value) {
  set_has_reward_id2();
  reward_id2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDonationPointRankingRewardInfo.reward_id2)
}

// required int32 reward_count2 = 6;
inline bool mdDonationPointRankingRewardInfo::has_reward_count2() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdDonationPointRankingRewardInfo::set_has_reward_count2() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdDonationPointRankingRewardInfo::clear_has_reward_count2() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdDonationPointRankingRewardInfo::clear_reward_count2() {
  reward_count2_ = 0;
  clear_has_reward_count2();
}
inline ::google::protobuf::int32 mdDonationPointRankingRewardInfo::reward_count2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDonationPointRankingRewardInfo.reward_count2)
  return reward_count2_;
}
inline void mdDonationPointRankingRewardInfo::set_reward_count2(::google::protobuf::int32 value) {
  set_has_reward_count2();
  reward_count2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDonationPointRankingRewardInfo.reward_count2)
}

// required int32 reward_id3 = 7;
inline bool mdDonationPointRankingRewardInfo::has_reward_id3() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mdDonationPointRankingRewardInfo::set_has_reward_id3() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mdDonationPointRankingRewardInfo::clear_has_reward_id3() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mdDonationPointRankingRewardInfo::clear_reward_id3() {
  reward_id3_ = 0;
  clear_has_reward_id3();
}
inline ::google::protobuf::int32 mdDonationPointRankingRewardInfo::reward_id3() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDonationPointRankingRewardInfo.reward_id3)
  return reward_id3_;
}
inline void mdDonationPointRankingRewardInfo::set_reward_id3(::google::protobuf::int32 value) {
  set_has_reward_id3();
  reward_id3_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDonationPointRankingRewardInfo.reward_id3)
}

// required int32 reward_count3 = 8;
inline bool mdDonationPointRankingRewardInfo::has_reward_count3() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void mdDonationPointRankingRewardInfo::set_has_reward_count3() {
  _has_bits_[0] |= 0x00000080u;
}
inline void mdDonationPointRankingRewardInfo::clear_has_reward_count3() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void mdDonationPointRankingRewardInfo::clear_reward_count3() {
  reward_count3_ = 0;
  clear_has_reward_count3();
}
inline ::google::protobuf::int32 mdDonationPointRankingRewardInfo::reward_count3() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDonationPointRankingRewardInfo.reward_count3)
  return reward_count3_;
}
inline void mdDonationPointRankingRewardInfo::set_reward_count3(::google::protobuf::int32 value) {
  set_has_reward_count3();
  reward_count3_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDonationPointRankingRewardInfo.reward_count3)
}

// required int32 reward_id4 = 9;
inline bool mdDonationPointRankingRewardInfo::has_reward_id4() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void mdDonationPointRankingRewardInfo::set_has_reward_id4() {
  _has_bits_[0] |= 0x00000100u;
}
inline void mdDonationPointRankingRewardInfo::clear_has_reward_id4() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void mdDonationPointRankingRewardInfo::clear_reward_id4() {
  reward_id4_ = 0;
  clear_has_reward_id4();
}
inline ::google::protobuf::int32 mdDonationPointRankingRewardInfo::reward_id4() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDonationPointRankingRewardInfo.reward_id4)
  return reward_id4_;
}
inline void mdDonationPointRankingRewardInfo::set_reward_id4(::google::protobuf::int32 value) {
  set_has_reward_id4();
  reward_id4_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDonationPointRankingRewardInfo.reward_id4)
}

// required int32 reward_count4 = 10;
inline bool mdDonationPointRankingRewardInfo::has_reward_count4() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void mdDonationPointRankingRewardInfo::set_has_reward_count4() {
  _has_bits_[0] |= 0x00000200u;
}
inline void mdDonationPointRankingRewardInfo::clear_has_reward_count4() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void mdDonationPointRankingRewardInfo::clear_reward_count4() {
  reward_count4_ = 0;
  clear_has_reward_count4();
}
inline ::google::protobuf::int32 mdDonationPointRankingRewardInfo::reward_count4() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDonationPointRankingRewardInfo.reward_count4)
  return reward_count4_;
}
inline void mdDonationPointRankingRewardInfo::set_reward_count4(::google::protobuf::int32 value) {
  set_has_reward_count4();
  reward_count4_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDonationPointRankingRewardInfo.reward_count4)
}

// required int32 reward_id5 = 11;
inline bool mdDonationPointRankingRewardInfo::has_reward_id5() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void mdDonationPointRankingRewardInfo::set_has_reward_id5() {
  _has_bits_[0] |= 0x00000400u;
}
inline void mdDonationPointRankingRewardInfo::clear_has_reward_id5() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void mdDonationPointRankingRewardInfo::clear_reward_id5() {
  reward_id5_ = 0;
  clear_has_reward_id5();
}
inline ::google::protobuf::int32 mdDonationPointRankingRewardInfo::reward_id5() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDonationPointRankingRewardInfo.reward_id5)
  return reward_id5_;
}
inline void mdDonationPointRankingRewardInfo::set_reward_id5(::google::protobuf::int32 value) {
  set_has_reward_id5();
  reward_id5_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDonationPointRankingRewardInfo.reward_id5)
}

// required int32 reward_count5 = 12;
inline bool mdDonationPointRankingRewardInfo::has_reward_count5() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void mdDonationPointRankingRewardInfo::set_has_reward_count5() {
  _has_bits_[0] |= 0x00000800u;
}
inline void mdDonationPointRankingRewardInfo::clear_has_reward_count5() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void mdDonationPointRankingRewardInfo::clear_reward_count5() {
  reward_count5_ = 0;
  clear_has_reward_count5();
}
inline ::google::protobuf::int32 mdDonationPointRankingRewardInfo::reward_count5() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDonationPointRankingRewardInfo.reward_count5)
  return reward_count5_;
}
inline void mdDonationPointRankingRewardInfo::set_reward_count5(::google::protobuf::int32 value) {
  set_has_reward_count5();
  reward_count5_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDonationPointRankingRewardInfo.reward_count5)
}

// -------------------------------------------------------------------

// mdDonationBundleFixedRewardInfo

// required int32 donation_id = 1;
inline bool mdDonationBundleFixedRewardInfo::has_donation_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdDonationBundleFixedRewardInfo::set_has_donation_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdDonationBundleFixedRewardInfo::clear_has_donation_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdDonationBundleFixedRewardInfo::clear_donation_id() {
  donation_id_ = 0;
  clear_has_donation_id();
}
inline ::google::protobuf::int32 mdDonationBundleFixedRewardInfo::donation_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDonationBundleFixedRewardInfo.donation_id)
  return donation_id_;
}
inline void mdDonationBundleFixedRewardInfo::set_donation_id(::google::protobuf::int32 value) {
  set_has_donation_id();
  donation_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDonationBundleFixedRewardInfo.donation_id)
}

// required int32 reward_id = 2;
inline bool mdDonationBundleFixedRewardInfo::has_reward_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdDonationBundleFixedRewardInfo::set_has_reward_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdDonationBundleFixedRewardInfo::clear_has_reward_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdDonationBundleFixedRewardInfo::clear_reward_id() {
  reward_id_ = 0;
  clear_has_reward_id();
}
inline ::google::protobuf::int32 mdDonationBundleFixedRewardInfo::reward_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDonationBundleFixedRewardInfo.reward_id)
  return reward_id_;
}
inline void mdDonationBundleFixedRewardInfo::set_reward_id(::google::protobuf::int32 value) {
  set_has_reward_id();
  reward_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDonationBundleFixedRewardInfo.reward_id)
}

// required int32 min_amount = 3;
inline bool mdDonationBundleFixedRewardInfo::has_min_amount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdDonationBundleFixedRewardInfo::set_has_min_amount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdDonationBundleFixedRewardInfo::clear_has_min_amount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdDonationBundleFixedRewardInfo::clear_min_amount() {
  min_amount_ = 0;
  clear_has_min_amount();
}
inline ::google::protobuf::int32 mdDonationBundleFixedRewardInfo::min_amount() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDonationBundleFixedRewardInfo.min_amount)
  return min_amount_;
}
inline void mdDonationBundleFixedRewardInfo::set_min_amount(::google::protobuf::int32 value) {
  set_has_min_amount();
  min_amount_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDonationBundleFixedRewardInfo.min_amount)
}

// required int32 max_amount = 4;
inline bool mdDonationBundleFixedRewardInfo::has_max_amount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdDonationBundleFixedRewardInfo::set_has_max_amount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdDonationBundleFixedRewardInfo::clear_has_max_amount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdDonationBundleFixedRewardInfo::clear_max_amount() {
  max_amount_ = 0;
  clear_has_max_amount();
}
inline ::google::protobuf::int32 mdDonationBundleFixedRewardInfo::max_amount() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDonationBundleFixedRewardInfo.max_amount)
  return max_amount_;
}
inline void mdDonationBundleFixedRewardInfo::set_max_amount(::google::protobuf::int32 value) {
  set_has_max_amount();
  max_amount_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDonationBundleFixedRewardInfo.max_amount)
}

// -------------------------------------------------------------------

// mdDonationPointStepRewardInfo

// required int32 donation_id = 1;
inline bool mdDonationPointStepRewardInfo::has_donation_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdDonationPointStepRewardInfo::set_has_donation_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdDonationPointStepRewardInfo::clear_has_donation_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdDonationPointStepRewardInfo::clear_donation_id() {
  donation_id_ = 0;
  clear_has_donation_id();
}
inline ::google::protobuf::int32 mdDonationPointStepRewardInfo::donation_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDonationPointStepRewardInfo.donation_id)
  return donation_id_;
}
inline void mdDonationPointStepRewardInfo::set_donation_id(::google::protobuf::int32 value) {
  set_has_donation_id();
  donation_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDonationPointStepRewardInfo.donation_id)
}

// required int32 step = 2;
inline bool mdDonationPointStepRewardInfo::has_step() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdDonationPointStepRewardInfo::set_has_step() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdDonationPointStepRewardInfo::clear_has_step() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdDonationPointStepRewardInfo::clear_step() {
  step_ = 0;
  clear_has_step();
}
inline ::google::protobuf::int32 mdDonationPointStepRewardInfo::step() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDonationPointStepRewardInfo.step)
  return step_;
}
inline void mdDonationPointStepRewardInfo::set_step(::google::protobuf::int32 value) {
  set_has_step();
  step_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDonationPointStepRewardInfo.step)
}

// required int32 point = 3;
inline bool mdDonationPointStepRewardInfo::has_point() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdDonationPointStepRewardInfo::set_has_point() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdDonationPointStepRewardInfo::clear_has_point() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdDonationPointStepRewardInfo::clear_point() {
  point_ = 0;
  clear_has_point();
}
inline ::google::protobuf::int32 mdDonationPointStepRewardInfo::point() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDonationPointStepRewardInfo.point)
  return point_;
}
inline void mdDonationPointStepRewardInfo::set_point(::google::protobuf::int32 value) {
  set_has_point();
  point_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDonationPointStepRewardInfo.point)
}

// required int32 reward_id1 = 4;
inline bool mdDonationPointStepRewardInfo::has_reward_id1() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdDonationPointStepRewardInfo::set_has_reward_id1() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdDonationPointStepRewardInfo::clear_has_reward_id1() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdDonationPointStepRewardInfo::clear_reward_id1() {
  reward_id1_ = 0;
  clear_has_reward_id1();
}
inline ::google::protobuf::int32 mdDonationPointStepRewardInfo::reward_id1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDonationPointStepRewardInfo.reward_id1)
  return reward_id1_;
}
inline void mdDonationPointStepRewardInfo::set_reward_id1(::google::protobuf::int32 value) {
  set_has_reward_id1();
  reward_id1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDonationPointStepRewardInfo.reward_id1)
}

// required int32 reward_count1 = 5;
inline bool mdDonationPointStepRewardInfo::has_reward_count1() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdDonationPointStepRewardInfo::set_has_reward_count1() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdDonationPointStepRewardInfo::clear_has_reward_count1() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdDonationPointStepRewardInfo::clear_reward_count1() {
  reward_count1_ = 0;
  clear_has_reward_count1();
}
inline ::google::protobuf::int32 mdDonationPointStepRewardInfo::reward_count1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDonationPointStepRewardInfo.reward_count1)
  return reward_count1_;
}
inline void mdDonationPointStepRewardInfo::set_reward_count1(::google::protobuf::int32 value) {
  set_has_reward_count1();
  reward_count1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDonationPointStepRewardInfo.reward_count1)
}

// required int32 reward_id2 = 6;
inline bool mdDonationPointStepRewardInfo::has_reward_id2() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdDonationPointStepRewardInfo::set_has_reward_id2() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdDonationPointStepRewardInfo::clear_has_reward_id2() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdDonationPointStepRewardInfo::clear_reward_id2() {
  reward_id2_ = 0;
  clear_has_reward_id2();
}
inline ::google::protobuf::int32 mdDonationPointStepRewardInfo::reward_id2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDonationPointStepRewardInfo.reward_id2)
  return reward_id2_;
}
inline void mdDonationPointStepRewardInfo::set_reward_id2(::google::protobuf::int32 value) {
  set_has_reward_id2();
  reward_id2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDonationPointStepRewardInfo.reward_id2)
}

// required int32 reward_count2 = 7;
inline bool mdDonationPointStepRewardInfo::has_reward_count2() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mdDonationPointStepRewardInfo::set_has_reward_count2() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mdDonationPointStepRewardInfo::clear_has_reward_count2() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mdDonationPointStepRewardInfo::clear_reward_count2() {
  reward_count2_ = 0;
  clear_has_reward_count2();
}
inline ::google::protobuf::int32 mdDonationPointStepRewardInfo::reward_count2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDonationPointStepRewardInfo.reward_count2)
  return reward_count2_;
}
inline void mdDonationPointStepRewardInfo::set_reward_count2(::google::protobuf::int32 value) {
  set_has_reward_count2();
  reward_count2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDonationPointStepRewardInfo.reward_count2)
}

// required int32 reward_id3 = 8;
inline bool mdDonationPointStepRewardInfo::has_reward_id3() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void mdDonationPointStepRewardInfo::set_has_reward_id3() {
  _has_bits_[0] |= 0x00000080u;
}
inline void mdDonationPointStepRewardInfo::clear_has_reward_id3() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void mdDonationPointStepRewardInfo::clear_reward_id3() {
  reward_id3_ = 0;
  clear_has_reward_id3();
}
inline ::google::protobuf::int32 mdDonationPointStepRewardInfo::reward_id3() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDonationPointStepRewardInfo.reward_id3)
  return reward_id3_;
}
inline void mdDonationPointStepRewardInfo::set_reward_id3(::google::protobuf::int32 value) {
  set_has_reward_id3();
  reward_id3_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDonationPointStepRewardInfo.reward_id3)
}

// required int32 reward_count3 = 9;
inline bool mdDonationPointStepRewardInfo::has_reward_count3() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void mdDonationPointStepRewardInfo::set_has_reward_count3() {
  _has_bits_[0] |= 0x00000100u;
}
inline void mdDonationPointStepRewardInfo::clear_has_reward_count3() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void mdDonationPointStepRewardInfo::clear_reward_count3() {
  reward_count3_ = 0;
  clear_has_reward_count3();
}
inline ::google::protobuf::int32 mdDonationPointStepRewardInfo::reward_count3() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDonationPointStepRewardInfo.reward_count3)
  return reward_count3_;
}
inline void mdDonationPointStepRewardInfo::set_reward_count3(::google::protobuf::int32 value) {
  set_has_reward_count3();
  reward_count3_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDonationPointStepRewardInfo.reward_count3)
}

// -------------------------------------------------------------------

// mdFairyInfo

// required .b2.protocol.commondata.FairyType fairy_type = 1;
inline bool mdFairyInfo::has_fairy_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdFairyInfo::set_has_fairy_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdFairyInfo::clear_has_fairy_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdFairyInfo::clear_fairy_type() {
  fairy_type_ = 1;
  clear_has_fairy_type();
}
inline ::b2::protocol::commondata::FairyType mdFairyInfo::fairy_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFairyInfo.fairy_type)
  return static_cast< ::b2::protocol::commondata::FairyType >(fairy_type_);
}
inline void mdFairyInfo::set_fairy_type(::b2::protocol::commondata::FairyType value) {
  assert(::b2::protocol::commondata::FairyType_IsValid(value));
  set_has_fairy_type();
  fairy_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFairyInfo.fairy_type)
}

// required int32 option_id = 2;
inline bool mdFairyInfo::has_option_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdFairyInfo::set_has_option_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdFairyInfo::clear_has_option_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdFairyInfo::clear_option_id() {
  option_id_ = 0;
  clear_has_option_id();
}
inline ::google::protobuf::int32 mdFairyInfo::option_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFairyInfo.option_id)
  return option_id_;
}
inline void mdFairyInfo::set_option_id(::google::protobuf::int32 value) {
  set_has_option_id();
  option_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFairyInfo.option_id)
}

// required int32 bless_level = 3;
inline bool mdFairyInfo::has_bless_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdFairyInfo::set_has_bless_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdFairyInfo::clear_has_bless_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdFairyInfo::clear_bless_level() {
  bless_level_ = 0;
  clear_has_bless_level();
}
inline ::google::protobuf::int32 mdFairyInfo::bless_level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFairyInfo.bless_level)
  return bless_level_;
}
inline void mdFairyInfo::set_bless_level(::google::protobuf::int32 value) {
  set_has_bless_level();
  bless_level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFairyInfo.bless_level)
}

// required float option_value = 4;
inline bool mdFairyInfo::has_option_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdFairyInfo::set_has_option_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdFairyInfo::clear_has_option_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdFairyInfo::clear_option_value() {
  option_value_ = 0;
  clear_has_option_value();
}
inline float mdFairyInfo::option_value() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFairyInfo.option_value)
  return option_value_;
}
inline void mdFairyInfo::set_option_value(float value) {
  set_has_option_value();
  option_value_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFairyInfo.option_value)
}

// required int32 level = 5;
inline bool mdFairyInfo::has_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdFairyInfo::set_has_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdFairyInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdFairyInfo::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 mdFairyInfo::level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFairyInfo.level)
  return level_;
}
inline void mdFairyInfo::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFairyInfo.level)
}

// -------------------------------------------------------------------

// mdFairyLevelupCost

// required int32 level = 1;
inline bool mdFairyLevelupCost::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdFairyLevelupCost::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdFairyLevelupCost::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdFairyLevelupCost::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 mdFairyLevelupCost::level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFairyLevelupCost.level)
  return level_;
}
inline void mdFairyLevelupCost::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFairyLevelupCost.level)
}

// required int32 material_cost = 2;
inline bool mdFairyLevelupCost::has_material_cost() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdFairyLevelupCost::set_has_material_cost() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdFairyLevelupCost::clear_has_material_cost() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdFairyLevelupCost::clear_material_cost() {
  material_cost_ = 0;
  clear_has_material_cost();
}
inline ::google::protobuf::int32 mdFairyLevelupCost::material_cost() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFairyLevelupCost.material_cost)
  return material_cost_;
}
inline void mdFairyLevelupCost::set_material_cost(::google::protobuf::int32 value) {
  set_has_material_cost();
  material_cost_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFairyLevelupCost.material_cost)
}

// -------------------------------------------------------------------

// mdFairyOpenInfo

// required .b2.protocol.commondata.FairyType fairy_type = 1;
inline bool mdFairyOpenInfo::has_fairy_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdFairyOpenInfo::set_has_fairy_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdFairyOpenInfo::clear_has_fairy_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdFairyOpenInfo::clear_fairy_type() {
  fairy_type_ = 1;
  clear_has_fairy_type();
}
inline ::b2::protocol::commondata::FairyType mdFairyOpenInfo::fairy_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFairyOpenInfo.fairy_type)
  return static_cast< ::b2::protocol::commondata::FairyType >(fairy_type_);
}
inline void mdFairyOpenInfo::set_fairy_type(::b2::protocol::commondata::FairyType value) {
  assert(::b2::protocol::commondata::FairyType_IsValid(value));
  set_has_fairy_type();
  fairy_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFairyOpenInfo.fairy_type)
}

// required int32 stage_id = 2;
inline bool mdFairyOpenInfo::has_stage_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdFairyOpenInfo::set_has_stage_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdFairyOpenInfo::clear_has_stage_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdFairyOpenInfo::clear_stage_id() {
  stage_id_ = 0;
  clear_has_stage_id();
}
inline ::google::protobuf::int32 mdFairyOpenInfo::stage_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFairyOpenInfo.stage_id)
  return stage_id_;
}
inline void mdFairyOpenInfo::set_stage_id(::google::protobuf::int32 value) {
  set_has_stage_id();
  stage_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFairyOpenInfo.stage_id)
}

// -------------------------------------------------------------------

// mdTotemInfo

// required int32 template_id = 1;
inline bool mdTotemInfo::has_template_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdTotemInfo::set_has_template_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdTotemInfo::clear_has_template_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdTotemInfo::clear_template_id() {
  template_id_ = 0;
  clear_has_template_id();
}
inline ::google::protobuf::int32 mdTotemInfo::template_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTotemInfo.template_id)
  return template_id_;
}
inline void mdTotemInfo::set_template_id(::google::protobuf::int32 value) {
  set_has_template_id();
  template_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTotemInfo.template_id)
}

// required int32 group_id = 2;
inline bool mdTotemInfo::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdTotemInfo::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdTotemInfo::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdTotemInfo::clear_group_id() {
  group_id_ = 0;
  clear_has_group_id();
}
inline ::google::protobuf::int32 mdTotemInfo::group_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTotemInfo.group_id)
  return group_id_;
}
inline void mdTotemInfo::set_group_id(::google::protobuf::int32 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTotemInfo.group_id)
}

// required int32 bonus_id = 3;
inline bool mdTotemInfo::has_bonus_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdTotemInfo::set_has_bonus_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdTotemInfo::clear_has_bonus_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdTotemInfo::clear_bonus_id() {
  bonus_id_ = 0;
  clear_has_bonus_id();
}
inline ::google::protobuf::int32 mdTotemInfo::bonus_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTotemInfo.bonus_id)
  return bonus_id_;
}
inline void mdTotemInfo::set_bonus_id(::google::protobuf::int32 value) {
  set_has_bonus_id();
  bonus_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTotemInfo.bonus_id)
}

// required int32 grade = 4;
inline bool mdTotemInfo::has_grade() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdTotemInfo::set_has_grade() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdTotemInfo::clear_has_grade() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdTotemInfo::clear_grade() {
  grade_ = 0;
  clear_has_grade();
}
inline ::google::protobuf::int32 mdTotemInfo::grade() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTotemInfo.grade)
  return grade_;
}
inline void mdTotemInfo::set_grade(::google::protobuf::int32 value) {
  set_has_grade();
  grade_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTotemInfo.grade)
}

// required int32 sell_price = 5;
inline bool mdTotemInfo::has_sell_price() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdTotemInfo::set_has_sell_price() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdTotemInfo::clear_has_sell_price() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdTotemInfo::clear_sell_price() {
  sell_price_ = 0;
  clear_has_sell_price();
}
inline ::google::protobuf::int32 mdTotemInfo::sell_price() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTotemInfo.sell_price)
  return sell_price_;
}
inline void mdTotemInfo::set_sell_price(::google::protobuf::int32 value) {
  set_has_sell_price();
  sell_price_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTotemInfo.sell_price)
}

// required int32 equip_slot = 6;
inline bool mdTotemInfo::has_equip_slot() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdTotemInfo::set_has_equip_slot() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdTotemInfo::clear_has_equip_slot() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdTotemInfo::clear_equip_slot() {
  equip_slot_ = 0;
  clear_has_equip_slot();
}
inline ::google::protobuf::int32 mdTotemInfo::equip_slot() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTotemInfo.equip_slot)
  return equip_slot_;
}
inline void mdTotemInfo::set_equip_slot(::google::protobuf::int32 value) {
  set_has_equip_slot();
  equip_slot_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTotemInfo.equip_slot)
}

// required int32 refine_limit_count1 = 7;
inline bool mdTotemInfo::has_refine_limit_count1() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mdTotemInfo::set_has_refine_limit_count1() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mdTotemInfo::clear_has_refine_limit_count1() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mdTotemInfo::clear_refine_limit_count1() {
  refine_limit_count1_ = 0;
  clear_has_refine_limit_count1();
}
inline ::google::protobuf::int32 mdTotemInfo::refine_limit_count1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTotemInfo.refine_limit_count1)
  return refine_limit_count1_;
}
inline void mdTotemInfo::set_refine_limit_count1(::google::protobuf::int32 value) {
  set_has_refine_limit_count1();
  refine_limit_count1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTotemInfo.refine_limit_count1)
}

// required int32 refine_limit_count2 = 8;
inline bool mdTotemInfo::has_refine_limit_count2() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void mdTotemInfo::set_has_refine_limit_count2() {
  _has_bits_[0] |= 0x00000080u;
}
inline void mdTotemInfo::clear_has_refine_limit_count2() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void mdTotemInfo::clear_refine_limit_count2() {
  refine_limit_count2_ = 0;
  clear_has_refine_limit_count2();
}
inline ::google::protobuf::int32 mdTotemInfo::refine_limit_count2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTotemInfo.refine_limit_count2)
  return refine_limit_count2_;
}
inline void mdTotemInfo::set_refine_limit_count2(::google::protobuf::int32 value) {
  set_has_refine_limit_count2();
  refine_limit_count2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTotemInfo.refine_limit_count2)
}

// required int32 refine_limit_count3 = 9;
inline bool mdTotemInfo::has_refine_limit_count3() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void mdTotemInfo::set_has_refine_limit_count3() {
  _has_bits_[0] |= 0x00000100u;
}
inline void mdTotemInfo::clear_has_refine_limit_count3() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void mdTotemInfo::clear_refine_limit_count3() {
  refine_limit_count3_ = 0;
  clear_has_refine_limit_count3();
}
inline ::google::protobuf::int32 mdTotemInfo::refine_limit_count3() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTotemInfo.refine_limit_count3)
  return refine_limit_count3_;
}
inline void mdTotemInfo::set_refine_limit_count3(::google::protobuf::int32 value) {
  set_has_refine_limit_count3();
  refine_limit_count3_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTotemInfo.refine_limit_count3)
}

// -------------------------------------------------------------------

// mdSelectTotemOption

// required int32 option_id = 1;
inline bool mdSelectTotemOption::has_option_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdSelectTotemOption::set_has_option_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdSelectTotemOption::clear_has_option_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdSelectTotemOption::clear_option_id() {
  option_id_ = 0;
  clear_has_option_id();
}
inline ::google::protobuf::int32 mdSelectTotemOption::option_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSelectTotemOption.option_id)
  return option_id_;
}
inline void mdSelectTotemOption::set_option_id(::google::protobuf::int32 value) {
  set_has_option_id();
  option_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSelectTotemOption.option_id)
}

// required int32 grade = 2;
inline bool mdSelectTotemOption::has_grade() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdSelectTotemOption::set_has_grade() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdSelectTotemOption::clear_has_grade() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdSelectTotemOption::clear_grade() {
  grade_ = 0;
  clear_has_grade();
}
inline ::google::protobuf::int32 mdSelectTotemOption::grade() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSelectTotemOption.grade)
  return grade_;
}
inline void mdSelectTotemOption::set_grade(::google::protobuf::int32 value) {
  set_has_grade();
  grade_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSelectTotemOption.grade)
}

// required float min_main_value = 3;
inline bool mdSelectTotemOption::has_min_main_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdSelectTotemOption::set_has_min_main_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdSelectTotemOption::clear_has_min_main_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdSelectTotemOption::clear_min_main_value() {
  min_main_value_ = 0;
  clear_has_min_main_value();
}
inline float mdSelectTotemOption::min_main_value() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSelectTotemOption.min_main_value)
  return min_main_value_;
}
inline void mdSelectTotemOption::set_min_main_value(float value) {
  set_has_min_main_value();
  min_main_value_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSelectTotemOption.min_main_value)
}

// required float max_main_value = 4;
inline bool mdSelectTotemOption::has_max_main_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdSelectTotemOption::set_has_max_main_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdSelectTotemOption::clear_has_max_main_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdSelectTotemOption::clear_max_main_value() {
  max_main_value_ = 0;
  clear_has_max_main_value();
}
inline float mdSelectTotemOption::max_main_value() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSelectTotemOption.max_main_value)
  return max_main_value_;
}
inline void mdSelectTotemOption::set_max_main_value(float value) {
  set_has_max_main_value();
  max_main_value_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSelectTotemOption.max_main_value)
}

// required float min_sub_value = 5;
inline bool mdSelectTotemOption::has_min_sub_value() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdSelectTotemOption::set_has_min_sub_value() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdSelectTotemOption::clear_has_min_sub_value() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdSelectTotemOption::clear_min_sub_value() {
  min_sub_value_ = 0;
  clear_has_min_sub_value();
}
inline float mdSelectTotemOption::min_sub_value() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSelectTotemOption.min_sub_value)
  return min_sub_value_;
}
inline void mdSelectTotemOption::set_min_sub_value(float value) {
  set_has_min_sub_value();
  min_sub_value_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSelectTotemOption.min_sub_value)
}

// required float max_sub_value = 6;
inline bool mdSelectTotemOption::has_max_sub_value() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdSelectTotemOption::set_has_max_sub_value() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdSelectTotemOption::clear_has_max_sub_value() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdSelectTotemOption::clear_max_sub_value() {
  max_sub_value_ = 0;
  clear_has_max_sub_value();
}
inline float mdSelectTotemOption::max_sub_value() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSelectTotemOption.max_sub_value)
  return max_sub_value_;
}
inline void mdSelectTotemOption::set_max_sub_value(float value) {
  set_has_max_sub_value();
  max_sub_value_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSelectTotemOption.max_sub_value)
}

// required int32 decimal_point = 7;
inline bool mdSelectTotemOption::has_decimal_point() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mdSelectTotemOption::set_has_decimal_point() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mdSelectTotemOption::clear_has_decimal_point() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mdSelectTotemOption::clear_decimal_point() {
  decimal_point_ = 0;
  clear_has_decimal_point();
}
inline ::google::protobuf::int32 mdSelectTotemOption::decimal_point() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSelectTotemOption.decimal_point)
  return decimal_point_;
}
inline void mdSelectTotemOption::set_decimal_point(::google::protobuf::int32 value) {
  set_has_decimal_point();
  decimal_point_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSelectTotemOption.decimal_point)
}

// -------------------------------------------------------------------

// mdTotemRefineInfo

// required int32 grade = 1;
inline bool mdTotemRefineInfo::has_grade() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdTotemRefineInfo::set_has_grade() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdTotemRefineInfo::clear_has_grade() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdTotemRefineInfo::clear_grade() {
  grade_ = 0;
  clear_has_grade();
}
inline ::google::protobuf::int32 mdTotemRefineInfo::grade() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTotemRefineInfo.grade)
  return grade_;
}
inline void mdTotemRefineInfo::set_grade(::google::protobuf::int32 value) {
  set_has_grade();
  grade_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTotemRefineInfo.grade)
}

// required int32 refine_chance = 2;
inline bool mdTotemRefineInfo::has_refine_chance() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdTotemRefineInfo::set_has_refine_chance() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdTotemRefineInfo::clear_has_refine_chance() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdTotemRefineInfo::clear_refine_chance() {
  refine_chance_ = 0;
  clear_has_refine_chance();
}
inline ::google::protobuf::int32 mdTotemRefineInfo::refine_chance() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTotemRefineInfo.refine_chance)
  return refine_chance_;
}
inline void mdTotemRefineInfo::set_refine_chance(::google::protobuf::int32 value) {
  set_has_refine_chance();
  refine_chance_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTotemRefineInfo.refine_chance)
}

// required int32 gold_cost = 3;
inline bool mdTotemRefineInfo::has_gold_cost() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdTotemRefineInfo::set_has_gold_cost() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdTotemRefineInfo::clear_has_gold_cost() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdTotemRefineInfo::clear_gold_cost() {
  gold_cost_ = 0;
  clear_has_gold_cost();
}
inline ::google::protobuf::int32 mdTotemRefineInfo::gold_cost() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTotemRefineInfo.gold_cost)
  return gold_cost_;
}
inline void mdTotemRefineInfo::set_gold_cost(::google::protobuf::int32 value) {
  set_has_gold_cost();
  gold_cost_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTotemRefineInfo.gold_cost)
}

// required int32 dimensional_piece_cost = 4;
inline bool mdTotemRefineInfo::has_dimensional_piece_cost() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdTotemRefineInfo::set_has_dimensional_piece_cost() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdTotemRefineInfo::clear_has_dimensional_piece_cost() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdTotemRefineInfo::clear_dimensional_piece_cost() {
  dimensional_piece_cost_ = 0;
  clear_has_dimensional_piece_cost();
}
inline ::google::protobuf::int32 mdTotemRefineInfo::dimensional_piece_cost() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTotemRefineInfo.dimensional_piece_cost)
  return dimensional_piece_cost_;
}
inline void mdTotemRefineInfo::set_dimensional_piece_cost(::google::protobuf::int32 value) {
  set_has_dimensional_piece_cost();
  dimensional_piece_cost_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTotemRefineInfo.dimensional_piece_cost)
}

// -------------------------------------------------------------------

// mdTotemRefineRateInfo

// required int32 grade = 1;
inline bool mdTotemRefineRateInfo::has_grade() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdTotemRefineRateInfo::set_has_grade() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdTotemRefineRateInfo::clear_has_grade() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdTotemRefineRateInfo::clear_grade() {
  grade_ = 0;
  clear_has_grade();
}
inline ::google::protobuf::int32 mdTotemRefineRateInfo::grade() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTotemRefineRateInfo.grade)
  return grade_;
}
inline void mdTotemRefineRateInfo::set_grade(::google::protobuf::int32 value) {
  set_has_grade();
  grade_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTotemRefineRateInfo.grade)
}

// required int32 base_rate = 2;
inline bool mdTotemRefineRateInfo::has_base_rate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdTotemRefineRateInfo::set_has_base_rate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdTotemRefineRateInfo::clear_has_base_rate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdTotemRefineRateInfo::clear_base_rate() {
  base_rate_ = 0;
  clear_has_base_rate();
}
inline ::google::protobuf::int32 mdTotemRefineRateInfo::base_rate() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTotemRefineRateInfo.base_rate)
  return base_rate_;
}
inline void mdTotemRefineRateInfo::set_base_rate(::google::protobuf::int32 value) {
  set_has_base_rate();
  base_rate_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTotemRefineRateInfo.base_rate)
}

// required int32 gold_decrease_rate = 3;
inline bool mdTotemRefineRateInfo::has_gold_decrease_rate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdTotemRefineRateInfo::set_has_gold_decrease_rate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdTotemRefineRateInfo::clear_has_gold_decrease_rate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdTotemRefineRateInfo::clear_gold_decrease_rate() {
  gold_decrease_rate_ = 0;
  clear_has_gold_decrease_rate();
}
inline ::google::protobuf::int32 mdTotemRefineRateInfo::gold_decrease_rate() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTotemRefineRateInfo.gold_decrease_rate)
  return gold_decrease_rate_;
}
inline void mdTotemRefineRateInfo::set_gold_decrease_rate(::google::protobuf::int32 value) {
  set_has_gold_decrease_rate();
  gold_decrease_rate_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTotemRefineRateInfo.gold_decrease_rate)
}

// required int32 gold_increase_rate = 4;
inline bool mdTotemRefineRateInfo::has_gold_increase_rate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdTotemRefineRateInfo::set_has_gold_increase_rate() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdTotemRefineRateInfo::clear_has_gold_increase_rate() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdTotemRefineRateInfo::clear_gold_increase_rate() {
  gold_increase_rate_ = 0;
  clear_has_gold_increase_rate();
}
inline ::google::protobuf::int32 mdTotemRefineRateInfo::gold_increase_rate() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTotemRefineRateInfo.gold_increase_rate)
  return gold_increase_rate_;
}
inline void mdTotemRefineRateInfo::set_gold_increase_rate(::google::protobuf::int32 value) {
  set_has_gold_increase_rate();
  gold_increase_rate_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTotemRefineRateInfo.gold_increase_rate)
}

// required int32 piece_decrease_rate = 5;
inline bool mdTotemRefineRateInfo::has_piece_decrease_rate() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdTotemRefineRateInfo::set_has_piece_decrease_rate() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdTotemRefineRateInfo::clear_has_piece_decrease_rate() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdTotemRefineRateInfo::clear_piece_decrease_rate() {
  piece_decrease_rate_ = 0;
  clear_has_piece_decrease_rate();
}
inline ::google::protobuf::int32 mdTotemRefineRateInfo::piece_decrease_rate() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTotemRefineRateInfo.piece_decrease_rate)
  return piece_decrease_rate_;
}
inline void mdTotemRefineRateInfo::set_piece_decrease_rate(::google::protobuf::int32 value) {
  set_has_piece_decrease_rate();
  piece_decrease_rate_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTotemRefineRateInfo.piece_decrease_rate)
}

// required int32 piece_increase_rate = 6;
inline bool mdTotemRefineRateInfo::has_piece_increase_rate() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdTotemRefineRateInfo::set_has_piece_increase_rate() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdTotemRefineRateInfo::clear_has_piece_increase_rate() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdTotemRefineRateInfo::clear_piece_increase_rate() {
  piece_increase_rate_ = 0;
  clear_has_piece_increase_rate();
}
inline ::google::protobuf::int32 mdTotemRefineRateInfo::piece_increase_rate() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTotemRefineRateInfo.piece_increase_rate)
  return piece_increase_rate_;
}
inline void mdTotemRefineRateInfo::set_piece_increase_rate(::google::protobuf::int32 value) {
  set_has_piece_increase_rate();
  piece_increase_rate_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTotemRefineRateInfo.piece_increase_rate)
}

// required int32 min_rate = 7;
inline bool mdTotemRefineRateInfo::has_min_rate() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mdTotemRefineRateInfo::set_has_min_rate() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mdTotemRefineRateInfo::clear_has_min_rate() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mdTotemRefineRateInfo::clear_min_rate() {
  min_rate_ = 0;
  clear_has_min_rate();
}
inline ::google::protobuf::int32 mdTotemRefineRateInfo::min_rate() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTotemRefineRateInfo.min_rate)
  return min_rate_;
}
inline void mdTotemRefineRateInfo::set_min_rate(::google::protobuf::int32 value) {
  set_has_min_rate();
  min_rate_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTotemRefineRateInfo.min_rate)
}

// required int32 max_rate = 8;
inline bool mdTotemRefineRateInfo::has_max_rate() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void mdTotemRefineRateInfo::set_has_max_rate() {
  _has_bits_[0] |= 0x00000080u;
}
inline void mdTotemRefineRateInfo::clear_has_max_rate() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void mdTotemRefineRateInfo::clear_max_rate() {
  max_rate_ = 0;
  clear_has_max_rate();
}
inline ::google::protobuf::int32 mdTotemRefineRateInfo::max_rate() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTotemRefineRateInfo.max_rate)
  return max_rate_;
}
inline void mdTotemRefineRateInfo::set_max_rate(::google::protobuf::int32 value) {
  set_has_max_rate();
  max_rate_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTotemRefineRateInfo.max_rate)
}

// -------------------------------------------------------------------

// mdTotemDismantleInfo

// required int32 refine_level = 1;
inline bool mdTotemDismantleInfo::has_refine_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdTotemDismantleInfo::set_has_refine_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdTotemDismantleInfo::clear_has_refine_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdTotemDismantleInfo::clear_refine_level() {
  refine_level_ = 0;
  clear_has_refine_level();
}
inline ::google::protobuf::int32 mdTotemDismantleInfo::refine_level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTotemDismantleInfo.refine_level)
  return refine_level_;
}
inline void mdTotemDismantleInfo::set_refine_level(::google::protobuf::int32 value) {
  set_has_refine_level();
  refine_level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTotemDismantleInfo.refine_level)
}

// required int32 grade = 2;
inline bool mdTotemDismantleInfo::has_grade() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdTotemDismantleInfo::set_has_grade() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdTotemDismantleInfo::clear_has_grade() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdTotemDismantleInfo::clear_grade() {
  grade_ = 0;
  clear_has_grade();
}
inline ::google::protobuf::int32 mdTotemDismantleInfo::grade() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTotemDismantleInfo.grade)
  return grade_;
}
inline void mdTotemDismantleInfo::set_grade(::google::protobuf::int32 value) {
  set_has_grade();
  grade_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTotemDismantleInfo.grade)
}

// required int32 amount = 3;
inline bool mdTotemDismantleInfo::has_amount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdTotemDismantleInfo::set_has_amount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdTotemDismantleInfo::clear_has_amount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdTotemDismantleInfo::clear_amount() {
  amount_ = 0;
  clear_has_amount();
}
inline ::google::protobuf::int32 mdTotemDismantleInfo::amount() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTotemDismantleInfo.amount)
  return amount_;
}
inline void mdTotemDismantleInfo::set_amount(::google::protobuf::int32 value) {
  set_has_amount();
  amount_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTotemDismantleInfo.amount)
}

// -------------------------------------------------------------------

// mdTotemBonusOptionInfo

// required int32 bonus_id = 1;
inline bool mdTotemBonusOptionInfo::has_bonus_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdTotemBonusOptionInfo::set_has_bonus_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdTotemBonusOptionInfo::clear_has_bonus_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdTotemBonusOptionInfo::clear_bonus_id() {
  bonus_id_ = 0;
  clear_has_bonus_id();
}
inline ::google::protobuf::int32 mdTotemBonusOptionInfo::bonus_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTotemBonusOptionInfo.bonus_id)
  return bonus_id_;
}
inline void mdTotemBonusOptionInfo::set_bonus_id(::google::protobuf::int32 value) {
  set_has_bonus_id();
  bonus_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTotemBonusOptionInfo.bonus_id)
}

// required int32 condition1 = 2;
inline bool mdTotemBonusOptionInfo::has_condition1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdTotemBonusOptionInfo::set_has_condition1() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdTotemBonusOptionInfo::clear_has_condition1() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdTotemBonusOptionInfo::clear_condition1() {
  condition1_ = 0;
  clear_has_condition1();
}
inline ::google::protobuf::int32 mdTotemBonusOptionInfo::condition1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTotemBonusOptionInfo.condition1)
  return condition1_;
}
inline void mdTotemBonusOptionInfo::set_condition1(::google::protobuf::int32 value) {
  set_has_condition1();
  condition1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTotemBonusOptionInfo.condition1)
}

// required int32 bonus_option_id1 = 3;
inline bool mdTotemBonusOptionInfo::has_bonus_option_id1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdTotemBonusOptionInfo::set_has_bonus_option_id1() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdTotemBonusOptionInfo::clear_has_bonus_option_id1() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdTotemBonusOptionInfo::clear_bonus_option_id1() {
  bonus_option_id1_ = 0;
  clear_has_bonus_option_id1();
}
inline ::google::protobuf::int32 mdTotemBonusOptionInfo::bonus_option_id1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTotemBonusOptionInfo.bonus_option_id1)
  return bonus_option_id1_;
}
inline void mdTotemBonusOptionInfo::set_bonus_option_id1(::google::protobuf::int32 value) {
  set_has_bonus_option_id1();
  bonus_option_id1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTotemBonusOptionInfo.bonus_option_id1)
}

// required float bonus_value1 = 4;
inline bool mdTotemBonusOptionInfo::has_bonus_value1() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdTotemBonusOptionInfo::set_has_bonus_value1() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdTotemBonusOptionInfo::clear_has_bonus_value1() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdTotemBonusOptionInfo::clear_bonus_value1() {
  bonus_value1_ = 0;
  clear_has_bonus_value1();
}
inline float mdTotemBonusOptionInfo::bonus_value1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTotemBonusOptionInfo.bonus_value1)
  return bonus_value1_;
}
inline void mdTotemBonusOptionInfo::set_bonus_value1(float value) {
  set_has_bonus_value1();
  bonus_value1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTotemBonusOptionInfo.bonus_value1)
}

// required int32 condition2 = 5;
inline bool mdTotemBonusOptionInfo::has_condition2() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdTotemBonusOptionInfo::set_has_condition2() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdTotemBonusOptionInfo::clear_has_condition2() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdTotemBonusOptionInfo::clear_condition2() {
  condition2_ = 0;
  clear_has_condition2();
}
inline ::google::protobuf::int32 mdTotemBonusOptionInfo::condition2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTotemBonusOptionInfo.condition2)
  return condition2_;
}
inline void mdTotemBonusOptionInfo::set_condition2(::google::protobuf::int32 value) {
  set_has_condition2();
  condition2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTotemBonusOptionInfo.condition2)
}

// required int32 bonus_option_id2 = 6;
inline bool mdTotemBonusOptionInfo::has_bonus_option_id2() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdTotemBonusOptionInfo::set_has_bonus_option_id2() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdTotemBonusOptionInfo::clear_has_bonus_option_id2() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdTotemBonusOptionInfo::clear_bonus_option_id2() {
  bonus_option_id2_ = 0;
  clear_has_bonus_option_id2();
}
inline ::google::protobuf::int32 mdTotemBonusOptionInfo::bonus_option_id2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTotemBonusOptionInfo.bonus_option_id2)
  return bonus_option_id2_;
}
inline void mdTotemBonusOptionInfo::set_bonus_option_id2(::google::protobuf::int32 value) {
  set_has_bonus_option_id2();
  bonus_option_id2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTotemBonusOptionInfo.bonus_option_id2)
}

// required float bonus_value2 = 7;
inline bool mdTotemBonusOptionInfo::has_bonus_value2() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mdTotemBonusOptionInfo::set_has_bonus_value2() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mdTotemBonusOptionInfo::clear_has_bonus_value2() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mdTotemBonusOptionInfo::clear_bonus_value2() {
  bonus_value2_ = 0;
  clear_has_bonus_value2();
}
inline float mdTotemBonusOptionInfo::bonus_value2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTotemBonusOptionInfo.bonus_value2)
  return bonus_value2_;
}
inline void mdTotemBonusOptionInfo::set_bonus_value2(float value) {
  set_has_bonus_value2();
  bonus_value2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTotemBonusOptionInfo.bonus_value2)
}

// required int32 condition3 = 8;
inline bool mdTotemBonusOptionInfo::has_condition3() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void mdTotemBonusOptionInfo::set_has_condition3() {
  _has_bits_[0] |= 0x00000080u;
}
inline void mdTotemBonusOptionInfo::clear_has_condition3() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void mdTotemBonusOptionInfo::clear_condition3() {
  condition3_ = 0;
  clear_has_condition3();
}
inline ::google::protobuf::int32 mdTotemBonusOptionInfo::condition3() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTotemBonusOptionInfo.condition3)
  return condition3_;
}
inline void mdTotemBonusOptionInfo::set_condition3(::google::protobuf::int32 value) {
  set_has_condition3();
  condition3_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTotemBonusOptionInfo.condition3)
}

// required int32 bonus_option_id3 = 9;
inline bool mdTotemBonusOptionInfo::has_bonus_option_id3() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void mdTotemBonusOptionInfo::set_has_bonus_option_id3() {
  _has_bits_[0] |= 0x00000100u;
}
inline void mdTotemBonusOptionInfo::clear_has_bonus_option_id3() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void mdTotemBonusOptionInfo::clear_bonus_option_id3() {
  bonus_option_id3_ = 0;
  clear_has_bonus_option_id3();
}
inline ::google::protobuf::int32 mdTotemBonusOptionInfo::bonus_option_id3() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTotemBonusOptionInfo.bonus_option_id3)
  return bonus_option_id3_;
}
inline void mdTotemBonusOptionInfo::set_bonus_option_id3(::google::protobuf::int32 value) {
  set_has_bonus_option_id3();
  bonus_option_id3_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTotemBonusOptionInfo.bonus_option_id3)
}

// required float bonus_value3 = 10;
inline bool mdTotemBonusOptionInfo::has_bonus_value3() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void mdTotemBonusOptionInfo::set_has_bonus_value3() {
  _has_bits_[0] |= 0x00000200u;
}
inline void mdTotemBonusOptionInfo::clear_has_bonus_value3() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void mdTotemBonusOptionInfo::clear_bonus_value3() {
  bonus_value3_ = 0;
  clear_has_bonus_value3();
}
inline float mdTotemBonusOptionInfo::bonus_value3() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTotemBonusOptionInfo.bonus_value3)
  return bonus_value3_;
}
inline void mdTotemBonusOptionInfo::set_bonus_value3(float value) {
  set_has_bonus_value3();
  bonus_value3_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTotemBonusOptionInfo.bonus_value3)
}

// -------------------------------------------------------------------

// mdDimensionInfo

// required int32 difficulty_level = 1;
inline bool mdDimensionInfo::has_difficulty_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdDimensionInfo::set_has_difficulty_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdDimensionInfo::clear_has_difficulty_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdDimensionInfo::clear_difficulty_level() {
  difficulty_level_ = 0;
  clear_has_difficulty_level();
}
inline ::google::protobuf::int32 mdDimensionInfo::difficulty_level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDimensionInfo.difficulty_level)
  return difficulty_level_;
}
inline void mdDimensionInfo::set_difficulty_level(::google::protobuf::int32 value) {
  set_has_difficulty_level();
  difficulty_level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDimensionInfo.difficulty_level)
}

// required int32 difficulty_scale = 2;
inline bool mdDimensionInfo::has_difficulty_scale() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdDimensionInfo::set_has_difficulty_scale() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdDimensionInfo::clear_has_difficulty_scale() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdDimensionInfo::clear_difficulty_scale() {
  difficulty_scale_ = 0;
  clear_has_difficulty_scale();
}
inline ::google::protobuf::int32 mdDimensionInfo::difficulty_scale() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDimensionInfo.difficulty_scale)
  return difficulty_scale_;
}
inline void mdDimensionInfo::set_difficulty_scale(::google::protobuf::int32 value) {
  set_has_difficulty_scale();
  difficulty_scale_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDimensionInfo.difficulty_scale)
}

// required int32 fixed_drop_item_id1 = 3;
inline bool mdDimensionInfo::has_fixed_drop_item_id1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdDimensionInfo::set_has_fixed_drop_item_id1() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdDimensionInfo::clear_has_fixed_drop_item_id1() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdDimensionInfo::clear_fixed_drop_item_id1() {
  fixed_drop_item_id1_ = 0;
  clear_has_fixed_drop_item_id1();
}
inline ::google::protobuf::int32 mdDimensionInfo::fixed_drop_item_id1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDimensionInfo.fixed_drop_item_id1)
  return fixed_drop_item_id1_;
}
inline void mdDimensionInfo::set_fixed_drop_item_id1(::google::protobuf::int32 value) {
  set_has_fixed_drop_item_id1();
  fixed_drop_item_id1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDimensionInfo.fixed_drop_item_id1)
}

// required int32 fixed_drop_count1 = 4;
inline bool mdDimensionInfo::has_fixed_drop_count1() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdDimensionInfo::set_has_fixed_drop_count1() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdDimensionInfo::clear_has_fixed_drop_count1() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdDimensionInfo::clear_fixed_drop_count1() {
  fixed_drop_count1_ = 0;
  clear_has_fixed_drop_count1();
}
inline ::google::protobuf::int32 mdDimensionInfo::fixed_drop_count1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDimensionInfo.fixed_drop_count1)
  return fixed_drop_count1_;
}
inline void mdDimensionInfo::set_fixed_drop_count1(::google::protobuf::int32 value) {
  set_has_fixed_drop_count1();
  fixed_drop_count1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDimensionInfo.fixed_drop_count1)
}

// required int32 drop_totem_count_min = 5;
inline bool mdDimensionInfo::has_drop_totem_count_min() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdDimensionInfo::set_has_drop_totem_count_min() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdDimensionInfo::clear_has_drop_totem_count_min() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdDimensionInfo::clear_drop_totem_count_min() {
  drop_totem_count_min_ = 0;
  clear_has_drop_totem_count_min();
}
inline ::google::protobuf::int32 mdDimensionInfo::drop_totem_count_min() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDimensionInfo.drop_totem_count_min)
  return drop_totem_count_min_;
}
inline void mdDimensionInfo::set_drop_totem_count_min(::google::protobuf::int32 value) {
  set_has_drop_totem_count_min();
  drop_totem_count_min_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDimensionInfo.drop_totem_count_min)
}

// required int32 drop_totem_count_max = 6;
inline bool mdDimensionInfo::has_drop_totem_count_max() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdDimensionInfo::set_has_drop_totem_count_max() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdDimensionInfo::clear_has_drop_totem_count_max() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdDimensionInfo::clear_drop_totem_count_max() {
  drop_totem_count_max_ = 0;
  clear_has_drop_totem_count_max();
}
inline ::google::protobuf::int32 mdDimensionInfo::drop_totem_count_max() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDimensionInfo.drop_totem_count_max)
  return drop_totem_count_max_;
}
inline void mdDimensionInfo::set_drop_totem_count_max(::google::protobuf::int32 value) {
  set_has_drop_totem_count_max();
  drop_totem_count_max_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDimensionInfo.drop_totem_count_max)
}

// required int32 recommend_power = 7;
inline bool mdDimensionInfo::has_recommend_power() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mdDimensionInfo::set_has_recommend_power() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mdDimensionInfo::clear_has_recommend_power() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mdDimensionInfo::clear_recommend_power() {
  recommend_power_ = 0;
  clear_has_recommend_power();
}
inline ::google::protobuf::int32 mdDimensionInfo::recommend_power() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDimensionInfo.recommend_power)
  return recommend_power_;
}
inline void mdDimensionInfo::set_recommend_power(::google::protobuf::int32 value) {
  set_has_recommend_power();
  recommend_power_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDimensionInfo.recommend_power)
}

// required int32 recommend_attack = 8;
inline bool mdDimensionInfo::has_recommend_attack() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void mdDimensionInfo::set_has_recommend_attack() {
  _has_bits_[0] |= 0x00000080u;
}
inline void mdDimensionInfo::clear_has_recommend_attack() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void mdDimensionInfo::clear_recommend_attack() {
  recommend_attack_ = 0;
  clear_has_recommend_attack();
}
inline ::google::protobuf::int32 mdDimensionInfo::recommend_attack() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDimensionInfo.recommend_attack)
  return recommend_attack_;
}
inline void mdDimensionInfo::set_recommend_attack(::google::protobuf::int32 value) {
  set_has_recommend_attack();
  recommend_attack_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDimensionInfo.recommend_attack)
}

// required int32 recommend_defense = 9;
inline bool mdDimensionInfo::has_recommend_defense() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void mdDimensionInfo::set_has_recommend_defense() {
  _has_bits_[0] |= 0x00000100u;
}
inline void mdDimensionInfo::clear_has_recommend_defense() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void mdDimensionInfo::clear_recommend_defense() {
  recommend_defense_ = 0;
  clear_has_recommend_defense();
}
inline ::google::protobuf::int32 mdDimensionInfo::recommend_defense() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDimensionInfo.recommend_defense)
  return recommend_defense_;
}
inline void mdDimensionInfo::set_recommend_defense(::google::protobuf::int32 value) {
  set_has_recommend_defense();
  recommend_defense_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDimensionInfo.recommend_defense)
}

// -------------------------------------------------------------------

// mdTotemDropGradeRate

// required int32 difficulty_level = 1;
inline bool mdTotemDropGradeRate::has_difficulty_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdTotemDropGradeRate::set_has_difficulty_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdTotemDropGradeRate::clear_has_difficulty_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdTotemDropGradeRate::clear_difficulty_level() {
  difficulty_level_ = 0;
  clear_has_difficulty_level();
}
inline ::google::protobuf::int32 mdTotemDropGradeRate::difficulty_level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTotemDropGradeRate.difficulty_level)
  return difficulty_level_;
}
inline void mdTotemDropGradeRate::set_difficulty_level(::google::protobuf::int32 value) {
  set_has_difficulty_level();
  difficulty_level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTotemDropGradeRate.difficulty_level)
}

// required int32 normal = 2;
inline bool mdTotemDropGradeRate::has_normal() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdTotemDropGradeRate::set_has_normal() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdTotemDropGradeRate::clear_has_normal() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdTotemDropGradeRate::clear_normal() {
  normal_ = 0;
  clear_has_normal();
}
inline ::google::protobuf::int32 mdTotemDropGradeRate::normal() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTotemDropGradeRate.normal)
  return normal_;
}
inline void mdTotemDropGradeRate::set_normal(::google::protobuf::int32 value) {
  set_has_normal();
  normal_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTotemDropGradeRate.normal)
}

// required int32 magic = 3;
inline bool mdTotemDropGradeRate::has_magic() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdTotemDropGradeRate::set_has_magic() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdTotemDropGradeRate::clear_has_magic() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdTotemDropGradeRate::clear_magic() {
  magic_ = 0;
  clear_has_magic();
}
inline ::google::protobuf::int32 mdTotemDropGradeRate::magic() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTotemDropGradeRate.magic)
  return magic_;
}
inline void mdTotemDropGradeRate::set_magic(::google::protobuf::int32 value) {
  set_has_magic();
  magic_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTotemDropGradeRate.magic)
}

// required int32 rare = 4;
inline bool mdTotemDropGradeRate::has_rare() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdTotemDropGradeRate::set_has_rare() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdTotemDropGradeRate::clear_has_rare() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdTotemDropGradeRate::clear_rare() {
  rare_ = 0;
  clear_has_rare();
}
inline ::google::protobuf::int32 mdTotemDropGradeRate::rare() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTotemDropGradeRate.rare)
  return rare_;
}
inline void mdTotemDropGradeRate::set_rare(::google::protobuf::int32 value) {
  set_has_rare();
  rare_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTotemDropGradeRate.rare)
}

// required int32 hero = 5;
inline bool mdTotemDropGradeRate::has_hero() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdTotemDropGradeRate::set_has_hero() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdTotemDropGradeRate::clear_has_hero() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdTotemDropGradeRate::clear_hero() {
  hero_ = 0;
  clear_has_hero();
}
inline ::google::protobuf::int32 mdTotemDropGradeRate::hero() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTotemDropGradeRate.hero)
  return hero_;
}
inline void mdTotemDropGradeRate::set_hero(::google::protobuf::int32 value) {
  set_has_hero();
  hero_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTotemDropGradeRate.hero)
}

// required int32 legend = 6;
inline bool mdTotemDropGradeRate::has_legend() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdTotemDropGradeRate::set_has_legend() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdTotemDropGradeRate::clear_has_legend() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdTotemDropGradeRate::clear_legend() {
  legend_ = 0;
  clear_has_legend();
}
inline ::google::protobuf::int32 mdTotemDropGradeRate::legend() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTotemDropGradeRate.legend)
  return legend_;
}
inline void mdTotemDropGradeRate::set_legend(::google::protobuf::int32 value) {
  set_has_legend();
  legend_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTotemDropGradeRate.legend)
}

// required int32 artifact = 7;
inline bool mdTotemDropGradeRate::has_artifact() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mdTotemDropGradeRate::set_has_artifact() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mdTotemDropGradeRate::clear_has_artifact() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mdTotemDropGradeRate::clear_artifact() {
  artifact_ = 0;
  clear_has_artifact();
}
inline ::google::protobuf::int32 mdTotemDropGradeRate::artifact() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTotemDropGradeRate.artifact)
  return artifact_;
}
inline void mdTotemDropGradeRate::set_artifact(::google::protobuf::int32 value) {
  set_has_artifact();
  artifact_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTotemDropGradeRate.artifact)
}

// -------------------------------------------------------------------

// mdTotemDropGroupRate

// required int32 difficulty_level = 1;
inline bool mdTotemDropGroupRate::has_difficulty_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdTotemDropGroupRate::set_has_difficulty_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdTotemDropGroupRate::clear_has_difficulty_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdTotemDropGroupRate::clear_difficulty_level() {
  difficulty_level_ = 0;
  clear_has_difficulty_level();
}
inline ::google::protobuf::int32 mdTotemDropGroupRate::difficulty_level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTotemDropGroupRate.difficulty_level)
  return difficulty_level_;
}
inline void mdTotemDropGroupRate::set_difficulty_level(::google::protobuf::int32 value) {
  set_has_difficulty_level();
  difficulty_level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTotemDropGroupRate.difficulty_level)
}

// required int32 group_id = 2;
inline bool mdTotemDropGroupRate::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdTotemDropGroupRate::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdTotemDropGroupRate::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdTotemDropGroupRate::clear_group_id() {
  group_id_ = 0;
  clear_has_group_id();
}
inline ::google::protobuf::int32 mdTotemDropGroupRate::group_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTotemDropGroupRate.group_id)
  return group_id_;
}
inline void mdTotemDropGroupRate::set_group_id(::google::protobuf::int32 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTotemDropGroupRate.group_id)
}

// required int32 rate = 3;
inline bool mdTotemDropGroupRate::has_rate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdTotemDropGroupRate::set_has_rate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdTotemDropGroupRate::clear_has_rate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdTotemDropGroupRate::clear_rate() {
  rate_ = 0;
  clear_has_rate();
}
inline ::google::protobuf::int32 mdTotemDropGroupRate::rate() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTotemDropGroupRate.rate)
  return rate_;
}
inline void mdTotemDropGroupRate::set_rate(::google::protobuf::int32 value) {
  set_has_rate();
  rate_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTotemDropGroupRate.rate)
}

// -------------------------------------------------------------------

// mdDimensionWeekReward

// required int32 index = 1;
inline bool mdDimensionWeekReward::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdDimensionWeekReward::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdDimensionWeekReward::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdDimensionWeekReward::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 mdDimensionWeekReward::index() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDimensionWeekReward.index)
  return index_;
}
inline void mdDimensionWeekReward::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDimensionWeekReward.index)
}

// required int32 ranking_min = 2;
inline bool mdDimensionWeekReward::has_ranking_min() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdDimensionWeekReward::set_has_ranking_min() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdDimensionWeekReward::clear_has_ranking_min() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdDimensionWeekReward::clear_ranking_min() {
  ranking_min_ = 0;
  clear_has_ranking_min();
}
inline ::google::protobuf::int32 mdDimensionWeekReward::ranking_min() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDimensionWeekReward.ranking_min)
  return ranking_min_;
}
inline void mdDimensionWeekReward::set_ranking_min(::google::protobuf::int32 value) {
  set_has_ranking_min();
  ranking_min_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDimensionWeekReward.ranking_min)
}

// required int32 ranking_max = 3;
inline bool mdDimensionWeekReward::has_ranking_max() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdDimensionWeekReward::set_has_ranking_max() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdDimensionWeekReward::clear_has_ranking_max() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdDimensionWeekReward::clear_ranking_max() {
  ranking_max_ = 0;
  clear_has_ranking_max();
}
inline ::google::protobuf::int32 mdDimensionWeekReward::ranking_max() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDimensionWeekReward.ranking_max)
  return ranking_max_;
}
inline void mdDimensionWeekReward::set_ranking_max(::google::protobuf::int32 value) {
  set_has_ranking_max();
  ranking_max_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdDimensionWeekReward.ranking_max)
}

// repeated .b2.protocol.commondata.RawReward rewards = 4;
inline int mdDimensionWeekReward::rewards_size() const {
  return rewards_.size();
}
inline void mdDimensionWeekReward::clear_rewards() {
  rewards_.Clear();
}
inline const ::b2::protocol::commondata::RawReward& mdDimensionWeekReward::rewards(int index) const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdDimensionWeekReward.rewards)
  return rewards_.Get(index);
}
inline ::b2::protocol::commondata::RawReward* mdDimensionWeekReward::mutable_rewards(int index) {
  // @@protoc_insertion_point(field_mutable:b2.protocol.masterdata.mdDimensionWeekReward.rewards)
  return rewards_.Mutable(index);
}
inline ::b2::protocol::commondata::RawReward* mdDimensionWeekReward::add_rewards() {
  // @@protoc_insertion_point(field_add:b2.protocol.masterdata.mdDimensionWeekReward.rewards)
  return rewards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::RawReward >&
mdDimensionWeekReward::rewards() const {
  // @@protoc_insertion_point(field_list:b2.protocol.masterdata.mdDimensionWeekReward.rewards)
  return rewards_;
}
inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::RawReward >*
mdDimensionWeekReward::mutable_rewards() {
  // @@protoc_insertion_point(field_mutable_list:b2.protocol.masterdata.mdDimensionWeekReward.rewards)
  return &rewards_;
}

// -------------------------------------------------------------------

// mdTotemPrefixLotteryInfo

// required int32 id = 1;
inline bool mdTotemPrefixLotteryInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdTotemPrefixLotteryInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdTotemPrefixLotteryInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdTotemPrefixLotteryInfo::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 mdTotemPrefixLotteryInfo::id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTotemPrefixLotteryInfo.id)
  return id_;
}
inline void mdTotemPrefixLotteryInfo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTotemPrefixLotteryInfo.id)
}

// required int32 base_prefix = 2;
inline bool mdTotemPrefixLotteryInfo::has_base_prefix() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdTotemPrefixLotteryInfo::set_has_base_prefix() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdTotemPrefixLotteryInfo::clear_has_base_prefix() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdTotemPrefixLotteryInfo::clear_base_prefix() {
  base_prefix_ = 0;
  clear_has_base_prefix();
}
inline ::google::protobuf::int32 mdTotemPrefixLotteryInfo::base_prefix() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTotemPrefixLotteryInfo.base_prefix)
  return base_prefix_;
}
inline void mdTotemPrefixLotteryInfo::set_base_prefix(::google::protobuf::int32 value) {
  set_has_base_prefix();
  base_prefix_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTotemPrefixLotteryInfo.base_prefix)
}

// required int32 grade = 3;
inline bool mdTotemPrefixLotteryInfo::has_grade() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdTotemPrefixLotteryInfo::set_has_grade() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdTotemPrefixLotteryInfo::clear_has_grade() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdTotemPrefixLotteryInfo::clear_grade() {
  grade_ = 0;
  clear_has_grade();
}
inline ::google::protobuf::int32 mdTotemPrefixLotteryInfo::grade() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdTotemPrefixLotteryInfo.grade)
  return grade_;
}
inline void mdTotemPrefixLotteryInfo::set_grade(::google::protobuf::int32 value) {
  set_has_grade();
  grade_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdTotemPrefixLotteryInfo.grade)
}

// -------------------------------------------------------------------

// mdExchangeSystemInfo

// required int32 id = 1;
inline bool mdExchangeSystemInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdExchangeSystemInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdExchangeSystemInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdExchangeSystemInfo::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 mdExchangeSystemInfo::id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdExchangeSystemInfo.id)
  return id_;
}
inline void mdExchangeSystemInfo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdExchangeSystemInfo.id)
}

// required int32 template_id = 2;
inline bool mdExchangeSystemInfo::has_template_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdExchangeSystemInfo::set_has_template_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdExchangeSystemInfo::clear_has_template_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdExchangeSystemInfo::clear_template_id() {
  template_id_ = 0;
  clear_has_template_id();
}
inline ::google::protobuf::int32 mdExchangeSystemInfo::template_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdExchangeSystemInfo.template_id)
  return template_id_;
}
inline void mdExchangeSystemInfo::set_template_id(::google::protobuf::int32 value) {
  set_has_template_id();
  template_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdExchangeSystemInfo.template_id)
}

// required int32 request_count = 3;
inline bool mdExchangeSystemInfo::has_request_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdExchangeSystemInfo::set_has_request_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdExchangeSystemInfo::clear_has_request_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdExchangeSystemInfo::clear_request_count() {
  request_count_ = 0;
  clear_has_request_count();
}
inline ::google::protobuf::int32 mdExchangeSystemInfo::request_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdExchangeSystemInfo.request_count)
  return request_count_;
}
inline void mdExchangeSystemInfo::set_request_count(::google::protobuf::int32 value) {
  set_has_request_count();
  request_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdExchangeSystemInfo.request_count)
}

// required int32 exchange_template_id = 4;
inline bool mdExchangeSystemInfo::has_exchange_template_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdExchangeSystemInfo::set_has_exchange_template_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdExchangeSystemInfo::clear_has_exchange_template_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdExchangeSystemInfo::clear_exchange_template_id() {
  exchange_template_id_ = 0;
  clear_has_exchange_template_id();
}
inline ::google::protobuf::int32 mdExchangeSystemInfo::exchange_template_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdExchangeSystemInfo.exchange_template_id)
  return exchange_template_id_;
}
inline void mdExchangeSystemInfo::set_exchange_template_id(::google::protobuf::int32 value) {
  set_has_exchange_template_id();
  exchange_template_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdExchangeSystemInfo.exchange_template_id)
}

// required int32 result_count = 5;
inline bool mdExchangeSystemInfo::has_result_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdExchangeSystemInfo::set_has_result_count() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdExchangeSystemInfo::clear_has_result_count() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdExchangeSystemInfo::clear_result_count() {
  result_count_ = 0;
  clear_has_result_count();
}
inline ::google::protobuf::int32 mdExchangeSystemInfo::result_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdExchangeSystemInfo.result_count)
  return result_count_;
}
inline void mdExchangeSystemInfo::set_result_count(::google::protobuf::int32 value) {
  set_has_result_count();
  result_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdExchangeSystemInfo.result_count)
}

// -------------------------------------------------------------------

// mdExchangeSystemCost

// required int32 exchange_id = 1;
inline bool mdExchangeSystemCost::has_exchange_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdExchangeSystemCost::set_has_exchange_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdExchangeSystemCost::clear_has_exchange_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdExchangeSystemCost::clear_exchange_id() {
  exchange_id_ = 0;
  clear_has_exchange_id();
}
inline ::google::protobuf::int32 mdExchangeSystemCost::exchange_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdExchangeSystemCost.exchange_id)
  return exchange_id_;
}
inline void mdExchangeSystemCost::set_exchange_id(::google::protobuf::int32 value) {
  set_has_exchange_id();
  exchange_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdExchangeSystemCost.exchange_id)
}

// required int32 count = 2;
inline bool mdExchangeSystemCost::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdExchangeSystemCost::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdExchangeSystemCost::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdExchangeSystemCost::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 mdExchangeSystemCost::count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdExchangeSystemCost.count)
  return count_;
}
inline void mdExchangeSystemCost::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdExchangeSystemCost.count)
}

// required int32 gold_cost = 3;
inline bool mdExchangeSystemCost::has_gold_cost() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdExchangeSystemCost::set_has_gold_cost() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdExchangeSystemCost::clear_has_gold_cost() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdExchangeSystemCost::clear_gold_cost() {
  gold_cost_ = 0;
  clear_has_gold_cost();
}
inline ::google::protobuf::int32 mdExchangeSystemCost::gold_cost() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdExchangeSystemCost.gold_cost)
  return gold_cost_;
}
inline void mdExchangeSystemCost::set_gold_cost(::google::protobuf::int32 value) {
  set_has_gold_cost();
  gold_cost_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdExchangeSystemCost.gold_cost)
}

// required int32 gem_cost = 4;
inline bool mdExchangeSystemCost::has_gem_cost() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdExchangeSystemCost::set_has_gem_cost() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdExchangeSystemCost::clear_has_gem_cost() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdExchangeSystemCost::clear_gem_cost() {
  gem_cost_ = 0;
  clear_has_gem_cost();
}
inline ::google::protobuf::int32 mdExchangeSystemCost::gem_cost() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdExchangeSystemCost.gem_cost)
  return gem_cost_;
}
inline void mdExchangeSystemCost::set_gem_cost(::google::protobuf::int32 value) {
  set_has_gem_cost();
  gem_cost_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdExchangeSystemCost.gem_cost)
}

// -------------------------------------------------------------------

// mdQualityTransRateInfo

// required int32 template_id = 1;
inline bool mdQualityTransRateInfo::has_template_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdQualityTransRateInfo::set_has_template_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdQualityTransRateInfo::clear_has_template_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdQualityTransRateInfo::clear_template_id() {
  template_id_ = 0;
  clear_has_template_id();
}
inline ::google::protobuf::int32 mdQualityTransRateInfo::template_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdQualityTransRateInfo.template_id)
  return template_id_;
}
inline void mdQualityTransRateInfo::set_template_id(::google::protobuf::int32 value) {
  set_has_template_id();
  template_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdQualityTransRateInfo.template_id)
}

// required .b2.protocol.commondata.EquipCategory equip_category = 2;
inline bool mdQualityTransRateInfo::has_equip_category() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdQualityTransRateInfo::set_has_equip_category() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdQualityTransRateInfo::clear_has_equip_category() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdQualityTransRateInfo::clear_equip_category() {
  equip_category_ = 0;
  clear_has_equip_category();
}
inline ::b2::protocol::commondata::EquipCategory mdQualityTransRateInfo::equip_category() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdQualityTransRateInfo.equip_category)
  return static_cast< ::b2::protocol::commondata::EquipCategory >(equip_category_);
}
inline void mdQualityTransRateInfo::set_equip_category(::b2::protocol::commondata::EquipCategory value) {
  assert(::b2::protocol::commondata::EquipCategory_IsValid(value));
  set_has_equip_category();
  equip_category_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdQualityTransRateInfo.equip_category)
}

// required int32 quality = 3;
inline bool mdQualityTransRateInfo::has_quality() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdQualityTransRateInfo::set_has_quality() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdQualityTransRateInfo::clear_has_quality() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdQualityTransRateInfo::clear_quality() {
  quality_ = 0;
  clear_has_quality();
}
inline ::google::protobuf::int32 mdQualityTransRateInfo::quality() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdQualityTransRateInfo.quality)
  return quality_;
}
inline void mdQualityTransRateInfo::set_quality(::google::protobuf::int32 value) {
  set_has_quality();
  quality_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdQualityTransRateInfo.quality)
}

// required int32 trans_rate = 4;
inline bool mdQualityTransRateInfo::has_trans_rate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdQualityTransRateInfo::set_has_trans_rate() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdQualityTransRateInfo::clear_has_trans_rate() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdQualityTransRateInfo::clear_trans_rate() {
  trans_rate_ = 0;
  clear_has_trans_rate();
}
inline ::google::protobuf::int32 mdQualityTransRateInfo::trans_rate() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdQualityTransRateInfo.trans_rate)
  return trans_rate_;
}
inline void mdQualityTransRateInfo::set_trans_rate(::google::protobuf::int32 value) {
  set_has_trans_rate();
  trans_rate_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdQualityTransRateInfo.trans_rate)
}

// required int32 trans_cond_quality = 5;
inline bool mdQualityTransRateInfo::has_trans_cond_quality() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdQualityTransRateInfo::set_has_trans_cond_quality() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdQualityTransRateInfo::clear_has_trans_cond_quality() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdQualityTransRateInfo::clear_trans_cond_quality() {
  trans_cond_quality_ = 0;
  clear_has_trans_cond_quality();
}
inline ::google::protobuf::int32 mdQualityTransRateInfo::trans_cond_quality() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdQualityTransRateInfo.trans_cond_quality)
  return trans_cond_quality_;
}
inline void mdQualityTransRateInfo::set_trans_cond_quality(::google::protobuf::int32 value) {
  set_has_trans_cond_quality();
  trans_cond_quality_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdQualityTransRateInfo.trans_cond_quality)
}

// -------------------------------------------------------------------

// mdLotteryShopRateQualityInfo

// required .b2.protocol.commondata.EquipCategory equip_category = 1;
inline bool mdLotteryShopRateQualityInfo::has_equip_category() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdLotteryShopRateQualityInfo::set_has_equip_category() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdLotteryShopRateQualityInfo::clear_has_equip_category() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdLotteryShopRateQualityInfo::clear_equip_category() {
  equip_category_ = 0;
  clear_has_equip_category();
}
inline ::b2::protocol::commondata::EquipCategory mdLotteryShopRateQualityInfo::equip_category() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdLotteryShopRateQualityInfo.equip_category)
  return static_cast< ::b2::protocol::commondata::EquipCategory >(equip_category_);
}
inline void mdLotteryShopRateQualityInfo::set_equip_category(::b2::protocol::commondata::EquipCategory value) {
  assert(::b2::protocol::commondata::EquipCategory_IsValid(value));
  set_has_equip_category();
  equip_category_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdLotteryShopRateQualityInfo.equip_category)
}

// required int32 quality = 2;
inline bool mdLotteryShopRateQualityInfo::has_quality() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdLotteryShopRateQualityInfo::set_has_quality() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdLotteryShopRateQualityInfo::clear_has_quality() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdLotteryShopRateQualityInfo::clear_quality() {
  quality_ = 0;
  clear_has_quality();
}
inline ::google::protobuf::int32 mdLotteryShopRateQualityInfo::quality() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdLotteryShopRateQualityInfo.quality)
  return quality_;
}
inline void mdLotteryShopRateQualityInfo::set_quality(::google::protobuf::int32 value) {
  set_has_quality();
  quality_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdLotteryShopRateQualityInfo.quality)
}

// required int32 rate = 3;
inline bool mdLotteryShopRateQualityInfo::has_rate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdLotteryShopRateQualityInfo::set_has_rate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdLotteryShopRateQualityInfo::clear_has_rate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdLotteryShopRateQualityInfo::clear_rate() {
  rate_ = 0;
  clear_has_rate();
}
inline ::google::protobuf::int32 mdLotteryShopRateQualityInfo::rate() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdLotteryShopRateQualityInfo.rate)
  return rate_;
}
inline void mdLotteryShopRateQualityInfo::set_rate(::google::protobuf::int32 value) {
  set_has_rate();
  rate_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdLotteryShopRateQualityInfo.rate)
}

// required double quality_inc_level = 4;
inline bool mdLotteryShopRateQualityInfo::has_quality_inc_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdLotteryShopRateQualityInfo::set_has_quality_inc_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdLotteryShopRateQualityInfo::clear_has_quality_inc_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdLotteryShopRateQualityInfo::clear_quality_inc_level() {
  quality_inc_level_ = 0;
  clear_has_quality_inc_level();
}
inline double mdLotteryShopRateQualityInfo::quality_inc_level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdLotteryShopRateQualityInfo.quality_inc_level)
  return quality_inc_level_;
}
inline void mdLotteryShopRateQualityInfo::set_quality_inc_level(double value) {
  set_has_quality_inc_level();
  quality_inc_level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdLotteryShopRateQualityInfo.quality_inc_level)
}

// -------------------------------------------------------------------

// mdFactoryInfo

// required int32 id = 1;
inline bool mdFactoryInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdFactoryInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdFactoryInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdFactoryInfo::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 mdFactoryInfo::id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFactoryInfo.id)
  return id_;
}
inline void mdFactoryInfo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFactoryInfo.id)
}

// required int32 factory_type = 2;
inline bool mdFactoryInfo::has_factory_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdFactoryInfo::set_has_factory_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdFactoryInfo::clear_has_factory_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdFactoryInfo::clear_factory_type() {
  factory_type_ = 0;
  clear_has_factory_type();
}
inline ::google::protobuf::int32 mdFactoryInfo::factory_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFactoryInfo.factory_type)
  return factory_type_;
}
inline void mdFactoryInfo::set_factory_type(::google::protobuf::int32 value) {
  set_has_factory_type();
  factory_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFactoryInfo.factory_type)
}

// required int32 factory_tab = 3;
inline bool mdFactoryInfo::has_factory_tab() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdFactoryInfo::set_has_factory_tab() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdFactoryInfo::clear_has_factory_tab() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdFactoryInfo::clear_factory_tab() {
  factory_tab_ = 0;
  clear_has_factory_tab();
}
inline ::google::protobuf::int32 mdFactoryInfo::factory_tab() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFactoryInfo.factory_tab)
  return factory_tab_;
}
inline void mdFactoryInfo::set_factory_tab(::google::protobuf::int32 value) {
  set_has_factory_tab();
  factory_tab_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFactoryInfo.factory_tab)
}

// required int32 group_id = 4;
inline bool mdFactoryInfo::has_group_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdFactoryInfo::set_has_group_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdFactoryInfo::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdFactoryInfo::clear_group_id() {
  group_id_ = 0;
  clear_has_group_id();
}
inline ::google::protobuf::int32 mdFactoryInfo::group_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFactoryInfo.group_id)
  return group_id_;
}
inline void mdFactoryInfo::set_group_id(::google::protobuf::int32 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFactoryInfo.group_id)
}

// required int32 group_sort = 5;
inline bool mdFactoryInfo::has_group_sort() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdFactoryInfo::set_has_group_sort() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdFactoryInfo::clear_has_group_sort() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdFactoryInfo::clear_group_sort() {
  group_sort_ = 0;
  clear_has_group_sort();
}
inline ::google::protobuf::int32 mdFactoryInfo::group_sort() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFactoryInfo.group_sort)
  return group_sort_;
}
inline void mdFactoryInfo::set_group_sort(::google::protobuf::int32 value) {
  set_has_group_sort();
  group_sort_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFactoryInfo.group_sort)
}

// required int32 item_sort = 6;
inline bool mdFactoryInfo::has_item_sort() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdFactoryInfo::set_has_item_sort() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdFactoryInfo::clear_has_item_sort() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdFactoryInfo::clear_item_sort() {
  item_sort_ = 0;
  clear_has_item_sort();
}
inline ::google::protobuf::int32 mdFactoryInfo::item_sort() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFactoryInfo.item_sort)
  return item_sort_;
}
inline void mdFactoryInfo::set_item_sort(::google::protobuf::int32 value) {
  set_has_item_sort();
  item_sort_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFactoryInfo.item_sort)
}

// required int32 limit_id = 7;
inline bool mdFactoryInfo::has_limit_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mdFactoryInfo::set_has_limit_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mdFactoryInfo::clear_has_limit_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mdFactoryInfo::clear_limit_id() {
  limit_id_ = 0;
  clear_has_limit_id();
}
inline ::google::protobuf::int32 mdFactoryInfo::limit_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFactoryInfo.limit_id)
  return limit_id_;
}
inline void mdFactoryInfo::set_limit_id(::google::protobuf::int32 value) {
  set_has_limit_id();
  limit_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFactoryInfo.limit_id)
}

// required int32 character_type = 8;
inline bool mdFactoryInfo::has_character_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void mdFactoryInfo::set_has_character_type() {
  _has_bits_[0] |= 0x00000080u;
}
inline void mdFactoryInfo::clear_has_character_type() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void mdFactoryInfo::clear_character_type() {
  character_type_ = 0;
  clear_has_character_type();
}
inline ::google::protobuf::int32 mdFactoryInfo::character_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFactoryInfo.character_type)
  return character_type_;
}
inline void mdFactoryInfo::set_character_type(::google::protobuf::int32 value) {
  set_has_character_type();
  character_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFactoryInfo.character_type)
}

// required int32 gold_cost = 9;
inline bool mdFactoryInfo::has_gold_cost() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void mdFactoryInfo::set_has_gold_cost() {
  _has_bits_[0] |= 0x00000100u;
}
inline void mdFactoryInfo::clear_has_gold_cost() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void mdFactoryInfo::clear_gold_cost() {
  gold_cost_ = 0;
  clear_has_gold_cost();
}
inline ::google::protobuf::int32 mdFactoryInfo::gold_cost() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFactoryInfo.gold_cost)
  return gold_cost_;
}
inline void mdFactoryInfo::set_gold_cost(::google::protobuf::int32 value) {
  set_has_gold_cost();
  gold_cost_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFactoryInfo.gold_cost)
}

// required int32 gem_cost = 10;
inline bool mdFactoryInfo::has_gem_cost() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void mdFactoryInfo::set_has_gem_cost() {
  _has_bits_[0] |= 0x00000200u;
}
inline void mdFactoryInfo::clear_has_gem_cost() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void mdFactoryInfo::clear_gem_cost() {
  gem_cost_ = 0;
  clear_has_gem_cost();
}
inline ::google::protobuf::int32 mdFactoryInfo::gem_cost() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFactoryInfo.gem_cost)
  return gem_cost_;
}
inline void mdFactoryInfo::set_gem_cost(::google::protobuf::int32 value) {
  set_has_gem_cost();
  gem_cost_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFactoryInfo.gem_cost)
}

// required int32 dark_crystal_cost = 11;
inline bool mdFactoryInfo::has_dark_crystal_cost() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void mdFactoryInfo::set_has_dark_crystal_cost() {
  _has_bits_[0] |= 0x00000400u;
}
inline void mdFactoryInfo::clear_has_dark_crystal_cost() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void mdFactoryInfo::clear_dark_crystal_cost() {
  dark_crystal_cost_ = 0;
  clear_has_dark_crystal_cost();
}
inline ::google::protobuf::int32 mdFactoryInfo::dark_crystal_cost() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFactoryInfo.dark_crystal_cost)
  return dark_crystal_cost_;
}
inline void mdFactoryInfo::set_dark_crystal_cost(::google::protobuf::int32 value) {
  set_has_dark_crystal_cost();
  dark_crystal_cost_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFactoryInfo.dark_crystal_cost)
}

// required int32 success_rate = 12;
inline bool mdFactoryInfo::has_success_rate() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void mdFactoryInfo::set_has_success_rate() {
  _has_bits_[0] |= 0x00000800u;
}
inline void mdFactoryInfo::clear_has_success_rate() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void mdFactoryInfo::clear_success_rate() {
  success_rate_ = 0;
  clear_has_success_rate();
}
inline ::google::protobuf::int32 mdFactoryInfo::success_rate() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFactoryInfo.success_rate)
  return success_rate_;
}
inline void mdFactoryInfo::set_success_rate(::google::protobuf::int32 value) {
  set_has_success_rate();
  success_rate_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFactoryInfo.success_rate)
}

// required int32 huge_success_rate = 13;
inline bool mdFactoryInfo::has_huge_success_rate() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void mdFactoryInfo::set_has_huge_success_rate() {
  _has_bits_[0] |= 0x00001000u;
}
inline void mdFactoryInfo::clear_has_huge_success_rate() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void mdFactoryInfo::clear_huge_success_rate() {
  huge_success_rate_ = 0;
  clear_has_huge_success_rate();
}
inline ::google::protobuf::int32 mdFactoryInfo::huge_success_rate() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFactoryInfo.huge_success_rate)
  return huge_success_rate_;
}
inline void mdFactoryInfo::set_huge_success_rate(::google::protobuf::int32 value) {
  set_has_huge_success_rate();
  huge_success_rate_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFactoryInfo.huge_success_rate)
}

// required int32 fail_rate = 14;
inline bool mdFactoryInfo::has_fail_rate() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void mdFactoryInfo::set_has_fail_rate() {
  _has_bits_[0] |= 0x00002000u;
}
inline void mdFactoryInfo::clear_has_fail_rate() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void mdFactoryInfo::clear_fail_rate() {
  fail_rate_ = 0;
  clear_has_fail_rate();
}
inline ::google::protobuf::int32 mdFactoryInfo::fail_rate() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFactoryInfo.fail_rate)
  return fail_rate_;
}
inline void mdFactoryInfo::set_fail_rate(::google::protobuf::int32 value) {
  set_has_fail_rate();
  fail_rate_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFactoryInfo.fail_rate)
}

// required int32 huge_success_add_item_template_id = 15;
inline bool mdFactoryInfo::has_huge_success_add_item_template_id() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void mdFactoryInfo::set_has_huge_success_add_item_template_id() {
  _has_bits_[0] |= 0x00004000u;
}
inline void mdFactoryInfo::clear_has_huge_success_add_item_template_id() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void mdFactoryInfo::clear_huge_success_add_item_template_id() {
  huge_success_add_item_template_id_ = 0;
  clear_has_huge_success_add_item_template_id();
}
inline ::google::protobuf::int32 mdFactoryInfo::huge_success_add_item_template_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFactoryInfo.huge_success_add_item_template_id)
  return huge_success_add_item_template_id_;
}
inline void mdFactoryInfo::set_huge_success_add_item_template_id(::google::protobuf::int32 value) {
  set_has_huge_success_add_item_template_id();
  huge_success_add_item_template_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFactoryInfo.huge_success_add_item_template_id)
}

// required int32 huge_success_add_item_count = 16;
inline bool mdFactoryInfo::has_huge_success_add_item_count() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void mdFactoryInfo::set_has_huge_success_add_item_count() {
  _has_bits_[0] |= 0x00008000u;
}
inline void mdFactoryInfo::clear_has_huge_success_add_item_count() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void mdFactoryInfo::clear_huge_success_add_item_count() {
  huge_success_add_item_count_ = 0;
  clear_has_huge_success_add_item_count();
}
inline ::google::protobuf::int32 mdFactoryInfo::huge_success_add_item_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFactoryInfo.huge_success_add_item_count)
  return huge_success_add_item_count_;
}
inline void mdFactoryInfo::set_huge_success_add_item_count(::google::protobuf::int32 value) {
  set_has_huge_success_add_item_count();
  huge_success_add_item_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFactoryInfo.huge_success_add_item_count)
}

// required int32 fail_add_item_template_id = 17;
inline bool mdFactoryInfo::has_fail_add_item_template_id() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void mdFactoryInfo::set_has_fail_add_item_template_id() {
  _has_bits_[0] |= 0x00010000u;
}
inline void mdFactoryInfo::clear_has_fail_add_item_template_id() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void mdFactoryInfo::clear_fail_add_item_template_id() {
  fail_add_item_template_id_ = 0;
  clear_has_fail_add_item_template_id();
}
inline ::google::protobuf::int32 mdFactoryInfo::fail_add_item_template_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFactoryInfo.fail_add_item_template_id)
  return fail_add_item_template_id_;
}
inline void mdFactoryInfo::set_fail_add_item_template_id(::google::protobuf::int32 value) {
  set_has_fail_add_item_template_id();
  fail_add_item_template_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFactoryInfo.fail_add_item_template_id)
}

// required int32 fail_add_item_count = 18;
inline bool mdFactoryInfo::has_fail_add_item_count() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void mdFactoryInfo::set_has_fail_add_item_count() {
  _has_bits_[0] |= 0x00020000u;
}
inline void mdFactoryInfo::clear_has_fail_add_item_count() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void mdFactoryInfo::clear_fail_add_item_count() {
  fail_add_item_count_ = 0;
  clear_has_fail_add_item_count();
}
inline ::google::protobuf::int32 mdFactoryInfo::fail_add_item_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFactoryInfo.fail_add_item_count)
  return fail_add_item_count_;
}
inline void mdFactoryInfo::set_fail_add_item_count(::google::protobuf::int32 value) {
  set_has_fail_add_item_count();
  fail_add_item_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFactoryInfo.fail_add_item_count)
}

// required int32 result_item_template_id = 19;
inline bool mdFactoryInfo::has_result_item_template_id() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void mdFactoryInfo::set_has_result_item_template_id() {
  _has_bits_[0] |= 0x00040000u;
}
inline void mdFactoryInfo::clear_has_result_item_template_id() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void mdFactoryInfo::clear_result_item_template_id() {
  result_item_template_id_ = 0;
  clear_has_result_item_template_id();
}
inline ::google::protobuf::int32 mdFactoryInfo::result_item_template_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFactoryInfo.result_item_template_id)
  return result_item_template_id_;
}
inline void mdFactoryInfo::set_result_item_template_id(::google::protobuf::int32 value) {
  set_has_result_item_template_id();
  result_item_template_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFactoryInfo.result_item_template_id)
}

// required int32 result_item_count = 20;
inline bool mdFactoryInfo::has_result_item_count() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void mdFactoryInfo::set_has_result_item_count() {
  _has_bits_[0] |= 0x00080000u;
}
inline void mdFactoryInfo::clear_has_result_item_count() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void mdFactoryInfo::clear_result_item_count() {
  result_item_count_ = 0;
  clear_has_result_item_count();
}
inline ::google::protobuf::int32 mdFactoryInfo::result_item_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFactoryInfo.result_item_count)
  return result_item_count_;
}
inline void mdFactoryInfo::set_result_item_count(::google::protobuf::int32 value) {
  set_has_result_item_count();
  result_item_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFactoryInfo.result_item_count)
}

// required int32 main_material_template_id = 21;
inline bool mdFactoryInfo::has_main_material_template_id() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void mdFactoryInfo::set_has_main_material_template_id() {
  _has_bits_[0] |= 0x00100000u;
}
inline void mdFactoryInfo::clear_has_main_material_template_id() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void mdFactoryInfo::clear_main_material_template_id() {
  main_material_template_id_ = 0;
  clear_has_main_material_template_id();
}
inline ::google::protobuf::int32 mdFactoryInfo::main_material_template_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFactoryInfo.main_material_template_id)
  return main_material_template_id_;
}
inline void mdFactoryInfo::set_main_material_template_id(::google::protobuf::int32 value) {
  set_has_main_material_template_id();
  main_material_template_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFactoryInfo.main_material_template_id)
}

// required int32 main_material_cond_reinforce = 22;
inline bool mdFactoryInfo::has_main_material_cond_reinforce() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void mdFactoryInfo::set_has_main_material_cond_reinforce() {
  _has_bits_[0] |= 0x00200000u;
}
inline void mdFactoryInfo::clear_has_main_material_cond_reinforce() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void mdFactoryInfo::clear_main_material_cond_reinforce() {
  main_material_cond_reinforce_ = 0;
  clear_has_main_material_cond_reinforce();
}
inline ::google::protobuf::int32 mdFactoryInfo::main_material_cond_reinforce() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFactoryInfo.main_material_cond_reinforce)
  return main_material_cond_reinforce_;
}
inline void mdFactoryInfo::set_main_material_cond_reinforce(::google::protobuf::int32 value) {
  set_has_main_material_cond_reinforce();
  main_material_cond_reinforce_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFactoryInfo.main_material_cond_reinforce)
}

// required int32 main_material_cond_level = 23;
inline bool mdFactoryInfo::has_main_material_cond_level() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void mdFactoryInfo::set_has_main_material_cond_level() {
  _has_bits_[0] |= 0x00400000u;
}
inline void mdFactoryInfo::clear_has_main_material_cond_level() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void mdFactoryInfo::clear_main_material_cond_level() {
  main_material_cond_level_ = 0;
  clear_has_main_material_cond_level();
}
inline ::google::protobuf::int32 mdFactoryInfo::main_material_cond_level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFactoryInfo.main_material_cond_level)
  return main_material_cond_level_;
}
inline void mdFactoryInfo::set_main_material_cond_level(::google::protobuf::int32 value) {
  set_has_main_material_cond_level();
  main_material_cond_level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFactoryInfo.main_material_cond_level)
}

// required int32 main_material_count = 24;
inline bool mdFactoryInfo::has_main_material_count() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void mdFactoryInfo::set_has_main_material_count() {
  _has_bits_[0] |= 0x00800000u;
}
inline void mdFactoryInfo::clear_has_main_material_count() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void mdFactoryInfo::clear_main_material_count() {
  main_material_count_ = 0;
  clear_has_main_material_count();
}
inline ::google::protobuf::int32 mdFactoryInfo::main_material_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFactoryInfo.main_material_count)
  return main_material_count_;
}
inline void mdFactoryInfo::set_main_material_count(::google::protobuf::int32 value) {
  set_has_main_material_count();
  main_material_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFactoryInfo.main_material_count)
}

// required int32 main_material_fail_refund_rate = 25;
inline bool mdFactoryInfo::has_main_material_fail_refund_rate() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void mdFactoryInfo::set_has_main_material_fail_refund_rate() {
  _has_bits_[0] |= 0x01000000u;
}
inline void mdFactoryInfo::clear_has_main_material_fail_refund_rate() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void mdFactoryInfo::clear_main_material_fail_refund_rate() {
  main_material_fail_refund_rate_ = 0;
  clear_has_main_material_fail_refund_rate();
}
inline ::google::protobuf::int32 mdFactoryInfo::main_material_fail_refund_rate() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFactoryInfo.main_material_fail_refund_rate)
  return main_material_fail_refund_rate_;
}
inline void mdFactoryInfo::set_main_material_fail_refund_rate(::google::protobuf::int32 value) {
  set_has_main_material_fail_refund_rate();
  main_material_fail_refund_rate_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFactoryInfo.main_material_fail_refund_rate)
}

// required int32 material_template_id1 = 26;
inline bool mdFactoryInfo::has_material_template_id1() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void mdFactoryInfo::set_has_material_template_id1() {
  _has_bits_[0] |= 0x02000000u;
}
inline void mdFactoryInfo::clear_has_material_template_id1() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void mdFactoryInfo::clear_material_template_id1() {
  material_template_id1_ = 0;
  clear_has_material_template_id1();
}
inline ::google::protobuf::int32 mdFactoryInfo::material_template_id1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFactoryInfo.material_template_id1)
  return material_template_id1_;
}
inline void mdFactoryInfo::set_material_template_id1(::google::protobuf::int32 value) {
  set_has_material_template_id1();
  material_template_id1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFactoryInfo.material_template_id1)
}

// required int32 material_count1 = 27;
inline bool mdFactoryInfo::has_material_count1() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void mdFactoryInfo::set_has_material_count1() {
  _has_bits_[0] |= 0x04000000u;
}
inline void mdFactoryInfo::clear_has_material_count1() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void mdFactoryInfo::clear_material_count1() {
  material_count1_ = 0;
  clear_has_material_count1();
}
inline ::google::protobuf::int32 mdFactoryInfo::material_count1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFactoryInfo.material_count1)
  return material_count1_;
}
inline void mdFactoryInfo::set_material_count1(::google::protobuf::int32 value) {
  set_has_material_count1();
  material_count1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFactoryInfo.material_count1)
}

// required int32 material_fail_refund_rate1 = 28;
inline bool mdFactoryInfo::has_material_fail_refund_rate1() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void mdFactoryInfo::set_has_material_fail_refund_rate1() {
  _has_bits_[0] |= 0x08000000u;
}
inline void mdFactoryInfo::clear_has_material_fail_refund_rate1() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void mdFactoryInfo::clear_material_fail_refund_rate1() {
  material_fail_refund_rate1_ = 0;
  clear_has_material_fail_refund_rate1();
}
inline ::google::protobuf::int32 mdFactoryInfo::material_fail_refund_rate1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFactoryInfo.material_fail_refund_rate1)
  return material_fail_refund_rate1_;
}
inline void mdFactoryInfo::set_material_fail_refund_rate1(::google::protobuf::int32 value) {
  set_has_material_fail_refund_rate1();
  material_fail_refund_rate1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFactoryInfo.material_fail_refund_rate1)
}

// required int32 material_template_id2 = 29;
inline bool mdFactoryInfo::has_material_template_id2() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void mdFactoryInfo::set_has_material_template_id2() {
  _has_bits_[0] |= 0x10000000u;
}
inline void mdFactoryInfo::clear_has_material_template_id2() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void mdFactoryInfo::clear_material_template_id2() {
  material_template_id2_ = 0;
  clear_has_material_template_id2();
}
inline ::google::protobuf::int32 mdFactoryInfo::material_template_id2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFactoryInfo.material_template_id2)
  return material_template_id2_;
}
inline void mdFactoryInfo::set_material_template_id2(::google::protobuf::int32 value) {
  set_has_material_template_id2();
  material_template_id2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFactoryInfo.material_template_id2)
}

// required int32 material_count2 = 30;
inline bool mdFactoryInfo::has_material_count2() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void mdFactoryInfo::set_has_material_count2() {
  _has_bits_[0] |= 0x20000000u;
}
inline void mdFactoryInfo::clear_has_material_count2() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void mdFactoryInfo::clear_material_count2() {
  material_count2_ = 0;
  clear_has_material_count2();
}
inline ::google::protobuf::int32 mdFactoryInfo::material_count2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFactoryInfo.material_count2)
  return material_count2_;
}
inline void mdFactoryInfo::set_material_count2(::google::protobuf::int32 value) {
  set_has_material_count2();
  material_count2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFactoryInfo.material_count2)
}

// required int32 material_fail_refund_rate2 = 31;
inline bool mdFactoryInfo::has_material_fail_refund_rate2() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void mdFactoryInfo::set_has_material_fail_refund_rate2() {
  _has_bits_[0] |= 0x40000000u;
}
inline void mdFactoryInfo::clear_has_material_fail_refund_rate2() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void mdFactoryInfo::clear_material_fail_refund_rate2() {
  material_fail_refund_rate2_ = 0;
  clear_has_material_fail_refund_rate2();
}
inline ::google::protobuf::int32 mdFactoryInfo::material_fail_refund_rate2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFactoryInfo.material_fail_refund_rate2)
  return material_fail_refund_rate2_;
}
inline void mdFactoryInfo::set_material_fail_refund_rate2(::google::protobuf::int32 value) {
  set_has_material_fail_refund_rate2();
  material_fail_refund_rate2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFactoryInfo.material_fail_refund_rate2)
}

// required int32 material_template_id3 = 32;
inline bool mdFactoryInfo::has_material_template_id3() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void mdFactoryInfo::set_has_material_template_id3() {
  _has_bits_[0] |= 0x80000000u;
}
inline void mdFactoryInfo::clear_has_material_template_id3() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void mdFactoryInfo::clear_material_template_id3() {
  material_template_id3_ = 0;
  clear_has_material_template_id3();
}
inline ::google::protobuf::int32 mdFactoryInfo::material_template_id3() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFactoryInfo.material_template_id3)
  return material_template_id3_;
}
inline void mdFactoryInfo::set_material_template_id3(::google::protobuf::int32 value) {
  set_has_material_template_id3();
  material_template_id3_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFactoryInfo.material_template_id3)
}

// required int32 material_count3 = 33;
inline bool mdFactoryInfo::has_material_count3() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void mdFactoryInfo::set_has_material_count3() {
  _has_bits_[1] |= 0x00000001u;
}
inline void mdFactoryInfo::clear_has_material_count3() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void mdFactoryInfo::clear_material_count3() {
  material_count3_ = 0;
  clear_has_material_count3();
}
inline ::google::protobuf::int32 mdFactoryInfo::material_count3() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFactoryInfo.material_count3)
  return material_count3_;
}
inline void mdFactoryInfo::set_material_count3(::google::protobuf::int32 value) {
  set_has_material_count3();
  material_count3_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFactoryInfo.material_count3)
}

// required int32 material_fail_refund_rate3 = 34;
inline bool mdFactoryInfo::has_material_fail_refund_rate3() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void mdFactoryInfo::set_has_material_fail_refund_rate3() {
  _has_bits_[1] |= 0x00000002u;
}
inline void mdFactoryInfo::clear_has_material_fail_refund_rate3() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void mdFactoryInfo::clear_material_fail_refund_rate3() {
  material_fail_refund_rate3_ = 0;
  clear_has_material_fail_refund_rate3();
}
inline ::google::protobuf::int32 mdFactoryInfo::material_fail_refund_rate3() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFactoryInfo.material_fail_refund_rate3)
  return material_fail_refund_rate3_;
}
inline void mdFactoryInfo::set_material_fail_refund_rate3(::google::protobuf::int32 value) {
  set_has_material_fail_refund_rate3();
  material_fail_refund_rate3_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFactoryInfo.material_fail_refund_rate3)
}

// required int32 material_template_id4 = 35;
inline bool mdFactoryInfo::has_material_template_id4() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void mdFactoryInfo::set_has_material_template_id4() {
  _has_bits_[1] |= 0x00000004u;
}
inline void mdFactoryInfo::clear_has_material_template_id4() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void mdFactoryInfo::clear_material_template_id4() {
  material_template_id4_ = 0;
  clear_has_material_template_id4();
}
inline ::google::protobuf::int32 mdFactoryInfo::material_template_id4() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFactoryInfo.material_template_id4)
  return material_template_id4_;
}
inline void mdFactoryInfo::set_material_template_id4(::google::protobuf::int32 value) {
  set_has_material_template_id4();
  material_template_id4_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFactoryInfo.material_template_id4)
}

// required int32 material_count4 = 36;
inline bool mdFactoryInfo::has_material_count4() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void mdFactoryInfo::set_has_material_count4() {
  _has_bits_[1] |= 0x00000008u;
}
inline void mdFactoryInfo::clear_has_material_count4() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void mdFactoryInfo::clear_material_count4() {
  material_count4_ = 0;
  clear_has_material_count4();
}
inline ::google::protobuf::int32 mdFactoryInfo::material_count4() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFactoryInfo.material_count4)
  return material_count4_;
}
inline void mdFactoryInfo::set_material_count4(::google::protobuf::int32 value) {
  set_has_material_count4();
  material_count4_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFactoryInfo.material_count4)
}

// required int32 material_fail_refund_rate4 = 37;
inline bool mdFactoryInfo::has_material_fail_refund_rate4() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void mdFactoryInfo::set_has_material_fail_refund_rate4() {
  _has_bits_[1] |= 0x00000010u;
}
inline void mdFactoryInfo::clear_has_material_fail_refund_rate4() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void mdFactoryInfo::clear_material_fail_refund_rate4() {
  material_fail_refund_rate4_ = 0;
  clear_has_material_fail_refund_rate4();
}
inline ::google::protobuf::int32 mdFactoryInfo::material_fail_refund_rate4() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFactoryInfo.material_fail_refund_rate4)
  return material_fail_refund_rate4_;
}
inline void mdFactoryInfo::set_material_fail_refund_rate4(::google::protobuf::int32 value) {
  set_has_material_fail_refund_rate4();
  material_fail_refund_rate4_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFactoryInfo.material_fail_refund_rate4)
}

// required .b2.protocol.commondata.FactoryVisibleType visible_type = 38;
inline bool mdFactoryInfo::has_visible_type() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void mdFactoryInfo::set_has_visible_type() {
  _has_bits_[1] |= 0x00000020u;
}
inline void mdFactoryInfo::clear_has_visible_type() {
  _has_bits_[1] &= ~0x00000020u;
}
inline void mdFactoryInfo::clear_visible_type() {
  visible_type_ = 1;
  clear_has_visible_type();
}
inline ::b2::protocol::commondata::FactoryVisibleType mdFactoryInfo::visible_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFactoryInfo.visible_type)
  return static_cast< ::b2::protocol::commondata::FactoryVisibleType >(visible_type_);
}
inline void mdFactoryInfo::set_visible_type(::b2::protocol::commondata::FactoryVisibleType value) {
  assert(::b2::protocol::commondata::FactoryVisibleType_IsValid(value));
  set_has_visible_type();
  visible_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFactoryInfo.visible_type)
}

// -------------------------------------------------------------------

// mdFactoryMaterialTransInfo

// required int32 factory_id = 1;
inline bool mdFactoryMaterialTransInfo::has_factory_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdFactoryMaterialTransInfo::set_has_factory_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdFactoryMaterialTransInfo::clear_has_factory_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdFactoryMaterialTransInfo::clear_factory_id() {
  factory_id_ = 0;
  clear_has_factory_id();
}
inline ::google::protobuf::int32 mdFactoryMaterialTransInfo::factory_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFactoryMaterialTransInfo.factory_id)
  return factory_id_;
}
inline void mdFactoryMaterialTransInfo::set_factory_id(::google::protobuf::int32 value) {
  set_has_factory_id();
  factory_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFactoryMaterialTransInfo.factory_id)
}

// required int32 trans_main_material_template_id = 2;
inline bool mdFactoryMaterialTransInfo::has_trans_main_material_template_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdFactoryMaterialTransInfo::set_has_trans_main_material_template_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdFactoryMaterialTransInfo::clear_has_trans_main_material_template_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdFactoryMaterialTransInfo::clear_trans_main_material_template_id() {
  trans_main_material_template_id_ = 0;
  clear_has_trans_main_material_template_id();
}
inline ::google::protobuf::int32 mdFactoryMaterialTransInfo::trans_main_material_template_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFactoryMaterialTransInfo.trans_main_material_template_id)
  return trans_main_material_template_id_;
}
inline void mdFactoryMaterialTransInfo::set_trans_main_material_template_id(::google::protobuf::int32 value) {
  set_has_trans_main_material_template_id();
  trans_main_material_template_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFactoryMaterialTransInfo.trans_main_material_template_id)
}

// required int32 trans_main_material_count = 3;
inline bool mdFactoryMaterialTransInfo::has_trans_main_material_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdFactoryMaterialTransInfo::set_has_trans_main_material_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdFactoryMaterialTransInfo::clear_has_trans_main_material_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdFactoryMaterialTransInfo::clear_trans_main_material_count() {
  trans_main_material_count_ = 0;
  clear_has_trans_main_material_count();
}
inline ::google::protobuf::int32 mdFactoryMaterialTransInfo::trans_main_material_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFactoryMaterialTransInfo.trans_main_material_count)
  return trans_main_material_count_;
}
inline void mdFactoryMaterialTransInfo::set_trans_main_material_count(::google::protobuf::int32 value) {
  set_has_trans_main_material_count();
  trans_main_material_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFactoryMaterialTransInfo.trans_main_material_count)
}

// required int32 trans_material_template_id1 = 4;
inline bool mdFactoryMaterialTransInfo::has_trans_material_template_id1() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdFactoryMaterialTransInfo::set_has_trans_material_template_id1() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdFactoryMaterialTransInfo::clear_has_trans_material_template_id1() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdFactoryMaterialTransInfo::clear_trans_material_template_id1() {
  trans_material_template_id1_ = 0;
  clear_has_trans_material_template_id1();
}
inline ::google::protobuf::int32 mdFactoryMaterialTransInfo::trans_material_template_id1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFactoryMaterialTransInfo.trans_material_template_id1)
  return trans_material_template_id1_;
}
inline void mdFactoryMaterialTransInfo::set_trans_material_template_id1(::google::protobuf::int32 value) {
  set_has_trans_material_template_id1();
  trans_material_template_id1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFactoryMaterialTransInfo.trans_material_template_id1)
}

// required int32 trans_material_count1 = 5;
inline bool mdFactoryMaterialTransInfo::has_trans_material_count1() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdFactoryMaterialTransInfo::set_has_trans_material_count1() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdFactoryMaterialTransInfo::clear_has_trans_material_count1() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdFactoryMaterialTransInfo::clear_trans_material_count1() {
  trans_material_count1_ = 0;
  clear_has_trans_material_count1();
}
inline ::google::protobuf::int32 mdFactoryMaterialTransInfo::trans_material_count1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFactoryMaterialTransInfo.trans_material_count1)
  return trans_material_count1_;
}
inline void mdFactoryMaterialTransInfo::set_trans_material_count1(::google::protobuf::int32 value) {
  set_has_trans_material_count1();
  trans_material_count1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFactoryMaterialTransInfo.trans_material_count1)
}

// required int32 trans_material_template_id2 = 6;
inline bool mdFactoryMaterialTransInfo::has_trans_material_template_id2() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdFactoryMaterialTransInfo::set_has_trans_material_template_id2() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdFactoryMaterialTransInfo::clear_has_trans_material_template_id2() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdFactoryMaterialTransInfo::clear_trans_material_template_id2() {
  trans_material_template_id2_ = 0;
  clear_has_trans_material_template_id2();
}
inline ::google::protobuf::int32 mdFactoryMaterialTransInfo::trans_material_template_id2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFactoryMaterialTransInfo.trans_material_template_id2)
  return trans_material_template_id2_;
}
inline void mdFactoryMaterialTransInfo::set_trans_material_template_id2(::google::protobuf::int32 value) {
  set_has_trans_material_template_id2();
  trans_material_template_id2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFactoryMaterialTransInfo.trans_material_template_id2)
}

// required int32 trans_material_count2 = 7;
inline bool mdFactoryMaterialTransInfo::has_trans_material_count2() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mdFactoryMaterialTransInfo::set_has_trans_material_count2() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mdFactoryMaterialTransInfo::clear_has_trans_material_count2() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mdFactoryMaterialTransInfo::clear_trans_material_count2() {
  trans_material_count2_ = 0;
  clear_has_trans_material_count2();
}
inline ::google::protobuf::int32 mdFactoryMaterialTransInfo::trans_material_count2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFactoryMaterialTransInfo.trans_material_count2)
  return trans_material_count2_;
}
inline void mdFactoryMaterialTransInfo::set_trans_material_count2(::google::protobuf::int32 value) {
  set_has_trans_material_count2();
  trans_material_count2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFactoryMaterialTransInfo.trans_material_count2)
}

// required int32 trans_material_template_id3 = 8;
inline bool mdFactoryMaterialTransInfo::has_trans_material_template_id3() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void mdFactoryMaterialTransInfo::set_has_trans_material_template_id3() {
  _has_bits_[0] |= 0x00000080u;
}
inline void mdFactoryMaterialTransInfo::clear_has_trans_material_template_id3() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void mdFactoryMaterialTransInfo::clear_trans_material_template_id3() {
  trans_material_template_id3_ = 0;
  clear_has_trans_material_template_id3();
}
inline ::google::protobuf::int32 mdFactoryMaterialTransInfo::trans_material_template_id3() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFactoryMaterialTransInfo.trans_material_template_id3)
  return trans_material_template_id3_;
}
inline void mdFactoryMaterialTransInfo::set_trans_material_template_id3(::google::protobuf::int32 value) {
  set_has_trans_material_template_id3();
  trans_material_template_id3_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFactoryMaterialTransInfo.trans_material_template_id3)
}

// required int32 trans_material_count3 = 9;
inline bool mdFactoryMaterialTransInfo::has_trans_material_count3() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void mdFactoryMaterialTransInfo::set_has_trans_material_count3() {
  _has_bits_[0] |= 0x00000100u;
}
inline void mdFactoryMaterialTransInfo::clear_has_trans_material_count3() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void mdFactoryMaterialTransInfo::clear_trans_material_count3() {
  trans_material_count3_ = 0;
  clear_has_trans_material_count3();
}
inline ::google::protobuf::int32 mdFactoryMaterialTransInfo::trans_material_count3() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFactoryMaterialTransInfo.trans_material_count3)
  return trans_material_count3_;
}
inline void mdFactoryMaterialTransInfo::set_trans_material_count3(::google::protobuf::int32 value) {
  set_has_trans_material_count3();
  trans_material_count3_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFactoryMaterialTransInfo.trans_material_count3)
}

// required int32 trans_material_template_id4 = 10;
inline bool mdFactoryMaterialTransInfo::has_trans_material_template_id4() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void mdFactoryMaterialTransInfo::set_has_trans_material_template_id4() {
  _has_bits_[0] |= 0x00000200u;
}
inline void mdFactoryMaterialTransInfo::clear_has_trans_material_template_id4() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void mdFactoryMaterialTransInfo::clear_trans_material_template_id4() {
  trans_material_template_id4_ = 0;
  clear_has_trans_material_template_id4();
}
inline ::google::protobuf::int32 mdFactoryMaterialTransInfo::trans_material_template_id4() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFactoryMaterialTransInfo.trans_material_template_id4)
  return trans_material_template_id4_;
}
inline void mdFactoryMaterialTransInfo::set_trans_material_template_id4(::google::protobuf::int32 value) {
  set_has_trans_material_template_id4();
  trans_material_template_id4_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFactoryMaterialTransInfo.trans_material_template_id4)
}

// required int32 trans_material_count4 = 11;
inline bool mdFactoryMaterialTransInfo::has_trans_material_count4() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void mdFactoryMaterialTransInfo::set_has_trans_material_count4() {
  _has_bits_[0] |= 0x00000400u;
}
inline void mdFactoryMaterialTransInfo::clear_has_trans_material_count4() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void mdFactoryMaterialTransInfo::clear_trans_material_count4() {
  trans_material_count4_ = 0;
  clear_has_trans_material_count4();
}
inline ::google::protobuf::int32 mdFactoryMaterialTransInfo::trans_material_count4() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFactoryMaterialTransInfo.trans_material_count4)
  return trans_material_count4_;
}
inline void mdFactoryMaterialTransInfo::set_trans_material_count4(::google::protobuf::int32 value) {
  set_has_trans_material_count4();
  trans_material_count4_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFactoryMaterialTransInfo.trans_material_count4)
}

// -------------------------------------------------------------------

// mdFactoryLimitInfo

// required int32 id = 1;
inline bool mdFactoryLimitInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdFactoryLimitInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdFactoryLimitInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdFactoryLimitInfo::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 mdFactoryLimitInfo::id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFactoryLimitInfo.id)
  return id_;
}
inline void mdFactoryLimitInfo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFactoryLimitInfo.id)
}

// required .b2.protocol.commondata.FactoryLimitType limit_type = 2;
inline bool mdFactoryLimitInfo::has_limit_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdFactoryLimitInfo::set_has_limit_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdFactoryLimitInfo::clear_has_limit_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdFactoryLimitInfo::clear_limit_type() {
  limit_type_ = 1;
  clear_has_limit_type();
}
inline ::b2::protocol::commondata::FactoryLimitType mdFactoryLimitInfo::limit_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFactoryLimitInfo.limit_type)
  return static_cast< ::b2::protocol::commondata::FactoryLimitType >(limit_type_);
}
inline void mdFactoryLimitInfo::set_limit_type(::b2::protocol::commondata::FactoryLimitType value) {
  assert(::b2::protocol::commondata::FactoryLimitType_IsValid(value));
  set_has_limit_type();
  limit_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFactoryLimitInfo.limit_type)
}

// required int32 limit_count = 3;
inline bool mdFactoryLimitInfo::has_limit_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdFactoryLimitInfo::set_has_limit_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdFactoryLimitInfo::clear_has_limit_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdFactoryLimitInfo::clear_limit_count() {
  limit_count_ = 0;
  clear_has_limit_count();
}
inline ::google::protobuf::int32 mdFactoryLimitInfo::limit_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFactoryLimitInfo.limit_count)
  return limit_count_;
}
inline void mdFactoryLimitInfo::set_limit_count(::google::protobuf::int32 value) {
  set_has_limit_count();
  limit_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFactoryLimitInfo.limit_count)
}

// required .b2.protocol.commondata.FactoryLimitTimeType limit_time_type = 4;
inline bool mdFactoryLimitInfo::has_limit_time_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdFactoryLimitInfo::set_has_limit_time_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdFactoryLimitInfo::clear_has_limit_time_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdFactoryLimitInfo::clear_limit_time_type() {
  limit_time_type_ = 1;
  clear_has_limit_time_type();
}
inline ::b2::protocol::commondata::FactoryLimitTimeType mdFactoryLimitInfo::limit_time_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdFactoryLimitInfo.limit_time_type)
  return static_cast< ::b2::protocol::commondata::FactoryLimitTimeType >(limit_time_type_);
}
inline void mdFactoryLimitInfo::set_limit_time_type(::b2::protocol::commondata::FactoryLimitTimeType value) {
  assert(::b2::protocol::commondata::FactoryLimitTimeType_IsValid(value));
  set_has_limit_time_type();
  limit_time_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdFactoryLimitInfo.limit_time_type)
}

// -------------------------------------------------------------------

// mdSealBoxInfo

// required int32 seal_box_template_id = 1;
inline bool mdSealBoxInfo::has_seal_box_template_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdSealBoxInfo::set_has_seal_box_template_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdSealBoxInfo::clear_has_seal_box_template_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdSealBoxInfo::clear_seal_box_template_id() {
  seal_box_template_id_ = 0;
  clear_has_seal_box_template_id();
}
inline ::google::protobuf::int32 mdSealBoxInfo::seal_box_template_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSealBoxInfo.seal_box_template_id)
  return seal_box_template_id_;
}
inline void mdSealBoxInfo::set_seal_box_template_id(::google::protobuf::int32 value) {
  set_has_seal_box_template_id();
  seal_box_template_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSealBoxInfo.seal_box_template_id)
}

// required int32 reward_slot1 = 2;
inline bool mdSealBoxInfo::has_reward_slot1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdSealBoxInfo::set_has_reward_slot1() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdSealBoxInfo::clear_has_reward_slot1() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdSealBoxInfo::clear_reward_slot1() {
  reward_slot1_ = 0;
  clear_has_reward_slot1();
}
inline ::google::protobuf::int32 mdSealBoxInfo::reward_slot1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSealBoxInfo.reward_slot1)
  return reward_slot1_;
}
inline void mdSealBoxInfo::set_reward_slot1(::google::protobuf::int32 value) {
  set_has_reward_slot1();
  reward_slot1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSealBoxInfo.reward_slot1)
}

// required int32 reward_slot2 = 3;
inline bool mdSealBoxInfo::has_reward_slot2() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdSealBoxInfo::set_has_reward_slot2() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdSealBoxInfo::clear_has_reward_slot2() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdSealBoxInfo::clear_reward_slot2() {
  reward_slot2_ = 0;
  clear_has_reward_slot2();
}
inline ::google::protobuf::int32 mdSealBoxInfo::reward_slot2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSealBoxInfo.reward_slot2)
  return reward_slot2_;
}
inline void mdSealBoxInfo::set_reward_slot2(::google::protobuf::int32 value) {
  set_has_reward_slot2();
  reward_slot2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSealBoxInfo.reward_slot2)
}

// required int32 reward_slot3 = 4;
inline bool mdSealBoxInfo::has_reward_slot3() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdSealBoxInfo::set_has_reward_slot3() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdSealBoxInfo::clear_has_reward_slot3() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdSealBoxInfo::clear_reward_slot3() {
  reward_slot3_ = 0;
  clear_has_reward_slot3();
}
inline ::google::protobuf::int32 mdSealBoxInfo::reward_slot3() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSealBoxInfo.reward_slot3)
  return reward_slot3_;
}
inline void mdSealBoxInfo::set_reward_slot3(::google::protobuf::int32 value) {
  set_has_reward_slot3();
  reward_slot3_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSealBoxInfo.reward_slot3)
}

// required int32 reward_slot4 = 5;
inline bool mdSealBoxInfo::has_reward_slot4() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdSealBoxInfo::set_has_reward_slot4() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdSealBoxInfo::clear_has_reward_slot4() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdSealBoxInfo::clear_reward_slot4() {
  reward_slot4_ = 0;
  clear_has_reward_slot4();
}
inline ::google::protobuf::int32 mdSealBoxInfo::reward_slot4() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSealBoxInfo.reward_slot4)
  return reward_slot4_;
}
inline void mdSealBoxInfo::set_reward_slot4(::google::protobuf::int32 value) {
  set_has_reward_slot4();
  reward_slot4_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSealBoxInfo.reward_slot4)
}

// required int32 reward_slot5 = 6;
inline bool mdSealBoxInfo::has_reward_slot5() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdSealBoxInfo::set_has_reward_slot5() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdSealBoxInfo::clear_has_reward_slot5() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdSealBoxInfo::clear_reward_slot5() {
  reward_slot5_ = 0;
  clear_has_reward_slot5();
}
inline ::google::protobuf::int32 mdSealBoxInfo::reward_slot5() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSealBoxInfo.reward_slot5)
  return reward_slot5_;
}
inline void mdSealBoxInfo::set_reward_slot5(::google::protobuf::int32 value) {
  set_has_reward_slot5();
  reward_slot5_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSealBoxInfo.reward_slot5)
}

// required bool is_rate_visible = 7;
inline bool mdSealBoxInfo::has_is_rate_visible() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mdSealBoxInfo::set_has_is_rate_visible() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mdSealBoxInfo::clear_has_is_rate_visible() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mdSealBoxInfo::clear_is_rate_visible() {
  is_rate_visible_ = false;
  clear_has_is_rate_visible();
}
inline bool mdSealBoxInfo::is_rate_visible() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSealBoxInfo.is_rate_visible)
  return is_rate_visible_;
}
inline void mdSealBoxInfo::set_is_rate_visible(bool value) {
  set_has_is_rate_visible();
  is_rate_visible_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSealBoxInfo.is_rate_visible)
}

// -------------------------------------------------------------------

// mdSealBoxRewardInfo

// required int32 seal_box_reward_id = 1;
inline bool mdSealBoxRewardInfo::has_seal_box_reward_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdSealBoxRewardInfo::set_has_seal_box_reward_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdSealBoxRewardInfo::clear_has_seal_box_reward_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdSealBoxRewardInfo::clear_seal_box_reward_id() {
  seal_box_reward_id_ = 0;
  clear_has_seal_box_reward_id();
}
inline ::google::protobuf::int32 mdSealBoxRewardInfo::seal_box_reward_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSealBoxRewardInfo.seal_box_reward_id)
  return seal_box_reward_id_;
}
inline void mdSealBoxRewardInfo::set_seal_box_reward_id(::google::protobuf::int32 value) {
  set_has_seal_box_reward_id();
  seal_box_reward_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSealBoxRewardInfo.seal_box_reward_id)
}

// required int32 min_fixed_count = 2;
inline bool mdSealBoxRewardInfo::has_min_fixed_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdSealBoxRewardInfo::set_has_min_fixed_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdSealBoxRewardInfo::clear_has_min_fixed_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdSealBoxRewardInfo::clear_min_fixed_count() {
  min_fixed_count_ = 0;
  clear_has_min_fixed_count();
}
inline ::google::protobuf::int32 mdSealBoxRewardInfo::min_fixed_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSealBoxRewardInfo.min_fixed_count)
  return min_fixed_count_;
}
inline void mdSealBoxRewardInfo::set_min_fixed_count(::google::protobuf::int32 value) {
  set_has_min_fixed_count();
  min_fixed_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSealBoxRewardInfo.min_fixed_count)
}

// required int32 max_fixed_count = 3;
inline bool mdSealBoxRewardInfo::has_max_fixed_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdSealBoxRewardInfo::set_has_max_fixed_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdSealBoxRewardInfo::clear_has_max_fixed_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdSealBoxRewardInfo::clear_max_fixed_count() {
  max_fixed_count_ = 0;
  clear_has_max_fixed_count();
}
inline ::google::protobuf::int32 mdSealBoxRewardInfo::max_fixed_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSealBoxRewardInfo.max_fixed_count)
  return max_fixed_count_;
}
inline void mdSealBoxRewardInfo::set_max_fixed_count(::google::protobuf::int32 value) {
  set_has_max_fixed_count();
  max_fixed_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSealBoxRewardInfo.max_fixed_count)
}

// required bool is_recycle = 4;
inline bool mdSealBoxRewardInfo::has_is_recycle() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdSealBoxRewardInfo::set_has_is_recycle() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdSealBoxRewardInfo::clear_has_is_recycle() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdSealBoxRewardInfo::clear_is_recycle() {
  is_recycle_ = false;
  clear_has_is_recycle();
}
inline bool mdSealBoxRewardInfo::is_recycle() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSealBoxRewardInfo.is_recycle)
  return is_recycle_;
}
inline void mdSealBoxRewardInfo::set_is_recycle(bool value) {
  set_has_is_recycle();
  is_recycle_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSealBoxRewardInfo.is_recycle)
}

// -------------------------------------------------------------------

// mdSealBoxRewardRateInfo

// required int32 seal_box_reward_id = 1;
inline bool mdSealBoxRewardRateInfo::has_seal_box_reward_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mdSealBoxRewardRateInfo::set_has_seal_box_reward_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mdSealBoxRewardRateInfo::clear_has_seal_box_reward_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mdSealBoxRewardRateInfo::clear_seal_box_reward_id() {
  seal_box_reward_id_ = 0;
  clear_has_seal_box_reward_id();
}
inline ::google::protobuf::int32 mdSealBoxRewardRateInfo::seal_box_reward_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSealBoxRewardRateInfo.seal_box_reward_id)
  return seal_box_reward_id_;
}
inline void mdSealBoxRewardRateInfo::set_seal_box_reward_id(::google::protobuf::int32 value) {
  set_has_seal_box_reward_id();
  seal_box_reward_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSealBoxRewardRateInfo.seal_box_reward_id)
}

// required .b2.protocol.commondata.RewardType reward_type = 2;
inline bool mdSealBoxRewardRateInfo::has_reward_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mdSealBoxRewardRateInfo::set_has_reward_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mdSealBoxRewardRateInfo::clear_has_reward_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mdSealBoxRewardRateInfo::clear_reward_type() {
  reward_type_ = 1;
  clear_has_reward_type();
}
inline ::b2::protocol::commondata::RewardType mdSealBoxRewardRateInfo::reward_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSealBoxRewardRateInfo.reward_type)
  return static_cast< ::b2::protocol::commondata::RewardType >(reward_type_);
}
inline void mdSealBoxRewardRateInfo::set_reward_type(::b2::protocol::commondata::RewardType value) {
  assert(::b2::protocol::commondata::RewardType_IsValid(value));
  set_has_reward_type();
  reward_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSealBoxRewardRateInfo.reward_type)
}

// required int32 template_id = 3;
inline bool mdSealBoxRewardRateInfo::has_template_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mdSealBoxRewardRateInfo::set_has_template_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mdSealBoxRewardRateInfo::clear_has_template_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mdSealBoxRewardRateInfo::clear_template_id() {
  template_id_ = 0;
  clear_has_template_id();
}
inline ::google::protobuf::int32 mdSealBoxRewardRateInfo::template_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSealBoxRewardRateInfo.template_id)
  return template_id_;
}
inline void mdSealBoxRewardRateInfo::set_template_id(::google::protobuf::int32 value) {
  set_has_template_id();
  template_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSealBoxRewardRateInfo.template_id)
}

// required int32 min_amount = 4;
inline bool mdSealBoxRewardRateInfo::has_min_amount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mdSealBoxRewardRateInfo::set_has_min_amount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mdSealBoxRewardRateInfo::clear_has_min_amount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mdSealBoxRewardRateInfo::clear_min_amount() {
  min_amount_ = 0;
  clear_has_min_amount();
}
inline ::google::protobuf::int32 mdSealBoxRewardRateInfo::min_amount() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSealBoxRewardRateInfo.min_amount)
  return min_amount_;
}
inline void mdSealBoxRewardRateInfo::set_min_amount(::google::protobuf::int32 value) {
  set_has_min_amount();
  min_amount_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSealBoxRewardRateInfo.min_amount)
}

// required int32 max_amount = 5;
inline bool mdSealBoxRewardRateInfo::has_max_amount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mdSealBoxRewardRateInfo::set_has_max_amount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mdSealBoxRewardRateInfo::clear_has_max_amount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mdSealBoxRewardRateInfo::clear_max_amount() {
  max_amount_ = 0;
  clear_has_max_amount();
}
inline ::google::protobuf::int32 mdSealBoxRewardRateInfo::max_amount() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSealBoxRewardRateInfo.max_amount)
  return max_amount_;
}
inline void mdSealBoxRewardRateInfo::set_max_amount(::google::protobuf::int32 value) {
  set_has_max_amount();
  max_amount_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSealBoxRewardRateInfo.max_amount)
}

// required int32 grade = 6;
inline bool mdSealBoxRewardRateInfo::has_grade() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mdSealBoxRewardRateInfo::set_has_grade() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mdSealBoxRewardRateInfo::clear_has_grade() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mdSealBoxRewardRateInfo::clear_grade() {
  grade_ = 0;
  clear_has_grade();
}
inline ::google::protobuf::int32 mdSealBoxRewardRateInfo::grade() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSealBoxRewardRateInfo.grade)
  return grade_;
}
inline void mdSealBoxRewardRateInfo::set_grade(::google::protobuf::int32 value) {
  set_has_grade();
  grade_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSealBoxRewardRateInfo.grade)
}

// required .b2.protocol.commondata.GroupPrefix group_id = 7;
inline bool mdSealBoxRewardRateInfo::has_group_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mdSealBoxRewardRateInfo::set_has_group_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mdSealBoxRewardRateInfo::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mdSealBoxRewardRateInfo::clear_group_id() {
  group_id_ = 1;
  clear_has_group_id();
}
inline ::b2::protocol::commondata::GroupPrefix mdSealBoxRewardRateInfo::group_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSealBoxRewardRateInfo.group_id)
  return static_cast< ::b2::protocol::commondata::GroupPrefix >(group_id_);
}
inline void mdSealBoxRewardRateInfo::set_group_id(::b2::protocol::commondata::GroupPrefix value) {
  assert(::b2::protocol::commondata::GroupPrefix_IsValid(value));
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSealBoxRewardRateInfo.group_id)
}

// required .b2.protocol.commondata.EquipCategory equip_category = 8;
inline bool mdSealBoxRewardRateInfo::has_equip_category() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void mdSealBoxRewardRateInfo::set_has_equip_category() {
  _has_bits_[0] |= 0x00000080u;
}
inline void mdSealBoxRewardRateInfo::clear_has_equip_category() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void mdSealBoxRewardRateInfo::clear_equip_category() {
  equip_category_ = 0;
  clear_has_equip_category();
}
inline ::b2::protocol::commondata::EquipCategory mdSealBoxRewardRateInfo::equip_category() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSealBoxRewardRateInfo.equip_category)
  return static_cast< ::b2::protocol::commondata::EquipCategory >(equip_category_);
}
inline void mdSealBoxRewardRateInfo::set_equip_category(::b2::protocol::commondata::EquipCategory value) {
  assert(::b2::protocol::commondata::EquipCategory_IsValid(value));
  set_has_equip_category();
  equip_category_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSealBoxRewardRateInfo.equip_category)
}

// required .b2.protocol.commondata.EquipPosition equip_position = 9;
inline bool mdSealBoxRewardRateInfo::has_equip_position() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void mdSealBoxRewardRateInfo::set_has_equip_position() {
  _has_bits_[0] |= 0x00000100u;
}
inline void mdSealBoxRewardRateInfo::clear_has_equip_position() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void mdSealBoxRewardRateInfo::clear_equip_position() {
  equip_position_ = 0;
  clear_has_equip_position();
}
inline ::b2::protocol::commondata::EquipPosition mdSealBoxRewardRateInfo::equip_position() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSealBoxRewardRateInfo.equip_position)
  return static_cast< ::b2::protocol::commondata::EquipPosition >(equip_position_);
}
inline void mdSealBoxRewardRateInfo::set_equip_position(::b2::protocol::commondata::EquipPosition value) {
  assert(::b2::protocol::commondata::EquipPosition_IsValid(value));
  set_has_equip_position();
  equip_position_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSealBoxRewardRateInfo.equip_position)
}

// required int32 quality = 10;
inline bool mdSealBoxRewardRateInfo::has_quality() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void mdSealBoxRewardRateInfo::set_has_quality() {
  _has_bits_[0] |= 0x00000200u;
}
inline void mdSealBoxRewardRateInfo::clear_has_quality() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void mdSealBoxRewardRateInfo::clear_quality() {
  quality_ = 0;
  clear_has_quality();
}
inline ::google::protobuf::int32 mdSealBoxRewardRateInfo::quality() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSealBoxRewardRateInfo.quality)
  return quality_;
}
inline void mdSealBoxRewardRateInfo::set_quality(::google::protobuf::int32 value) {
  set_has_quality();
  quality_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSealBoxRewardRateInfo.quality)
}

// required int32 enhance_level = 11;
inline bool mdSealBoxRewardRateInfo::has_enhance_level() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void mdSealBoxRewardRateInfo::set_has_enhance_level() {
  _has_bits_[0] |= 0x00000400u;
}
inline void mdSealBoxRewardRateInfo::clear_has_enhance_level() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void mdSealBoxRewardRateInfo::clear_enhance_level() {
  enhance_level_ = 0;
  clear_has_enhance_level();
}
inline ::google::protobuf::int32 mdSealBoxRewardRateInfo::enhance_level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSealBoxRewardRateInfo.enhance_level)
  return enhance_level_;
}
inline void mdSealBoxRewardRateInfo::set_enhance_level(::google::protobuf::int32 value) {
  set_has_enhance_level();
  enhance_level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSealBoxRewardRateInfo.enhance_level)
}

// required int32 surpass_count = 12;
inline bool mdSealBoxRewardRateInfo::has_surpass_count() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void mdSealBoxRewardRateInfo::set_has_surpass_count() {
  _has_bits_[0] |= 0x00000800u;
}
inline void mdSealBoxRewardRateInfo::clear_has_surpass_count() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void mdSealBoxRewardRateInfo::clear_surpass_count() {
  surpass_count_ = 0;
  clear_has_surpass_count();
}
inline ::google::protobuf::int32 mdSealBoxRewardRateInfo::surpass_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSealBoxRewardRateInfo.surpass_count)
  return surpass_count_;
}
inline void mdSealBoxRewardRateInfo::set_surpass_count(::google::protobuf::int32 value) {
  set_has_surpass_count();
  surpass_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSealBoxRewardRateInfo.surpass_count)
}

// required int32 reward_rate = 13;
inline bool mdSealBoxRewardRateInfo::has_reward_rate() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void mdSealBoxRewardRateInfo::set_has_reward_rate() {
  _has_bits_[0] |= 0x00001000u;
}
inline void mdSealBoxRewardRateInfo::clear_has_reward_rate() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void mdSealBoxRewardRateInfo::clear_reward_rate() {
  reward_rate_ = 0;
  clear_has_reward_rate();
}
inline ::google::protobuf::int32 mdSealBoxRewardRateInfo::reward_rate() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSealBoxRewardRateInfo.reward_rate)
  return reward_rate_;
}
inline void mdSealBoxRewardRateInfo::set_reward_rate(::google::protobuf::int32 value) {
  set_has_reward_rate();
  reward_rate_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSealBoxRewardRateInfo.reward_rate)
}

// required bool is_fixed_reward = 14;
inline bool mdSealBoxRewardRateInfo::has_is_fixed_reward() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void mdSealBoxRewardRateInfo::set_has_is_fixed_reward() {
  _has_bits_[0] |= 0x00002000u;
}
inline void mdSealBoxRewardRateInfo::clear_has_is_fixed_reward() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void mdSealBoxRewardRateInfo::clear_is_fixed_reward() {
  is_fixed_reward_ = false;
  clear_has_is_fixed_reward();
}
inline bool mdSealBoxRewardRateInfo::is_fixed_reward() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSealBoxRewardRateInfo.is_fixed_reward)
  return is_fixed_reward_;
}
inline void mdSealBoxRewardRateInfo::set_is_fixed_reward(bool value) {
  set_has_is_fixed_reward();
  is_fixed_reward_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSealBoxRewardRateInfo.is_fixed_reward)
}

// required int32 fixed_reward_rate = 15;
inline bool mdSealBoxRewardRateInfo::has_fixed_reward_rate() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void mdSealBoxRewardRateInfo::set_has_fixed_reward_rate() {
  _has_bits_[0] |= 0x00004000u;
}
inline void mdSealBoxRewardRateInfo::clear_has_fixed_reward_rate() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void mdSealBoxRewardRateInfo::clear_fixed_reward_rate() {
  fixed_reward_rate_ = 0;
  clear_has_fixed_reward_rate();
}
inline ::google::protobuf::int32 mdSealBoxRewardRateInfo::fixed_reward_rate() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSealBoxRewardRateInfo.fixed_reward_rate)
  return fixed_reward_rate_;
}
inline void mdSealBoxRewardRateInfo::set_fixed_reward_rate(::google::protobuf::int32 value) {
  set_has_fixed_reward_rate();
  fixed_reward_rate_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSealBoxRewardRateInfo.fixed_reward_rate)
}

// required int32 effect_grade = 16;
inline bool mdSealBoxRewardRateInfo::has_effect_grade() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void mdSealBoxRewardRateInfo::set_has_effect_grade() {
  _has_bits_[0] |= 0x00008000u;
}
inline void mdSealBoxRewardRateInfo::clear_has_effect_grade() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void mdSealBoxRewardRateInfo::clear_effect_grade() {
  effect_grade_ = 0;
  clear_has_effect_grade();
}
inline ::google::protobuf::int32 mdSealBoxRewardRateInfo::effect_grade() const {
  // @@protoc_insertion_point(field_get:b2.protocol.masterdata.mdSealBoxRewardRateInfo.effect_grade)
  return effect_grade_;
}
inline void mdSealBoxRewardRateInfo::set_effect_grade(::google::protobuf::int32 value) {
  set_has_effect_grade();
  effect_grade_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.masterdata.mdSealBoxRewardRateInfo.effect_grade)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace masterdata
}  // namespace protocol
}  // namespace b2

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::b2::protocol::masterdata::mdCounterDungeon_TYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::masterdata::mdCounterDungeon_TYPE>() {
  return ::b2::protocol::masterdata::mdCounterDungeon_TYPE_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::masterdata::mdCounterDungeon_DIFFICULTY> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::masterdata::mdCounterDungeon_DIFFICULTY>() {
  return ::b2::protocol::masterdata::mdCounterDungeon_DIFFICULTY_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::masterdata::mdGuildMercenaryDonation_DonationType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::masterdata::mdGuildMercenaryDonation_DonationType>() {
  return ::b2::protocol::masterdata::mdGuildMercenaryDonation_DonationType_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::masterdata::mdEventAttendance_BonusType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::masterdata::mdEventAttendance_BonusType>() {
  return ::b2::protocol::masterdata::mdEventAttendance_BonusType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MasterData_2eproto__INCLUDED
