// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CommonData.proto

#ifndef PROTOBUF_CommonData_2eproto__INCLUDED
#define PROTOBUF_CommonData_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

#ifdef TUTORIAL
#undef TUTORIAL
#endif

namespace b2 {
namespace protocol {
namespace commondata {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_CommonData_2eproto();
void protobuf_AssignDesc_CommonData_2eproto();
void protobuf_ShutdownFile_CommonData_2eproto();

class Result;
class Version;
class Protocol;
class Credential;
class Endpoint;
class AccountBlockInfo;
class GlobalAccount;
class WorldAccount;
class LightAccount;
class AccountInfo;
class PresetNum;
class Character;
class LightCharacter;
class CharacterSummary;
class User;
class Friend;
class FriendInviteRewardInfo;
class Item;
class SealSlotState;
class Costume;
class Totem;
class TotemSubOptionDetail;
class TotemRefineState;
class Inventory;
class InventoryCountInfo;
class ItemPreset;
class Aether;
class CharacterSetOptionInfo;
class SkillQuickSlot;
class Skill;
class RawReward;
class Reward;
class RewardRandomCount;
class QuestInfo;
class MissionInfo;
class MissionCompletePointInfo;
class Guild;
class GuildRanking;
class GuildMember;
class GuildMemberCandidate;
class BattleFormation;
class BattleFormationBuff;
class GuildBattleEntry;
class GuildBattleEntry_SlotData;
class GuildBattleResult;
class GuildBattleState;
class GuildBattleHistory;
class GuildBattleRecord;
class GuildSkill;
class GuildInfo;
class GuildMercenary;
class MatchMaking;
class Invitation;
class MatchInfo;
class MatchStatus;
class Ranking;
class MatchRanker;
class MatchRanker_Entry;
class RankingReward;
class DimensionRankingReward;
class DimensionStatus;
class Room;
class RoomLocation;
class TeamBattleEntry;
class MatchOpenPeriodInfo;
class KillMonsterInfo;
class DropData;
class MailItemInfo;
class WingOption;
class FairyStatus;
class Relic;
class RollingBanner;
class ConfigData;
class Shop;
class Shop_PeriodicPackageState;
class Shop_FlatRatePackageBonusState;
class Shop_LevelUpPackageMission;
class Shop_ReachLevelPackageMission;
class Shop_BuyResultInfo;
class MagicShop;
class ShopLottery;
class ShopProduct;
class ShopMileage;
class ShopBuyManage;
class ShopProductMark;
class MarketPurchaseInfo;
class CollectionItem;
class CollectionSetItem;
class RaidRankingReward;
class EventAttendanceStatus;
class BeginnerAttendanceStatus;
class DuelRewardBoxStatus;
class MatchResult;
class UnitySkillMission;
class UnitySkill;
class UnitySkillAwakenMission;
class ContentsModeInfo;
class ContentsOpen;
class CharacterPower;
class AssaultBattleInfo;
class RoomCharacter;
class AdminMessage;
class PointEventStatus;
class PointShopEventStatus;
class PointShopEventRewardHistory;
class GemPurchaseEventStatus;
class LevelUpEventInfo;
class SeasonMissionInfo;
class SeasonMissionEventStatus;
class StageClearEventStatus;
class BlockChatUser;
class TenLotteryEventStatus;
class HallOfFame;
class HallOfFameUser;
class HallOfFameReward;
class HallOfFamePraise;
class SpendGemEventStatus;
class TenLotterySavingsStatus;
class DiceEventMission;
class DiceEventStatus;
class DonationPointRewardState;
class DonationPresent;
class DonationJobState;
class FactoryLimitStatus;
class FactoryPeriodicStatus;
class FactoryResult;
class UnsealBoxReward;
class WorldLocation;

enum GlobalAccount_TYPE {
  GlobalAccount_TYPE_NORMAL = 0,
  GlobalAccount_TYPE_BOT = 9,
  GlobalAccount_TYPE_QA = 10,
  GlobalAccount_TYPE_GM = 20,
  GlobalAccount_TYPE_ADMIN = 30
};
bool GlobalAccount_TYPE_IsValid(int value);
const GlobalAccount_TYPE GlobalAccount_TYPE_TYPE_MIN = GlobalAccount_TYPE_NORMAL;
const GlobalAccount_TYPE GlobalAccount_TYPE_TYPE_MAX = GlobalAccount_TYPE_ADMIN;
const int GlobalAccount_TYPE_TYPE_ARRAYSIZE = GlobalAccount_TYPE_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* GlobalAccount_TYPE_descriptor();
inline const ::std::string& GlobalAccount_TYPE_Name(GlobalAccount_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    GlobalAccount_TYPE_descriptor(), value);
}
inline bool GlobalAccount_TYPE_Parse(
    const ::std::string& name, GlobalAccount_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GlobalAccount_TYPE>(
    GlobalAccount_TYPE_descriptor(), name, value);
}
enum GlobalAccount_STATUS {
  GlobalAccount_STATUS_STATUS_NORMAL = 0,
  GlobalAccount_STATUS_STATUS_WITHDRAWAL_WAIT = 98,
  GlobalAccount_STATUS_STATUS_WITHDRAWAL = 99
};
bool GlobalAccount_STATUS_IsValid(int value);
const GlobalAccount_STATUS GlobalAccount_STATUS_STATUS_MIN = GlobalAccount_STATUS_STATUS_NORMAL;
const GlobalAccount_STATUS GlobalAccount_STATUS_STATUS_MAX = GlobalAccount_STATUS_STATUS_WITHDRAWAL;
const int GlobalAccount_STATUS_STATUS_ARRAYSIZE = GlobalAccount_STATUS_STATUS_MAX + 1;

const ::google::protobuf::EnumDescriptor* GlobalAccount_STATUS_descriptor();
inline const ::std::string& GlobalAccount_STATUS_Name(GlobalAccount_STATUS value) {
  return ::google::protobuf::internal::NameOfEnum(
    GlobalAccount_STATUS_descriptor(), value);
}
inline bool GlobalAccount_STATUS_Parse(
    const ::std::string& name, GlobalAccount_STATUS* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GlobalAccount_STATUS>(
    GlobalAccount_STATUS_descriptor(), name, value);
}
enum Character_TYPE {
  Character_TYPE_GLADIATOR = 1,
  Character_TYPE_ASSASSIN = 2,
  Character_TYPE_WIZARD = 3,
  Character_TYPE_FIGHTER = 4
};
bool Character_TYPE_IsValid(int value);
const Character_TYPE Character_TYPE_TYPE_MIN = Character_TYPE_GLADIATOR;
const Character_TYPE Character_TYPE_TYPE_MAX = Character_TYPE_FIGHTER;
const int Character_TYPE_TYPE_ARRAYSIZE = Character_TYPE_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* Character_TYPE_descriptor();
inline const ::std::string& Character_TYPE_Name(Character_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    Character_TYPE_descriptor(), value);
}
inline bool Character_TYPE_Parse(
    const ::std::string& name, Character_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Character_TYPE>(
    Character_TYPE_descriptor(), name, value);
}
enum LightCharacter_TYPE {
  LightCharacter_TYPE_GLADIATOR = 1,
  LightCharacter_TYPE_ASSASSIN = 2,
  LightCharacter_TYPE_WIZARD = 3,
  LightCharacter_TYPE_FIGHTER = 4
};
bool LightCharacter_TYPE_IsValid(int value);
const LightCharacter_TYPE LightCharacter_TYPE_TYPE_MIN = LightCharacter_TYPE_GLADIATOR;
const LightCharacter_TYPE LightCharacter_TYPE_TYPE_MAX = LightCharacter_TYPE_FIGHTER;
const int LightCharacter_TYPE_TYPE_ARRAYSIZE = LightCharacter_TYPE_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* LightCharacter_TYPE_descriptor();
inline const ::std::string& LightCharacter_TYPE_Name(LightCharacter_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    LightCharacter_TYPE_descriptor(), value);
}
inline bool LightCharacter_TYPE_Parse(
    const ::std::string& name, LightCharacter_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LightCharacter_TYPE>(
    LightCharacter_TYPE_descriptor(), name, value);
}
enum Item_TYPE {
  Item_TYPE_WEAPON = 1,
  Item_TYPE_HAT = 2,
  Item_TYPE_ARMOR = 3,
  Item_TYPE_GLOVE = 4,
  Item_TYPE_SHOES = 5,
  Item_TYPE_BELT = 6,
  Item_TYPE_NECK = 7,
  Item_TYPE_RING = 8,
  Item_TYPE_MATERIAL = 9,
  Item_TYPE_GOODS = 10,
  Item_TYPE_UPGRADE_STONE = 11,
  Item_TYPE_ENHANCE_SCROLL = 12,
  Item_TYPE_BLESSED_ENHANCE_SCROLL = 13,
  Item_TYPE_PROTECTION_SCROLL = 14,
  Item_TYPE_BOSS_PIECE = 15,
  Item_TYPE_WEAPON_ESSENCE = 16,
  Item_TYPE_ARMOR_ESSENCE = 17,
  Item_TYPE_ACCESSORY_ESSENCE = 18,
  Item_TYPE_RANK_PROMOTION_POINT = 19,
  Item_TYPE_HERO_PIECE = 20,
  Item_TYPE_AETHER_PIECE = 21,
  Item_TYPE_DISMANTLE_MATERIAL = 22,
  Item_TYPE_DIMENSIONAL_PIECE = 23,
  Item_TYPE_COSTUME_ENHANCE_MATERIAL = 24,
  Item_TYPE_WEAPON_SURPASS_ANVIL = 25,
  Item_TYPE_ARMOR_SURPASS_ANVIL = 26,
  Item_TYPE_ACCESSORY_SURPASS_ANVIL = 27,
  Item_TYPE_SEAL_BOX = 28,
  Item_TYPE_ADVANCED_RANK_PROMOTION_POINT = 29,
  Item_TYPE_GOLD = 100
};
bool Item_TYPE_IsValid(int value);
const Item_TYPE Item_TYPE_TYPE_MIN = Item_TYPE_WEAPON;
const Item_TYPE Item_TYPE_TYPE_MAX = Item_TYPE_GOLD;
const int Item_TYPE_TYPE_ARRAYSIZE = Item_TYPE_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* Item_TYPE_descriptor();
inline const ::std::string& Item_TYPE_Name(Item_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    Item_TYPE_descriptor(), value);
}
inline bool Item_TYPE_Parse(
    const ::std::string& name, Item_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Item_TYPE>(
    Item_TYPE_descriptor(), name, value);
}
enum Item_CharacterType {
  Item_CharacterType_COMMON = 0,
  Item_CharacterType_GLADIATOR = 1,
  Item_CharacterType_ASSASSIN = 2,
  Item_CharacterType_WIZARD = 3,
  Item_CharacterType_FIGHTER = 4
};
bool Item_CharacterType_IsValid(int value);
const Item_CharacterType Item_CharacterType_CharacterType_MIN = Item_CharacterType_COMMON;
const Item_CharacterType Item_CharacterType_CharacterType_MAX = Item_CharacterType_FIGHTER;
const int Item_CharacterType_CharacterType_ARRAYSIZE = Item_CharacterType_CharacterType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Item_CharacterType_descriptor();
inline const ::std::string& Item_CharacterType_Name(Item_CharacterType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Item_CharacterType_descriptor(), value);
}
inline bool Item_CharacterType_Parse(
    const ::std::string& name, Item_CharacterType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Item_CharacterType>(
    Item_CharacterType_descriptor(), name, value);
}
enum Costume_TYPE {
  Costume_TYPE_COSTUME_WEAPON = 201,
  Costume_TYPE_COSTUME_HAT = 202,
  Costume_TYPE_COSTUME_ARMOR = 203
};
bool Costume_TYPE_IsValid(int value);
const Costume_TYPE Costume_TYPE_TYPE_MIN = Costume_TYPE_COSTUME_WEAPON;
const Costume_TYPE Costume_TYPE_TYPE_MAX = Costume_TYPE_COSTUME_ARMOR;
const int Costume_TYPE_TYPE_ARRAYSIZE = Costume_TYPE_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* Costume_TYPE_descriptor();
inline const ::std::string& Costume_TYPE_Name(Costume_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    Costume_TYPE_descriptor(), value);
}
inline bool Costume_TYPE_Parse(
    const ::std::string& name, Costume_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Costume_TYPE>(
    Costume_TYPE_descriptor(), name, value);
}
enum Costume_CharacterType {
  Costume_CharacterType_GLADIATOR = 1,
  Costume_CharacterType_ASSASSIN = 2,
  Costume_CharacterType_WIZARD = 3,
  Costume_CharacterType_FIGHTER = 4
};
bool Costume_CharacterType_IsValid(int value);
const Costume_CharacterType Costume_CharacterType_CharacterType_MIN = Costume_CharacterType_GLADIATOR;
const Costume_CharacterType Costume_CharacterType_CharacterType_MAX = Costume_CharacterType_FIGHTER;
const int Costume_CharacterType_CharacterType_ARRAYSIZE = Costume_CharacterType_CharacterType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Costume_CharacterType_descriptor();
inline const ::std::string& Costume_CharacterType_Name(Costume_CharacterType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Costume_CharacterType_descriptor(), value);
}
inline bool Costume_CharacterType_Parse(
    const ::std::string& name, Costume_CharacterType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Costume_CharacterType>(
    Costume_CharacterType_descriptor(), name, value);
}
enum Totem_CharacterType {
  Totem_CharacterType_NONE = 0,
  Totem_CharacterType_GLADIATOR = 1,
  Totem_CharacterType_ASSASSIN = 2,
  Totem_CharacterType_WIZARD = 3,
  Totem_CharacterType_FIGHTER = 4
};
bool Totem_CharacterType_IsValid(int value);
const Totem_CharacterType Totem_CharacterType_CharacterType_MIN = Totem_CharacterType_NONE;
const Totem_CharacterType Totem_CharacterType_CharacterType_MAX = Totem_CharacterType_FIGHTER;
const int Totem_CharacterType_CharacterType_ARRAYSIZE = Totem_CharacterType_CharacterType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Totem_CharacterType_descriptor();
inline const ::std::string& Totem_CharacterType_Name(Totem_CharacterType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Totem_CharacterType_descriptor(), value);
}
inline bool Totem_CharacterType_Parse(
    const ::std::string& name, Totem_CharacterType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Totem_CharacterType>(
    Totem_CharacterType_descriptor(), name, value);
}
enum TotemRefineState_Refinestatus {
  TotemRefineState_Refinestatus_NONE = 0,
  TotemRefineState_Refinestatus_SUCCESS = 1,
  TotemRefineState_Refinestatus_FAIL = 2
};
bool TotemRefineState_Refinestatus_IsValid(int value);
const TotemRefineState_Refinestatus TotemRefineState_Refinestatus_Refinestatus_MIN = TotemRefineState_Refinestatus_NONE;
const TotemRefineState_Refinestatus TotemRefineState_Refinestatus_Refinestatus_MAX = TotemRefineState_Refinestatus_FAIL;
const int TotemRefineState_Refinestatus_Refinestatus_ARRAYSIZE = TotemRefineState_Refinestatus_Refinestatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* TotemRefineState_Refinestatus_descriptor();
inline const ::std::string& TotemRefineState_Refinestatus_Name(TotemRefineState_Refinestatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    TotemRefineState_Refinestatus_descriptor(), value);
}
inline bool TotemRefineState_Refinestatus_Parse(
    const ::std::string& name, TotemRefineState_Refinestatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TotemRefineState_Refinestatus>(
    TotemRefineState_Refinestatus_descriptor(), name, value);
}
enum Inventory_TYPE {
  Inventory_TYPE_WEAPON = 2,
  Inventory_TYPE_ARMOR = 3,
  Inventory_TYPE_ACCESSORY = 4,
  Inventory_TYPE_WING = 5,
  Inventory_TYPE_COSTUME_WEAPON = 202,
  Inventory_TYPE_COSTUME_ARMOR = 203,
  Inventory_TYPE_CONSUMABLE = 1001
};
bool Inventory_TYPE_IsValid(int value);
const Inventory_TYPE Inventory_TYPE_TYPE_MIN = Inventory_TYPE_WEAPON;
const Inventory_TYPE Inventory_TYPE_TYPE_MAX = Inventory_TYPE_CONSUMABLE;
const int Inventory_TYPE_TYPE_ARRAYSIZE = Inventory_TYPE_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* Inventory_TYPE_descriptor();
inline const ::std::string& Inventory_TYPE_Name(Inventory_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    Inventory_TYPE_descriptor(), value);
}
inline bool Inventory_TYPE_Parse(
    const ::std::string& name, Inventory_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Inventory_TYPE>(
    Inventory_TYPE_descriptor(), name, value);
}
enum Aether_TYPE {
  Aether_TYPE_ALL = 0,
  Aether_TYPE_THUNDERSTORM = 1,
  Aether_TYPE_DESTROY = 2,
  Aether_TYPE_INSIGHT = 3,
  Aether_TYPE_RAGE = 4,
  Aether_TYPE_DESPAIR = 5,
  Aether_TYPE_RESTRAINT = 6,
  Aether_TYPE_RESIST = 7,
  Aether_TYPE_REVENGE = 8,
  Aether_TYPE_PROTECT = 9,
  Aether_TYPE_PASSION = 10,
  Aether_TYPE_OBLIVION = 11,
  Aether_TYPE_FREEZING = 12
};
bool Aether_TYPE_IsValid(int value);
const Aether_TYPE Aether_TYPE_TYPE_MIN = Aether_TYPE_ALL;
const Aether_TYPE Aether_TYPE_TYPE_MAX = Aether_TYPE_FREEZING;
const int Aether_TYPE_TYPE_ARRAYSIZE = Aether_TYPE_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* Aether_TYPE_descriptor();
inline const ::std::string& Aether_TYPE_Name(Aether_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    Aether_TYPE_descriptor(), value);
}
inline bool Aether_TYPE_Parse(
    const ::std::string& name, Aether_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Aether_TYPE>(
    Aether_TYPE_descriptor(), name, value);
}
enum Aether_TIER {
  Aether_TIER_SEAL = 1,
  Aether_TIER_ANTI_DEVIL = 2,
  Aether_TIER_EXTERMINATE_DEVIL = 3,
  Aether_TIER_ETERNAL_LIFE = 4
};
bool Aether_TIER_IsValid(int value);
const Aether_TIER Aether_TIER_TIER_MIN = Aether_TIER_SEAL;
const Aether_TIER Aether_TIER_TIER_MAX = Aether_TIER_ETERNAL_LIFE;
const int Aether_TIER_TIER_ARRAYSIZE = Aether_TIER_TIER_MAX + 1;

const ::google::protobuf::EnumDescriptor* Aether_TIER_descriptor();
inline const ::std::string& Aether_TIER_Name(Aether_TIER value) {
  return ::google::protobuf::internal::NameOfEnum(
    Aether_TIER_descriptor(), value);
}
inline bool Aether_TIER_Parse(
    const ::std::string& name, Aether_TIER* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Aether_TIER>(
    Aether_TIER_descriptor(), name, value);
}
enum Aether_CharacterType {
  Aether_CharacterType_NOT_USED = 0,
  Aether_CharacterType_GLADIATOR = 1,
  Aether_CharacterType_ASSASSIN = 2,
  Aether_CharacterType_WIZARD = 3,
  Aether_CharacterType_FIGHTER = 4
};
bool Aether_CharacterType_IsValid(int value);
const Aether_CharacterType Aether_CharacterType_CharacterType_MIN = Aether_CharacterType_NOT_USED;
const Aether_CharacterType Aether_CharacterType_CharacterType_MAX = Aether_CharacterType_FIGHTER;
const int Aether_CharacterType_CharacterType_ARRAYSIZE = Aether_CharacterType_CharacterType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Aether_CharacterType_descriptor();
inline const ::std::string& Aether_CharacterType_Name(Aether_CharacterType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Aether_CharacterType_descriptor(), value);
}
inline bool Aether_CharacterType_Parse(
    const ::std::string& name, Aether_CharacterType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Aether_CharacterType>(
    Aether_CharacterType_descriptor(), name, value);
}
enum Aether_SetOptionType {
  Aether_SetOptionType_THUNDER_DAMAGE = 1001,
  Aether_SetOptionType_IMMOBILIZE = 1002,
  Aether_SetOptionType_SHIELD = 1003,
  Aether_SetOptionType_FIRE_RANGE = 1004,
  Aether_SetOptionType_METEOR_DAMAGE = 1005,
  Aether_SetOptionType_SKILL_COOLTIME = 1006,
  Aether_SetOptionType_SKILL_GAGE = 1007,
  Aether_SetOptionType_STUN = 1008,
  Aether_SetOptionType_SUPER_ARMOR = 1009,
  Aether_SetOptionType_DAMAGE_REFLECT = 1010,
  Aether_SetOptionType_PROHIBIT_BEHAVIOR = 1011,
  Aether_SetOptionType_FREEZE_RANGE = 1012
};
bool Aether_SetOptionType_IsValid(int value);
const Aether_SetOptionType Aether_SetOptionType_SetOptionType_MIN = Aether_SetOptionType_THUNDER_DAMAGE;
const Aether_SetOptionType Aether_SetOptionType_SetOptionType_MAX = Aether_SetOptionType_FREEZE_RANGE;
const int Aether_SetOptionType_SetOptionType_ARRAYSIZE = Aether_SetOptionType_SetOptionType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Aether_SetOptionType_descriptor();
inline const ::std::string& Aether_SetOptionType_Name(Aether_SetOptionType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Aether_SetOptionType_descriptor(), value);
}
inline bool Aether_SetOptionType_Parse(
    const ::std::string& name, Aether_SetOptionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Aether_SetOptionType>(
    Aether_SetOptionType_descriptor(), name, value);
}
enum QuestInfo_QuestSlotType {
  QuestInfo_QuestSlotType_QUEST_MAIN1 = 1,
  QuestInfo_QuestSlotType_QUEST_MAIN2 = 2,
  QuestInfo_QuestSlotType_QUEST_SUB1 = 10,
  QuestInfo_QuestSlotType_QUEST_SUB2 = 11
};
bool QuestInfo_QuestSlotType_IsValid(int value);
const QuestInfo_QuestSlotType QuestInfo_QuestSlotType_QuestSlotType_MIN = QuestInfo_QuestSlotType_QUEST_MAIN1;
const QuestInfo_QuestSlotType QuestInfo_QuestSlotType_QuestSlotType_MAX = QuestInfo_QuestSlotType_QUEST_SUB2;
const int QuestInfo_QuestSlotType_QuestSlotType_ARRAYSIZE = QuestInfo_QuestSlotType_QuestSlotType_MAX + 1;

const ::google::protobuf::EnumDescriptor* QuestInfo_QuestSlotType_descriptor();
inline const ::std::string& QuestInfo_QuestSlotType_Name(QuestInfo_QuestSlotType value) {
  return ::google::protobuf::internal::NameOfEnum(
    QuestInfo_QuestSlotType_descriptor(), value);
}
inline bool QuestInfo_QuestSlotType_Parse(
    const ::std::string& name, QuestInfo_QuestSlotType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<QuestInfo_QuestSlotType>(
    QuestInfo_QuestSlotType_descriptor(), name, value);
}
enum MissionInfo_MissionType {
  MissionInfo_MissionType_DAILY = 1,
  MissionInfo_MissionType_WEEKLY = 2,
  MissionInfo_MissionType_MONTHLY = 3,
  MissionInfo_MissionType_SERIAL = 4,
  MissionInfo_MissionType_FEATURED = 5
};
bool MissionInfo_MissionType_IsValid(int value);
const MissionInfo_MissionType MissionInfo_MissionType_MissionType_MIN = MissionInfo_MissionType_DAILY;
const MissionInfo_MissionType MissionInfo_MissionType_MissionType_MAX = MissionInfo_MissionType_FEATURED;
const int MissionInfo_MissionType_MissionType_ARRAYSIZE = MissionInfo_MissionType_MissionType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MissionInfo_MissionType_descriptor();
inline const ::std::string& MissionInfo_MissionType_Name(MissionInfo_MissionType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MissionInfo_MissionType_descriptor(), value);
}
inline bool MissionInfo_MissionType_Parse(
    const ::std::string& name, MissionInfo_MissionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MissionInfo_MissionType>(
    MissionInfo_MissionType_descriptor(), name, value);
}
enum MissionInfo_MissionStateType {
  MissionInfo_MissionStateType_PROGRESS = 1,
  MissionInfo_MissionStateType_COMPLETED = 2,
  MissionInfo_MissionStateType_REWARDED = 3
};
bool MissionInfo_MissionStateType_IsValid(int value);
const MissionInfo_MissionStateType MissionInfo_MissionStateType_MissionStateType_MIN = MissionInfo_MissionStateType_PROGRESS;
const MissionInfo_MissionStateType MissionInfo_MissionStateType_MissionStateType_MAX = MissionInfo_MissionStateType_REWARDED;
const int MissionInfo_MissionStateType_MissionStateType_ARRAYSIZE = MissionInfo_MissionStateType_MissionStateType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MissionInfo_MissionStateType_descriptor();
inline const ::std::string& MissionInfo_MissionStateType_Name(MissionInfo_MissionStateType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MissionInfo_MissionStateType_descriptor(), value);
}
inline bool MissionInfo_MissionStateType_Parse(
    const ::std::string& name, MissionInfo_MissionStateType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MissionInfo_MissionStateType>(
    MissionInfo_MissionStateType_descriptor(), name, value);
}
enum Guild_JoinOption {
  Guild_JoinOption_PUBLIC = 1,
  Guild_JoinOption_PRIVATE = 2
};
bool Guild_JoinOption_IsValid(int value);
const Guild_JoinOption Guild_JoinOption_JoinOption_MIN = Guild_JoinOption_PUBLIC;
const Guild_JoinOption Guild_JoinOption_JoinOption_MAX = Guild_JoinOption_PRIVATE;
const int Guild_JoinOption_JoinOption_ARRAYSIZE = Guild_JoinOption_JoinOption_MAX + 1;

const ::google::protobuf::EnumDescriptor* Guild_JoinOption_descriptor();
inline const ::std::string& Guild_JoinOption_Name(Guild_JoinOption value) {
  return ::google::protobuf::internal::NameOfEnum(
    Guild_JoinOption_descriptor(), value);
}
inline bool Guild_JoinOption_Parse(
    const ::std::string& name, Guild_JoinOption* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Guild_JoinOption>(
    Guild_JoinOption_descriptor(), name, value);
}
enum Guild_InviteState {
  Guild_InviteState_NONE = 0,
  Guild_InviteState_JOINED_GUILD = 1,
  Guild_InviteState_INVITED = 2,
  Guild_InviteState_NON_INVITING = 3,
  Guild_InviteState_INVITABLE = 4
};
bool Guild_InviteState_IsValid(int value);
const Guild_InviteState Guild_InviteState_InviteState_MIN = Guild_InviteState_NONE;
const Guild_InviteState Guild_InviteState_InviteState_MAX = Guild_InviteState_INVITABLE;
const int Guild_InviteState_InviteState_ARRAYSIZE = Guild_InviteState_InviteState_MAX + 1;

const ::google::protobuf::EnumDescriptor* Guild_InviteState_descriptor();
inline const ::std::string& Guild_InviteState_Name(Guild_InviteState value) {
  return ::google::protobuf::internal::NameOfEnum(
    Guild_InviteState_descriptor(), value);
}
inline bool Guild_InviteState_Parse(
    const ::std::string& name, Guild_InviteState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Guild_InviteState>(
    Guild_InviteState_descriptor(), name, value);
}
enum GuildMember_Rank {
  GuildMember_Rank_MASTER = 1,
  GuildMember_Rank_SUB_MASTER = 2,
  GuildMember_Rank_NORMAL = 99
};
bool GuildMember_Rank_IsValid(int value);
const GuildMember_Rank GuildMember_Rank_Rank_MIN = GuildMember_Rank_MASTER;
const GuildMember_Rank GuildMember_Rank_Rank_MAX = GuildMember_Rank_NORMAL;
const int GuildMember_Rank_Rank_ARRAYSIZE = GuildMember_Rank_Rank_MAX + 1;

const ::google::protobuf::EnumDescriptor* GuildMember_Rank_descriptor();
inline const ::std::string& GuildMember_Rank_Name(GuildMember_Rank value) {
  return ::google::protobuf::internal::NameOfEnum(
    GuildMember_Rank_descriptor(), value);
}
inline bool GuildMember_Rank_Parse(
    const ::std::string& name, GuildMember_Rank* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GuildMember_Rank>(
    GuildMember_Rank_descriptor(), name, value);
}
enum BattleFormation_TYPE {
  BattleFormation_TYPE_NORMAL = 1,
  BattleFormation_TYPE_OFFENSIVE = 2,
  BattleFormation_TYPE_DEFENSIVE = 3
};
bool BattleFormation_TYPE_IsValid(int value);
const BattleFormation_TYPE BattleFormation_TYPE_TYPE_MIN = BattleFormation_TYPE_NORMAL;
const BattleFormation_TYPE BattleFormation_TYPE_TYPE_MAX = BattleFormation_TYPE_DEFENSIVE;
const int BattleFormation_TYPE_TYPE_ARRAYSIZE = BattleFormation_TYPE_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* BattleFormation_TYPE_descriptor();
inline const ::std::string& BattleFormation_TYPE_Name(BattleFormation_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    BattleFormation_TYPE_descriptor(), value);
}
inline bool BattleFormation_TYPE_Parse(
    const ::std::string& name, BattleFormation_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BattleFormation_TYPE>(
    BattleFormation_TYPE_descriptor(), name, value);
}
enum BattleFormation_BuffType {
  BattleFormation_BuffType_NONE = 0,
  BattleFormation_BuffType_INC_ATTACK = 1,
  BattleFormation_BuffType_DEC_DAMAGE = 2
};
bool BattleFormation_BuffType_IsValid(int value);
const BattleFormation_BuffType BattleFormation_BuffType_BuffType_MIN = BattleFormation_BuffType_NONE;
const BattleFormation_BuffType BattleFormation_BuffType_BuffType_MAX = BattleFormation_BuffType_DEC_DAMAGE;
const int BattleFormation_BuffType_BuffType_ARRAYSIZE = BattleFormation_BuffType_BuffType_MAX + 1;

const ::google::protobuf::EnumDescriptor* BattleFormation_BuffType_descriptor();
inline const ::std::string& BattleFormation_BuffType_Name(BattleFormation_BuffType value) {
  return ::google::protobuf::internal::NameOfEnum(
    BattleFormation_BuffType_descriptor(), value);
}
inline bool BattleFormation_BuffType_Parse(
    const ::std::string& name, BattleFormation_BuffType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BattleFormation_BuffType>(
    BattleFormation_BuffType_descriptor(), name, value);
}
enum GuildBattleEntry_TYPE {
  GuildBattleEntry_TYPE_CHARACTER = 1,
  GuildBattleEntry_TYPE_MERCENARY = 2
};
bool GuildBattleEntry_TYPE_IsValid(int value);
const GuildBattleEntry_TYPE GuildBattleEntry_TYPE_TYPE_MIN = GuildBattleEntry_TYPE_CHARACTER;
const GuildBattleEntry_TYPE GuildBattleEntry_TYPE_TYPE_MAX = GuildBattleEntry_TYPE_MERCENARY;
const int GuildBattleEntry_TYPE_TYPE_ARRAYSIZE = GuildBattleEntry_TYPE_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* GuildBattleEntry_TYPE_descriptor();
inline const ::std::string& GuildBattleEntry_TYPE_Name(GuildBattleEntry_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    GuildBattleEntry_TYPE_descriptor(), value);
}
inline bool GuildBattleEntry_TYPE_Parse(
    const ::std::string& name, GuildBattleEntry_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GuildBattleEntry_TYPE>(
    GuildBattleEntry_TYPE_descriptor(), name, value);
}
enum GuildBattleResult_TYPE {
  GuildBattleResult_TYPE_LOSE = 1,
  GuildBattleResult_TYPE_DRAW = 1000,
  GuildBattleResult_TYPE_WIN = 1000000
};
bool GuildBattleResult_TYPE_IsValid(int value);
const GuildBattleResult_TYPE GuildBattleResult_TYPE_TYPE_MIN = GuildBattleResult_TYPE_LOSE;
const GuildBattleResult_TYPE GuildBattleResult_TYPE_TYPE_MAX = GuildBattleResult_TYPE_WIN;
const int GuildBattleResult_TYPE_TYPE_ARRAYSIZE = GuildBattleResult_TYPE_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* GuildBattleResult_TYPE_descriptor();
inline const ::std::string& GuildBattleResult_TYPE_Name(GuildBattleResult_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    GuildBattleResult_TYPE_descriptor(), value);
}
inline bool GuildBattleResult_TYPE_Parse(
    const ::std::string& name, GuildBattleResult_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GuildBattleResult_TYPE>(
    GuildBattleResult_TYPE_descriptor(), name, value);
}
enum GuildBattleState_TYPE {
  GuildBattleState_TYPE_NONE = 0,
  GuildBattleState_TYPE_INIT = 1,
  GuildBattleState_TYPE_INITDONE = 2,
  GuildBattleState_TYPE_READY = 3,
  GuildBattleState_TYPE_MATCHING = 4,
  GuildBattleState_TYPE_MATCHINGDONE = 5,
  GuildBattleState_TYPE_BATTLE = 6,
  GuildBattleState_TYPE_SETTLEMENT = 7,
  GuildBattleState_TYPE_SETTLEMENTDONE = 8,
  GuildBattleState_TYPE_RESULT = 9
};
bool GuildBattleState_TYPE_IsValid(int value);
const GuildBattleState_TYPE GuildBattleState_TYPE_TYPE_MIN = GuildBattleState_TYPE_NONE;
const GuildBattleState_TYPE GuildBattleState_TYPE_TYPE_MAX = GuildBattleState_TYPE_RESULT;
const int GuildBattleState_TYPE_TYPE_ARRAYSIZE = GuildBattleState_TYPE_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* GuildBattleState_TYPE_descriptor();
inline const ::std::string& GuildBattleState_TYPE_Name(GuildBattleState_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    GuildBattleState_TYPE_descriptor(), value);
}
inline bool GuildBattleState_TYPE_Parse(
    const ::std::string& name, GuildBattleState_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GuildBattleState_TYPE>(
    GuildBattleState_TYPE_descriptor(), name, value);
}
enum MatchMaking_TYPE {
  MatchMaking_TYPE_PVP_RANK = 1,
  MatchMaking_TYPE_PVP_FRIENDLY = 2,
  MatchMaking_TYPE_RAID_RANK = 10,
  MatchMaking_TYPE_ASSAULT_RANK = 20
};
bool MatchMaking_TYPE_IsValid(int value);
const MatchMaking_TYPE MatchMaking_TYPE_TYPE_MIN = MatchMaking_TYPE_PVP_RANK;
const MatchMaking_TYPE MatchMaking_TYPE_TYPE_MAX = MatchMaking_TYPE_ASSAULT_RANK;
const int MatchMaking_TYPE_TYPE_ARRAYSIZE = MatchMaking_TYPE_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* MatchMaking_TYPE_descriptor();
inline const ::std::string& MatchMaking_TYPE_Name(MatchMaking_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    MatchMaking_TYPE_descriptor(), value);
}
inline bool MatchMaking_TYPE_Parse(
    const ::std::string& name, MatchMaking_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MatchMaking_TYPE>(
    MatchMaking_TYPE_descriptor(), name, value);
}
enum MatchMaking_STATE {
  MatchMaking_STATE_WAITING = 1,
  MatchMaking_STATE_ARRANGED = 2,
  MatchMaking_STATE_CANCELED = 3
};
bool MatchMaking_STATE_IsValid(int value);
const MatchMaking_STATE MatchMaking_STATE_STATE_MIN = MatchMaking_STATE_WAITING;
const MatchMaking_STATE MatchMaking_STATE_STATE_MAX = MatchMaking_STATE_CANCELED;
const int MatchMaking_STATE_STATE_ARRAYSIZE = MatchMaking_STATE_STATE_MAX + 1;

const ::google::protobuf::EnumDescriptor* MatchMaking_STATE_descriptor();
inline const ::std::string& MatchMaking_STATE_Name(MatchMaking_STATE value) {
  return ::google::protobuf::internal::NameOfEnum(
    MatchMaking_STATE_descriptor(), value);
}
inline bool MatchMaking_STATE_Parse(
    const ::std::string& name, MatchMaking_STATE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MatchMaking_STATE>(
    MatchMaking_STATE_descriptor(), name, value);
}
enum Invitation_TYPE {
  Invitation_TYPE_PVP_INVITE = 1
};
bool Invitation_TYPE_IsValid(int value);
const Invitation_TYPE Invitation_TYPE_TYPE_MIN = Invitation_TYPE_PVP_INVITE;
const Invitation_TYPE Invitation_TYPE_TYPE_MAX = Invitation_TYPE_PVP_INVITE;
const int Invitation_TYPE_TYPE_ARRAYSIZE = Invitation_TYPE_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* Invitation_TYPE_descriptor();
inline const ::std::string& Invitation_TYPE_Name(Invitation_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    Invitation_TYPE_descriptor(), value);
}
inline bool Invitation_TYPE_Parse(
    const ::std::string& name, Invitation_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Invitation_TYPE>(
    Invitation_TYPE_descriptor(), name, value);
}
enum MatchInfo_TYPE {
  MatchInfo_TYPE_AI = 1,
  MatchInfo_TYPE_PLAYER = 2,
  MatchInfo_TYPE_TEAM = 3,
  MatchInfo_TYPE_RAID = 4,
  MatchInfo_TYPE_ASSAULT = 5,
  MatchInfo_TYPE_HEROTOWER = 6,
  MatchInfo_TYPE_DONATION = 7,
  MatchInfo_TYPE_DIMENSION = 8
};
bool MatchInfo_TYPE_IsValid(int value);
const MatchInfo_TYPE MatchInfo_TYPE_TYPE_MIN = MatchInfo_TYPE_AI;
const MatchInfo_TYPE MatchInfo_TYPE_TYPE_MAX = MatchInfo_TYPE_DIMENSION;
const int MatchInfo_TYPE_TYPE_ARRAYSIZE = MatchInfo_TYPE_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* MatchInfo_TYPE_descriptor();
inline const ::std::string& MatchInfo_TYPE_Name(MatchInfo_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    MatchInfo_TYPE_descriptor(), value);
}
inline bool MatchInfo_TYPE_Parse(
    const ::std::string& name, MatchInfo_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MatchInfo_TYPE>(
    MatchInfo_TYPE_descriptor(), name, value);
}
enum Room_TYPE {
  Room_TYPE_PVP = 0,
  Room_TYPE_RAID = 1,
  Room_TYPE_ASSAULT = 2
};
bool Room_TYPE_IsValid(int value);
const Room_TYPE Room_TYPE_TYPE_MIN = Room_TYPE_PVP;
const Room_TYPE Room_TYPE_TYPE_MAX = Room_TYPE_ASSAULT;
const int Room_TYPE_TYPE_ARRAYSIZE = Room_TYPE_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* Room_TYPE_descriptor();
inline const ::std::string& Room_TYPE_Name(Room_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    Room_TYPE_descriptor(), value);
}
inline bool Room_TYPE_Parse(
    const ::std::string& name, Room_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Room_TYPE>(
    Room_TYPE_descriptor(), name, value);
}
enum Room_ACCESS {
  Room_ACCESS_PUBLIC = 0,
  Room_ACCESS_PRIVATE = 1
};
bool Room_ACCESS_IsValid(int value);
const Room_ACCESS Room_ACCESS_ACCESS_MIN = Room_ACCESS_PUBLIC;
const Room_ACCESS Room_ACCESS_ACCESS_MAX = Room_ACCESS_PRIVATE;
const int Room_ACCESS_ACCESS_ARRAYSIZE = Room_ACCESS_ACCESS_MAX + 1;

const ::google::protobuf::EnumDescriptor* Room_ACCESS_descriptor();
inline const ::std::string& Room_ACCESS_Name(Room_ACCESS value) {
  return ::google::protobuf::internal::NameOfEnum(
    Room_ACCESS_descriptor(), value);
}
inline bool Room_ACCESS_Parse(
    const ::std::string& name, Room_ACCESS* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Room_ACCESS>(
    Room_ACCESS_descriptor(), name, value);
}
enum Shop_DrawPriceType {
  Shop_DrawPriceType_DRAW_GEM = 1,
  Shop_DrawPriceType_DRAW_SOCIAL_POINT = 2,
  Shop_DrawPriceType_SHOP_TEN_LOTTERY_TICKET = 3
};
bool Shop_DrawPriceType_IsValid(int value);
const Shop_DrawPriceType Shop_DrawPriceType_DrawPriceType_MIN = Shop_DrawPriceType_DRAW_GEM;
const Shop_DrawPriceType Shop_DrawPriceType_DrawPriceType_MAX = Shop_DrawPriceType_SHOP_TEN_LOTTERY_TICKET;
const int Shop_DrawPriceType_DrawPriceType_ARRAYSIZE = Shop_DrawPriceType_DrawPriceType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Shop_DrawPriceType_descriptor();
inline const ::std::string& Shop_DrawPriceType_Name(Shop_DrawPriceType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Shop_DrawPriceType_descriptor(), value);
}
inline bool Shop_DrawPriceType_Parse(
    const ::std::string& name, Shop_DrawPriceType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Shop_DrawPriceType>(
    Shop_DrawPriceType_descriptor(), name, value);
}
enum Shop_MileageType {
  Shop_MileageType_MILEAGE_LOTTERY = 1,
  Shop_MileageType_MILEAGE_BLADE_POINT = 2,
  Shop_MileageType_MILEAGE_GEM = 3,
  Shop_MileageType_MILEAGE_GOLD = 4,
  Shop_MileageType_MILEAGE_DARK_CRYSTAL = 5,
  Shop_MileageType_MILEAGE_PACKAGE = 6
};
bool Shop_MileageType_IsValid(int value);
const Shop_MileageType Shop_MileageType_MileageType_MIN = Shop_MileageType_MILEAGE_LOTTERY;
const Shop_MileageType Shop_MileageType_MileageType_MAX = Shop_MileageType_MILEAGE_PACKAGE;
const int Shop_MileageType_MileageType_ARRAYSIZE = Shop_MileageType_MileageType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Shop_MileageType_descriptor();
inline const ::std::string& Shop_MileageType_Name(Shop_MileageType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Shop_MileageType_descriptor(), value);
}
inline bool Shop_MileageType_Parse(
    const ::std::string& name, Shop_MileageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Shop_MileageType>(
    Shop_MileageType_descriptor(), name, value);
}
enum Shop_BuyPriceType {
  Shop_BuyPriceType_GEM = 1,
  Shop_BuyPriceType_SOCIAL_POINT = 2,
  Shop_BuyPriceType_DARK_CRYSTAL = 3,
  Shop_BuyPriceType_CASH = 4,
  Shop_BuyPriceType_GOLD = 5,
  Shop_BuyPriceType_FAME_POINT = 6
};
bool Shop_BuyPriceType_IsValid(int value);
const Shop_BuyPriceType Shop_BuyPriceType_BuyPriceType_MIN = Shop_BuyPriceType_GEM;
const Shop_BuyPriceType Shop_BuyPriceType_BuyPriceType_MAX = Shop_BuyPriceType_FAME_POINT;
const int Shop_BuyPriceType_BuyPriceType_ARRAYSIZE = Shop_BuyPriceType_BuyPriceType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Shop_BuyPriceType_descriptor();
inline const ::std::string& Shop_BuyPriceType_Name(Shop_BuyPriceType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Shop_BuyPriceType_descriptor(), value);
}
inline bool Shop_BuyPriceType_Parse(
    const ::std::string& name, Shop_BuyPriceType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Shop_BuyPriceType>(
    Shop_BuyPriceType_descriptor(), name, value);
}
enum Shop_ProductType {
  Shop_ProductType_PRODUCT_NONE = 0,
  Shop_ProductType_PRODUCT_BLADE_POINT = 1,
  Shop_ProductType_PRODUCT_GEM = 2,
  Shop_ProductType_PRODUCT_GOLD = 3,
  Shop_ProductType_PRODUCT_ITEM = 4,
  Shop_ProductType_PRODUCT_GENERAL_LOTTERY = 5,
  Shop_ProductType_PRODUCT_SELECTIVE_LOTTERY = 6,
  Shop_ProductType_PRODUCT_PACKAGE = 7,
  Shop_ProductType_PRODUCT_DARK_CRYSTAL = 8,
  Shop_ProductType_PRODUCT_GOLD_BUFF_TICKET = 9,
  Shop_ProductType_PRODUCT_EXP_BUFF_TICKET = 10,
  Shop_ProductType_PRODUCT_STAGE_BOOST_TICKET = 11,
  Shop_ProductType_PRODUCT_SHOP_TEN_LOTTERY_TICKET = 12,
  Shop_ProductType_PRODUCT_SELECTIVE_AETHER_LOTTERY = 13,
  Shop_ProductType_PRODUCT_PREFIX_SELECTIVE_LOTTERY = 14,
  Shop_ProductType_PRODUCT_STAGE_AUTO_CLEAR_TICKET = 15,
  Shop_ProductType_PRODUCT_COSTUME = 16,
  Shop_ProductType_PRODUCT_TOTEM = 17,
  Shop_ProductType_PRODUCT_TOTEM_PREFIX_LOTTERY = 18
};
bool Shop_ProductType_IsValid(int value);
const Shop_ProductType Shop_ProductType_ProductType_MIN = Shop_ProductType_PRODUCT_NONE;
const Shop_ProductType Shop_ProductType_ProductType_MAX = Shop_ProductType_PRODUCT_TOTEM_PREFIX_LOTTERY;
const int Shop_ProductType_ProductType_ARRAYSIZE = Shop_ProductType_ProductType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Shop_ProductType_descriptor();
inline const ::std::string& Shop_ProductType_Name(Shop_ProductType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Shop_ProductType_descriptor(), value);
}
inline bool Shop_ProductType_Parse(
    const ::std::string& name, Shop_ProductType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Shop_ProductType>(
    Shop_ProductType_descriptor(), name, value);
}
enum Shop_MarkType {
  Shop_MarkType_MARK_NONE = 0,
  Shop_MarkType_MARK_NEW = 1,
  Shop_MarkType_MARK_HOT = 2,
  Shop_MarkType_MARK_HIT = 3,
  Shop_MarkType_MARK_LIMITED = 4
};
bool Shop_MarkType_IsValid(int value);
const Shop_MarkType Shop_MarkType_MarkType_MIN = Shop_MarkType_MARK_NONE;
const Shop_MarkType Shop_MarkType_MarkType_MAX = Shop_MarkType_MARK_LIMITED;
const int Shop_MarkType_MarkType_ARRAYSIZE = Shop_MarkType_MarkType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Shop_MarkType_descriptor();
inline const ::std::string& Shop_MarkType_Name(Shop_MarkType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Shop_MarkType_descriptor(), value);
}
inline bool Shop_MarkType_Parse(
    const ::std::string& name, Shop_MarkType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Shop_MarkType>(
    Shop_MarkType_descriptor(), name, value);
}
enum Shop_ShopType {
  Shop_ShopType_SHOP_PACKAGE = 1,
  Shop_ShopType_SHOP_DARK_CRYSTAL = 2,
  Shop_ShopType_SHOP_GOODS = 3,
  Shop_ShopType_SHOP_FAME_POINT = 4
};
bool Shop_ShopType_IsValid(int value);
const Shop_ShopType Shop_ShopType_ShopType_MIN = Shop_ShopType_SHOP_PACKAGE;
const Shop_ShopType Shop_ShopType_ShopType_MAX = Shop_ShopType_SHOP_FAME_POINT;
const int Shop_ShopType_ShopType_ARRAYSIZE = Shop_ShopType_ShopType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Shop_ShopType_descriptor();
inline const ::std::string& Shop_ShopType_Name(Shop_ShopType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Shop_ShopType_descriptor(), value);
}
inline bool Shop_ShopType_Parse(
    const ::std::string& name, Shop_ShopType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Shop_ShopType>(
    Shop_ShopType_descriptor(), name, value);
}
enum Shop_RestrictType {
  Shop_RestrictType_SHOP_NONE = 0,
  Shop_RestrictType_SHOP_DAY = 1,
  Shop_RestrictType_SHOP_WEEK = 2,
  Shop_RestrictType_SHOP_MONTH = 3,
  Shop_RestrictType_SHOP_NUMBER = 4
};
bool Shop_RestrictType_IsValid(int value);
const Shop_RestrictType Shop_RestrictType_RestrictType_MIN = Shop_RestrictType_SHOP_NONE;
const Shop_RestrictType Shop_RestrictType_RestrictType_MAX = Shop_RestrictType_SHOP_NUMBER;
const int Shop_RestrictType_RestrictType_ARRAYSIZE = Shop_RestrictType_RestrictType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Shop_RestrictType_descriptor();
inline const ::std::string& Shop_RestrictType_Name(Shop_RestrictType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Shop_RestrictType_descriptor(), value);
}
inline bool Shop_RestrictType_Parse(
    const ::std::string& name, Shop_RestrictType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Shop_RestrictType>(
    Shop_RestrictType_descriptor(), name, value);
}
enum MarketPurchaseInfo_STATE {
  MarketPurchaseInfo_STATE_REGISTERED = 1,
  MarketPurchaseInfo_STATE_VERIFIED = 2,
  MarketPurchaseInfo_STATE_COMPLETED = 3
};
bool MarketPurchaseInfo_STATE_IsValid(int value);
const MarketPurchaseInfo_STATE MarketPurchaseInfo_STATE_STATE_MIN = MarketPurchaseInfo_STATE_REGISTERED;
const MarketPurchaseInfo_STATE MarketPurchaseInfo_STATE_STATE_MAX = MarketPurchaseInfo_STATE_COMPLETED;
const int MarketPurchaseInfo_STATE_STATE_ARRAYSIZE = MarketPurchaseInfo_STATE_STATE_MAX + 1;

const ::google::protobuf::EnumDescriptor* MarketPurchaseInfo_STATE_descriptor();
inline const ::std::string& MarketPurchaseInfo_STATE_Name(MarketPurchaseInfo_STATE value) {
  return ::google::protobuf::internal::NameOfEnum(
    MarketPurchaseInfo_STATE_descriptor(), value);
}
inline bool MarketPurchaseInfo_STATE_Parse(
    const ::std::string& name, MarketPurchaseInfo_STATE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MarketPurchaseInfo_STATE>(
    MarketPurchaseInfo_STATE_descriptor(), name, value);
}
enum MatchResult_TYPE {
  MatchResult_TYPE_WIN = 0,
  MatchResult_TYPE_LOSE = 1,
  MatchResult_TYPE_DRAW = 2
};
bool MatchResult_TYPE_IsValid(int value);
const MatchResult_TYPE MatchResult_TYPE_TYPE_MIN = MatchResult_TYPE_WIN;
const MatchResult_TYPE MatchResult_TYPE_TYPE_MAX = MatchResult_TYPE_DRAW;
const int MatchResult_TYPE_TYPE_ARRAYSIZE = MatchResult_TYPE_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* MatchResult_TYPE_descriptor();
inline const ::std::string& MatchResult_TYPE_Name(MatchResult_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    MatchResult_TYPE_descriptor(), value);
}
inline bool MatchResult_TYPE_Parse(
    const ::std::string& name, MatchResult_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MatchResult_TYPE>(
    MatchResult_TYPE_descriptor(), name, value);
}
enum DonationJobState_TYPE {
  DonationJobState_TYPE_START = 1,
  DonationJobState_TYPE_END = 2,
  DonationJobState_TYPE_REWARDED = 3
};
bool DonationJobState_TYPE_IsValid(int value);
const DonationJobState_TYPE DonationJobState_TYPE_TYPE_MIN = DonationJobState_TYPE_START;
const DonationJobState_TYPE DonationJobState_TYPE_TYPE_MAX = DonationJobState_TYPE_REWARDED;
const int DonationJobState_TYPE_TYPE_ARRAYSIZE = DonationJobState_TYPE_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* DonationJobState_TYPE_descriptor();
inline const ::std::string& DonationJobState_TYPE_Name(DonationJobState_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    DonationJobState_TYPE_descriptor(), value);
}
inline bool DonationJobState_TYPE_Parse(
    const ::std::string& name, DonationJobState_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DonationJobState_TYPE>(
    DonationJobState_TYPE_descriptor(), name, value);
}
enum StatusCode {
  UNAUTHENTICATED = 1,
  DUPLICATED_SIGN_IN = 2
};
bool StatusCode_IsValid(int value);
const StatusCode StatusCode_MIN = UNAUTHENTICATED;
const StatusCode StatusCode_MAX = DUPLICATED_SIGN_IN;
const int StatusCode_ARRAYSIZE = StatusCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* StatusCode_descriptor();
inline const ::std::string& StatusCode_Name(StatusCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    StatusCode_descriptor(), value);
}
inline bool StatusCode_Parse(
    const ::std::string& name, StatusCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<StatusCode>(
    StatusCode_descriptor(), name, value);
}
enum FriendInviteRewardType {
  INVITE_COUNT = 1,
  JOINER_COUNT = 2
};
bool FriendInviteRewardType_IsValid(int value);
const FriendInviteRewardType FriendInviteRewardType_MIN = INVITE_COUNT;
const FriendInviteRewardType FriendInviteRewardType_MAX = JOINER_COUNT;
const int FriendInviteRewardType_ARRAYSIZE = FriendInviteRewardType_MAX + 1;

const ::google::protobuf::EnumDescriptor* FriendInviteRewardType_descriptor();
inline const ::std::string& FriendInviteRewardType_Name(FriendInviteRewardType value) {
  return ::google::protobuf::internal::NameOfEnum(
    FriendInviteRewardType_descriptor(), value);
}
inline bool FriendInviteRewardType_Parse(
    const ::std::string& name, FriendInviteRewardType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FriendInviteRewardType>(
    FriendInviteRewardType_descriptor(), name, value);
}
enum ItemQuality {
  COMMON = 1,
  UNCOMMON = 2,
  RARE = 3,
  EPIC = 4,
  LEGEND = 5
};
bool ItemQuality_IsValid(int value);
const ItemQuality ItemQuality_MIN = COMMON;
const ItemQuality ItemQuality_MAX = LEGEND;
const int ItemQuality_ARRAYSIZE = ItemQuality_MAX + 1;

const ::google::protobuf::EnumDescriptor* ItemQuality_descriptor();
inline const ::std::string& ItemQuality_Name(ItemQuality value) {
  return ::google::protobuf::internal::NameOfEnum(
    ItemQuality_descriptor(), value);
}
inline bool ItemQuality_Parse(
    const ::std::string& name, ItemQuality* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ItemQuality>(
    ItemQuality_descriptor(), name, value);
}
enum SealSlotOpenPriceType {
  SOP_GEM = 1,
  SOP_GOLD = 2
};
bool SealSlotOpenPriceType_IsValid(int value);
const SealSlotOpenPriceType SealSlotOpenPriceType_MIN = SOP_GEM;
const SealSlotOpenPriceType SealSlotOpenPriceType_MAX = SOP_GOLD;
const int SealSlotOpenPriceType_ARRAYSIZE = SealSlotOpenPriceType_MAX + 1;

const ::google::protobuf::EnumDescriptor* SealSlotOpenPriceType_descriptor();
inline const ::std::string& SealSlotOpenPriceType_Name(SealSlotOpenPriceType value) {
  return ::google::protobuf::internal::NameOfEnum(
    SealSlotOpenPriceType_descriptor(), value);
}
inline bool SealSlotOpenPriceType_Parse(
    const ::std::string& name, SealSlotOpenPriceType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SealSlotOpenPriceType>(
    SealSlotOpenPriceType_descriptor(), name, value);
}
enum SealPriceType {
  SP_GEM = 1,
  SP_GOLD = 2
};
bool SealPriceType_IsValid(int value);
const SealPriceType SealPriceType_MIN = SP_GEM;
const SealPriceType SealPriceType_MAX = SP_GOLD;
const int SealPriceType_ARRAYSIZE = SealPriceType_MAX + 1;

const ::google::protobuf::EnumDescriptor* SealPriceType_descriptor();
inline const ::std::string& SealPriceType_Name(SealPriceType value) {
  return ::google::protobuf::internal::NameOfEnum(
    SealPriceType_descriptor(), value);
}
inline bool SealPriceType_Parse(
    const ::std::string& name, SealPriceType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SealPriceType>(
    SealPriceType_descriptor(), name, value);
}
enum TotemEquipSlot {
  TOTEM_NONE = 0,
  TOTEM_TOP = 1,
  TOTEM_MIDDLE = 2,
  TOTEM_BOTTOM = 3
};
bool TotemEquipSlot_IsValid(int value);
const TotemEquipSlot TotemEquipSlot_MIN = TOTEM_NONE;
const TotemEquipSlot TotemEquipSlot_MAX = TOTEM_BOTTOM;
const int TotemEquipSlot_ARRAYSIZE = TotemEquipSlot_MAX + 1;

const ::google::protobuf::EnumDescriptor* TotemEquipSlot_descriptor();
inline const ::std::string& TotemEquipSlot_Name(TotemEquipSlot value) {
  return ::google::protobuf::internal::NameOfEnum(
    TotemEquipSlot_descriptor(), value);
}
inline bool TotemEquipSlot_Parse(
    const ::std::string& name, TotemEquipSlot* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TotemEquipSlot>(
    TotemEquipSlot_descriptor(), name, value);
}
enum EquipPosition {
  NONE = 0,
  WEAPON = 1,
  HAT = 2,
  ARMOR = 3,
  GLOVE = 4,
  SHOES = 5,
  BELT = 6,
  NECK = 7,
  RING = 8,
  WING = 9,
  COSTUME_WEAPON = 201,
  COSTUME_HAT = 202,
  COSTUME_ARMOR = 203
};
bool EquipPosition_IsValid(int value);
const EquipPosition EquipPosition_MIN = NONE;
const EquipPosition EquipPosition_MAX = COSTUME_ARMOR;
const int EquipPosition_ARRAYSIZE = EquipPosition_MAX + 1;

const ::google::protobuf::EnumDescriptor* EquipPosition_descriptor();
inline const ::std::string& EquipPosition_Name(EquipPosition value) {
  return ::google::protobuf::internal::NameOfEnum(
    EquipPosition_descriptor(), value);
}
inline bool EquipPosition_Parse(
    const ::std::string& name, EquipPosition* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EquipPosition>(
    EquipPosition_descriptor(), name, value);
}
enum GroupPrefix {
  SACRED = 1,
  MYSTIC = 2,
  STEEL = 3,
  SILENT = 4,
  GROWTH = 5,
  DUEL = 6,
  HEAVEN = 7,
  ETERNAL = 8,
  COLD = 10,
  CORRUPT = 11,
  SUN = 12,
  BEACH = 13,
  STUDY = 14,
  CHRISTMAS = 15,
  NEW_YEAR = 16,
  HALLOWEEN = 17,
  NON_EQUIP = 9999
};
bool GroupPrefix_IsValid(int value);
const GroupPrefix GroupPrefix_MIN = SACRED;
const GroupPrefix GroupPrefix_MAX = NON_EQUIP;
const int GroupPrefix_ARRAYSIZE = GroupPrefix_MAX + 1;

const ::google::protobuf::EnumDescriptor* GroupPrefix_descriptor();
inline const ::std::string& GroupPrefix_Name(GroupPrefix value) {
  return ::google::protobuf::internal::NameOfEnum(
    GroupPrefix_descriptor(), value);
}
inline bool GroupPrefix_Parse(
    const ::std::string& name, GroupPrefix* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GroupPrefix>(
    GroupPrefix_descriptor(), name, value);
}
enum QuestType {
  MAIN = 1,
  DAILY = 2
};
bool QuestType_IsValid(int value);
const QuestType QuestType_MIN = MAIN;
const QuestType QuestType_MAX = DAILY;
const int QuestType_ARRAYSIZE = QuestType_MAX + 1;

const ::google::protobuf::EnumDescriptor* QuestType_descriptor();
inline const ::std::string& QuestType_Name(QuestType value) {
  return ::google::protobuf::internal::NameOfEnum(
    QuestType_descriptor(), value);
}
inline bool QuestType_Parse(
    const ::std::string& name, QuestType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<QuestType>(
    QuestType_descriptor(), name, value);
}
enum MainQuestType {
  MAIN_QUEST_MAIN = 1,
  MAIN_QUEST_SUB = 2
};
bool MainQuestType_IsValid(int value);
const MainQuestType MainQuestType_MIN = MAIN_QUEST_MAIN;
const MainQuestType MainQuestType_MAX = MAIN_QUEST_SUB;
const int MainQuestType_ARRAYSIZE = MainQuestType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MainQuestType_descriptor();
inline const ::std::string& MainQuestType_Name(MainQuestType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MainQuestType_descriptor(), value);
}
inline bool MainQuestType_Parse(
    const ::std::string& name, MainQuestType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MainQuestType>(
    MainQuestType_descriptor(), name, value);
}
enum RewardType {
  REWARD_GOLD = 1,
  REWARD_GEM = 2,
  REWARD_BLADE_POINT = 3,
  REWARD_ITEM = 4,
  REWARD_GENERAL_LOTTERY = 5,
  REWARD_SELECTIVE_LOTTERY = 6,
  REWARD_BUFF_TICKET = 7,
  REWARD_HERO_PIECE = 8,
  REWARD_SELECTIVE_ITEM_LOTTERY = 9,
  REWARD_RANK_PROMOTION_POINT = 10,
  REWARD_EXP = 11,
  REWARD_DARK_CRYSTAL = 12,
  REWARD_SOCIAL_POINT = 13,
  REWARD_FIXED_GRADE_LOTTERY = 14,
  REWARD_STAGE_BOOST_TICKET = 15,
  REWARD_HOT_TIME_GOLD_BUFF_TICKET = 16,
  REWARD_HOT_TIME_EXP_BUFF_TICKET = 17,
  REWARD_SHOP_TEN_LOTTERY_TICKET = 18,
  REWARD_FAME_POINT = 19,
  REWARD_SELECTIVE_AETHER_LOTTERY = 20,
  REWARD_PREFIX_SELECTIVE_LOTTERY = 21,
  REWARD_STAGE_AUTO_CLEAR_TICKET = 22,
  REWARD_COSTUME = 23,
  REWARD_TOTEM = 24,
  REWARD_TOTEM_PREFIX_LOTTERY = 25,
  REWARD_ADVANCED_RANK_PROMOTION_POINT = 26
};
bool RewardType_IsValid(int value);
const RewardType RewardType_MIN = REWARD_GOLD;
const RewardType RewardType_MAX = REWARD_ADVANCED_RANK_PROMOTION_POINT;
const int RewardType_ARRAYSIZE = RewardType_MAX + 1;

const ::google::protobuf::EnumDescriptor* RewardType_descriptor();
inline const ::std::string& RewardType_Name(RewardType value) {
  return ::google::protobuf::internal::NameOfEnum(
    RewardType_descriptor(), value);
}
inline bool RewardType_Parse(
    const ::std::string& name, RewardType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RewardType>(
    RewardType_descriptor(), name, value);
}
enum RewardPushType {
  REWARD_PUSH_MAIL = 1,
  REWARD_PUSH_DIRECT = 2
};
bool RewardPushType_IsValid(int value);
const RewardPushType RewardPushType_MIN = REWARD_PUSH_MAIL;
const RewardPushType RewardPushType_MAX = REWARD_PUSH_DIRECT;
const int RewardPushType_ARRAYSIZE = RewardPushType_MAX + 1;

const ::google::protobuf::EnumDescriptor* RewardPushType_descriptor();
inline const ::std::string& RewardPushType_Name(RewardPushType value) {
  return ::google::protobuf::internal::NameOfEnum(
    RewardPushType_descriptor(), value);
}
inline bool RewardPushType_Parse(
    const ::std::string& name, RewardPushType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RewardPushType>(
    RewardPushType_descriptor(), name, value);
}
enum StageBuffOptionFlags {
  INCREASE_EXP = 1,
  INCREASE_GOLD = 2,
  AUTO_SKILL = 4,
  BOOST_GAME_SPEED = 8
};
bool StageBuffOptionFlags_IsValid(int value);
const StageBuffOptionFlags StageBuffOptionFlags_MIN = INCREASE_EXP;
const StageBuffOptionFlags StageBuffOptionFlags_MAX = BOOST_GAME_SPEED;
const int StageBuffOptionFlags_ARRAYSIZE = StageBuffOptionFlags_MAX + 1;

const ::google::protobuf::EnumDescriptor* StageBuffOptionFlags_descriptor();
inline const ::std::string& StageBuffOptionFlags_Name(StageBuffOptionFlags value) {
  return ::google::protobuf::internal::NameOfEnum(
    StageBuffOptionFlags_descriptor(), value);
}
inline bool StageBuffOptionFlags_Parse(
    const ::std::string& name, StageBuffOptionFlags* value) {
  return ::google::protobuf::internal::ParseNamedEnum<StageBuffOptionFlags>(
    StageBuffOptionFlags_descriptor(), name, value);
}
enum StageRepeatMode {
  SRM_NORMAL = 0,
  SRM_REPEATED = 1,
  SRM_CONTINUOUS = 2
};
bool StageRepeatMode_IsValid(int value);
const StageRepeatMode StageRepeatMode_MIN = SRM_NORMAL;
const StageRepeatMode StageRepeatMode_MAX = SRM_CONTINUOUS;
const int StageRepeatMode_ARRAYSIZE = StageRepeatMode_MAX + 1;

const ::google::protobuf::EnumDescriptor* StageRepeatMode_descriptor();
inline const ::std::string& StageRepeatMode_Name(StageRepeatMode value) {
  return ::google::protobuf::internal::NameOfEnum(
    StageRepeatMode_descriptor(), value);
}
inline bool StageRepeatMode_Parse(
    const ::std::string& name, StageRepeatMode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<StageRepeatMode>(
    StageRepeatMode_descriptor(), name, value);
}
enum StageDifficulty {
  NORMAL = 1,
  HARD = 2,
  VERY_HARD = 3,
  HELL = 4
};
bool StageDifficulty_IsValid(int value);
const StageDifficulty StageDifficulty_MIN = NORMAL;
const StageDifficulty StageDifficulty_MAX = HELL;
const int StageDifficulty_ARRAYSIZE = StageDifficulty_MAX + 1;

const ::google::protobuf::EnumDescriptor* StageDifficulty_descriptor();
inline const ::std::string& StageDifficulty_Name(StageDifficulty value) {
  return ::google::protobuf::internal::NameOfEnum(
    StageDifficulty_descriptor(), value);
}
inline bool StageDifficulty_Parse(
    const ::std::string& name, StageDifficulty* value) {
  return ::google::protobuf::internal::ParseNamedEnum<StageDifficulty>(
    StageDifficulty_descriptor(), name, value);
}
enum StageClearProperty {
  CLEAR_DEFAULT = 0,
  CLEAR_IN_TIME = 1,
  CLEAR_ALL_SURVIVAL = 2
};
bool StageClearProperty_IsValid(int value);
const StageClearProperty StageClearProperty_MIN = CLEAR_DEFAULT;
const StageClearProperty StageClearProperty_MAX = CLEAR_ALL_SURVIVAL;
const int StageClearProperty_ARRAYSIZE = StageClearProperty_MAX + 1;

const ::google::protobuf::EnumDescriptor* StageClearProperty_descriptor();
inline const ::std::string& StageClearProperty_Name(StageClearProperty value) {
  return ::google::protobuf::internal::NameOfEnum(
    StageClearProperty_descriptor(), value);
}
inline bool StageClearProperty_Parse(
    const ::std::string& name, StageClearProperty* value) {
  return ::google::protobuf::internal::ParseNamedEnum<StageClearProperty>(
    StageClearProperty_descriptor(), name, value);
}
enum MailCategory {
  PRESENT = 1,
  BLADE_POINT = 2,
  SOCIAL_POINT = 3,
  LOTTERY = 4
};
bool MailCategory_IsValid(int value);
const MailCategory MailCategory_MIN = PRESENT;
const MailCategory MailCategory_MAX = LOTTERY;
const int MailCategory_ARRAYSIZE = MailCategory_MAX + 1;

const ::google::protobuf::EnumDescriptor* MailCategory_descriptor();
inline const ::std::string& MailCategory_Name(MailCategory value) {
  return ::google::protobuf::internal::NameOfEnum(
    MailCategory_descriptor(), value);
}
inline bool MailCategory_Parse(
    const ::std::string& name, MailCategory* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MailCategory>(
    MailCategory_descriptor(), name, value);
}
enum MailAttachType {
  ATTACH_GOLD = 1,
  ATTACH_GEM = 2,
  ATTACH_ITEM = 3,
  ATTACH_BLADE_POINT = 4,
  ATTACH_SOCIAL_POINT = 5,
  ATTACH_GENERAL_LOTTERY = 6,
  ATTACH_SELECTIVE_LOTTERY = 7,
  ATTACH_SELECTIVE_ITEM_LOTTERY = 8,
  ATTACH_HERO_PIECE = 9,
  ATTACH_RANK_PROMOTION_POINT = 10,
  ATTACH_DARK_CRYSTAL = 11,
  ATTACH_FIXED_GRADE_LOTTERY = 12,
  ATTACH_STAGE_BOOST_TICKET = 13,
  ATTACH_HOT_TIME_GOLD_BUFF_TICKET = 14,
  ATTACH_HOT_TIME_EXP_BUFF_TICKET = 15,
  ATTACH_SHOP_TEN_LOTTERY_TICKET = 16,
  ATTACH_FAME_POINT = 17,
  ATTACH_SELECTIVE_AETHER_LOTTERY = 18,
  ATTACH_PREFIX_SELECTIVE_LOTTERY = 19,
  ATTACH_STAGE_AUTO_CLEAR_TICKET = 20,
  ATTACH_TOTEM_PREFIX_LOTTERY = 21,
  ATTACH_ADVANCED_RANK_PROMOTION_POINT = 22
};
bool MailAttachType_IsValid(int value);
const MailAttachType MailAttachType_MIN = ATTACH_GOLD;
const MailAttachType MailAttachType_MAX = ATTACH_ADVANCED_RANK_PROMOTION_POINT;
const int MailAttachType_ARRAYSIZE = MailAttachType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MailAttachType_descriptor();
inline const ::std::string& MailAttachType_Name(MailAttachType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MailAttachType_descriptor(), value);
}
inline bool MailAttachType_Parse(
    const ::std::string& name, MailAttachType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MailAttachType>(
    MailAttachType_descriptor(), name, value);
}
enum MailPresentAttachType {
  MONEY = 1,
  GEM = 2,
  ITEM = 3,
  HERO_PIECE = 4,
  RANK_PROMOTION_POINT = 5,
  DARK_CRYSTAL = 6,
  STAGE_BOOST_TICKET = 7,
  HOT_TIME_GOLD_BUFF_TICKET = 8,
  HOT_TIME_EXP_BUFF_TICKET = 9,
  SHOP_TEN_LOTTERY_TICKET = 10,
  FAME_POINT = 11,
  STAGE_AUTO_CLEAR_TICKET = 12,
  ADVANCED_RANK_PROMOTION_POINT = 13
};
bool MailPresentAttachType_IsValid(int value);
const MailPresentAttachType MailPresentAttachType_MIN = MONEY;
const MailPresentAttachType MailPresentAttachType_MAX = ADVANCED_RANK_PROMOTION_POINT;
const int MailPresentAttachType_ARRAYSIZE = MailPresentAttachType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MailPresentAttachType_descriptor();
inline const ::std::string& MailPresentAttachType_Name(MailPresentAttachType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MailPresentAttachType_descriptor(), value);
}
inline bool MailPresentAttachType_Parse(
    const ::std::string& name, MailPresentAttachType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MailPresentAttachType>(
    MailPresentAttachType_descriptor(), name, value);
}
enum MailSourceType {
  SOURCE_NONE = 0,
  ATTENDANCE = 1,
  PLAY_TIME = 2,
  EVENT_ATTENDANCE = 3,
  DAILY_MISSION = 4,
  WEEKLY_MISSION = 5,
  MONTHLY_MISSION = 6,
  SERIAL_MISSION = 7,
  MISSION_COMPLETE_POINT_REWARD = 8,
  DAILY_QUEST = 9,
  MAIN_QUEST = 10,
  SUB_QUEST = 11,
  PVP_RESULT = 12,
  PVP_REWARD_BOX = 13,
  PVP_RANKING = 14,
  COUNTER_DUNGEON_WIN = 15,
  COUNTER_DUNGEON_WEEKLY = 16,
  TEAM_MATCH_RESULT = 17,
  TEAM_MATCH_REWARD_BOX = 18,
  TEAM_MATCH_RANKING = 19,
  HERO_TOWER = 20,
  SOURCE_RAID = 21,
  TUTORIAL = 22,
  ASSAULT_RESULT = 23,
  ASSAULT_REWARD_BOX = 24,
  ASSAULT_RANKING = 25,
  ASSAULT_MVP = 26,
  GUILD_BATTLE = 27,
  GUILD_REWARD_BOX = 28,
  GUILD_SUPPORT = 29,
  FRIEND = 30,
  COLLECT = 31,
  ACT_CLEAR = 32,
  BUY_SHOP = 33,
  SHOP_DRAW_MILEAGE = 34,
  SHOP_BUY_MILEAGE = 35,
  PUSH = 36,
  MAINTENANCE = 37,
  EVENT = 38,
  ADMIN = 39,
  UNITY_SKILL = 40,
  HERO_TOWER_SWEEP = 41,
  REST = 42,
  COUPON = 43,
  PROMOTION = 44,
  KAKAO_FRIEND_INVITE = 45,
  SHOP_CASH = 46,
  SHOP_EVENT = 47,
  SHOP_PACKAGE = 48,
  SHOP_FLAT_RATE_PACKAGE_BONUS = 49,
  SHOP_LEVEL_UP_PACKAGE = 50,
  SHOP_REACH_LEVEL_PACKAGE_BUY = 51,
  SHOP_REACH_LEVEL_PACKAGE_COMPLETE = 52,
  SHOP_PACKAGE_PERIOD_BONUS = 53,
  FAME_PRAISE_REWARD = 54,
  FAME_RAISED_RANKING_REWARD = 55,
  FAME_RANKER_REWARD = 56,
  BUY_MAGIC_SHOP = 57,
  BEGINNER_ATTENDANCE = 58,
  MAKE_DONATION = 59,
  DONATION_POINT_REWARD = 60,
  DONATION_POINT_RANKING = 61,
  DIMENSION_RANKING = 62,
  FAIRY_GIFT = 63,
  WELCOME = 64,
  GUILD_REFUND = 65
};
bool MailSourceType_IsValid(int value);
const MailSourceType MailSourceType_MIN = SOURCE_NONE;
const MailSourceType MailSourceType_MAX = GUILD_REFUND;
const int MailSourceType_ARRAYSIZE = MailSourceType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MailSourceType_descriptor();
inline const ::std::string& MailSourceType_Name(MailSourceType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MailSourceType_descriptor(), value);
}
inline bool MailSourceType_Parse(
    const ::std::string& name, MailSourceType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MailSourceType>(
    MailSourceType_descriptor(), name, value);
}
enum MailSenderType {
  SENDER_ARIN = 1,
  SENDER_HUNT = 2,
  SENDER_GAIUS = 3,
  SENDER_BELLA = 4,
  SENDER_LUCHI = 5,
  SENDER_RAMIEL = 6,
  SENDER_ADMIN = 7,
  SENDER_GRATIA = 8,
  SENDER_BROKK = 9
};
bool MailSenderType_IsValid(int value);
const MailSenderType MailSenderType_MIN = SENDER_ARIN;
const MailSenderType MailSenderType_MAX = SENDER_BROKK;
const int MailSenderType_ARRAYSIZE = MailSenderType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MailSenderType_descriptor();
inline const ::std::string& MailSenderType_Name(MailSenderType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MailSenderType_descriptor(), value);
}
inline bool MailSenderType_Parse(
    const ::std::string& name, MailSenderType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MailSenderType>(
    MailSenderType_descriptor(), name, value);
}
enum DayOfWeek {
  SUNDAY = 1,
  MONDAY = 2,
  TUESDAY = 3,
  WEDNESDAY = 4,
  THURSDAY = 5,
  FRIDAY = 6,
  SATURDAY = 7
};
bool DayOfWeek_IsValid(int value);
const DayOfWeek DayOfWeek_MIN = SUNDAY;
const DayOfWeek DayOfWeek_MAX = SATURDAY;
const int DayOfWeek_ARRAYSIZE = DayOfWeek_MAX + 1;

const ::google::protobuf::EnumDescriptor* DayOfWeek_descriptor();
inline const ::std::string& DayOfWeek_Name(DayOfWeek value) {
  return ::google::protobuf::internal::NameOfEnum(
    DayOfWeek_descriptor(), value);
}
inline bool DayOfWeek_Parse(
    const ::std::string& name, DayOfWeek* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DayOfWeek>(
    DayOfWeek_descriptor(), name, value);
}
enum AttributeChange {
  INC_ATTACK = 1,
  INC_DEFENCE = 2,
  INC_HEALTH = 3
};
bool AttributeChange_IsValid(int value);
const AttributeChange AttributeChange_MIN = INC_ATTACK;
const AttributeChange AttributeChange_MAX = INC_HEALTH;
const int AttributeChange_ARRAYSIZE = AttributeChange_MAX + 1;

const ::google::protobuf::EnumDescriptor* AttributeChange_descriptor();
inline const ::std::string& AttributeChange_Name(AttributeChange value) {
  return ::google::protobuf::internal::NameOfEnum(
    AttributeChange_descriptor(), value);
}
inline bool AttributeChange_Parse(
    const ::std::string& name, AttributeChange* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AttributeChange>(
    AttributeChange_descriptor(), name, value);
}
enum ModeType {
  STAGE = 1,
  RAID = 2
};
bool ModeType_IsValid(int value);
const ModeType ModeType_MIN = STAGE;
const ModeType ModeType_MAX = RAID;
const int ModeType_ARRAYSIZE = ModeType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ModeType_descriptor();
inline const ::std::string& ModeType_Name(ModeType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ModeType_descriptor(), value);
}
inline bool ModeType_Parse(
    const ::std::string& name, ModeType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ModeType>(
    ModeType_descriptor(), name, value);
}
enum EquipCategory {
  EQUIP_NONE = 0,
  EQUIP_WEAPON = 1,
  EQUIP_ARMOR = 2,
  EQUIP_ACCESSORY = 3,
  ESSENCE_WEAPON = 16,
  ESSENCE_ARMOR = 17,
  ESSENCE_ACCESSORY = 18,
  WEAPON_SURPASS_ANVIL = 25,
  ARMOR_SURPASS_ANVIL = 26,
  ACCESSORY_SURPASS_ANVIL = 27,
  EC_COSTUME_WEAPON = 201,
  EC_COSTUME_HAT = 202,
  EC_COSTUME_ARMOR = 203
};
bool EquipCategory_IsValid(int value);
const EquipCategory EquipCategory_MIN = EQUIP_NONE;
const EquipCategory EquipCategory_MAX = EC_COSTUME_ARMOR;
const int EquipCategory_ARRAYSIZE = EquipCategory_MAX + 1;

const ::google::protobuf::EnumDescriptor* EquipCategory_descriptor();
inline const ::std::string& EquipCategory_Name(EquipCategory value) {
  return ::google::protobuf::internal::NameOfEnum(
    EquipCategory_descriptor(), value);
}
inline bool EquipCategory_Parse(
    const ::std::string& name, EquipCategory* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EquipCategory>(
    EquipCategory_descriptor(), name, value);
}
enum LotteryGrade {
  LOTTERY_NORMAL = 1,
  LOTTERY_SPECIAL = 2,
  LOTTERY_PREMIUM = 3,
  LOTTERY_SIGNATURE = 4,
  LOTTERY_PLATINUM = 5,
  LOTTERY_ANVIL1 = 6,
  LOTTERY_ANVIL2 = 7,
  LOTTERY_ANVIL3 = 8,
  LOTTERY_SIGNATURE_1 = 9
};
bool LotteryGrade_IsValid(int value);
const LotteryGrade LotteryGrade_MIN = LOTTERY_NORMAL;
const LotteryGrade LotteryGrade_MAX = LOTTERY_SIGNATURE_1;
const int LotteryGrade_ARRAYSIZE = LotteryGrade_MAX + 1;

const ::google::protobuf::EnumDescriptor* LotteryGrade_descriptor();
inline const ::std::string& LotteryGrade_Name(LotteryGrade value) {
  return ::google::protobuf::internal::NameOfEnum(
    LotteryGrade_descriptor(), value);
}
inline bool LotteryGrade_Parse(
    const ::std::string& name, LotteryGrade* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LotteryGrade>(
    LotteryGrade_descriptor(), name, value);
}
enum CollectionItemState {
  COLLECTED = 1,
  ENHANCED = 2,
  REWARDED = 3
};
bool CollectionItemState_IsValid(int value);
const CollectionItemState CollectionItemState_MIN = COLLECTED;
const CollectionItemState CollectionItemState_MAX = REWARDED;
const int CollectionItemState_ARRAYSIZE = CollectionItemState_MAX + 1;

const ::google::protobuf::EnumDescriptor* CollectionItemState_descriptor();
inline const ::std::string& CollectionItemState_Name(CollectionItemState value) {
  return ::google::protobuf::internal::NameOfEnum(
    CollectionItemState_descriptor(), value);
}
inline bool CollectionItemState_Parse(
    const ::std::string& name, CollectionItemState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CollectionItemState>(
    CollectionItemState_descriptor(), name, value);
}
enum CollectionCategory {
  COLLECTION_SET = 1,
  COLLECTION_WEAPON = 2,
  COLLECTION_ARMOR = 3,
  COLLECTION_ACCESSORY = 4,
  COLLECTION_WING = 5
};
bool CollectionCategory_IsValid(int value);
const CollectionCategory CollectionCategory_MIN = COLLECTION_SET;
const CollectionCategory CollectionCategory_MAX = COLLECTION_WING;
const int CollectionCategory_ARRAYSIZE = CollectionCategory_MAX + 1;

const ::google::protobuf::EnumDescriptor* CollectionCategory_descriptor();
inline const ::std::string& CollectionCategory_Name(CollectionCategory value) {
  return ::google::protobuf::internal::NameOfEnum(
    CollectionCategory_descriptor(), value);
}
inline bool CollectionCategory_Parse(
    const ::std::string& name, CollectionCategory* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CollectionCategory>(
    CollectionCategory_descriptor(), name, value);
}
enum RaidType {
  HARANG = 1,
  SARGON = 2
};
bool RaidType_IsValid(int value);
const RaidType RaidType_MIN = HARANG;
const RaidType RaidType_MAX = SARGON;
const int RaidType_ARRAYSIZE = RaidType_MAX + 1;

const ::google::protobuf::EnumDescriptor* RaidType_descriptor();
inline const ::std::string& RaidType_Name(RaidType value) {
  return ::google::protobuf::internal::NameOfEnum(
    RaidType_descriptor(), value);
}
inline bool RaidType_Parse(
    const ::std::string& name, RaidType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RaidType>(
    RaidType_descriptor(), name, value);
}
enum DailyAttendanceType {
  ATTENDANCE_GENERAL = 1,
  ATTENDANCE_RETURNED = 2,
  ATTENDANCE_BEGINNER = 3
};
bool DailyAttendanceType_IsValid(int value);
const DailyAttendanceType DailyAttendanceType_MIN = ATTENDANCE_GENERAL;
const DailyAttendanceType DailyAttendanceType_MAX = ATTENDANCE_BEGINNER;
const int DailyAttendanceType_ARRAYSIZE = DailyAttendanceType_MAX + 1;

const ::google::protobuf::EnumDescriptor* DailyAttendanceType_descriptor();
inline const ::std::string& DailyAttendanceType_Name(DailyAttendanceType value) {
  return ::google::protobuf::internal::NameOfEnum(
    DailyAttendanceType_descriptor(), value);
}
inline bool DailyAttendanceType_Parse(
    const ::std::string& name, DailyAttendanceType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DailyAttendanceType>(
    DailyAttendanceType_descriptor(), name, value);
}
enum DuelMode {
  DUEL_MODE_NONE = 0,
  DUEL_MODE_PVP = 1,
  DUEL_MODE_TEAM = 2,
  DUEL_MODE_ASSAULT = 3
};
bool DuelMode_IsValid(int value);
const DuelMode DuelMode_MIN = DUEL_MODE_NONE;
const DuelMode DuelMode_MAX = DUEL_MODE_ASSAULT;
const int DuelMode_ARRAYSIZE = DuelMode_MAX + 1;

const ::google::protobuf::EnumDescriptor* DuelMode_descriptor();
inline const ::std::string& DuelMode_Name(DuelMode value) {
  return ::google::protobuf::internal::NameOfEnum(
    DuelMode_descriptor(), value);
}
inline bool DuelMode_Parse(
    const ::std::string& name, DuelMode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DuelMode>(
    DuelMode_descriptor(), name, value);
}
enum RewardBoxGrade {
  REWARD_BOX_NONE = 0,
  REWARD_BOX_BRONZE = 1,
  REWARD_BOX_SILVER = 2,
  REWARD_BOX_GOLD = 3,
  REWARD_BOX_PLATINUM = 4,
  REWARD_BOX_DIAMOND = 5,
  REWARD_BOX_MASTER = 6
};
bool RewardBoxGrade_IsValid(int value);
const RewardBoxGrade RewardBoxGrade_MIN = REWARD_BOX_NONE;
const RewardBoxGrade RewardBoxGrade_MAX = REWARD_BOX_MASTER;
const int RewardBoxGrade_ARRAYSIZE = RewardBoxGrade_MAX + 1;

const ::google::protobuf::EnumDescriptor* RewardBoxGrade_descriptor();
inline const ::std::string& RewardBoxGrade_Name(RewardBoxGrade value) {
  return ::google::protobuf::internal::NameOfEnum(
    RewardBoxGrade_descriptor(), value);
}
inline bool RewardBoxGrade_Parse(
    const ::std::string& name, RewardBoxGrade* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RewardBoxGrade>(
    RewardBoxGrade_descriptor(), name, value);
}
enum ItemGetRouteType {
  ROUTE_BUY_SHOP = 1,
  ROUTE_LOTTERY = 2,
  ROUTE_UPGRADE_ITEM = 3,
  ROUTE_COMPOSE_ITEM = 4,
  ROUTE_DISMANTLE_AETHER = 5,
  ROUTE_DISMANTLE_ITEM = 6,
  ROUTE_MAKE_DONATION = 7,
  ROUTE_DISMANTLE_TOTEM = 8,
  ROUTE_DISMANTLE_COSTUME = 9,
  ROUTE_FACTORY_MAKE = 10,
  ROUTE_FACTORY_UPGRADE = 11,
  ROUTE_UNSEAL_BOX = 12,
  ROUTE_ETC = 99
};
bool ItemGetRouteType_IsValid(int value);
const ItemGetRouteType ItemGetRouteType_MIN = ROUTE_BUY_SHOP;
const ItemGetRouteType ItemGetRouteType_MAX = ROUTE_ETC;
const int ItemGetRouteType_ARRAYSIZE = ItemGetRouteType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ItemGetRouteType_descriptor();
inline const ::std::string& ItemGetRouteType_Name(ItemGetRouteType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ItemGetRouteType_descriptor(), value);
}
inline bool ItemGetRouteType_Parse(
    const ::std::string& name, ItemGetRouteType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ItemGetRouteType>(
    ItemGetRouteType_descriptor(), name, value);
}
enum UnitySkillEventType {
  UNITY_EQUIP_ITEM = 1,
  UNITY_EQUIP_ITEM_ALL = 2,
  UNITY_REACH_LEVEL = 3
};
bool UnitySkillEventType_IsValid(int value);
const UnitySkillEventType UnitySkillEventType_MIN = UNITY_EQUIP_ITEM;
const UnitySkillEventType UnitySkillEventType_MAX = UNITY_REACH_LEVEL;
const int UnitySkillEventType_ARRAYSIZE = UnitySkillEventType_MAX + 1;

const ::google::protobuf::EnumDescriptor* UnitySkillEventType_descriptor();
inline const ::std::string& UnitySkillEventType_Name(UnitySkillEventType value) {
  return ::google::protobuf::internal::NameOfEnum(
    UnitySkillEventType_descriptor(), value);
}
inline bool UnitySkillEventType_Parse(
    const ::std::string& name, UnitySkillEventType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UnitySkillEventType>(
    UnitySkillEventType_descriptor(), name, value);
}
enum ContentsModeState {
  CMS_NONE = 0,
  CMS_RUN = 1,
  CMS_BLOCK_ENTER = 2,
  CMS_MODE_FINISH = 3,
  CMS_SETTLE_BEGIN = 4,
  CMS_SETTLE_END = 5,
  CMS_SYSTEM_CHECK = 99
};
bool ContentsModeState_IsValid(int value);
const ContentsModeState ContentsModeState_MIN = CMS_NONE;
const ContentsModeState ContentsModeState_MAX = CMS_SYSTEM_CHECK;
const int ContentsModeState_ARRAYSIZE = ContentsModeState_MAX + 1;

const ::google::protobuf::EnumDescriptor* ContentsModeState_descriptor();
inline const ::std::string& ContentsModeState_Name(ContentsModeState value) {
  return ::google::protobuf::internal::NameOfEnum(
    ContentsModeState_descriptor(), value);
}
inline bool ContentsModeState_Parse(
    const ::std::string& name, ContentsModeState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ContentsModeState>(
    ContentsModeState_descriptor(), name, value);
}
enum ContentsMode {
  CM_STAGE = 1,
  CM_PVP_DUEL = 2,
  CM_PVP_TEAM = 3,
  CM_ASSAULT = 4,
  CM_GUILD = 5,
  CM_HERO_TOWER = 6,
  CM_RAID = 7,
  CM_PROMOTION = 8,
  CM_COUNTER = 9,
  CM_FRIEND = 10,
  CM_INVENTORY = 11,
  CM_MISSION = 12,
  CM_SHOP = 13,
  CM_DONATION = 14,
  CM_DIMENSION = 15,
  CM_COSTUME = 16
};
bool ContentsMode_IsValid(int value);
const ContentsMode ContentsMode_MIN = CM_STAGE;
const ContentsMode ContentsMode_MAX = CM_COSTUME;
const int ContentsMode_ARRAYSIZE = ContentsMode_MAX + 1;

const ::google::protobuf::EnumDescriptor* ContentsMode_descriptor();
inline const ::std::string& ContentsMode_Name(ContentsMode value) {
  return ::google::protobuf::internal::NameOfEnum(
    ContentsMode_descriptor(), value);
}
inline bool ContentsMode_Parse(
    const ::std::string& name, ContentsMode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ContentsMode>(
    ContentsMode_descriptor(), name, value);
}
enum EventCategory {
  POINT_REWARD = 1,
  HOT_TIME_BUFF = 2,
  LEVEL_UP = 3,
  SEASON_MISSION = 4,
  STAGE_CLEAR = 5,
  POINT_SHOP = 6,
  GEM_PURCHASE = 7,
  SHOP_LOTTERY = 8,
  SPEND_GEM = 9,
  SHOP_LOTTERY_SAVINGS = 10,
  DICE = 11
};
bool EventCategory_IsValid(int value);
const EventCategory EventCategory_MIN = POINT_REWARD;
const EventCategory EventCategory_MAX = DICE;
const int EventCategory_ARRAYSIZE = EventCategory_MAX + 1;

const ::google::protobuf::EnumDescriptor* EventCategory_descriptor();
inline const ::std::string& EventCategory_Name(EventCategory value) {
  return ::google::protobuf::internal::NameOfEnum(
    EventCategory_descriptor(), value);
}
inline bool EventCategory_Parse(
    const ::std::string& name, EventCategory* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EventCategory>(
    EventCategory_descriptor(), name, value);
}
enum HotTimeBuffType {
  GOLD = 1,
  EXP = 2
};
bool HotTimeBuffType_IsValid(int value);
const HotTimeBuffType HotTimeBuffType_MIN = GOLD;
const HotTimeBuffType HotTimeBuffType_MAX = EXP;
const int HotTimeBuffType_ARRAYSIZE = HotTimeBuffType_MAX + 1;

const ::google::protobuf::EnumDescriptor* HotTimeBuffType_descriptor();
inline const ::std::string& HotTimeBuffType_Name(HotTimeBuffType value) {
  return ::google::protobuf::internal::NameOfEnum(
    HotTimeBuffType_descriptor(), value);
}
inline bool HotTimeBuffType_Parse(
    const ::std::string& name, HotTimeBuffType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<HotTimeBuffType>(
    HotTimeBuffType_descriptor(), name, value);
}
enum ReportModeType {
  REPORT_PVP = 1,
  REPORT_ASSAULT = 2,
  REPORT_RAID = 3,
  REPORT_CHAT = 4
};
bool ReportModeType_IsValid(int value);
const ReportModeType ReportModeType_MIN = REPORT_PVP;
const ReportModeType ReportModeType_MAX = REPORT_CHAT;
const int ReportModeType_ARRAYSIZE = ReportModeType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ReportModeType_descriptor();
inline const ::std::string& ReportModeType_Name(ReportModeType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ReportModeType_descriptor(), value);
}
inline bool ReportModeType_Parse(
    const ::std::string& name, ReportModeType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ReportModeType>(
    ReportModeType_descriptor(), name, value);
}
enum DiceEventCellType {
  START = 1,
  REWARD = 2,
  TIMES = 3
};
bool DiceEventCellType_IsValid(int value);
const DiceEventCellType DiceEventCellType_MIN = START;
const DiceEventCellType DiceEventCellType_MAX = TIMES;
const int DiceEventCellType_ARRAYSIZE = DiceEventCellType_MAX + 1;

const ::google::protobuf::EnumDescriptor* DiceEventCellType_descriptor();
inline const ::std::string& DiceEventCellType_Name(DiceEventCellType value) {
  return ::google::protobuf::internal::NameOfEnum(
    DiceEventCellType_descriptor(), value);
}
inline bool DiceEventCellType_Parse(
    const ::std::string& name, DiceEventCellType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DiceEventCellType>(
    DiceEventCellType_descriptor(), name, value);
}
enum DonationConsumableType {
  CT_GEM = 1,
  CT_BLADE_POINT = 2,
  CT_RANK_PROMOTION_POINT = 3,
  CT_HERO_PIECE = 4,
  CT_MAGIC_CRYSTAL = 11,
  CT_TEARS_WIND = 12,
  CT_FEATHER_ARCHANGEL = 13,
  CT_WEAPON_UPGRADE_STONE = 21,
  CT_ARMOR_UPGRADE_STONE = 22,
  CT_ACCESSORY_UPGRADE_STONE = 23,
  CT_WEAPON_ENHANCE_SCROLL = 24,
  CT_ARMOR_ENHANCE_SCROLL = 25,
  CT_ACCESSORY_ENHANCE_SCROLL = 26,
  CT_BLESSED_WEAPON_ENHANCE_SCROLL = 27,
  CT_BLESSED_ARMOR_ENHANCE_SCROLL = 28,
  CT_BLESSED_ACCESSORY_ENHANCE_SCROLL = 29,
  CT_RAMIEL_PROTECTION = 30,
  CT_AETHER_PIECE = 31,
  CT_CALIGULA_PIECE = 32,
  CT_LILLIS_PIECE = 33,
  CT_BEELZEBUB_PIECE = 34,
  CT_AZRAEL_PIECE = 35,
  CT_NIDHOGG_PIECE = 36,
  CT_APOCALYPSE_PIECE = 37,
  CT_LIGHT_LAMP = 41,
  CT_ADVANCED_RANK_PROMOTION_POINT = 42,
  CT_UNDEFINED = 9999
};
bool DonationConsumableType_IsValid(int value);
const DonationConsumableType DonationConsumableType_MIN = CT_GEM;
const DonationConsumableType DonationConsumableType_MAX = CT_UNDEFINED;
const int DonationConsumableType_ARRAYSIZE = DonationConsumableType_MAX + 1;

const ::google::protobuf::EnumDescriptor* DonationConsumableType_descriptor();
inline const ::std::string& DonationConsumableType_Name(DonationConsumableType value) {
  return ::google::protobuf::internal::NameOfEnum(
    DonationConsumableType_descriptor(), value);
}
inline bool DonationConsumableType_Parse(
    const ::std::string& name, DonationConsumableType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DonationConsumableType>(
    DonationConsumableType_descriptor(), name, value);
}
enum DonationCostType {
  DC_GEM = 1,
  DC_GOLD = 2
};
bool DonationCostType_IsValid(int value);
const DonationCostType DonationCostType_MIN = DC_GEM;
const DonationCostType DonationCostType_MAX = DC_GOLD;
const int DonationCostType_ARRAYSIZE = DonationCostType_MAX + 1;

const ::google::protobuf::EnumDescriptor* DonationCostType_descriptor();
inline const ::std::string& DonationCostType_Name(DonationCostType value) {
  return ::google::protobuf::internal::NameOfEnum(
    DonationCostType_descriptor(), value);
}
inline bool DonationCostType_Parse(
    const ::std::string& name, DonationCostType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DonationCostType>(
    DonationCostType_descriptor(), name, value);
}
enum FairyType {
  NIECE = 1,
  PANG = 2,
  RIO = 3
};
bool FairyType_IsValid(int value);
const FairyType FairyType_MIN = NIECE;
const FairyType FairyType_MAX = RIO;
const int FairyType_ARRAYSIZE = FairyType_MAX + 1;

const ::google::protobuf::EnumDescriptor* FairyType_descriptor();
inline const ::std::string& FairyType_Name(FairyType value) {
  return ::google::protobuf::internal::NameOfEnum(
    FairyType_descriptor(), value);
}
inline bool FairyType_Parse(
    const ::std::string& name, FairyType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FairyType>(
    FairyType_descriptor(), name, value);
}
enum TotemGrade {
  TG_NORMAL = 1,
  TG_MAGIC = 2,
  TG_RARE = 3,
  TG_HERO = 4,
  TG_LEGEND = 5,
  TG_RELIC = 6
};
bool TotemGrade_IsValid(int value);
const TotemGrade TotemGrade_MIN = TG_NORMAL;
const TotemGrade TotemGrade_MAX = TG_RELIC;
const int TotemGrade_ARRAYSIZE = TotemGrade_MAX + 1;

const ::google::protobuf::EnumDescriptor* TotemGrade_descriptor();
inline const ::std::string& TotemGrade_Name(TotemGrade value) {
  return ::google::protobuf::internal::NameOfEnum(
    TotemGrade_descriptor(), value);
}
inline bool TotemGrade_Parse(
    const ::std::string& name, TotemGrade* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TotemGrade>(
    TotemGrade_descriptor(), name, value);
}
enum TotemBasePrefix {
  TBP_VALOROUS = 1,
  TBP_PATRON = 2,
  TBP_VIGOROUS = 3
};
bool TotemBasePrefix_IsValid(int value);
const TotemBasePrefix TotemBasePrefix_MIN = TBP_VALOROUS;
const TotemBasePrefix TotemBasePrefix_MAX = TBP_VIGOROUS;
const int TotemBasePrefix_ARRAYSIZE = TotemBasePrefix_MAX + 1;

const ::google::protobuf::EnumDescriptor* TotemBasePrefix_descriptor();
inline const ::std::string& TotemBasePrefix_Name(TotemBasePrefix value) {
  return ::google::protobuf::internal::NameOfEnum(
    TotemBasePrefix_descriptor(), value);
}
inline bool TotemBasePrefix_Parse(
    const ::std::string& name, TotemBasePrefix* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TotemBasePrefix>(
    TotemBasePrefix_descriptor(), name, value);
}
enum TotemRefinePrefix {
  TRP_ECLIPSE = 1,
  TRP_SHINING = 2,
  TRP_STRONG = 3,
  TRP_SACRED = 4
};
bool TotemRefinePrefix_IsValid(int value);
const TotemRefinePrefix TotemRefinePrefix_MIN = TRP_ECLIPSE;
const TotemRefinePrefix TotemRefinePrefix_MAX = TRP_SACRED;
const int TotemRefinePrefix_ARRAYSIZE = TotemRefinePrefix_MAX + 1;

const ::google::protobuf::EnumDescriptor* TotemRefinePrefix_descriptor();
inline const ::std::string& TotemRefinePrefix_Name(TotemRefinePrefix value) {
  return ::google::protobuf::internal::NameOfEnum(
    TotemRefinePrefix_descriptor(), value);
}
inline bool TotemRefinePrefix_Parse(
    const ::std::string& name, TotemRefinePrefix* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TotemRefinePrefix>(
    TotemRefinePrefix_descriptor(), name, value);
}
enum TotemRefineCostType {
  TRC_GOLD = 1,
  TRC_DIMENSIONAL_PIECE = 2
};
bool TotemRefineCostType_IsValid(int value);
const TotemRefineCostType TotemRefineCostType_MIN = TRC_GOLD;
const TotemRefineCostType TotemRefineCostType_MAX = TRC_DIMENSIONAL_PIECE;
const int TotemRefineCostType_ARRAYSIZE = TotemRefineCostType_MAX + 1;

const ::google::protobuf::EnumDescriptor* TotemRefineCostType_descriptor();
inline const ::std::string& TotemRefineCostType_Name(TotemRefineCostType value) {
  return ::google::protobuf::internal::NameOfEnum(
    TotemRefineCostType_descriptor(), value);
}
inline bool TotemRefineCostType_Parse(
    const ::std::string& name, TotemRefineCostType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TotemRefineCostType>(
    TotemRefineCostType_descriptor(), name, value);
}
enum ExchangePriceType {
  EC_GEM = 1,
  EC_GOLD = 2
};
bool ExchangePriceType_IsValid(int value);
const ExchangePriceType ExchangePriceType_MIN = EC_GEM;
const ExchangePriceType ExchangePriceType_MAX = EC_GOLD;
const int ExchangePriceType_ARRAYSIZE = ExchangePriceType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ExchangePriceType_descriptor();
inline const ::std::string& ExchangePriceType_Name(ExchangePriceType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ExchangePriceType_descriptor(), value);
}
inline bool ExchangePriceType_Parse(
    const ::std::string& name, ExchangePriceType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ExchangePriceType>(
    ExchangePriceType_descriptor(), name, value);
}
enum FactoryResultType {
  FR_FAIL = 1,
  FR_SUCCESS = 2,
  FR_HUGE_SUCCESS = 3
};
bool FactoryResultType_IsValid(int value);
const FactoryResultType FactoryResultType_MIN = FR_FAIL;
const FactoryResultType FactoryResultType_MAX = FR_HUGE_SUCCESS;
const int FactoryResultType_ARRAYSIZE = FactoryResultType_MAX + 1;

const ::google::protobuf::EnumDescriptor* FactoryResultType_descriptor();
inline const ::std::string& FactoryResultType_Name(FactoryResultType value) {
  return ::google::protobuf::internal::NameOfEnum(
    FactoryResultType_descriptor(), value);
}
inline bool FactoryResultType_Parse(
    const ::std::string& name, FactoryResultType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FactoryResultType>(
    FactoryResultType_descriptor(), name, value);
}
enum FactoryLimitType {
  FL_TRY = 1,
  FL_SUCCESS = 2
};
bool FactoryLimitType_IsValid(int value);
const FactoryLimitType FactoryLimitType_MIN = FL_TRY;
const FactoryLimitType FactoryLimitType_MAX = FL_SUCCESS;
const int FactoryLimitType_ARRAYSIZE = FactoryLimitType_MAX + 1;

const ::google::protobuf::EnumDescriptor* FactoryLimitType_descriptor();
inline const ::std::string& FactoryLimitType_Name(FactoryLimitType value) {
  return ::google::protobuf::internal::NameOfEnum(
    FactoryLimitType_descriptor(), value);
}
inline bool FactoryLimitType_Parse(
    const ::std::string& name, FactoryLimitType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FactoryLimitType>(
    FactoryLimitType_descriptor(), name, value);
}
enum FactoryLimitTimeType {
  FLT_ONCE = 1,
  FLT_DAY = 2,
  FLT_WEEK = 3,
  FLT_MONTH = 4,
  FLT_NONE = 5
};
bool FactoryLimitTimeType_IsValid(int value);
const FactoryLimitTimeType FactoryLimitTimeType_MIN = FLT_ONCE;
const FactoryLimitTimeType FactoryLimitTimeType_MAX = FLT_NONE;
const int FactoryLimitTimeType_ARRAYSIZE = FactoryLimitTimeType_MAX + 1;

const ::google::protobuf::EnumDescriptor* FactoryLimitTimeType_descriptor();
inline const ::std::string& FactoryLimitTimeType_Name(FactoryLimitTimeType value) {
  return ::google::protobuf::internal::NameOfEnum(
    FactoryLimitTimeType_descriptor(), value);
}
inline bool FactoryLimitTimeType_Parse(
    const ::std::string& name, FactoryLimitTimeType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FactoryLimitTimeType>(
    FactoryLimitTimeType_descriptor(), name, value);
}
enum FactoryVisibleType {
  FV_CLOSE = 1,
  FV_OPEN = 2,
  FV_PERIOD = 3
};
bool FactoryVisibleType_IsValid(int value);
const FactoryVisibleType FactoryVisibleType_MIN = FV_CLOSE;
const FactoryVisibleType FactoryVisibleType_MAX = FV_PERIOD;
const int FactoryVisibleType_ARRAYSIZE = FactoryVisibleType_MAX + 1;

const ::google::protobuf::EnumDescriptor* FactoryVisibleType_descriptor();
inline const ::std::string& FactoryVisibleType_Name(FactoryVisibleType value) {
  return ::google::protobuf::internal::NameOfEnum(
    FactoryVisibleType_descriptor(), value);
}
inline bool FactoryVisibleType_Parse(
    const ::std::string& name, FactoryVisibleType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FactoryVisibleType>(
    FactoryVisibleType_descriptor(), name, value);
}
// ===================================================================

class Result : public ::google::protobuf::Message {
 public:
  Result();
  virtual ~Result();

  Result(const Result& from);

  inline Result& operator=(const Result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Result& default_instance();

  void Swap(Result* other);

  // implements Message ----------------------------------------------

  Result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Result& from);
  void MergeFrom(const Result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 error_code = 1;
  inline bool has_error_code() const;
  inline void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  inline ::google::protobuf::int32 error_code() const;
  inline void set_error_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.Result)
 private:
  inline void set_has_error_code();
  inline void clear_has_error_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 error_code_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static Result* default_instance_;
};
// -------------------------------------------------------------------

class Version : public ::google::protobuf::Message {
 public:
  Version();
  virtual ~Version();

  Version(const Version& from);

  inline Version& operator=(const Version& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Version& default_instance();

  void Swap(Version* other);

  // implements Message ----------------------------------------------

  Version* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Version& from);
  void MergeFrom(const Version& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 major = 1;
  inline bool has_major() const;
  inline void clear_major();
  static const int kMajorFieldNumber = 1;
  inline ::google::protobuf::int32 major() const;
  inline void set_major(::google::protobuf::int32 value);

  // required int32 minor = 2;
  inline bool has_minor() const;
  inline void clear_minor();
  static const int kMinorFieldNumber = 2;
  inline ::google::protobuf::int32 minor() const;
  inline void set_minor(::google::protobuf::int32 value);

  // required int32 revision = 3;
  inline bool has_revision() const;
  inline void clear_revision();
  static const int kRevisionFieldNumber = 3;
  inline ::google::protobuf::int32 revision() const;
  inline void set_revision(::google::protobuf::int32 value);

  // required int32 changelist = 4;
  inline bool has_changelist() const;
  inline void clear_changelist();
  static const int kChangelistFieldNumber = 4;
  inline ::google::protobuf::int32 changelist() const;
  inline void set_changelist(::google::protobuf::int32 value);

  // required int32 build_num = 5;
  inline bool has_build_num() const;
  inline void clear_build_num();
  static const int kBuildNumFieldNumber = 5;
  inline ::google::protobuf::int32 build_num() const;
  inline void set_build_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.Version)
 private:
  inline void set_has_major();
  inline void clear_has_major();
  inline void set_has_minor();
  inline void clear_has_minor();
  inline void set_has_revision();
  inline void clear_has_revision();
  inline void set_has_changelist();
  inline void clear_has_changelist();
  inline void set_has_build_num();
  inline void clear_has_build_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 major_;
  ::google::protobuf::int32 minor_;
  ::google::protobuf::int32 revision_;
  ::google::protobuf::int32 changelist_;
  ::google::protobuf::int32 build_num_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static Version* default_instance_;
};
// -------------------------------------------------------------------

class Protocol : public ::google::protobuf::Message {
 public:
  Protocol();
  virtual ~Protocol();

  Protocol(const Protocol& from);

  inline Protocol& operator=(const Protocol& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Protocol& default_instance();

  void Swap(Protocol* other);

  // implements Message ----------------------------------------------

  Protocol* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Protocol& from);
  void MergeFrom(const Protocol& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string master_data_hash = 1;
  inline bool has_master_data_hash() const;
  inline void clear_master_data_hash();
  static const int kMasterDataHashFieldNumber = 1;
  inline const ::std::string& master_data_hash() const;
  inline void set_master_data_hash(const ::std::string& value);
  inline void set_master_data_hash(const char* value);
  inline void set_master_data_hash(const char* value, size_t size);
  inline ::std::string* mutable_master_data_hash();
  inline ::std::string* release_master_data_hash();
  inline void set_allocated_master_data_hash(::std::string* master_data_hash);

  // required string common_data_hash = 2;
  inline bool has_common_data_hash() const;
  inline void clear_common_data_hash();
  static const int kCommonDataHashFieldNumber = 2;
  inline const ::std::string& common_data_hash() const;
  inline void set_common_data_hash(const ::std::string& value);
  inline void set_common_data_hash(const char* value);
  inline void set_common_data_hash(const char* value, size_t size);
  inline ::std::string* mutable_common_data_hash();
  inline ::std::string* release_common_data_hash();
  inline void set_allocated_common_data_hash(::std::string* common_data_hash);

  // required string session_message_hash = 10;
  inline bool has_session_message_hash() const;
  inline void clear_session_message_hash();
  static const int kSessionMessageHashFieldNumber = 10;
  inline const ::std::string& session_message_hash() const;
  inline void set_session_message_hash(const ::std::string& value);
  inline void set_session_message_hash(const char* value);
  inline void set_session_message_hash(const char* value, size_t size);
  inline ::std::string* mutable_session_message_hash();
  inline ::std::string* release_session_message_hash();
  inline void set_allocated_session_message_hash(::std::string* session_message_hash);

  // required string channel_message_hash = 11;
  inline bool has_channel_message_hash() const;
  inline void clear_channel_message_hash();
  static const int kChannelMessageHashFieldNumber = 11;
  inline const ::std::string& channel_message_hash() const;
  inline void set_channel_message_hash(const ::std::string& value);
  inline void set_channel_message_hash(const char* value);
  inline void set_channel_message_hash(const char* value, size_t size);
  inline ::std::string* mutable_channel_message_hash();
  inline ::std::string* release_channel_message_hash();
  inline void set_allocated_channel_message_hash(::std::string* channel_message_hash);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.Protocol)
 private:
  inline void set_has_master_data_hash();
  inline void clear_has_master_data_hash();
  inline void set_has_common_data_hash();
  inline void clear_has_common_data_hash();
  inline void set_has_session_message_hash();
  inline void clear_has_session_message_hash();
  inline void set_has_channel_message_hash();
  inline void clear_has_channel_message_hash();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* master_data_hash_;
  ::std::string* common_data_hash_;
  ::std::string* session_message_hash_;
  ::std::string* channel_message_hash_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static Protocol* default_instance_;
};
// -------------------------------------------------------------------

class Credential : public ::google::protobuf::Message {
 public:
  Credential();
  virtual ~Credential();

  Credential(const Credential& from);

  inline Credential& operator=(const Credential& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Credential& default_instance();

  void Swap(Credential* other);

  // implements Message ----------------------------------------------

  Credential* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Credential& from);
  void MergeFrom(const Credential& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 platform_type = 1;
  inline bool has_platform_type() const;
  inline void clear_platform_type();
  static const int kPlatformTypeFieldNumber = 1;
  inline ::google::protobuf::int32 platform_type() const;
  inline void set_platform_type(::google::protobuf::int32 value);

  // required string platform_uid = 2;
  inline bool has_platform_uid() const;
  inline void clear_platform_uid();
  static const int kPlatformUidFieldNumber = 2;
  inline const ::std::string& platform_uid() const;
  inline void set_platform_uid(const ::std::string& value);
  inline void set_platform_uid(const char* value);
  inline void set_platform_uid(const char* value, size_t size);
  inline ::std::string* mutable_platform_uid();
  inline ::std::string* release_platform_uid();
  inline void set_allocated_platform_uid(::std::string* platform_uid);

  // required int32 os_type = 3;
  inline bool has_os_type() const;
  inline void clear_os_type();
  static const int kOsTypeFieldNumber = 3;
  inline ::google::protobuf::int32 os_type() const;
  inline void set_os_type(::google::protobuf::int32 value);

  // required int32 market_type = 4;
  inline bool has_market_type() const;
  inline void clear_market_type();
  static const int kMarketTypeFieldNumber = 4;
  inline ::google::protobuf::int32 market_type() const;
  inline void set_market_type(::google::protobuf::int32 value);

  // required string country_code = 5;
  inline bool has_country_code() const;
  inline void clear_country_code();
  static const int kCountryCodeFieldNumber = 5;
  inline const ::std::string& country_code() const;
  inline void set_country_code(const ::std::string& value);
  inline void set_country_code(const char* value);
  inline void set_country_code(const char* value, size_t size);
  inline ::std::string* mutable_country_code();
  inline ::std::string* release_country_code();
  inline void set_allocated_country_code(::std::string* country_code);

  // required string lang_code = 6;
  inline bool has_lang_code() const;
  inline void clear_lang_code();
  static const int kLangCodeFieldNumber = 6;
  inline const ::std::string& lang_code() const;
  inline void set_lang_code(const ::std::string& value);
  inline void set_lang_code(const char* value);
  inline void set_lang_code(const char* value, size_t size);
  inline ::std::string* mutable_lang_code();
  inline ::std::string* release_lang_code();
  inline void set_allocated_lang_code(::std::string* lang_code);

  // optional string push_token = 7;
  inline bool has_push_token() const;
  inline void clear_push_token();
  static const int kPushTokenFieldNumber = 7;
  inline const ::std::string& push_token() const;
  inline void set_push_token(const ::std::string& value);
  inline void set_push_token(const char* value);
  inline void set_push_token(const char* value, size_t size);
  inline ::std::string* mutable_push_token();
  inline ::std::string* release_push_token();
  inline void set_allocated_push_token(::std::string* push_token);

  // optional string ad_id = 10;
  inline bool has_ad_id() const;
  inline void clear_ad_id();
  static const int kAdIdFieldNumber = 10;
  inline const ::std::string& ad_id() const;
  inline void set_ad_id(const ::std::string& value);
  inline void set_ad_id(const char* value);
  inline void set_ad_id(const char* value, size_t size);
  inline ::std::string* mutable_ad_id();
  inline ::std::string* release_ad_id();
  inline void set_allocated_ad_id(::std::string* ad_id);

  // optional string access_token = 11;
  inline bool has_access_token() const;
  inline void clear_access_token();
  static const int kAccessTokenFieldNumber = 11;
  inline const ::std::string& access_token() const;
  inline void set_access_token(const ::std::string& value);
  inline void set_access_token(const char* value);
  inline void set_access_token(const char* value, size_t size);
  inline ::std::string* mutable_access_token();
  inline ::std::string* release_access_token();
  inline void set_allocated_access_token(::std::string* access_token);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.Credential)
 private:
  inline void set_has_platform_type();
  inline void clear_has_platform_type();
  inline void set_has_platform_uid();
  inline void clear_has_platform_uid();
  inline void set_has_os_type();
  inline void clear_has_os_type();
  inline void set_has_market_type();
  inline void clear_has_market_type();
  inline void set_has_country_code();
  inline void clear_has_country_code();
  inline void set_has_lang_code();
  inline void clear_has_lang_code();
  inline void set_has_push_token();
  inline void clear_has_push_token();
  inline void set_has_ad_id();
  inline void clear_has_ad_id();
  inline void set_has_access_token();
  inline void clear_has_access_token();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* platform_uid_;
  ::google::protobuf::int32 platform_type_;
  ::google::protobuf::int32 os_type_;
  ::std::string* country_code_;
  ::std::string* lang_code_;
  ::std::string* push_token_;
  ::std::string* ad_id_;
  ::std::string* access_token_;
  ::google::protobuf::int32 market_type_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static Credential* default_instance_;
};
// -------------------------------------------------------------------

class Endpoint : public ::google::protobuf::Message {
 public:
  Endpoint();
  virtual ~Endpoint();

  Endpoint(const Endpoint& from);

  inline Endpoint& operator=(const Endpoint& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Endpoint& default_instance();

  void Swap(Endpoint* other);

  // implements Message ----------------------------------------------

  Endpoint* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Endpoint& from);
  void MergeFrom(const Endpoint& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string host = 1;
  inline bool has_host() const;
  inline void clear_host();
  static const int kHostFieldNumber = 1;
  inline const ::std::string& host() const;
  inline void set_host(const ::std::string& value);
  inline void set_host(const char* value);
  inline void set_host(const char* value, size_t size);
  inline ::std::string* mutable_host();
  inline ::std::string* release_host();
  inline void set_allocated_host(::std::string* host);

  // required int32 port = 2;
  inline bool has_port() const;
  inline void clear_port();
  static const int kPortFieldNumber = 2;
  inline ::google::protobuf::int32 port() const;
  inline void set_port(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.Endpoint)
 private:
  inline void set_has_host();
  inline void clear_has_host();
  inline void set_has_port();
  inline void clear_has_port();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* host_;
  ::google::protobuf::int32 port_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static Endpoint* default_instance_;
};
// -------------------------------------------------------------------

class AccountBlockInfo : public ::google::protobuf::Message {
 public:
  AccountBlockInfo();
  virtual ~AccountBlockInfo();

  AccountBlockInfo(const AccountBlockInfo& from);

  inline AccountBlockInfo& operator=(const AccountBlockInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AccountBlockInfo& default_instance();

  void Swap(AccountBlockInfo* other);

  // implements Message ----------------------------------------------

  AccountBlockInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AccountBlockInfo& from);
  void MergeFrom(const AccountBlockInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 block_type = 1;
  inline bool has_block_type() const;
  inline void clear_block_type();
  static const int kBlockTypeFieldNumber = 1;
  inline ::google::protobuf::int32 block_type() const;
  inline void set_block_type(::google::protobuf::int32 value);

  // required int32 block_reason = 2;
  inline bool has_block_reason() const;
  inline void clear_block_reason();
  static const int kBlockReasonFieldNumber = 2;
  inline ::google::protobuf::int32 block_reason() const;
  inline void set_block_reason(::google::protobuf::int32 value);

  // required int32 block_message = 3;
  inline bool has_block_message() const;
  inline void clear_block_message();
  static const int kBlockMessageFieldNumber = 3;
  inline ::google::protobuf::int32 block_message() const;
  inline void set_block_message(::google::protobuf::int32 value);

  // required int64 start_time = 4;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 4;
  inline ::google::protobuf::int64 start_time() const;
  inline void set_start_time(::google::protobuf::int64 value);

  // required int64 end_time = 5;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 5;
  inline ::google::protobuf::int64 end_time() const;
  inline void set_end_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.AccountBlockInfo)
 private:
  inline void set_has_block_type();
  inline void clear_has_block_type();
  inline void set_has_block_reason();
  inline void clear_has_block_reason();
  inline void set_has_block_message();
  inline void clear_has_block_message();
  inline void set_has_start_time();
  inline void clear_has_start_time();
  inline void set_has_end_time();
  inline void clear_has_end_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 block_type_;
  ::google::protobuf::int32 block_reason_;
  ::google::protobuf::int64 start_time_;
  ::google::protobuf::int64 end_time_;
  ::google::protobuf::int32 block_message_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static AccountBlockInfo* default_instance_;
};
// -------------------------------------------------------------------

class GlobalAccount : public ::google::protobuf::Message {
 public:
  GlobalAccount();
  virtual ~GlobalAccount();

  GlobalAccount(const GlobalAccount& from);

  inline GlobalAccount& operator=(const GlobalAccount& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GlobalAccount& default_instance();

  void Swap(GlobalAccount* other);

  // implements Message ----------------------------------------------

  GlobalAccount* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GlobalAccount& from);
  void MergeFrom(const GlobalAccount& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef GlobalAccount_TYPE TYPE;
  static const TYPE NORMAL = GlobalAccount_TYPE_NORMAL;
  static const TYPE BOT = GlobalAccount_TYPE_BOT;
  static const TYPE QA = GlobalAccount_TYPE_QA;
  static const TYPE GM = GlobalAccount_TYPE_GM;
  static const TYPE ADMIN = GlobalAccount_TYPE_ADMIN;
  static inline bool TYPE_IsValid(int value) {
    return GlobalAccount_TYPE_IsValid(value);
  }
  static const TYPE TYPE_MIN =
    GlobalAccount_TYPE_TYPE_MIN;
  static const TYPE TYPE_MAX =
    GlobalAccount_TYPE_TYPE_MAX;
  static const int TYPE_ARRAYSIZE =
    GlobalAccount_TYPE_TYPE_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  TYPE_descriptor() {
    return GlobalAccount_TYPE_descriptor();
  }
  static inline const ::std::string& TYPE_Name(TYPE value) {
    return GlobalAccount_TYPE_Name(value);
  }
  static inline bool TYPE_Parse(const ::std::string& name,
      TYPE* value) {
    return GlobalAccount_TYPE_Parse(name, value);
  }

  typedef GlobalAccount_STATUS STATUS;
  static const STATUS STATUS_NORMAL = GlobalAccount_STATUS_STATUS_NORMAL;
  static const STATUS STATUS_WITHDRAWAL_WAIT = GlobalAccount_STATUS_STATUS_WITHDRAWAL_WAIT;
  static const STATUS STATUS_WITHDRAWAL = GlobalAccount_STATUS_STATUS_WITHDRAWAL;
  static inline bool STATUS_IsValid(int value) {
    return GlobalAccount_STATUS_IsValid(value);
  }
  static const STATUS STATUS_MIN =
    GlobalAccount_STATUS_STATUS_MIN;
  static const STATUS STATUS_MAX =
    GlobalAccount_STATUS_STATUS_MAX;
  static const int STATUS_ARRAYSIZE =
    GlobalAccount_STATUS_STATUS_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  STATUS_descriptor() {
    return GlobalAccount_STATUS_descriptor();
  }
  static inline const ::std::string& STATUS_Name(STATUS value) {
    return GlobalAccount_STATUS_Name(value);
  }
  static inline bool STATUS_Parse(const ::std::string& name,
      STATUS* value) {
    return GlobalAccount_STATUS_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int64 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::int64 account_id() const;
  inline void set_account_id(::google::protobuf::int64 value);

  // optional string nickname = 2;
  inline bool has_nickname() const;
  inline void clear_nickname();
  static const int kNicknameFieldNumber = 2;
  inline const ::std::string& nickname() const;
  inline void set_nickname(const ::std::string& value);
  inline void set_nickname(const char* value);
  inline void set_nickname(const char* value, size_t size);
  inline ::std::string* mutable_nickname();
  inline ::std::string* release_nickname();
  inline void set_allocated_nickname(::std::string* nickname);

  // optional .b2.protocol.commondata.GlobalAccount.TYPE type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::b2::protocol::commondata::GlobalAccount_TYPE type() const;
  inline void set_type(::b2::protocol::commondata::GlobalAccount_TYPE value);

  // optional .b2.protocol.commondata.GlobalAccount.STATUS status = 4;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 4;
  inline ::b2::protocol::commondata::GlobalAccount_STATUS status() const;
  inline void set_status(::b2::protocol::commondata::GlobalAccount_STATUS value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.GlobalAccount)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_nickname();
  inline void clear_has_nickname();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 account_id_;
  ::std::string* nickname_;
  int type_;
  int status_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static GlobalAccount* default_instance_;
};
// -------------------------------------------------------------------

class WorldAccount : public ::google::protobuf::Message {
 public:
  WorldAccount();
  virtual ~WorldAccount();

  WorldAccount(const WorldAccount& from);

  inline WorldAccount& operator=(const WorldAccount& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldAccount& default_instance();

  void Swap(WorldAccount* other);

  // implements Message ----------------------------------------------

  WorldAccount* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldAccount& from);
  void MergeFrom(const WorldAccount& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional int64 account_id = 2;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 2;
  inline ::google::protobuf::int64 account_id() const;
  inline void set_account_id(::google::protobuf::int64 value);

  // optional int32 cash = 10;
  inline bool has_cash() const;
  inline void clear_cash();
  static const int kCashFieldNumber = 10;
  inline ::google::protobuf::int32 cash() const;
  inline void set_cash(::google::protobuf::int32 value);

  // optional int32 money = 11;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 11;
  inline ::google::protobuf::int32 money() const;
  inline void set_money(::google::protobuf::int32 value);

  // optional int32 blade_point = 12;
  inline bool has_blade_point() const;
  inline void clear_blade_point();
  static const int kBladePointFieldNumber = 12;
  inline ::google::protobuf::int32 blade_point() const;
  inline void set_blade_point(::google::protobuf::int32 value);

  // optional int32 blade_point_max = 13;
  inline bool has_blade_point_max() const;
  inline void clear_blade_point_max();
  static const int kBladePointMaxFieldNumber = 13;
  inline ::google::protobuf::int32 blade_point_max() const;
  inline void set_blade_point_max(::google::protobuf::int32 value);

  // optional int32 blade_point_charge_lefttime_second = 14;
  inline bool has_blade_point_charge_lefttime_second() const;
  inline void clear_blade_point_charge_lefttime_second();
  static const int kBladePointChargeLefttimeSecondFieldNumber = 14;
  inline ::google::protobuf::int32 blade_point_charge_lefttime_second() const;
  inline void set_blade_point_charge_lefttime_second(::google::protobuf::int32 value);

  // optional int32 inventory_aether_buy_count = 15;
  inline bool has_inventory_aether_buy_count() const;
  inline void clear_inventory_aether_buy_count();
  static const int kInventoryAetherBuyCountFieldNumber = 15;
  inline ::google::protobuf::int32 inventory_aether_buy_count() const;
  inline void set_inventory_aether_buy_count(::google::protobuf::int32 value);

  // optional int32 inventory_consumable_slot_count = 16;
  inline bool has_inventory_consumable_slot_count() const;
  inline void clear_inventory_consumable_slot_count();
  static const int kInventoryConsumableSlotCountFieldNumber = 16;
  inline ::google::protobuf::int32 inventory_consumable_slot_count() const;
  inline void set_inventory_consumable_slot_count(::google::protobuf::int32 value);

  // optional int32 dark_crystal = 17;
  inline bool has_dark_crystal() const;
  inline void clear_dark_crystal();
  static const int kDarkCrystalFieldNumber = 17;
  inline ::google::protobuf::int32 dark_crystal() const;
  inline void set_dark_crystal(::google::protobuf::int32 value);

  // optional int32 stage_boost_ticket = 18;
  inline bool has_stage_boost_ticket() const;
  inline void clear_stage_boost_ticket();
  static const int kStageBoostTicketFieldNumber = 18;
  inline ::google::protobuf::int32 stage_boost_ticket() const;
  inline void set_stage_boost_ticket(::google::protobuf::int32 value);

  // optional int32 shop_ten_lottery_ticket = 19;
  inline bool has_shop_ten_lottery_ticket() const;
  inline void clear_shop_ten_lottery_ticket();
  static const int kShopTenLotteryTicketFieldNumber = 19;
  inline ::google::protobuf::int32 shop_ten_lottery_ticket() const;
  inline void set_shop_ten_lottery_ticket(::google::protobuf::int32 value);

  // optional int32 fame_point = 20;
  inline bool has_fame_point() const;
  inline void clear_fame_point();
  static const int kFamePointFieldNumber = 20;
  inline ::google::protobuf::int32 fame_point() const;
  inline void set_fame_point(::google::protobuf::int32 value);

  // optional int32 social_point = 21;
  inline bool has_social_point() const;
  inline void clear_social_point();
  static const int kSocialPointFieldNumber = 21;
  inline ::google::protobuf::int32 social_point() const;
  inline void set_social_point(::google::protobuf::int32 value);

  // optional int32 last_play_stage_id = 22;
  inline bool has_last_play_stage_id() const;
  inline void clear_last_play_stage_id();
  static const int kLastPlayStageIdFieldNumber = 22;
  inline ::google::protobuf::int32 last_play_stage_id() const;
  inline void set_last_play_stage_id(::google::protobuf::int32 value);

  // optional int32 last_clear_stage_id_normal = 23;
  inline bool has_last_clear_stage_id_normal() const;
  inline void clear_last_clear_stage_id_normal();
  static const int kLastClearStageIdNormalFieldNumber = 23;
  inline ::google::protobuf::int32 last_clear_stage_id_normal() const;
  inline void set_last_clear_stage_id_normal(::google::protobuf::int32 value);

  // optional int32 last_clear_stage_id_hard = 24;
  inline bool has_last_clear_stage_id_hard() const;
  inline void clear_last_clear_stage_id_hard();
  static const int kLastClearStageIdHardFieldNumber = 24;
  inline ::google::protobuf::int32 last_clear_stage_id_hard() const;
  inline void set_last_clear_stage_id_hard(::google::protobuf::int32 value);

  // optional int32 last_clear_stage_id_very_hard = 25;
  inline bool has_last_clear_stage_id_very_hard() const;
  inline void clear_last_clear_stage_id_very_hard();
  static const int kLastClearStageIdVeryHardFieldNumber = 25;
  inline ::google::protobuf::int32 last_clear_stage_id_very_hard() const;
  inline void set_last_clear_stage_id_very_hard(::google::protobuf::int32 value);

  // optional int32 last_clear_stage_id_hell = 26;
  inline bool has_last_clear_stage_id_hell() const;
  inline void clear_last_clear_stage_id_hell();
  static const int kLastClearStageIdHellFieldNumber = 26;
  inline ::google::protobuf::int32 last_clear_stage_id_hell() const;
  inline void set_last_clear_stage_id_hell(::google::protobuf::int32 value);

  // optional int32 attendance_day = 27;
  inline bool has_attendance_day() const;
  inline void clear_attendance_day();
  static const int kAttendanceDayFieldNumber = 27;
  inline ::google::protobuf::int32 attendance_day() const;
  inline void set_attendance_day(::google::protobuf::int32 value);

  // optional .b2.protocol.commondata.DailyAttendanceType attendance_type = 28;
  inline bool has_attendance_type() const;
  inline void clear_attendance_type();
  static const int kAttendanceTypeFieldNumber = 28;
  inline ::b2::protocol::commondata::DailyAttendanceType attendance_type() const;
  inline void set_attendance_type(::b2::protocol::commondata::DailyAttendanceType value);

  // optional int64 nextAttendance_time = 29;
  inline bool has_nextattendance_time() const;
  inline void clear_nextattendance_time();
  static const int kNextAttendanceTimeFieldNumber = 29;
  inline ::google::protobuf::int64 nextattendance_time() const;
  inline void set_nextattendance_time(::google::protobuf::int64 value);

  // optional int32 pvp_match_grade = 30;
  inline bool has_pvp_match_grade() const;
  inline void clear_pvp_match_grade();
  static const int kPvpMatchGradeFieldNumber = 30;
  inline ::google::protobuf::int32 pvp_match_grade() const;
  inline void set_pvp_match_grade(::google::protobuf::int32 value);

  // optional int32 pvp_match_star_count = 31;
  inline bool has_pvp_match_star_count() const;
  inline void clear_pvp_match_star_count();
  static const int kPvpMatchStarCountFieldNumber = 31;
  inline ::google::protobuf::int32 pvp_match_star_count() const;
  inline void set_pvp_match_star_count(::google::protobuf::int32 value);

  // optional int32 assault_match_grade = 32;
  inline bool has_assault_match_grade() const;
  inline void clear_assault_match_grade();
  static const int kAssaultMatchGradeFieldNumber = 32;
  inline ::google::protobuf::int32 assault_match_grade() const;
  inline void set_assault_match_grade(::google::protobuf::int32 value);

  // optional int32 assault_match_star_count = 33;
  inline bool has_assault_match_star_count() const;
  inline void clear_assault_match_star_count();
  static const int kAssaultMatchStarCountFieldNumber = 33;
  inline ::google::protobuf::int32 assault_match_star_count() const;
  inline void set_assault_match_star_count(::google::protobuf::int32 value);

  // optional int32 daily_play_time_in_sec = 40;
  inline bool has_daily_play_time_in_sec() const;
  inline void clear_daily_play_time_in_sec();
  static const int kDailyPlayTimeInSecFieldNumber = 40;
  inline ::google::protobuf::int32 daily_play_time_in_sec() const;
  inline void set_daily_play_time_in_sec(::google::protobuf::int32 value);

  // optional int32 daily_play_time_reward_index = 41;
  inline bool has_daily_play_time_reward_index() const;
  inline void clear_daily_play_time_reward_index();
  static const int kDailyPlayTimeRewardIndexFieldNumber = 41;
  inline ::google::protobuf::int32 daily_play_time_reward_index() const;
  inline void set_daily_play_time_reward_index(::google::protobuf::int32 value);

  // optional int64 daily_play_time_update_time = 42;
  inline bool has_daily_play_time_update_time() const;
  inline void clear_daily_play_time_update_time();
  static const int kDailyPlayTimeUpdateTimeFieldNumber = 42;
  inline ::google::protobuf::int64 daily_play_time_update_time() const;
  inline void set_daily_play_time_update_time(::google::protobuf::int64 value);

  // optional int64 rest_time = 43;
  inline bool has_rest_time() const;
  inline void clear_rest_time();
  static const int kRestTimeFieldNumber = 43;
  inline ::google::protobuf::int64 rest_time() const;
  inline void set_rest_time(::google::protobuf::int64 value);

  // optional int64 next_fairy_gift_time = 44;
  inline bool has_next_fairy_gift_time() const;
  inline void clear_next_fairy_gift_time();
  static const int kNextFairyGiftTimeFieldNumber = 44;
  inline ::google::protobuf::int64 next_fairy_gift_time() const;
  inline void set_next_fairy_gift_time(::google::protobuf::int64 value);

  // optional int64 leave_guild_time = 50;
  inline bool has_leave_guild_time() const;
  inline void clear_leave_guild_time();
  static const int kLeaveGuildTimeFieldNumber = 50;
  inline ::google::protobuf::int64 leave_guild_time() const;
  inline void set_leave_guild_time(::google::protobuf::int64 value);

  // optional int64 guild_id = 51;
  inline bool has_guild_id() const;
  inline void clear_guild_id();
  static const int kGuildIdFieldNumber = 51;
  inline ::google::protobuf::int64 guild_id() const;
  inline void set_guild_id(::google::protobuf::int64 value);

  // optional int64 kicked_guild_id = 52;
  inline bool has_kicked_guild_id() const;
  inline void clear_kicked_guild_id();
  static const int kKickedGuildIdFieldNumber = 52;
  inline ::google::protobuf::int64 kicked_guild_id() const;
  inline void set_kicked_guild_id(::google::protobuf::int64 value);

  // optional int64 gold_buff_end_time = 60;
  inline bool has_gold_buff_end_time() const;
  inline void clear_gold_buff_end_time();
  static const int kGoldBuffEndTimeFieldNumber = 60;
  inline ::google::protobuf::int64 gold_buff_end_time() const;
  inline void set_gold_buff_end_time(::google::protobuf::int64 value);

  // optional int64 exp_buff_end_time = 61;
  inline bool has_exp_buff_end_time() const;
  inline void clear_exp_buff_end_time();
  static const int kExpBuffEndTimeFieldNumber = 61;
  inline ::google::protobuf::int64 exp_buff_end_time() const;
  inline void set_exp_buff_end_time(::google::protobuf::int64 value);

  // optional int64 gold_buff_ticket = 62;
  inline bool has_gold_buff_ticket() const;
  inline void clear_gold_buff_ticket();
  static const int kGoldBuffTicketFieldNumber = 62;
  inline ::google::protobuf::int64 gold_buff_ticket() const;
  inline void set_gold_buff_ticket(::google::protobuf::int64 value);

  // optional int64 exp_buff_ticket = 63;
  inline bool has_exp_buff_ticket() const;
  inline void clear_exp_buff_ticket();
  static const int kExpBuffTicketFieldNumber = 63;
  inline ::google::protobuf::int64 exp_buff_ticket() const;
  inline void set_exp_buff_ticket(::google::protobuf::int64 value);

  // optional int32 stage_auto_clear_ticket = 70;
  inline bool has_stage_auto_clear_ticket() const;
  inline void clear_stage_auto_clear_ticket();
  static const int kStageAutoClearTicketFieldNumber = 70;
  inline ::google::protobuf::int32 stage_auto_clear_ticket() const;
  inline void set_stage_auto_clear_ticket(::google::protobuf::int32 value);

  // optional int32 exchange_count_gold = 71;
  inline bool has_exchange_count_gold() const;
  inline void clear_exchange_count_gold();
  static const int kExchangeCountGoldFieldNumber = 71;
  inline ::google::protobuf::int32 exchange_count_gold() const;
  inline void set_exchange_count_gold(::google::protobuf::int32 value);

  // optional int32 exchange_count_gem = 72;
  inline bool has_exchange_count_gem() const;
  inline void clear_exchange_count_gem();
  static const int kExchangeCountGemFieldNumber = 72;
  inline ::google::protobuf::int32 exchange_count_gem() const;
  inline void set_exchange_count_gem(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.WorldAccount)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_cash();
  inline void clear_has_cash();
  inline void set_has_money();
  inline void clear_has_money();
  inline void set_has_blade_point();
  inline void clear_has_blade_point();
  inline void set_has_blade_point_max();
  inline void clear_has_blade_point_max();
  inline void set_has_blade_point_charge_lefttime_second();
  inline void clear_has_blade_point_charge_lefttime_second();
  inline void set_has_inventory_aether_buy_count();
  inline void clear_has_inventory_aether_buy_count();
  inline void set_has_inventory_consumable_slot_count();
  inline void clear_has_inventory_consumable_slot_count();
  inline void set_has_dark_crystal();
  inline void clear_has_dark_crystal();
  inline void set_has_stage_boost_ticket();
  inline void clear_has_stage_boost_ticket();
  inline void set_has_shop_ten_lottery_ticket();
  inline void clear_has_shop_ten_lottery_ticket();
  inline void set_has_fame_point();
  inline void clear_has_fame_point();
  inline void set_has_social_point();
  inline void clear_has_social_point();
  inline void set_has_last_play_stage_id();
  inline void clear_has_last_play_stage_id();
  inline void set_has_last_clear_stage_id_normal();
  inline void clear_has_last_clear_stage_id_normal();
  inline void set_has_last_clear_stage_id_hard();
  inline void clear_has_last_clear_stage_id_hard();
  inline void set_has_last_clear_stage_id_very_hard();
  inline void clear_has_last_clear_stage_id_very_hard();
  inline void set_has_last_clear_stage_id_hell();
  inline void clear_has_last_clear_stage_id_hell();
  inline void set_has_attendance_day();
  inline void clear_has_attendance_day();
  inline void set_has_attendance_type();
  inline void clear_has_attendance_type();
  inline void set_has_nextattendance_time();
  inline void clear_has_nextattendance_time();
  inline void set_has_pvp_match_grade();
  inline void clear_has_pvp_match_grade();
  inline void set_has_pvp_match_star_count();
  inline void clear_has_pvp_match_star_count();
  inline void set_has_assault_match_grade();
  inline void clear_has_assault_match_grade();
  inline void set_has_assault_match_star_count();
  inline void clear_has_assault_match_star_count();
  inline void set_has_daily_play_time_in_sec();
  inline void clear_has_daily_play_time_in_sec();
  inline void set_has_daily_play_time_reward_index();
  inline void clear_has_daily_play_time_reward_index();
  inline void set_has_daily_play_time_update_time();
  inline void clear_has_daily_play_time_update_time();
  inline void set_has_rest_time();
  inline void clear_has_rest_time();
  inline void set_has_next_fairy_gift_time();
  inline void clear_has_next_fairy_gift_time();
  inline void set_has_leave_guild_time();
  inline void clear_has_leave_guild_time();
  inline void set_has_guild_id();
  inline void clear_has_guild_id();
  inline void set_has_kicked_guild_id();
  inline void clear_has_kicked_guild_id();
  inline void set_has_gold_buff_end_time();
  inline void clear_has_gold_buff_end_time();
  inline void set_has_exp_buff_end_time();
  inline void clear_has_exp_buff_end_time();
  inline void set_has_gold_buff_ticket();
  inline void clear_has_gold_buff_ticket();
  inline void set_has_exp_buff_ticket();
  inline void clear_has_exp_buff_ticket();
  inline void set_has_stage_auto_clear_ticket();
  inline void clear_has_stage_auto_clear_ticket();
  inline void set_has_exchange_count_gold();
  inline void clear_has_exchange_count_gold();
  inline void set_has_exchange_count_gem();
  inline void clear_has_exchange_count_gem();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[2];
  ::std::string* name_;
  ::google::protobuf::int64 account_id_;
  ::google::protobuf::int32 cash_;
  ::google::protobuf::int32 money_;
  ::google::protobuf::int32 blade_point_;
  ::google::protobuf::int32 blade_point_max_;
  ::google::protobuf::int32 blade_point_charge_lefttime_second_;
  ::google::protobuf::int32 inventory_aether_buy_count_;
  ::google::protobuf::int32 inventory_consumable_slot_count_;
  ::google::protobuf::int32 dark_crystal_;
  ::google::protobuf::int32 stage_boost_ticket_;
  ::google::protobuf::int32 shop_ten_lottery_ticket_;
  ::google::protobuf::int32 fame_point_;
  ::google::protobuf::int32 social_point_;
  ::google::protobuf::int32 last_play_stage_id_;
  ::google::protobuf::int32 last_clear_stage_id_normal_;
  ::google::protobuf::int32 last_clear_stage_id_hard_;
  ::google::protobuf::int32 last_clear_stage_id_very_hard_;
  ::google::protobuf::int32 last_clear_stage_id_hell_;
  ::google::protobuf::int32 attendance_day_;
  ::google::protobuf::int64 nextattendance_time_;
  int attendance_type_;
  ::google::protobuf::int32 pvp_match_grade_;
  ::google::protobuf::int32 pvp_match_star_count_;
  ::google::protobuf::int32 assault_match_grade_;
  ::google::protobuf::int32 assault_match_star_count_;
  ::google::protobuf::int32 daily_play_time_in_sec_;
  ::google::protobuf::int64 daily_play_time_update_time_;
  ::google::protobuf::int64 rest_time_;
  ::google::protobuf::int64 next_fairy_gift_time_;
  ::google::protobuf::int64 leave_guild_time_;
  ::google::protobuf::int64 guild_id_;
  ::google::protobuf::int32 daily_play_time_reward_index_;
  ::google::protobuf::int32 stage_auto_clear_ticket_;
  ::google::protobuf::int64 kicked_guild_id_;
  ::google::protobuf::int64 gold_buff_end_time_;
  ::google::protobuf::int64 exp_buff_end_time_;
  ::google::protobuf::int64 gold_buff_ticket_;
  ::google::protobuf::int64 exp_buff_ticket_;
  ::google::protobuf::int32 exchange_count_gold_;
  ::google::protobuf::int32 exchange_count_gem_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static WorldAccount* default_instance_;
};
// -------------------------------------------------------------------

class LightAccount : public ::google::protobuf::Message {
 public:
  LightAccount();
  virtual ~LightAccount();

  LightAccount(const LightAccount& from);

  inline LightAccount& operator=(const LightAccount& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LightAccount& default_instance();

  void Swap(LightAccount* other);

  // implements Message ----------------------------------------------

  LightAccount* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LightAccount& from);
  void MergeFrom(const LightAccount& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::int64 account_id() const;
  inline void set_account_id(::google::protobuf::int64 value);

  // optional int32 cash = 5;
  inline bool has_cash() const;
  inline void clear_cash();
  static const int kCashFieldNumber = 5;
  inline ::google::protobuf::int32 cash() const;
  inline void set_cash(::google::protobuf::int32 value);

  // optional int32 money = 6;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 6;
  inline ::google::protobuf::int32 money() const;
  inline void set_money(::google::protobuf::int32 value);

  // optional int32 blade_point = 7;
  inline bool has_blade_point() const;
  inline void clear_blade_point();
  static const int kBladePointFieldNumber = 7;
  inline ::google::protobuf::int32 blade_point() const;
  inline void set_blade_point(::google::protobuf::int32 value);

  // optional int32 dark_crystal = 8;
  inline bool has_dark_crystal() const;
  inline void clear_dark_crystal();
  static const int kDarkCrystalFieldNumber = 8;
  inline ::google::protobuf::int32 dark_crystal() const;
  inline void set_dark_crystal(::google::protobuf::int32 value);

  // optional int32 social_point = 9;
  inline bool has_social_point() const;
  inline void clear_social_point();
  static const int kSocialPointFieldNumber = 9;
  inline ::google::protobuf::int32 social_point() const;
  inline void set_social_point(::google::protobuf::int32 value);

  // optional int32 stage_boost_ticket = 10;
  inline bool has_stage_boost_ticket() const;
  inline void clear_stage_boost_ticket();
  static const int kStageBoostTicketFieldNumber = 10;
  inline ::google::protobuf::int32 stage_boost_ticket() const;
  inline void set_stage_boost_ticket(::google::protobuf::int32 value);

  // optional int32 shop_ten_lottery_ticket = 11;
  inline bool has_shop_ten_lottery_ticket() const;
  inline void clear_shop_ten_lottery_ticket();
  static const int kShopTenLotteryTicketFieldNumber = 11;
  inline ::google::protobuf::int32 shop_ten_lottery_ticket() const;
  inline void set_shop_ten_lottery_ticket(::google::protobuf::int32 value);

  // optional int32 fame_point = 12;
  inline bool has_fame_point() const;
  inline void clear_fame_point();
  static const int kFamePointFieldNumber = 12;
  inline ::google::protobuf::int32 fame_point() const;
  inline void set_fame_point(::google::protobuf::int32 value);

  // optional int32 stage_auto_clear_ticket = 13;
  inline bool has_stage_auto_clear_ticket() const;
  inline void clear_stage_auto_clear_ticket();
  static const int kStageAutoClearTicketFieldNumber = 13;
  inline ::google::protobuf::int32 stage_auto_clear_ticket() const;
  inline void set_stage_auto_clear_ticket(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.LightAccount)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_cash();
  inline void clear_has_cash();
  inline void set_has_money();
  inline void clear_has_money();
  inline void set_has_blade_point();
  inline void clear_has_blade_point();
  inline void set_has_dark_crystal();
  inline void clear_has_dark_crystal();
  inline void set_has_social_point();
  inline void clear_has_social_point();
  inline void set_has_stage_boost_ticket();
  inline void clear_has_stage_boost_ticket();
  inline void set_has_shop_ten_lottery_ticket();
  inline void clear_has_shop_ten_lottery_ticket();
  inline void set_has_fame_point();
  inline void clear_has_fame_point();
  inline void set_has_stage_auto_clear_ticket();
  inline void clear_has_stage_auto_clear_ticket();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 account_id_;
  ::google::protobuf::int32 cash_;
  ::google::protobuf::int32 money_;
  ::google::protobuf::int32 blade_point_;
  ::google::protobuf::int32 dark_crystal_;
  ::google::protobuf::int32 social_point_;
  ::google::protobuf::int32 stage_boost_ticket_;
  ::google::protobuf::int32 shop_ten_lottery_ticket_;
  ::google::protobuf::int32 fame_point_;
  ::google::protobuf::int32 stage_auto_clear_ticket_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static LightAccount* default_instance_;
};
// -------------------------------------------------------------------

class AccountInfo : public ::google::protobuf::Message {
 public:
  AccountInfo();
  virtual ~AccountInfo();

  AccountInfo(const AccountInfo& from);

  inline AccountInfo& operator=(const AccountInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AccountInfo& default_instance();

  void Swap(AccountInfo* other);

  // implements Message ----------------------------------------------

  AccountInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AccountInfo& from);
  void MergeFrom(const AccountInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string nickname = 1;
  inline bool has_nickname() const;
  inline void clear_nickname();
  static const int kNicknameFieldNumber = 1;
  inline const ::std::string& nickname() const;
  inline void set_nickname(const ::std::string& value);
  inline void set_nickname(const char* value);
  inline void set_nickname(const char* value, size_t size);
  inline ::std::string* mutable_nickname();
  inline ::std::string* release_nickname();
  inline void set_allocated_nickname(::std::string* nickname);

  // repeated .b2.protocol.commondata.Character characters = 2;
  inline int characters_size() const;
  inline void clear_characters();
  static const int kCharactersFieldNumber = 2;
  inline const ::b2::protocol::commondata::Character& characters(int index) const;
  inline ::b2::protocol::commondata::Character* mutable_characters(int index);
  inline ::b2::protocol::commondata::Character* add_characters();
  inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Character >&
      characters() const;
  inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Character >*
      mutable_characters();

  // repeated .b2.protocol.commondata.Item equip_items = 3;
  inline int equip_items_size() const;
  inline void clear_equip_items();
  static const int kEquipItemsFieldNumber = 3;
  inline const ::b2::protocol::commondata::Item& equip_items(int index) const;
  inline ::b2::protocol::commondata::Item* mutable_equip_items(int index);
  inline ::b2::protocol::commondata::Item* add_equip_items();
  inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Item >&
      equip_items() const;
  inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Item >*
      mutable_equip_items();

  // repeated .b2.protocol.commondata.Costume equip_costumes = 4;
  inline int equip_costumes_size() const;
  inline void clear_equip_costumes();
  static const int kEquipCostumesFieldNumber = 4;
  inline const ::b2::protocol::commondata::Costume& equip_costumes(int index) const;
  inline ::b2::protocol::commondata::Costume* mutable_equip_costumes(int index);
  inline ::b2::protocol::commondata::Costume* add_equip_costumes();
  inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Costume >&
      equip_costumes() const;
  inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Costume >*
      mutable_equip_costumes();

  // repeated .b2.protocol.commondata.Totem equip_totems = 5;
  inline int equip_totems_size() const;
  inline void clear_equip_totems();
  static const int kEquipTotemsFieldNumber = 5;
  inline const ::b2::protocol::commondata::Totem& equip_totems(int index) const;
  inline ::b2::protocol::commondata::Totem* mutable_equip_totems(int index);
  inline ::b2::protocol::commondata::Totem* add_equip_totems();
  inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Totem >&
      equip_totems() const;
  inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Totem >*
      mutable_equip_totems();

  // repeated .b2.protocol.commondata.Aether mount_aethers = 6;
  inline int mount_aethers_size() const;
  inline void clear_mount_aethers();
  static const int kMountAethersFieldNumber = 6;
  inline const ::b2::protocol::commondata::Aether& mount_aethers(int index) const;
  inline ::b2::protocol::commondata::Aether* mutable_mount_aethers(int index);
  inline ::b2::protocol::commondata::Aether* add_mount_aethers();
  inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Aether >&
      mount_aethers() const;
  inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Aether >*
      mutable_mount_aethers();

  // repeated .b2.protocol.commondata.Relic relics = 7;
  inline int relics_size() const;
  inline void clear_relics();
  static const int kRelicsFieldNumber = 7;
  inline const ::b2::protocol::commondata::Relic& relics(int index) const;
  inline ::b2::protocol::commondata::Relic* mutable_relics(int index);
  inline ::b2::protocol::commondata::Relic* add_relics();
  inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Relic >&
      relics() const;
  inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Relic >*
      mutable_relics();

  // repeated .b2.protocol.commondata.WingOption wing_options = 8;
  inline int wing_options_size() const;
  inline void clear_wing_options();
  static const int kWingOptionsFieldNumber = 8;
  inline const ::b2::protocol::commondata::WingOption& wing_options(int index) const;
  inline ::b2::protocol::commondata::WingOption* mutable_wing_options(int index);
  inline ::b2::protocol::commondata::WingOption* add_wing_options();
  inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::WingOption >&
      wing_options() const;
  inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::WingOption >*
      mutable_wing_options();

  // repeated .b2.protocol.commondata.GuildSkill guild_skills = 9;
  inline int guild_skills_size() const;
  inline void clear_guild_skills();
  static const int kGuildSkillsFieldNumber = 9;
  inline const ::b2::protocol::commondata::GuildSkill& guild_skills(int index) const;
  inline ::b2::protocol::commondata::GuildSkill* mutable_guild_skills(int index);
  inline ::b2::protocol::commondata::GuildSkill* add_guild_skills();
  inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::GuildSkill >&
      guild_skills() const;
  inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::GuildSkill >*
      mutable_guild_skills();

  // repeated .b2.protocol.commondata.ItemPreset item_presets = 10;
  inline int item_presets_size() const;
  inline void clear_item_presets();
  static const int kItemPresetsFieldNumber = 10;
  inline const ::b2::protocol::commondata::ItemPreset& item_presets(int index) const;
  inline ::b2::protocol::commondata::ItemPreset* mutable_item_presets(int index);
  inline ::b2::protocol::commondata::ItemPreset* add_item_presets();
  inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::ItemPreset >&
      item_presets() const;
  inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::ItemPreset >*
      mutable_item_presets();

  // repeated .b2.protocol.commondata.UnitySkill unity_skills = 11;
  inline int unity_skills_size() const;
  inline void clear_unity_skills();
  static const int kUnitySkillsFieldNumber = 11;
  inline const ::b2::protocol::commondata::UnitySkill& unity_skills(int index) const;
  inline ::b2::protocol::commondata::UnitySkill* mutable_unity_skills(int index);
  inline ::b2::protocol::commondata::UnitySkill* add_unity_skills();
  inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::UnitySkill >&
      unity_skills() const;
  inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::UnitySkill >*
      mutable_unity_skills();

  // repeated .b2.protocol.commondata.FairyStatus fairies = 12;
  inline int fairies_size() const;
  inline void clear_fairies();
  static const int kFairiesFieldNumber = 12;
  inline const ::b2::protocol::commondata::FairyStatus& fairies(int index) const;
  inline ::b2::protocol::commondata::FairyStatus* mutable_fairies(int index);
  inline ::b2::protocol::commondata::FairyStatus* add_fairies();
  inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::FairyStatus >&
      fairies() const;
  inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::FairyStatus >*
      mutable_fairies();

  // optional int32 pvp_match_grade = 20;
  inline bool has_pvp_match_grade() const;
  inline void clear_pvp_match_grade();
  static const int kPvpMatchGradeFieldNumber = 20;
  inline ::google::protobuf::int32 pvp_match_grade() const;
  inline void set_pvp_match_grade(::google::protobuf::int32 value);

  // optional int32 pvp_match_star_count = 21;
  inline bool has_pvp_match_star_count() const;
  inline void clear_pvp_match_star_count();
  static const int kPvpMatchStarCountFieldNumber = 21;
  inline ::google::protobuf::int32 pvp_match_star_count() const;
  inline void set_pvp_match_star_count(::google::protobuf::int32 value);

  // optional int32 assault_match_grade = 22;
  inline bool has_assault_match_grade() const;
  inline void clear_assault_match_grade();
  static const int kAssaultMatchGradeFieldNumber = 22;
  inline ::google::protobuf::int32 assault_match_grade() const;
  inline void set_assault_match_grade(::google::protobuf::int32 value);

  // optional int32 assault_match_star_count = 23;
  inline bool has_assault_match_star_count() const;
  inline void clear_assault_match_star_count();
  static const int kAssaultMatchStarCountFieldNumber = 23;
  inline ::google::protobuf::int32 assault_match_star_count() const;
  inline void set_assault_match_star_count(::google::protobuf::int32 value);

  // repeated .b2.protocol.commondata.PresetNum character_presets = 30;
  inline int character_presets_size() const;
  inline void clear_character_presets();
  static const int kCharacterPresetsFieldNumber = 30;
  inline const ::b2::protocol::commondata::PresetNum& character_presets(int index) const;
  inline ::b2::protocol::commondata::PresetNum* mutable_character_presets(int index);
  inline ::b2::protocol::commondata::PresetNum* add_character_presets();
  inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::PresetNum >&
      character_presets() const;
  inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::PresetNum >*
      mutable_character_presets();

  // required int64 account_id = 40;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 40;
  inline ::google::protobuf::int64 account_id() const;
  inline void set_account_id(::google::protobuf::int64 value);

  // required int64 guild_id = 50;
  inline bool has_guild_id() const;
  inline void clear_guild_id();
  static const int kGuildIdFieldNumber = 50;
  inline ::google::protobuf::int64 guild_id() const;
  inline void set_guild_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.AccountInfo)
 private:
  inline void set_has_nickname();
  inline void clear_has_nickname();
  inline void set_has_pvp_match_grade();
  inline void clear_has_pvp_match_grade();
  inline void set_has_pvp_match_star_count();
  inline void clear_has_pvp_match_star_count();
  inline void set_has_assault_match_grade();
  inline void clear_has_assault_match_grade();
  inline void set_has_assault_match_star_count();
  inline void clear_has_assault_match_star_count();
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_guild_id();
  inline void clear_has_guild_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* nickname_;
  ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Character > characters_;
  ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Item > equip_items_;
  ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Costume > equip_costumes_;
  ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Totem > equip_totems_;
  ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Aether > mount_aethers_;
  ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Relic > relics_;
  ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::WingOption > wing_options_;
  ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::GuildSkill > guild_skills_;
  ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::ItemPreset > item_presets_;
  ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::UnitySkill > unity_skills_;
  ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::FairyStatus > fairies_;
  ::google::protobuf::int32 pvp_match_grade_;
  ::google::protobuf::int32 pvp_match_star_count_;
  ::google::protobuf::int32 assault_match_grade_;
  ::google::protobuf::int32 assault_match_star_count_;
  ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::PresetNum > character_presets_;
  ::google::protobuf::int64 account_id_;
  ::google::protobuf::int64 guild_id_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static AccountInfo* default_instance_;
};
// -------------------------------------------------------------------

class PresetNum : public ::google::protobuf::Message {
 public:
  PresetNum();
  virtual ~PresetNum();

  PresetNum(const PresetNum& from);

  inline PresetNum& operator=(const PresetNum& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PresetNum& default_instance();

  void Swap(PresetNum* other);

  // implements Message ----------------------------------------------

  PresetNum* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PresetNum& from);
  void MergeFrom(const PresetNum& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .b2.protocol.commondata.Character.TYPE character_type = 1;
  inline bool has_character_type() const;
  inline void clear_character_type();
  static const int kCharacterTypeFieldNumber = 1;
  inline ::b2::protocol::commondata::Character_TYPE character_type() const;
  inline void set_character_type(::b2::protocol::commondata::Character_TYPE value);

  // optional int32 item_preset_num = 2;
  inline bool has_item_preset_num() const;
  inline void clear_item_preset_num();
  static const int kItemPresetNumFieldNumber = 2;
  inline ::google::protobuf::int32 item_preset_num() const;
  inline void set_item_preset_num(::google::protobuf::int32 value);

  // optional int32 skill_preset_num = 3;
  inline bool has_skill_preset_num() const;
  inline void clear_skill_preset_num();
  static const int kSkillPresetNumFieldNumber = 3;
  inline ::google::protobuf::int32 skill_preset_num() const;
  inline void set_skill_preset_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.PresetNum)
 private:
  inline void set_has_character_type();
  inline void clear_has_character_type();
  inline void set_has_item_preset_num();
  inline void clear_has_item_preset_num();
  inline void set_has_skill_preset_num();
  inline void clear_has_skill_preset_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int character_type_;
  ::google::protobuf::int32 item_preset_num_;
  ::google::protobuf::int32 skill_preset_num_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static PresetNum* default_instance_;
};
// -------------------------------------------------------------------

class Character : public ::google::protobuf::Message {
 public:
  Character();
  virtual ~Character();

  Character(const Character& from);

  inline Character& operator=(const Character& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Character& default_instance();

  void Swap(Character* other);

  // implements Message ----------------------------------------------

  Character* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Character& from);
  void MergeFrom(const Character& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Character_TYPE TYPE;
  static const TYPE GLADIATOR = Character_TYPE_GLADIATOR;
  static const TYPE ASSASSIN = Character_TYPE_ASSASSIN;
  static const TYPE WIZARD = Character_TYPE_WIZARD;
  static const TYPE FIGHTER = Character_TYPE_FIGHTER;
  static inline bool TYPE_IsValid(int value) {
    return Character_TYPE_IsValid(value);
  }
  static const TYPE TYPE_MIN =
    Character_TYPE_TYPE_MIN;
  static const TYPE TYPE_MAX =
    Character_TYPE_TYPE_MAX;
  static const int TYPE_ARRAYSIZE =
    Character_TYPE_TYPE_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  TYPE_descriptor() {
    return Character_TYPE_descriptor();
  }
  static inline const ::std::string& TYPE_Name(TYPE value) {
    return Character_TYPE_Name(value);
  }
  static inline bool TYPE_Parse(const ::std::string& name,
      TYPE* value) {
    return Character_TYPE_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .b2.protocol.commondata.Character.TYPE character_type = 1;
  inline bool has_character_type() const;
  inline void clear_character_type();
  static const int kCharacterTypeFieldNumber = 1;
  inline ::b2::protocol::commondata::Character_TYPE character_type() const;
  inline void set_character_type(::b2::protocol::commondata::Character_TYPE value);

  // optional int32 style_face = 2;
  inline bool has_style_face() const;
  inline void clear_style_face();
  static const int kStyleFaceFieldNumber = 2;
  inline ::google::protobuf::int32 style_face() const;
  inline void set_style_face(::google::protobuf::int32 value);

  // optional int32 style_hair = 3;
  inline bool has_style_hair() const;
  inline void clear_style_hair();
  static const int kStyleHairFieldNumber = 3;
  inline ::google::protobuf::int32 style_hair() const;
  inline void set_style_hair(::google::protobuf::int32 value);

  // optional int32 style_skin = 4;
  inline bool has_style_skin() const;
  inline void clear_style_skin();
  static const int kStyleSkinFieldNumber = 4;
  inline ::google::protobuf::int32 style_skin() const;
  inline void set_style_skin(::google::protobuf::int32 value);

  // optional int32 level = 5;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 5;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // optional int64 exp = 6;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 6;
  inline ::google::protobuf::int64 exp() const;
  inline void set_exp(::google::protobuf::int64 value);

  // optional int64 exp_max = 7;
  inline bool has_exp_max() const;
  inline void clear_exp_max();
  static const int kExpMaxFieldNumber = 7;
  inline ::google::protobuf::int64 exp_max() const;
  inline void set_exp_max(::google::protobuf::int64 value);

  // optional int32 skill_point_buy_count = 9;
  inline bool has_skill_point_buy_count() const;
  inline void clear_skill_point_buy_count();
  static const int kSkillPointBuyCountFieldNumber = 9;
  inline ::google::protobuf::int32 skill_point_buy_count() const;
  inline void set_skill_point_buy_count(::google::protobuf::int32 value);

  // optional int32 inventory_item_buy_count = 10;
  inline bool has_inventory_item_buy_count() const;
  inline void clear_inventory_item_buy_count();
  static const int kInventoryItemBuyCountFieldNumber = 10;
  inline ::google::protobuf::int32 inventory_item_buy_count() const;
  inline void set_inventory_item_buy_count(::google::protobuf::int32 value);

  // optional int32 inventory_item_slot_count = 11;
  inline bool has_inventory_item_slot_count() const;
  inline void clear_inventory_item_slot_count();
  static const int kInventoryItemSlotCountFieldNumber = 11;
  inline ::google::protobuf::int32 inventory_item_slot_count() const;
  inline void set_inventory_item_slot_count(::google::protobuf::int32 value);

  // optional int32 rank = 12;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 12;
  inline ::google::protobuf::int32 rank() const;
  inline void set_rank(::google::protobuf::int32 value);

  // optional string name = 13;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 13;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional int32 rank_node_index = 14;
  inline bool has_rank_node_index() const;
  inline void clear_rank_node_index();
  static const int kRankNodeIndexFieldNumber = 14;
  inline ::google::protobuf::int32 rank_node_index() const;
  inline void set_rank_node_index(::google::protobuf::int32 value);

  // optional bool rank_node_state = 15;
  inline bool has_rank_node_state() const;
  inline void clear_rank_node_state();
  static const int kRankNodeStateFieldNumber = 15;
  inline bool rank_node_state() const;
  inline void set_rank_node_state(bool value);

  // optional int32 wing_grade = 16;
  inline bool has_wing_grade() const;
  inline void clear_wing_grade();
  static const int kWingGradeFieldNumber = 16;
  inline ::google::protobuf::int32 wing_grade() const;
  inline void set_wing_grade(::google::protobuf::int32 value);

  // optional int32 wing_Level = 17;
  inline bool has_wing_level() const;
  inline void clear_wing_level();
  static const int kWingLevelFieldNumber = 17;
  inline ::google::protobuf::int32 wing_level() const;
  inline void set_wing_level(::google::protobuf::int32 value);

  // optional bool wing_visible = 18;
  inline bool has_wing_visible() const;
  inline void clear_wing_visible();
  static const int kWingVisibleFieldNumber = 18;
  inline bool wing_visible() const;
  inline void set_wing_visible(bool value);

  // optional bool helmet_visible = 19;
  inline bool has_helmet_visible() const;
  inline void clear_helmet_visible();
  static const int kHelmetVisibleFieldNumber = 19;
  inline bool helmet_visible() const;
  inline void set_helmet_visible(bool value);

  // optional int32 aether_offense_set_option_id = 20;
  inline bool has_aether_offense_set_option_id() const;
  inline void clear_aether_offense_set_option_id();
  static const int kAetherOffenseSetOptionIdFieldNumber = 20;
  inline ::google::protobuf::int32 aether_offense_set_option_id() const;
  inline void set_aether_offense_set_option_id(::google::protobuf::int32 value);

  // optional int32 aether_defense_set_option_id = 21;
  inline bool has_aether_defense_set_option_id() const;
  inline void clear_aether_defense_set_option_id();
  static const int kAetherDefenseSetOptionIdFieldNumber = 21;
  inline ::google::protobuf::int32 aether_defense_set_option_id() const;
  inline void set_aether_defense_set_option_id(::google::protobuf::int32 value);

  // optional int32 remain_skill_point = 24;
  inline bool has_remain_skill_point() const;
  inline void clear_remain_skill_point();
  static const int kRemainSkillPointFieldNumber = 24;
  inline ::google::protobuf::int32 remain_skill_point() const;
  inline void set_remain_skill_point(::google::protobuf::int32 value);

  // repeated .b2.protocol.commondata.SkillQuickSlot skill_quick_slots = 25;
  inline int skill_quick_slots_size() const;
  inline void clear_skill_quick_slots();
  static const int kSkillQuickSlotsFieldNumber = 25;
  inline const ::b2::protocol::commondata::SkillQuickSlot& skill_quick_slots(int index) const;
  inline ::b2::protocol::commondata::SkillQuickSlot* mutable_skill_quick_slots(int index);
  inline ::b2::protocol::commondata::SkillQuickSlot* add_skill_quick_slots();
  inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::SkillQuickSlot >&
      skill_quick_slots() const;
  inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::SkillQuickSlot >*
      mutable_skill_quick_slots();

  // repeated .b2.protocol.commondata.Skill skills = 26;
  inline int skills_size() const;
  inline void clear_skills();
  static const int kSkillsFieldNumber = 26;
  inline const ::b2::protocol::commondata::Skill& skills(int index) const;
  inline ::b2::protocol::commondata::Skill* mutable_skills(int index);
  inline ::b2::protocol::commondata::Skill* add_skills();
  inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Skill >&
      skills() const;
  inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Skill >*
      mutable_skills();

  // optional bool unity_skill = 27;
  inline bool has_unity_skill() const;
  inline void clear_unity_skill();
  static const int kUnitySkillFieldNumber = 27;
  inline bool unity_skill() const;
  inline void set_unity_skill(bool value);

  // optional bool unity_skill_awaken = 28;
  inline bool has_unity_skill_awaken() const;
  inline void clear_unity_skill_awaken();
  static const int kUnitySkillAwakenFieldNumber = 28;
  inline bool unity_skill_awaken() const;
  inline void set_unity_skill_awaken(bool value);

  // optional int32 total_power = 29;
  inline bool has_total_power() const;
  inline void clear_total_power();
  static const int kTotalPowerFieldNumber = 29;
  inline ::google::protobuf::int32 total_power() const;
  inline void set_total_power(::google::protobuf::int32 value);

  // optional bool costume_weapon_visible = 31;
  inline bool has_costume_weapon_visible() const;
  inline void clear_costume_weapon_visible();
  static const int kCostumeWeaponVisibleFieldNumber = 31;
  inline bool costume_weapon_visible() const;
  inline void set_costume_weapon_visible(bool value);

  // optional bool costume_hat_visible = 32;
  inline bool has_costume_hat_visible() const;
  inline void clear_costume_hat_visible();
  static const int kCostumeHatVisibleFieldNumber = 32;
  inline bool costume_hat_visible() const;
  inline void set_costume_hat_visible(bool value);

  // optional bool costume_armor_visible = 33;
  inline bool has_costume_armor_visible() const;
  inline void clear_costume_armor_visible();
  static const int kCostumeArmorVisibleFieldNumber = 33;
  inline bool costume_armor_visible() const;
  inline void set_costume_armor_visible(bool value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.Character)
 private:
  inline void set_has_character_type();
  inline void clear_has_character_type();
  inline void set_has_style_face();
  inline void clear_has_style_face();
  inline void set_has_style_hair();
  inline void clear_has_style_hair();
  inline void set_has_style_skin();
  inline void clear_has_style_skin();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_exp_max();
  inline void clear_has_exp_max();
  inline void set_has_skill_point_buy_count();
  inline void clear_has_skill_point_buy_count();
  inline void set_has_inventory_item_buy_count();
  inline void clear_has_inventory_item_buy_count();
  inline void set_has_inventory_item_slot_count();
  inline void clear_has_inventory_item_slot_count();
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_rank_node_index();
  inline void clear_has_rank_node_index();
  inline void set_has_rank_node_state();
  inline void clear_has_rank_node_state();
  inline void set_has_wing_grade();
  inline void clear_has_wing_grade();
  inline void set_has_wing_level();
  inline void clear_has_wing_level();
  inline void set_has_wing_visible();
  inline void clear_has_wing_visible();
  inline void set_has_helmet_visible();
  inline void clear_has_helmet_visible();
  inline void set_has_aether_offense_set_option_id();
  inline void clear_has_aether_offense_set_option_id();
  inline void set_has_aether_defense_set_option_id();
  inline void clear_has_aether_defense_set_option_id();
  inline void set_has_remain_skill_point();
  inline void clear_has_remain_skill_point();
  inline void set_has_unity_skill();
  inline void clear_has_unity_skill();
  inline void set_has_unity_skill_awaken();
  inline void clear_has_unity_skill_awaken();
  inline void set_has_total_power();
  inline void clear_has_total_power();
  inline void set_has_costume_weapon_visible();
  inline void clear_has_costume_weapon_visible();
  inline void set_has_costume_hat_visible();
  inline void clear_has_costume_hat_visible();
  inline void set_has_costume_armor_visible();
  inline void clear_has_costume_armor_visible();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int character_type_;
  ::google::protobuf::int32 style_face_;
  ::google::protobuf::int32 style_hair_;
  ::google::protobuf::int32 style_skin_;
  ::google::protobuf::int64 exp_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 skill_point_buy_count_;
  ::google::protobuf::int64 exp_max_;
  ::google::protobuf::int32 inventory_item_buy_count_;
  ::google::protobuf::int32 inventory_item_slot_count_;
  ::std::string* name_;
  ::google::protobuf::int32 rank_;
  ::google::protobuf::int32 rank_node_index_;
  ::google::protobuf::int32 wing_grade_;
  ::google::protobuf::int32 wing_level_;
  bool rank_node_state_;
  bool wing_visible_;
  bool helmet_visible_;
  bool unity_skill_;
  ::google::protobuf::int32 aether_offense_set_option_id_;
  ::google::protobuf::int32 aether_defense_set_option_id_;
  ::google::protobuf::int32 remain_skill_point_;
  ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::SkillQuickSlot > skill_quick_slots_;
  ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Skill > skills_;
  ::google::protobuf::int32 total_power_;
  bool unity_skill_awaken_;
  bool costume_weapon_visible_;
  bool costume_hat_visible_;
  bool costume_armor_visible_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static Character* default_instance_;
};
// -------------------------------------------------------------------

class LightCharacter : public ::google::protobuf::Message {
 public:
  LightCharacter();
  virtual ~LightCharacter();

  LightCharacter(const LightCharacter& from);

  inline LightCharacter& operator=(const LightCharacter& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LightCharacter& default_instance();

  void Swap(LightCharacter* other);

  // implements Message ----------------------------------------------

  LightCharacter* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LightCharacter& from);
  void MergeFrom(const LightCharacter& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef LightCharacter_TYPE TYPE;
  static const TYPE GLADIATOR = LightCharacter_TYPE_GLADIATOR;
  static const TYPE ASSASSIN = LightCharacter_TYPE_ASSASSIN;
  static const TYPE WIZARD = LightCharacter_TYPE_WIZARD;
  static const TYPE FIGHTER = LightCharacter_TYPE_FIGHTER;
  static inline bool TYPE_IsValid(int value) {
    return LightCharacter_TYPE_IsValid(value);
  }
  static const TYPE TYPE_MIN =
    LightCharacter_TYPE_TYPE_MIN;
  static const TYPE TYPE_MAX =
    LightCharacter_TYPE_TYPE_MAX;
  static const int TYPE_ARRAYSIZE =
    LightCharacter_TYPE_TYPE_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  TYPE_descriptor() {
    return LightCharacter_TYPE_descriptor();
  }
  static inline const ::std::string& TYPE_Name(TYPE value) {
    return LightCharacter_TYPE_Name(value);
  }
  static inline bool TYPE_Parse(const ::std::string& name,
      TYPE* value) {
    return LightCharacter_TYPE_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .b2.protocol.commondata.LightCharacter.TYPE character_type = 1;
  inline bool has_character_type() const;
  inline void clear_character_type();
  static const int kCharacterTypeFieldNumber = 1;
  inline ::b2::protocol::commondata::LightCharacter_TYPE character_type() const;
  inline void set_character_type(::b2::protocol::commondata::LightCharacter_TYPE value);

  // optional int32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // optional int64 exp = 3;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 3;
  inline ::google::protobuf::int64 exp() const;
  inline void set_exp(::google::protobuf::int64 value);

  // optional int64 exp_max = 4;
  inline bool has_exp_max() const;
  inline void clear_exp_max();
  static const int kExpMaxFieldNumber = 4;
  inline ::google::protobuf::int64 exp_max() const;
  inline void set_exp_max(::google::protobuf::int64 value);

  // optional bool changed_level = 5;
  inline bool has_changed_level() const;
  inline void clear_changed_level();
  static const int kChangedLevelFieldNumber = 5;
  inline bool changed_level() const;
  inline void set_changed_level(bool value);

  // optional int32 remain_skill_point = 6;
  inline bool has_remain_skill_point() const;
  inline void clear_remain_skill_point();
  static const int kRemainSkillPointFieldNumber = 6;
  inline ::google::protobuf::int32 remain_skill_point() const;
  inline void set_remain_skill_point(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.LightCharacter)
 private:
  inline void set_has_character_type();
  inline void clear_has_character_type();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_exp_max();
  inline void clear_has_exp_max();
  inline void set_has_changed_level();
  inline void clear_has_changed_level();
  inline void set_has_remain_skill_point();
  inline void clear_has_remain_skill_point();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int character_type_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int64 exp_;
  ::google::protobuf::int64 exp_max_;
  bool changed_level_;
  ::google::protobuf::int32 remain_skill_point_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static LightCharacter* default_instance_;
};
// -------------------------------------------------------------------

class CharacterSummary : public ::google::protobuf::Message {
 public:
  CharacterSummary();
  virtual ~CharacterSummary();

  CharacterSummary(const CharacterSummary& from);

  inline CharacterSummary& operator=(const CharacterSummary& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterSummary& default_instance();

  void Swap(CharacterSummary* other);

  // implements Message ----------------------------------------------

  CharacterSummary* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterSummary& from);
  void MergeFrom(const CharacterSummary& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::int64 account_id() const;
  inline void set_account_id(::google::protobuf::int64 value);

  // required string account_name = 2;
  inline bool has_account_name() const;
  inline void clear_account_name();
  static const int kAccountNameFieldNumber = 2;
  inline const ::std::string& account_name() const;
  inline void set_account_name(const ::std::string& value);
  inline void set_account_name(const char* value);
  inline void set_account_name(const char* value, size_t size);
  inline ::std::string* mutable_account_name();
  inline ::std::string* release_account_name();
  inline void set_allocated_account_name(::std::string* account_name);

  // required .b2.protocol.commondata.Character.TYPE character_type = 3;
  inline bool has_character_type() const;
  inline void clear_character_type();
  static const int kCharacterTypeFieldNumber = 3;
  inline ::b2::protocol::commondata::Character_TYPE character_type() const;
  inline void set_character_type(::b2::protocol::commondata::Character_TYPE value);

  // required int32 character_level = 4;
  inline bool has_character_level() const;
  inline void clear_character_level();
  static const int kCharacterLevelFieldNumber = 4;
  inline ::google::protobuf::int32 character_level() const;
  inline void set_character_level(::google::protobuf::int32 value);

  // required int32 power = 5;
  inline bool has_power() const;
  inline void clear_power();
  static const int kPowerFieldNumber = 5;
  inline ::google::protobuf::int32 power() const;
  inline void set_power(::google::protobuf::int32 value);

  // optional bool is_online = 7;
  inline bool has_is_online() const;
  inline void clear_is_online();
  static const int kIsOnlineFieldNumber = 7;
  inline bool is_online() const;
  inline void set_is_online(bool value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.CharacterSummary)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_account_name();
  inline void clear_has_account_name();
  inline void set_has_character_type();
  inline void clear_has_character_type();
  inline void set_has_character_level();
  inline void clear_has_character_level();
  inline void set_has_power();
  inline void clear_has_power();
  inline void set_has_is_online();
  inline void clear_has_is_online();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 account_id_;
  ::std::string* account_name_;
  int character_type_;
  ::google::protobuf::int32 character_level_;
  ::google::protobuf::int32 power_;
  bool is_online_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static CharacterSummary* default_instance_;
};
// -------------------------------------------------------------------

class User : public ::google::protobuf::Message {
 public:
  User();
  virtual ~User();

  User(const User& from);

  inline User& operator=(const User& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const User& default_instance();

  void Swap(User* other);

  // implements Message ----------------------------------------------

  User* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const User& from);
  void MergeFrom(const User& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .b2.protocol.commondata.CharacterSummary character_summary = 1;
  inline bool has_character_summary() const;
  inline void clear_character_summary();
  static const int kCharacterSummaryFieldNumber = 1;
  inline const ::b2::protocol::commondata::CharacterSummary& character_summary() const;
  inline ::b2::protocol::commondata::CharacterSummary* mutable_character_summary();
  inline ::b2::protocol::commondata::CharacterSummary* release_character_summary();
  inline void set_allocated_character_summary(::b2::protocol::commondata::CharacterSummary* character_summary);

  // required int64 last_logout_time = 2;
  inline bool has_last_logout_time() const;
  inline void clear_last_logout_time();
  static const int kLastLogoutTimeFieldNumber = 2;
  inline ::google::protobuf::int64 last_logout_time() const;
  inline void set_last_logout_time(::google::protobuf::int64 value);

  // optional string guild_name = 11;
  inline bool has_guild_name() const;
  inline void clear_guild_name();
  static const int kGuildNameFieldNumber = 11;
  inline const ::std::string& guild_name() const;
  inline void set_guild_name(const ::std::string& value);
  inline void set_guild_name(const char* value);
  inline void set_guild_name(const char* value, size_t size);
  inline ::std::string* mutable_guild_name();
  inline ::std::string* release_guild_name();
  inline void set_allocated_guild_name(::std::string* guild_name);

  // optional int32 mark_index = 12;
  inline bool has_mark_index() const;
  inline void clear_mark_index();
  static const int kMarkIndexFieldNumber = 12;
  inline ::google::protobuf::int32 mark_index() const;
  inline void set_mark_index(::google::protobuf::int32 value);

  // optional int32 mark_color = 13;
  inline bool has_mark_color() const;
  inline void clear_mark_color();
  static const int kMarkColorFieldNumber = 13;
  inline ::google::protobuf::int32 mark_color() const;
  inline void set_mark_color(::google::protobuf::int32 value);

  // optional int32 mark_bg_index = 14;
  inline bool has_mark_bg_index() const;
  inline void clear_mark_bg_index();
  static const int kMarkBgIndexFieldNumber = 14;
  inline ::google::protobuf::int32 mark_bg_index() const;
  inline void set_mark_bg_index(::google::protobuf::int32 value);

  // optional int32 mark_bg_color = 15;
  inline bool has_mark_bg_color() const;
  inline void clear_mark_bg_color();
  static const int kMarkBgColorFieldNumber = 15;
  inline ::google::protobuf::int32 mark_bg_color() const;
  inline void set_mark_bg_color(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.User)
 private:
  inline void set_has_character_summary();
  inline void clear_has_character_summary();
  inline void set_has_last_logout_time();
  inline void clear_has_last_logout_time();
  inline void set_has_guild_name();
  inline void clear_has_guild_name();
  inline void set_has_mark_index();
  inline void clear_has_mark_index();
  inline void set_has_mark_color();
  inline void clear_has_mark_color();
  inline void set_has_mark_bg_index();
  inline void clear_has_mark_bg_index();
  inline void set_has_mark_bg_color();
  inline void clear_has_mark_bg_color();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::b2::protocol::commondata::CharacterSummary* character_summary_;
  ::google::protobuf::int64 last_logout_time_;
  ::std::string* guild_name_;
  ::google::protobuf::int32 mark_index_;
  ::google::protobuf::int32 mark_color_;
  ::google::protobuf::int32 mark_bg_index_;
  ::google::protobuf::int32 mark_bg_color_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static User* default_instance_;
};
// -------------------------------------------------------------------

class Friend : public ::google::protobuf::Message {
 public:
  Friend();
  virtual ~Friend();

  Friend(const Friend& from);

  inline Friend& operator=(const Friend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Friend& default_instance();

  void Swap(Friend* other);

  // implements Message ----------------------------------------------

  Friend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Friend& from);
  void MergeFrom(const Friend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .b2.protocol.commondata.User user = 1;
  inline bool has_user() const;
  inline void clear_user();
  static const int kUserFieldNumber = 1;
  inline const ::b2::protocol::commondata::User& user() const;
  inline ::b2::protocol::commondata::User* mutable_user();
  inline ::b2::protocol::commondata::User* release_user();
  inline void set_allocated_user(::b2::protocol::commondata::User* user);

  // required int64 last_social_point_send_time = 2;
  inline bool has_last_social_point_send_time() const;
  inline void clear_last_social_point_send_time();
  static const int kLastSocialPointSendTimeFieldNumber = 2;
  inline ::google::protobuf::int64 last_social_point_send_time() const;
  inline void set_last_social_point_send_time(::google::protobuf::int64 value);

  // optional bool is_new = 3;
  inline bool has_is_new() const;
  inline void clear_is_new();
  static const int kIsNewFieldNumber = 3;
  inline bool is_new() const;
  inline void set_is_new(bool value);

  // optional int64 raid_penalty_remove_time = 4;
  inline bool has_raid_penalty_remove_time() const;
  inline void clear_raid_penalty_remove_time();
  static const int kRaidPenaltyRemoveTimeFieldNumber = 4;
  inline ::google::protobuf::int64 raid_penalty_remove_time() const;
  inline void set_raid_penalty_remove_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.Friend)
 private:
  inline void set_has_user();
  inline void clear_has_user();
  inline void set_has_last_social_point_send_time();
  inline void clear_has_last_social_point_send_time();
  inline void set_has_is_new();
  inline void clear_has_is_new();
  inline void set_has_raid_penalty_remove_time();
  inline void clear_has_raid_penalty_remove_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::b2::protocol::commondata::User* user_;
  ::google::protobuf::int64 last_social_point_send_time_;
  ::google::protobuf::int64 raid_penalty_remove_time_;
  bool is_new_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static Friend* default_instance_;
};
// -------------------------------------------------------------------

class FriendInviteRewardInfo : public ::google::protobuf::Message {
 public:
  FriendInviteRewardInfo();
  virtual ~FriendInviteRewardInfo();

  FriendInviteRewardInfo(const FriendInviteRewardInfo& from);

  inline FriendInviteRewardInfo& operator=(const FriendInviteRewardInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FriendInviteRewardInfo& default_instance();

  void Swap(FriendInviteRewardInfo* other);

  // implements Message ----------------------------------------------

  FriendInviteRewardInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FriendInviteRewardInfo& from);
  void MergeFrom(const FriendInviteRewardInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 platform_type = 1;
  inline bool has_platform_type() const;
  inline void clear_platform_type();
  static const int kPlatformTypeFieldNumber = 1;
  inline ::google::protobuf::int32 platform_type() const;
  inline void set_platform_type(::google::protobuf::int32 value);

  // required int32 invite_count = 2;
  inline bool has_invite_count() const;
  inline void clear_invite_count();
  static const int kInviteCountFieldNumber = 2;
  inline ::google::protobuf::int32 invite_count() const;
  inline void set_invite_count(::google::protobuf::int32 value);

  // required int32 joiner_count = 3;
  inline bool has_joiner_count() const;
  inline void clear_joiner_count();
  static const int kJoinerCountFieldNumber = 3;
  inline ::google::protobuf::int32 joiner_count() const;
  inline void set_joiner_count(::google::protobuf::int32 value);

  // required int32 invite_reward_mask = 4;
  inline bool has_invite_reward_mask() const;
  inline void clear_invite_reward_mask();
  static const int kInviteRewardMaskFieldNumber = 4;
  inline ::google::protobuf::int32 invite_reward_mask() const;
  inline void set_invite_reward_mask(::google::protobuf::int32 value);

  // required int32 joiner_reward_mask = 5;
  inline bool has_joiner_reward_mask() const;
  inline void clear_joiner_reward_mask();
  static const int kJoinerRewardMaskFieldNumber = 5;
  inline ::google::protobuf::int32 joiner_reward_mask() const;
  inline void set_joiner_reward_mask(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.FriendInviteRewardInfo)
 private:
  inline void set_has_platform_type();
  inline void clear_has_platform_type();
  inline void set_has_invite_count();
  inline void clear_has_invite_count();
  inline void set_has_joiner_count();
  inline void clear_has_joiner_count();
  inline void set_has_invite_reward_mask();
  inline void clear_has_invite_reward_mask();
  inline void set_has_joiner_reward_mask();
  inline void clear_has_joiner_reward_mask();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 platform_type_;
  ::google::protobuf::int32 invite_count_;
  ::google::protobuf::int32 joiner_count_;
  ::google::protobuf::int32 invite_reward_mask_;
  ::google::protobuf::int32 joiner_reward_mask_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static FriendInviteRewardInfo* default_instance_;
};
// -------------------------------------------------------------------

class Item : public ::google::protobuf::Message {
 public:
  Item();
  virtual ~Item();

  Item(const Item& from);

  inline Item& operator=(const Item& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Item& default_instance();

  void Swap(Item* other);

  // implements Message ----------------------------------------------

  Item* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Item& from);
  void MergeFrom(const Item& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Item_TYPE TYPE;
  static const TYPE WEAPON = Item_TYPE_WEAPON;
  static const TYPE HAT = Item_TYPE_HAT;
  static const TYPE ARMOR = Item_TYPE_ARMOR;
  static const TYPE GLOVE = Item_TYPE_GLOVE;
  static const TYPE SHOES = Item_TYPE_SHOES;
  static const TYPE BELT = Item_TYPE_BELT;
  static const TYPE NECK = Item_TYPE_NECK;
  static const TYPE RING = Item_TYPE_RING;
  static const TYPE MATERIAL = Item_TYPE_MATERIAL;
  static const TYPE GOODS = Item_TYPE_GOODS;
  static const TYPE UPGRADE_STONE = Item_TYPE_UPGRADE_STONE;
  static const TYPE ENHANCE_SCROLL = Item_TYPE_ENHANCE_SCROLL;
  static const TYPE BLESSED_ENHANCE_SCROLL = Item_TYPE_BLESSED_ENHANCE_SCROLL;
  static const TYPE PROTECTION_SCROLL = Item_TYPE_PROTECTION_SCROLL;
  static const TYPE BOSS_PIECE = Item_TYPE_BOSS_PIECE;
  static const TYPE WEAPON_ESSENCE = Item_TYPE_WEAPON_ESSENCE;
  static const TYPE ARMOR_ESSENCE = Item_TYPE_ARMOR_ESSENCE;
  static const TYPE ACCESSORY_ESSENCE = Item_TYPE_ACCESSORY_ESSENCE;
  static const TYPE RANK_PROMOTION_POINT = Item_TYPE_RANK_PROMOTION_POINT;
  static const TYPE HERO_PIECE = Item_TYPE_HERO_PIECE;
  static const TYPE AETHER_PIECE = Item_TYPE_AETHER_PIECE;
  static const TYPE DISMANTLE_MATERIAL = Item_TYPE_DISMANTLE_MATERIAL;
  static const TYPE DIMENSIONAL_PIECE = Item_TYPE_DIMENSIONAL_PIECE;
  static const TYPE COSTUME_ENHANCE_MATERIAL = Item_TYPE_COSTUME_ENHANCE_MATERIAL;
  static const TYPE WEAPON_SURPASS_ANVIL = Item_TYPE_WEAPON_SURPASS_ANVIL;
  static const TYPE ARMOR_SURPASS_ANVIL = Item_TYPE_ARMOR_SURPASS_ANVIL;
  static const TYPE ACCESSORY_SURPASS_ANVIL = Item_TYPE_ACCESSORY_SURPASS_ANVIL;
  static const TYPE SEAL_BOX = Item_TYPE_SEAL_BOX;
  static const TYPE ADVANCED_RANK_PROMOTION_POINT = Item_TYPE_ADVANCED_RANK_PROMOTION_POINT;
  static const TYPE GOLD = Item_TYPE_GOLD;
  static inline bool TYPE_IsValid(int value) {
    return Item_TYPE_IsValid(value);
  }
  static const TYPE TYPE_MIN =
    Item_TYPE_TYPE_MIN;
  static const TYPE TYPE_MAX =
    Item_TYPE_TYPE_MAX;
  static const int TYPE_ARRAYSIZE =
    Item_TYPE_TYPE_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  TYPE_descriptor() {
    return Item_TYPE_descriptor();
  }
  static inline const ::std::string& TYPE_Name(TYPE value) {
    return Item_TYPE_Name(value);
  }
  static inline bool TYPE_Parse(const ::std::string& name,
      TYPE* value) {
    return Item_TYPE_Parse(name, value);
  }

  typedef Item_CharacterType CharacterType;
  static const CharacterType COMMON = Item_CharacterType_COMMON;
  static const CharacterType GLADIATOR = Item_CharacterType_GLADIATOR;
  static const CharacterType ASSASSIN = Item_CharacterType_ASSASSIN;
  static const CharacterType WIZARD = Item_CharacterType_WIZARD;
  static const CharacterType FIGHTER = Item_CharacterType_FIGHTER;
  static inline bool CharacterType_IsValid(int value) {
    return Item_CharacterType_IsValid(value);
  }
  static const CharacterType CharacterType_MIN =
    Item_CharacterType_CharacterType_MIN;
  static const CharacterType CharacterType_MAX =
    Item_CharacterType_CharacterType_MAX;
  static const int CharacterType_ARRAYSIZE =
    Item_CharacterType_CharacterType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CharacterType_descriptor() {
    return Item_CharacterType_descriptor();
  }
  static inline const ::std::string& CharacterType_Name(CharacterType value) {
    return Item_CharacterType_Name(value);
  }
  static inline bool CharacterType_Parse(const ::std::string& name,
      CharacterType* value) {
    return Item_CharacterType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // required int32 template_id = 2;
  inline bool has_template_id() const;
  inline void clear_template_id();
  static const int kTemplateIdFieldNumber = 2;
  inline ::google::protobuf::int32 template_id() const;
  inline void set_template_id(::google::protobuf::int32 value);

  // required .b2.protocol.commondata.Item.CharacterType character_type = 3;
  inline bool has_character_type() const;
  inline void clear_character_type();
  static const int kCharacterTypeFieldNumber = 3;
  inline ::b2::protocol::commondata::Item_CharacterType character_type() const;
  inline void set_character_type(::b2::protocol::commondata::Item_CharacterType value);

  // required .b2.protocol.commondata.Inventory.TYPE inventory_type = 4;
  inline bool has_inventory_type() const;
  inline void clear_inventory_type();
  static const int kInventoryTypeFieldNumber = 4;
  inline ::b2::protocol::commondata::Inventory_TYPE inventory_type() const;
  inline void set_inventory_type(::b2::protocol::commondata::Inventory_TYPE value);

  // required .b2.protocol.commondata.EquipPosition equip_position = 5;
  inline bool has_equip_position() const;
  inline void clear_equip_position();
  static const int kEquipPositionFieldNumber = 5;
  inline ::b2::protocol::commondata::EquipPosition equip_position() const;
  inline void set_equip_position(::b2::protocol::commondata::EquipPosition value);

  // required int32 amount = 6;
  inline bool has_amount() const;
  inline void clear_amount();
  static const int kAmountFieldNumber = 6;
  inline ::google::protobuf::int32 amount() const;
  inline void set_amount(::google::protobuf::int32 value);

  // required int32 grade = 7;
  inline bool has_grade() const;
  inline void clear_grade();
  static const int kGradeFieldNumber = 7;
  inline ::google::protobuf::int32 grade() const;
  inline void set_grade(::google::protobuf::int32 value);

  // required .b2.protocol.commondata.ItemQuality quality = 8;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 8;
  inline ::b2::protocol::commondata::ItemQuality quality() const;
  inline void set_quality(::b2::protocol::commondata::ItemQuality value);

  // required int32 random_option_id1 = 9;
  inline bool has_random_option_id1() const;
  inline void clear_random_option_id1();
  static const int kRandomOptionId1FieldNumber = 9;
  inline ::google::protobuf::int32 random_option_id1() const;
  inline void set_random_option_id1(::google::protobuf::int32 value);

  // required int32 random_option_id2 = 10;
  inline bool has_random_option_id2() const;
  inline void clear_random_option_id2();
  static const int kRandomOptionId2FieldNumber = 10;
  inline ::google::protobuf::int32 random_option_id2() const;
  inline void set_random_option_id2(::google::protobuf::int32 value);

  // required int32 random_option_id3 = 11;
  inline bool has_random_option_id3() const;
  inline void clear_random_option_id3();
  static const int kRandomOptionId3FieldNumber = 11;
  inline ::google::protobuf::int32 random_option_id3() const;
  inline void set_random_option_id3(::google::protobuf::int32 value);

  // required float random_option_value1 = 12;
  inline bool has_random_option_value1() const;
  inline void clear_random_option_value1();
  static const int kRandomOptionValue1FieldNumber = 12;
  inline float random_option_value1() const;
  inline void set_random_option_value1(float value);

  // required float random_option_value2 = 13;
  inline bool has_random_option_value2() const;
  inline void clear_random_option_value2();
  static const int kRandomOptionValue2FieldNumber = 13;
  inline float random_option_value2() const;
  inline void set_random_option_value2(float value);

  // required float random_option_value3 = 14;
  inline bool has_random_option_value3() const;
  inline void clear_random_option_value3();
  static const int kRandomOptionValue3FieldNumber = 14;
  inline float random_option_value3() const;
  inline void set_random_option_value3(float value);

  // required int32 level = 15;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 15;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // required float exp = 16;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 16;
  inline float exp() const;
  inline void set_exp(float value);

  // required int32 enhance_level = 17;
  inline bool has_enhance_level() const;
  inline void clear_enhance_level();
  static const int kEnhanceLevelFieldNumber = 17;
  inline ::google::protobuf::int32 enhance_level() const;
  inline void set_enhance_level(::google::protobuf::int32 value);

  // required int32 surpass_count = 18;
  inline bool has_surpass_count() const;
  inline void clear_surpass_count();
  static const int kSurpassCountFieldNumber = 18;
  inline ::google::protobuf::int32 surpass_count() const;
  inline void set_surpass_count(::google::protobuf::int32 value);

  // required bool locked = 19;
  inline bool has_locked() const;
  inline void clear_locked();
  static const int kLockedFieldNumber = 19;
  inline bool locked() const;
  inline void set_locked(bool value);

  // required float power = 20;
  inline bool has_power() const;
  inline void clear_power();
  static const int kPowerFieldNumber = 20;
  inline float power() const;
  inline void set_power(float value);

  // required bool is_new = 21;
  inline bool has_is_new() const;
  inline void clear_is_new();
  static const int kIsNewFieldNumber = 21;
  inline bool is_new() const;
  inline void set_is_new(bool value);

  // required float md_main_attribute_value = 22;
  inline bool has_md_main_attribute_value() const;
  inline void clear_md_main_attribute_value();
  static const int kMdMainAttributeValueFieldNumber = 22;
  inline float md_main_attribute_value() const;
  inline void set_md_main_attribute_value(float value);

  // required int32 open_seal_slot_count = 30;
  inline bool has_open_seal_slot_count() const;
  inline void clear_open_seal_slot_count();
  static const int kOpenSealSlotCountFieldNumber = 30;
  inline ::google::protobuf::int32 open_seal_slot_count() const;
  inline void set_open_seal_slot_count(::google::protobuf::int32 value);

  // repeated .b2.protocol.commondata.SealSlotState seal_slot_states = 31;
  inline int seal_slot_states_size() const;
  inline void clear_seal_slot_states();
  static const int kSealSlotStatesFieldNumber = 31;
  inline const ::b2::protocol::commondata::SealSlotState& seal_slot_states(int index) const;
  inline ::b2::protocol::commondata::SealSlotState* mutable_seal_slot_states(int index);
  inline ::b2::protocol::commondata::SealSlotState* add_seal_slot_states();
  inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::SealSlotState >&
      seal_slot_states() const;
  inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::SealSlotState >*
      mutable_seal_slot_states();

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.Item)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_template_id();
  inline void clear_has_template_id();
  inline void set_has_character_type();
  inline void clear_has_character_type();
  inline void set_has_inventory_type();
  inline void clear_has_inventory_type();
  inline void set_has_equip_position();
  inline void clear_has_equip_position();
  inline void set_has_amount();
  inline void clear_has_amount();
  inline void set_has_grade();
  inline void clear_has_grade();
  inline void set_has_quality();
  inline void clear_has_quality();
  inline void set_has_random_option_id1();
  inline void clear_has_random_option_id1();
  inline void set_has_random_option_id2();
  inline void clear_has_random_option_id2();
  inline void set_has_random_option_id3();
  inline void clear_has_random_option_id3();
  inline void set_has_random_option_value1();
  inline void clear_has_random_option_value1();
  inline void set_has_random_option_value2();
  inline void clear_has_random_option_value2();
  inline void set_has_random_option_value3();
  inline void clear_has_random_option_value3();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_enhance_level();
  inline void clear_has_enhance_level();
  inline void set_has_surpass_count();
  inline void clear_has_surpass_count();
  inline void set_has_locked();
  inline void clear_has_locked();
  inline void set_has_power();
  inline void clear_has_power();
  inline void set_has_is_new();
  inline void clear_has_is_new();
  inline void set_has_md_main_attribute_value();
  inline void clear_has_md_main_attribute_value();
  inline void set_has_open_seal_slot_count();
  inline void clear_has_open_seal_slot_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::int32 template_id_;
  int character_type_;
  int inventory_type_;
  int equip_position_;
  ::google::protobuf::int32 amount_;
  ::google::protobuf::int32 grade_;
  int quality_;
  ::google::protobuf::int32 random_option_id1_;
  ::google::protobuf::int32 random_option_id2_;
  ::google::protobuf::int32 random_option_id3_;
  float random_option_value1_;
  float random_option_value2_;
  float random_option_value3_;
  ::google::protobuf::int32 level_;
  float exp_;
  ::google::protobuf::int32 enhance_level_;
  ::google::protobuf::int32 surpass_count_;
  float power_;
  bool locked_;
  bool is_new_;
  float md_main_attribute_value_;
  ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::SealSlotState > seal_slot_states_;
  ::google::protobuf::int32 open_seal_slot_count_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static Item* default_instance_;
};
// -------------------------------------------------------------------

class SealSlotState : public ::google::protobuf::Message {
 public:
  SealSlotState();
  virtual ~SealSlotState();

  SealSlotState(const SealSlotState& from);

  inline SealSlotState& operator=(const SealSlotState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SealSlotState& default_instance();

  void Swap(SealSlotState* other);

  // implements Message ----------------------------------------------

  SealSlotState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SealSlotState& from);
  void MergeFrom(const SealSlotState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 seal_slot = 1;
  inline bool has_seal_slot() const;
  inline void clear_seal_slot();
  static const int kSealSlotFieldNumber = 1;
  inline ::google::protobuf::int32 seal_slot() const;
  inline void set_seal_slot(::google::protobuf::int32 value);

  // required bool opened = 2;
  inline bool has_opened() const;
  inline void clear_opened();
  static const int kOpenedFieldNumber = 2;
  inline bool opened() const;
  inline void set_opened(bool value);

  // required int32 option_id = 3;
  inline bool has_option_id() const;
  inline void clear_option_id();
  static const int kOptionIdFieldNumber = 3;
  inline ::google::protobuf::int32 option_id() const;
  inline void set_option_id(::google::protobuf::int32 value);

  // required float option_value = 4;
  inline bool has_option_value() const;
  inline void clear_option_value();
  static const int kOptionValueFieldNumber = 4;
  inline float option_value() const;
  inline void set_option_value(float value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.SealSlotState)
 private:
  inline void set_has_seal_slot();
  inline void clear_has_seal_slot();
  inline void set_has_opened();
  inline void clear_has_opened();
  inline void set_has_option_id();
  inline void clear_has_option_id();
  inline void set_has_option_value();
  inline void clear_has_option_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 seal_slot_;
  bool opened_;
  ::google::protobuf::int32 option_id_;
  float option_value_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static SealSlotState* default_instance_;
};
// -------------------------------------------------------------------

class Costume : public ::google::protobuf::Message {
 public:
  Costume();
  virtual ~Costume();

  Costume(const Costume& from);

  inline Costume& operator=(const Costume& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Costume& default_instance();

  void Swap(Costume* other);

  // implements Message ----------------------------------------------

  Costume* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Costume& from);
  void MergeFrom(const Costume& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Costume_TYPE TYPE;
  static const TYPE COSTUME_WEAPON = Costume_TYPE_COSTUME_WEAPON;
  static const TYPE COSTUME_HAT = Costume_TYPE_COSTUME_HAT;
  static const TYPE COSTUME_ARMOR = Costume_TYPE_COSTUME_ARMOR;
  static inline bool TYPE_IsValid(int value) {
    return Costume_TYPE_IsValid(value);
  }
  static const TYPE TYPE_MIN =
    Costume_TYPE_TYPE_MIN;
  static const TYPE TYPE_MAX =
    Costume_TYPE_TYPE_MAX;
  static const int TYPE_ARRAYSIZE =
    Costume_TYPE_TYPE_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  TYPE_descriptor() {
    return Costume_TYPE_descriptor();
  }
  static inline const ::std::string& TYPE_Name(TYPE value) {
    return Costume_TYPE_Name(value);
  }
  static inline bool TYPE_Parse(const ::std::string& name,
      TYPE* value) {
    return Costume_TYPE_Parse(name, value);
  }

  typedef Costume_CharacterType CharacterType;
  static const CharacterType GLADIATOR = Costume_CharacterType_GLADIATOR;
  static const CharacterType ASSASSIN = Costume_CharacterType_ASSASSIN;
  static const CharacterType WIZARD = Costume_CharacterType_WIZARD;
  static const CharacterType FIGHTER = Costume_CharacterType_FIGHTER;
  static inline bool CharacterType_IsValid(int value) {
    return Costume_CharacterType_IsValid(value);
  }
  static const CharacterType CharacterType_MIN =
    Costume_CharacterType_CharacterType_MIN;
  static const CharacterType CharacterType_MAX =
    Costume_CharacterType_CharacterType_MAX;
  static const int CharacterType_ARRAYSIZE =
    Costume_CharacterType_CharacterType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CharacterType_descriptor() {
    return Costume_CharacterType_descriptor();
  }
  static inline const ::std::string& CharacterType_Name(CharacterType value) {
    return Costume_CharacterType_Name(value);
  }
  static inline bool CharacterType_Parse(const ::std::string& name,
      CharacterType* value) {
    return Costume_CharacterType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // required int32 template_id = 2;
  inline bool has_template_id() const;
  inline void clear_template_id();
  static const int kTemplateIdFieldNumber = 2;
  inline ::google::protobuf::int32 template_id() const;
  inline void set_template_id(::google::protobuf::int32 value);

  // required .b2.protocol.commondata.Costume.CharacterType character_type = 3;
  inline bool has_character_type() const;
  inline void clear_character_type();
  static const int kCharacterTypeFieldNumber = 3;
  inline ::b2::protocol::commondata::Costume_CharacterType character_type() const;
  inline void set_character_type(::b2::protocol::commondata::Costume_CharacterType value);

  // required .b2.protocol.commondata.Inventory.TYPE inventory_type = 4;
  inline bool has_inventory_type() const;
  inline void clear_inventory_type();
  static const int kInventoryTypeFieldNumber = 4;
  inline ::b2::protocol::commondata::Inventory_TYPE inventory_type() const;
  inline void set_inventory_type(::b2::protocol::commondata::Inventory_TYPE value);

  // required .b2.protocol.commondata.EquipPosition equip_position = 5;
  inline bool has_equip_position() const;
  inline void clear_equip_position();
  static const int kEquipPositionFieldNumber = 5;
  inline ::b2::protocol::commondata::EquipPosition equip_position() const;
  inline void set_equip_position(::b2::protocol::commondata::EquipPosition value);

  // required int32 amount = 6;
  inline bool has_amount() const;
  inline void clear_amount();
  static const int kAmountFieldNumber = 6;
  inline ::google::protobuf::int32 amount() const;
  inline void set_amount(::google::protobuf::int32 value);

  // required int32 grade = 7;
  inline bool has_grade() const;
  inline void clear_grade();
  static const int kGradeFieldNumber = 7;
  inline ::google::protobuf::int32 grade() const;
  inline void set_grade(::google::protobuf::int32 value);

  // required .b2.protocol.commondata.ItemQuality quality = 8;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 8;
  inline ::b2::protocol::commondata::ItemQuality quality() const;
  inline void set_quality(::b2::protocol::commondata::ItemQuality value);

  // required int32 random_option_id1 = 9;
  inline bool has_random_option_id1() const;
  inline void clear_random_option_id1();
  static const int kRandomOptionId1FieldNumber = 9;
  inline ::google::protobuf::int32 random_option_id1() const;
  inline void set_random_option_id1(::google::protobuf::int32 value);

  // required int32 random_option_id2 = 10;
  inline bool has_random_option_id2() const;
  inline void clear_random_option_id2();
  static const int kRandomOptionId2FieldNumber = 10;
  inline ::google::protobuf::int32 random_option_id2() const;
  inline void set_random_option_id2(::google::protobuf::int32 value);

  // required int32 random_option_id3 = 11;
  inline bool has_random_option_id3() const;
  inline void clear_random_option_id3();
  static const int kRandomOptionId3FieldNumber = 11;
  inline ::google::protobuf::int32 random_option_id3() const;
  inline void set_random_option_id3(::google::protobuf::int32 value);

  // required float random_option_value1 = 12;
  inline bool has_random_option_value1() const;
  inline void clear_random_option_value1();
  static const int kRandomOptionValue1FieldNumber = 12;
  inline float random_option_value1() const;
  inline void set_random_option_value1(float value);

  // required float random_option_value2 = 13;
  inline bool has_random_option_value2() const;
  inline void clear_random_option_value2();
  static const int kRandomOptionValue2FieldNumber = 13;
  inline float random_option_value2() const;
  inline void set_random_option_value2(float value);

  // required float random_option_value3 = 14;
  inline bool has_random_option_value3() const;
  inline void clear_random_option_value3();
  static const int kRandomOptionValue3FieldNumber = 14;
  inline float random_option_value3() const;
  inline void set_random_option_value3(float value);

  // required int32 level = 15;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 15;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // required float exp = 16;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 16;
  inline float exp() const;
  inline void set_exp(float value);

  // required int32 enhance_level = 17;
  inline bool has_enhance_level() const;
  inline void clear_enhance_level();
  static const int kEnhanceLevelFieldNumber = 17;
  inline ::google::protobuf::int32 enhance_level() const;
  inline void set_enhance_level(::google::protobuf::int32 value);

  // required int32 surpass_count = 18;
  inline bool has_surpass_count() const;
  inline void clear_surpass_count();
  static const int kSurpassCountFieldNumber = 18;
  inline ::google::protobuf::int32 surpass_count() const;
  inline void set_surpass_count(::google::protobuf::int32 value);

  // required bool locked = 19;
  inline bool has_locked() const;
  inline void clear_locked();
  static const int kLockedFieldNumber = 19;
  inline bool locked() const;
  inline void set_locked(bool value);

  // required float power = 20;
  inline bool has_power() const;
  inline void clear_power();
  static const int kPowerFieldNumber = 20;
  inline float power() const;
  inline void set_power(float value);

  // required bool is_new = 21;
  inline bool has_is_new() const;
  inline void clear_is_new();
  static const int kIsNewFieldNumber = 21;
  inline bool is_new() const;
  inline void set_is_new(bool value);

  // required float md_main_attribute_value = 22;
  inline bool has_md_main_attribute_value() const;
  inline void clear_md_main_attribute_value();
  static const int kMdMainAttributeValueFieldNumber = 22;
  inline float md_main_attribute_value() const;
  inline void set_md_main_attribute_value(float value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.Costume)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_template_id();
  inline void clear_has_template_id();
  inline void set_has_character_type();
  inline void clear_has_character_type();
  inline void set_has_inventory_type();
  inline void clear_has_inventory_type();
  inline void set_has_equip_position();
  inline void clear_has_equip_position();
  inline void set_has_amount();
  inline void clear_has_amount();
  inline void set_has_grade();
  inline void clear_has_grade();
  inline void set_has_quality();
  inline void clear_has_quality();
  inline void set_has_random_option_id1();
  inline void clear_has_random_option_id1();
  inline void set_has_random_option_id2();
  inline void clear_has_random_option_id2();
  inline void set_has_random_option_id3();
  inline void clear_has_random_option_id3();
  inline void set_has_random_option_value1();
  inline void clear_has_random_option_value1();
  inline void set_has_random_option_value2();
  inline void clear_has_random_option_value2();
  inline void set_has_random_option_value3();
  inline void clear_has_random_option_value3();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_enhance_level();
  inline void clear_has_enhance_level();
  inline void set_has_surpass_count();
  inline void clear_has_surpass_count();
  inline void set_has_locked();
  inline void clear_has_locked();
  inline void set_has_power();
  inline void clear_has_power();
  inline void set_has_is_new();
  inline void clear_has_is_new();
  inline void set_has_md_main_attribute_value();
  inline void clear_has_md_main_attribute_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::int32 template_id_;
  int character_type_;
  int inventory_type_;
  int equip_position_;
  ::google::protobuf::int32 amount_;
  ::google::protobuf::int32 grade_;
  int quality_;
  ::google::protobuf::int32 random_option_id1_;
  ::google::protobuf::int32 random_option_id2_;
  ::google::protobuf::int32 random_option_id3_;
  float random_option_value1_;
  float random_option_value2_;
  float random_option_value3_;
  ::google::protobuf::int32 level_;
  float exp_;
  ::google::protobuf::int32 enhance_level_;
  ::google::protobuf::int32 surpass_count_;
  float power_;
  bool locked_;
  bool is_new_;
  float md_main_attribute_value_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static Costume* default_instance_;
};
// -------------------------------------------------------------------

class Totem : public ::google::protobuf::Message {
 public:
  Totem();
  virtual ~Totem();

  Totem(const Totem& from);

  inline Totem& operator=(const Totem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Totem& default_instance();

  void Swap(Totem* other);

  // implements Message ----------------------------------------------

  Totem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Totem& from);
  void MergeFrom(const Totem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Totem_CharacterType CharacterType;
  static const CharacterType NONE = Totem_CharacterType_NONE;
  static const CharacterType GLADIATOR = Totem_CharacterType_GLADIATOR;
  static const CharacterType ASSASSIN = Totem_CharacterType_ASSASSIN;
  static const CharacterType WIZARD = Totem_CharacterType_WIZARD;
  static const CharacterType FIGHTER = Totem_CharacterType_FIGHTER;
  static inline bool CharacterType_IsValid(int value) {
    return Totem_CharacterType_IsValid(value);
  }
  static const CharacterType CharacterType_MIN =
    Totem_CharacterType_CharacterType_MIN;
  static const CharacterType CharacterType_MAX =
    Totem_CharacterType_CharacterType_MAX;
  static const int CharacterType_ARRAYSIZE =
    Totem_CharacterType_CharacterType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CharacterType_descriptor() {
    return Totem_CharacterType_descriptor();
  }
  static inline const ::std::string& CharacterType_Name(CharacterType value) {
    return Totem_CharacterType_Name(value);
  }
  static inline bool CharacterType_Parse(const ::std::string& name,
      CharacterType* value) {
    return Totem_CharacterType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // required int32 template_id = 2;
  inline bool has_template_id() const;
  inline void clear_template_id();
  static const int kTemplateIdFieldNumber = 2;
  inline ::google::protobuf::int32 template_id() const;
  inline void set_template_id(::google::protobuf::int32 value);

  // required .b2.protocol.commondata.Totem.CharacterType character_type = 3;
  inline bool has_character_type() const;
  inline void clear_character_type();
  static const int kCharacterTypeFieldNumber = 3;
  inline ::b2::protocol::commondata::Totem_CharacterType character_type() const;
  inline void set_character_type(::b2::protocol::commondata::Totem_CharacterType value);

  // required .b2.protocol.commondata.TotemEquipSlot equip_slot = 4;
  inline bool has_equip_slot() const;
  inline void clear_equip_slot();
  static const int kEquipSlotFieldNumber = 4;
  inline ::b2::protocol::commondata::TotemEquipSlot equip_slot() const;
  inline void set_equip_slot(::b2::protocol::commondata::TotemEquipSlot value);

  // required .b2.protocol.commondata.TotemGrade grade = 5;
  inline bool has_grade() const;
  inline void clear_grade();
  static const int kGradeFieldNumber = 5;
  inline ::b2::protocol::commondata::TotemGrade grade() const;
  inline void set_grade(::b2::protocol::commondata::TotemGrade value);

  // required int32 main_option_id = 6;
  inline bool has_main_option_id() const;
  inline void clear_main_option_id();
  static const int kMainOptionIdFieldNumber = 6;
  inline ::google::protobuf::int32 main_option_id() const;
  inline void set_main_option_id(::google::protobuf::int32 value);

  // required float main_option_value = 7;
  inline bool has_main_option_value() const;
  inline void clear_main_option_value();
  static const int kMainOptionValueFieldNumber = 7;
  inline float main_option_value() const;
  inline void set_main_option_value(float value);

  // repeated .b2.protocol.commondata.TotemSubOptionDetail sub_option_details = 8;
  inline int sub_option_details_size() const;
  inline void clear_sub_option_details();
  static const int kSubOptionDetailsFieldNumber = 8;
  inline const ::b2::protocol::commondata::TotemSubOptionDetail& sub_option_details(int index) const;
  inline ::b2::protocol::commondata::TotemSubOptionDetail* mutable_sub_option_details(int index);
  inline ::b2::protocol::commondata::TotemSubOptionDetail* add_sub_option_details();
  inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::TotemSubOptionDetail >&
      sub_option_details() const;
  inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::TotemSubOptionDetail >*
      mutable_sub_option_details();

  // required int32 refine_level = 9;
  inline bool has_refine_level() const;
  inline void clear_refine_level();
  static const int kRefineLevelFieldNumber = 9;
  inline ::google::protobuf::int32 refine_level() const;
  inline void set_refine_level(::google::protobuf::int32 value);

  // required int32 refine_try_count = 10;
  inline bool has_refine_try_count() const;
  inline void clear_refine_try_count();
  static const int kRefineTryCountFieldNumber = 10;
  inline ::google::protobuf::int32 refine_try_count() const;
  inline void set_refine_try_count(::google::protobuf::int32 value);

  // required int32 gold_success_rate = 11;
  inline bool has_gold_success_rate() const;
  inline void clear_gold_success_rate();
  static const int kGoldSuccessRateFieldNumber = 11;
  inline ::google::protobuf::int32 gold_success_rate() const;
  inline void set_gold_success_rate(::google::protobuf::int32 value);

  // required int32 piece_success_rate = 12;
  inline bool has_piece_success_rate() const;
  inline void clear_piece_success_rate();
  static const int kPieceSuccessRateFieldNumber = 12;
  inline ::google::protobuf::int32 piece_success_rate() const;
  inline void set_piece_success_rate(::google::protobuf::int32 value);

  // required bool locked = 13;
  inline bool has_locked() const;
  inline void clear_locked();
  static const int kLockedFieldNumber = 13;
  inline bool locked() const;
  inline void set_locked(bool value);

  // required float power = 14;
  inline bool has_power() const;
  inline void clear_power();
  static const int kPowerFieldNumber = 14;
  inline float power() const;
  inline void set_power(float value);

  // required bool is_new = 15;
  inline bool has_is_new() const;
  inline void clear_is_new();
  static const int kIsNewFieldNumber = 15;
  inline bool is_new() const;
  inline void set_is_new(bool value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.Totem)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_template_id();
  inline void clear_has_template_id();
  inline void set_has_character_type();
  inline void clear_has_character_type();
  inline void set_has_equip_slot();
  inline void clear_has_equip_slot();
  inline void set_has_grade();
  inline void clear_has_grade();
  inline void set_has_main_option_id();
  inline void clear_has_main_option_id();
  inline void set_has_main_option_value();
  inline void clear_has_main_option_value();
  inline void set_has_refine_level();
  inline void clear_has_refine_level();
  inline void set_has_refine_try_count();
  inline void clear_has_refine_try_count();
  inline void set_has_gold_success_rate();
  inline void clear_has_gold_success_rate();
  inline void set_has_piece_success_rate();
  inline void clear_has_piece_success_rate();
  inline void set_has_locked();
  inline void clear_has_locked();
  inline void set_has_power();
  inline void clear_has_power();
  inline void set_has_is_new();
  inline void clear_has_is_new();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::int32 template_id_;
  int character_type_;
  int equip_slot_;
  int grade_;
  ::google::protobuf::int32 main_option_id_;
  float main_option_value_;
  ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::TotemSubOptionDetail > sub_option_details_;
  ::google::protobuf::int32 refine_level_;
  ::google::protobuf::int32 refine_try_count_;
  ::google::protobuf::int32 gold_success_rate_;
  ::google::protobuf::int32 piece_success_rate_;
  float power_;
  bool locked_;
  bool is_new_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static Totem* default_instance_;
};
// -------------------------------------------------------------------

class TotemSubOptionDetail : public ::google::protobuf::Message {
 public:
  TotemSubOptionDetail();
  virtual ~TotemSubOptionDetail();

  TotemSubOptionDetail(const TotemSubOptionDetail& from);

  inline TotemSubOptionDetail& operator=(const TotemSubOptionDetail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TotemSubOptionDetail& default_instance();

  void Swap(TotemSubOptionDetail* other);

  // implements Message ----------------------------------------------

  TotemSubOptionDetail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TotemSubOptionDetail& from);
  void MergeFrom(const TotemSubOptionDetail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 option_id = 1;
  inline bool has_option_id() const;
  inline void clear_option_id();
  static const int kOptionIdFieldNumber = 1;
  inline ::google::protobuf::int32 option_id() const;
  inline void set_option_id(::google::protobuf::int32 value);

  // required float option_value = 2;
  inline bool has_option_value() const;
  inline void clear_option_value();
  static const int kOptionValueFieldNumber = 2;
  inline float option_value() const;
  inline void set_option_value(float value);

  // required int32 refine_count = 3;
  inline bool has_refine_count() const;
  inline void clear_refine_count();
  static const int kRefineCountFieldNumber = 3;
  inline ::google::protobuf::int32 refine_count() const;
  inline void set_refine_count(::google::protobuf::int32 value);

  // repeated .b2.protocol.commondata.TotemRefineState refine_states = 4;
  inline int refine_states_size() const;
  inline void clear_refine_states();
  static const int kRefineStatesFieldNumber = 4;
  inline const ::b2::protocol::commondata::TotemRefineState& refine_states(int index) const;
  inline ::b2::protocol::commondata::TotemRefineState* mutable_refine_states(int index);
  inline ::b2::protocol::commondata::TotemRefineState* add_refine_states();
  inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::TotemRefineState >&
      refine_states() const;
  inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::TotemRefineState >*
      mutable_refine_states();

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.TotemSubOptionDetail)
 private:
  inline void set_has_option_id();
  inline void clear_has_option_id();
  inline void set_has_option_value();
  inline void clear_has_option_value();
  inline void set_has_refine_count();
  inline void clear_has_refine_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 option_id_;
  float option_value_;
  ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::TotemRefineState > refine_states_;
  ::google::protobuf::int32 refine_count_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static TotemSubOptionDetail* default_instance_;
};
// -------------------------------------------------------------------

class TotemRefineState : public ::google::protobuf::Message {
 public:
  TotemRefineState();
  virtual ~TotemRefineState();

  TotemRefineState(const TotemRefineState& from);

  inline TotemRefineState& operator=(const TotemRefineState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TotemRefineState& default_instance();

  void Swap(TotemRefineState* other);

  // implements Message ----------------------------------------------

  TotemRefineState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TotemRefineState& from);
  void MergeFrom(const TotemRefineState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef TotemRefineState_Refinestatus Refinestatus;
  static const Refinestatus NONE = TotemRefineState_Refinestatus_NONE;
  static const Refinestatus SUCCESS = TotemRefineState_Refinestatus_SUCCESS;
  static const Refinestatus FAIL = TotemRefineState_Refinestatus_FAIL;
  static inline bool Refinestatus_IsValid(int value) {
    return TotemRefineState_Refinestatus_IsValid(value);
  }
  static const Refinestatus Refinestatus_MIN =
    TotemRefineState_Refinestatus_Refinestatus_MIN;
  static const Refinestatus Refinestatus_MAX =
    TotemRefineState_Refinestatus_Refinestatus_MAX;
  static const int Refinestatus_ARRAYSIZE =
    TotemRefineState_Refinestatus_Refinestatus_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Refinestatus_descriptor() {
    return TotemRefineState_Refinestatus_descriptor();
  }
  static inline const ::std::string& Refinestatus_Name(Refinestatus value) {
    return TotemRefineState_Refinestatus_Name(value);
  }
  static inline bool Refinestatus_Parse(const ::std::string& name,
      Refinestatus* value) {
    return TotemRefineState_Refinestatus_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // required .b2.protocol.commondata.TotemRefineState.Refinestatus status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::b2::protocol::commondata::TotemRefineState_Refinestatus status() const;
  inline void set_status(::b2::protocol::commondata::TotemRefineState_Refinestatus value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.TotemRefineState)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 index_;
  int status_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static TotemRefineState* default_instance_;
};
// -------------------------------------------------------------------

class Inventory : public ::google::protobuf::Message {
 public:
  Inventory();
  virtual ~Inventory();

  Inventory(const Inventory& from);

  inline Inventory& operator=(const Inventory& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Inventory& default_instance();

  void Swap(Inventory* other);

  // implements Message ----------------------------------------------

  Inventory* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Inventory& from);
  void MergeFrom(const Inventory& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Inventory_TYPE TYPE;
  static const TYPE WEAPON = Inventory_TYPE_WEAPON;
  static const TYPE ARMOR = Inventory_TYPE_ARMOR;
  static const TYPE ACCESSORY = Inventory_TYPE_ACCESSORY;
  static const TYPE WING = Inventory_TYPE_WING;
  static const TYPE COSTUME_WEAPON = Inventory_TYPE_COSTUME_WEAPON;
  static const TYPE COSTUME_ARMOR = Inventory_TYPE_COSTUME_ARMOR;
  static const TYPE CONSUMABLE = Inventory_TYPE_CONSUMABLE;
  static inline bool TYPE_IsValid(int value) {
    return Inventory_TYPE_IsValid(value);
  }
  static const TYPE TYPE_MIN =
    Inventory_TYPE_TYPE_MIN;
  static const TYPE TYPE_MAX =
    Inventory_TYPE_TYPE_MAX;
  static const int TYPE_ARRAYSIZE =
    Inventory_TYPE_TYPE_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  TYPE_descriptor() {
    return Inventory_TYPE_descriptor();
  }
  static inline const ::std::string& TYPE_Name(TYPE value) {
    return Inventory_TYPE_Name(value);
  }
  static inline bool TYPE_Parse(const ::std::string& name,
      TYPE* value) {
    return Inventory_TYPE_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.Inventory)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static Inventory* default_instance_;
};
// -------------------------------------------------------------------

class InventoryCountInfo : public ::google::protobuf::Message {
 public:
  InventoryCountInfo();
  virtual ~InventoryCountInfo();

  InventoryCountInfo(const InventoryCountInfo& from);

  inline InventoryCountInfo& operator=(const InventoryCountInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InventoryCountInfo& default_instance();

  void Swap(InventoryCountInfo* other);

  // implements Message ----------------------------------------------

  InventoryCountInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InventoryCountInfo& from);
  void MergeFrom(const InventoryCountInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .b2.protocol.commondata.Character.TYPE character_type = 1;
  inline bool has_character_type() const;
  inline void clear_character_type();
  static const int kCharacterTypeFieldNumber = 1;
  inline ::b2::protocol::commondata::Character_TYPE character_type() const;
  inline void set_character_type(::b2::protocol::commondata::Character_TYPE value);

  // required int32 count = 3;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 3;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // required int32 max_count = 4;
  inline bool has_max_count() const;
  inline void clear_max_count();
  static const int kMaxCountFieldNumber = 4;
  inline ::google::protobuf::int32 max_count() const;
  inline void set_max_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.InventoryCountInfo)
 private:
  inline void set_has_character_type();
  inline void clear_has_character_type();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_max_count();
  inline void clear_has_max_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int character_type_;
  ::google::protobuf::int32 count_;
  ::google::protobuf::int32 max_count_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static InventoryCountInfo* default_instance_;
};
// -------------------------------------------------------------------

class ItemPreset : public ::google::protobuf::Message {
 public:
  ItemPreset();
  virtual ~ItemPreset();

  ItemPreset(const ItemPreset& from);

  inline ItemPreset& operator=(const ItemPreset& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemPreset& default_instance();

  void Swap(ItemPreset* other);

  // implements Message ----------------------------------------------

  ItemPreset* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemPreset& from);
  void MergeFrom(const ItemPreset& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::int64 account_id() const;
  inline void set_account_id(::google::protobuf::int64 value);

  // required .b2.protocol.commondata.Character.TYPE character_type = 2;
  inline bool has_character_type() const;
  inline void clear_character_type();
  static const int kCharacterTypeFieldNumber = 2;
  inline ::b2::protocol::commondata::Character_TYPE character_type() const;
  inline void set_character_type(::b2::protocol::commondata::Character_TYPE value);

  // required int32 preset_id = 3;
  inline bool has_preset_id() const;
  inline void clear_preset_id();
  static const int kPresetIdFieldNumber = 3;
  inline ::google::protobuf::int32 preset_id() const;
  inline void set_preset_id(::google::protobuf::int32 value);

  // required .b2.protocol.commondata.EquipPosition equip_position = 4;
  inline bool has_equip_position() const;
  inline void clear_equip_position();
  static const int kEquipPositionFieldNumber = 4;
  inline ::b2::protocol::commondata::EquipPosition equip_position() const;
  inline void set_equip_position(::b2::protocol::commondata::EquipPosition value);

  // required int64 item_id = 5;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 5;
  inline ::google::protobuf::int64 item_id() const;
  inline void set_item_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.ItemPreset)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_character_type();
  inline void clear_has_character_type();
  inline void set_has_preset_id();
  inline void clear_has_preset_id();
  inline void set_has_equip_position();
  inline void clear_has_equip_position();
  inline void set_has_item_id();
  inline void clear_has_item_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 account_id_;
  int character_type_;
  ::google::protobuf::int32 preset_id_;
  ::google::protobuf::int64 item_id_;
  int equip_position_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static ItemPreset* default_instance_;
};
// -------------------------------------------------------------------

class Aether : public ::google::protobuf::Message {
 public:
  Aether();
  virtual ~Aether();

  Aether(const Aether& from);

  inline Aether& operator=(const Aether& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Aether& default_instance();

  void Swap(Aether* other);

  // implements Message ----------------------------------------------

  Aether* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Aether& from);
  void MergeFrom(const Aether& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Aether_TYPE TYPE;
  static const TYPE ALL = Aether_TYPE_ALL;
  static const TYPE THUNDERSTORM = Aether_TYPE_THUNDERSTORM;
  static const TYPE DESTROY = Aether_TYPE_DESTROY;
  static const TYPE INSIGHT = Aether_TYPE_INSIGHT;
  static const TYPE RAGE = Aether_TYPE_RAGE;
  static const TYPE DESPAIR = Aether_TYPE_DESPAIR;
  static const TYPE RESTRAINT = Aether_TYPE_RESTRAINT;
  static const TYPE RESIST = Aether_TYPE_RESIST;
  static const TYPE REVENGE = Aether_TYPE_REVENGE;
  static const TYPE PROTECT = Aether_TYPE_PROTECT;
  static const TYPE PASSION = Aether_TYPE_PASSION;
  static const TYPE OBLIVION = Aether_TYPE_OBLIVION;
  static const TYPE FREEZING = Aether_TYPE_FREEZING;
  static inline bool TYPE_IsValid(int value) {
    return Aether_TYPE_IsValid(value);
  }
  static const TYPE TYPE_MIN =
    Aether_TYPE_TYPE_MIN;
  static const TYPE TYPE_MAX =
    Aether_TYPE_TYPE_MAX;
  static const int TYPE_ARRAYSIZE =
    Aether_TYPE_TYPE_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  TYPE_descriptor() {
    return Aether_TYPE_descriptor();
  }
  static inline const ::std::string& TYPE_Name(TYPE value) {
    return Aether_TYPE_Name(value);
  }
  static inline bool TYPE_Parse(const ::std::string& name,
      TYPE* value) {
    return Aether_TYPE_Parse(name, value);
  }

  typedef Aether_TIER TIER;
  static const TIER SEAL = Aether_TIER_SEAL;
  static const TIER ANTI_DEVIL = Aether_TIER_ANTI_DEVIL;
  static const TIER EXTERMINATE_DEVIL = Aether_TIER_EXTERMINATE_DEVIL;
  static const TIER ETERNAL_LIFE = Aether_TIER_ETERNAL_LIFE;
  static inline bool TIER_IsValid(int value) {
    return Aether_TIER_IsValid(value);
  }
  static const TIER TIER_MIN =
    Aether_TIER_TIER_MIN;
  static const TIER TIER_MAX =
    Aether_TIER_TIER_MAX;
  static const int TIER_ARRAYSIZE =
    Aether_TIER_TIER_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  TIER_descriptor() {
    return Aether_TIER_descriptor();
  }
  static inline const ::std::string& TIER_Name(TIER value) {
    return Aether_TIER_Name(value);
  }
  static inline bool TIER_Parse(const ::std::string& name,
      TIER* value) {
    return Aether_TIER_Parse(name, value);
  }

  typedef Aether_CharacterType CharacterType;
  static const CharacterType NOT_USED = Aether_CharacterType_NOT_USED;
  static const CharacterType GLADIATOR = Aether_CharacterType_GLADIATOR;
  static const CharacterType ASSASSIN = Aether_CharacterType_ASSASSIN;
  static const CharacterType WIZARD = Aether_CharacterType_WIZARD;
  static const CharacterType FIGHTER = Aether_CharacterType_FIGHTER;
  static inline bool CharacterType_IsValid(int value) {
    return Aether_CharacterType_IsValid(value);
  }
  static const CharacterType CharacterType_MIN =
    Aether_CharacterType_CharacterType_MIN;
  static const CharacterType CharacterType_MAX =
    Aether_CharacterType_CharacterType_MAX;
  static const int CharacterType_ARRAYSIZE =
    Aether_CharacterType_CharacterType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CharacterType_descriptor() {
    return Aether_CharacterType_descriptor();
  }
  static inline const ::std::string& CharacterType_Name(CharacterType value) {
    return Aether_CharacterType_Name(value);
  }
  static inline bool CharacterType_Parse(const ::std::string& name,
      CharacterType* value) {
    return Aether_CharacterType_Parse(name, value);
  }

  typedef Aether_SetOptionType SetOptionType;
  static const SetOptionType THUNDER_DAMAGE = Aether_SetOptionType_THUNDER_DAMAGE;
  static const SetOptionType IMMOBILIZE = Aether_SetOptionType_IMMOBILIZE;
  static const SetOptionType SHIELD = Aether_SetOptionType_SHIELD;
  static const SetOptionType FIRE_RANGE = Aether_SetOptionType_FIRE_RANGE;
  static const SetOptionType METEOR_DAMAGE = Aether_SetOptionType_METEOR_DAMAGE;
  static const SetOptionType SKILL_COOLTIME = Aether_SetOptionType_SKILL_COOLTIME;
  static const SetOptionType SKILL_GAGE = Aether_SetOptionType_SKILL_GAGE;
  static const SetOptionType STUN = Aether_SetOptionType_STUN;
  static const SetOptionType SUPER_ARMOR = Aether_SetOptionType_SUPER_ARMOR;
  static const SetOptionType DAMAGE_REFLECT = Aether_SetOptionType_DAMAGE_REFLECT;
  static const SetOptionType PROHIBIT_BEHAVIOR = Aether_SetOptionType_PROHIBIT_BEHAVIOR;
  static const SetOptionType FREEZE_RANGE = Aether_SetOptionType_FREEZE_RANGE;
  static inline bool SetOptionType_IsValid(int value) {
    return Aether_SetOptionType_IsValid(value);
  }
  static const SetOptionType SetOptionType_MIN =
    Aether_SetOptionType_SetOptionType_MIN;
  static const SetOptionType SetOptionType_MAX =
    Aether_SetOptionType_SetOptionType_MAX;
  static const int SetOptionType_ARRAYSIZE =
    Aether_SetOptionType_SetOptionType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  SetOptionType_descriptor() {
    return Aether_SetOptionType_descriptor();
  }
  static inline const ::std::string& SetOptionType_Name(SetOptionType value) {
    return Aether_SetOptionType_Name(value);
  }
  static inline bool SetOptionType_Parse(const ::std::string& name,
      SetOptionType* value) {
    return Aether_SetOptionType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // required .b2.protocol.commondata.Aether.TYPE type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::b2::protocol::commondata::Aether_TYPE type() const;
  inline void set_type(::b2::protocol::commondata::Aether_TYPE value);

  // required int32 slot = 3;
  inline bool has_slot() const;
  inline void clear_slot();
  static const int kSlotFieldNumber = 3;
  inline ::google::protobuf::int32 slot() const;
  inline void set_slot(::google::protobuf::int32 value);

  // required .b2.protocol.commondata.Aether.CharacterType character_type = 4;
  inline bool has_character_type() const;
  inline void clear_character_type();
  static const int kCharacterTypeFieldNumber = 4;
  inline ::b2::protocol::commondata::Aether_CharacterType character_type() const;
  inline void set_character_type(::b2::protocol::commondata::Aether_CharacterType value);

  // required int32 level = 5;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 5;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // required int32 grade = 6;
  inline bool has_grade() const;
  inline void clear_grade();
  static const int kGradeFieldNumber = 6;
  inline ::google::protobuf::int32 grade() const;
  inline void set_grade(::google::protobuf::int32 value);

  // required .b2.protocol.commondata.Aether.TIER tier = 7;
  inline bool has_tier() const;
  inline void clear_tier();
  static const int kTierFieldNumber = 7;
  inline ::b2::protocol::commondata::Aether_TIER tier() const;
  inline void set_tier(::b2::protocol::commondata::Aether_TIER value);

  // required int32 main_option_id = 8;
  inline bool has_main_option_id() const;
  inline void clear_main_option_id();
  static const int kMainOptionIdFieldNumber = 8;
  inline ::google::protobuf::int32 main_option_id() const;
  inline void set_main_option_id(::google::protobuf::int32 value);

  // required float main_option_value = 9;
  inline bool has_main_option_value() const;
  inline void clear_main_option_value();
  static const int kMainOptionValueFieldNumber = 9;
  inline float main_option_value() const;
  inline void set_main_option_value(float value);

  // required int32 sub_option_id1 = 10;
  inline bool has_sub_option_id1() const;
  inline void clear_sub_option_id1();
  static const int kSubOptionId1FieldNumber = 10;
  inline ::google::protobuf::int32 sub_option_id1() const;
  inline void set_sub_option_id1(::google::protobuf::int32 value);

  // required int32 sub_option_id2 = 11;
  inline bool has_sub_option_id2() const;
  inline void clear_sub_option_id2();
  static const int kSubOptionId2FieldNumber = 11;
  inline ::google::protobuf::int32 sub_option_id2() const;
  inline void set_sub_option_id2(::google::protobuf::int32 value);

  // required int32 sub_option_id3 = 12;
  inline bool has_sub_option_id3() const;
  inline void clear_sub_option_id3();
  static const int kSubOptionId3FieldNumber = 12;
  inline ::google::protobuf::int32 sub_option_id3() const;
  inline void set_sub_option_id3(::google::protobuf::int32 value);

  // required float sub_option_value1 = 13;
  inline bool has_sub_option_value1() const;
  inline void clear_sub_option_value1();
  static const int kSubOptionValue1FieldNumber = 13;
  inline float sub_option_value1() const;
  inline void set_sub_option_value1(float value);

  // required float sub_option_value2 = 14;
  inline bool has_sub_option_value2() const;
  inline void clear_sub_option_value2();
  static const int kSubOptionValue2FieldNumber = 14;
  inline float sub_option_value2() const;
  inline void set_sub_option_value2(float value);

  // required float sub_option_value3 = 15;
  inline bool has_sub_option_value3() const;
  inline void clear_sub_option_value3();
  static const int kSubOptionValue3FieldNumber = 15;
  inline float sub_option_value3() const;
  inline void set_sub_option_value3(float value);

  // required int32 sub_option_enhance_count1 = 16;
  inline bool has_sub_option_enhance_count1() const;
  inline void clear_sub_option_enhance_count1();
  static const int kSubOptionEnhanceCount1FieldNumber = 16;
  inline ::google::protobuf::int32 sub_option_enhance_count1() const;
  inline void set_sub_option_enhance_count1(::google::protobuf::int32 value);

  // required int32 sub_option_enhance_count2 = 17;
  inline bool has_sub_option_enhance_count2() const;
  inline void clear_sub_option_enhance_count2();
  static const int kSubOptionEnhanceCount2FieldNumber = 17;
  inline ::google::protobuf::int32 sub_option_enhance_count2() const;
  inline void set_sub_option_enhance_count2(::google::protobuf::int32 value);

  // required int32 sub_option_enhance_count3 = 18;
  inline bool has_sub_option_enhance_count3() const;
  inline void clear_sub_option_enhance_count3();
  static const int kSubOptionEnhanceCount3FieldNumber = 18;
  inline ::google::protobuf::int32 sub_option_enhance_count3() const;
  inline void set_sub_option_enhance_count3(::google::protobuf::int32 value);

  // required bool locked = 20;
  inline bool has_locked() const;
  inline void clear_locked();
  static const int kLockedFieldNumber = 20;
  inline bool locked() const;
  inline void set_locked(bool value);

  // required bool is_new = 21;
  inline bool has_is_new() const;
  inline void clear_is_new();
  static const int kIsNewFieldNumber = 21;
  inline bool is_new() const;
  inline void set_is_new(bool value);

  // required float calc_main_option_value = 30;
  inline bool has_calc_main_option_value() const;
  inline void clear_calc_main_option_value();
  static const int kCalcMainOptionValueFieldNumber = 30;
  inline float calc_main_option_value() const;
  inline void set_calc_main_option_value(float value);

  // required float calc_sub_option_value1 = 31;
  inline bool has_calc_sub_option_value1() const;
  inline void clear_calc_sub_option_value1();
  static const int kCalcSubOptionValue1FieldNumber = 31;
  inline float calc_sub_option_value1() const;
  inline void set_calc_sub_option_value1(float value);

  // required float calc_sub_option_value2 = 32;
  inline bool has_calc_sub_option_value2() const;
  inline void clear_calc_sub_option_value2();
  static const int kCalcSubOptionValue2FieldNumber = 32;
  inline float calc_sub_option_value2() const;
  inline void set_calc_sub_option_value2(float value);

  // required float calc_sub_option_value3 = 33;
  inline bool has_calc_sub_option_value3() const;
  inline void clear_calc_sub_option_value3();
  static const int kCalcSubOptionValue3FieldNumber = 33;
  inline float calc_sub_option_value3() const;
  inline void set_calc_sub_option_value3(float value);

  // required .b2.protocol.commondata.Aether.TIER calc_tier = 34;
  inline bool has_calc_tier() const;
  inline void clear_calc_tier();
  static const int kCalcTierFieldNumber = 34;
  inline ::b2::protocol::commondata::Aether_TIER calc_tier() const;
  inline void set_calc_tier(::b2::protocol::commondata::Aether_TIER value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.Aether)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_slot();
  inline void clear_has_slot();
  inline void set_has_character_type();
  inline void clear_has_character_type();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_grade();
  inline void clear_has_grade();
  inline void set_has_tier();
  inline void clear_has_tier();
  inline void set_has_main_option_id();
  inline void clear_has_main_option_id();
  inline void set_has_main_option_value();
  inline void clear_has_main_option_value();
  inline void set_has_sub_option_id1();
  inline void clear_has_sub_option_id1();
  inline void set_has_sub_option_id2();
  inline void clear_has_sub_option_id2();
  inline void set_has_sub_option_id3();
  inline void clear_has_sub_option_id3();
  inline void set_has_sub_option_value1();
  inline void clear_has_sub_option_value1();
  inline void set_has_sub_option_value2();
  inline void clear_has_sub_option_value2();
  inline void set_has_sub_option_value3();
  inline void clear_has_sub_option_value3();
  inline void set_has_sub_option_enhance_count1();
  inline void clear_has_sub_option_enhance_count1();
  inline void set_has_sub_option_enhance_count2();
  inline void clear_has_sub_option_enhance_count2();
  inline void set_has_sub_option_enhance_count3();
  inline void clear_has_sub_option_enhance_count3();
  inline void set_has_locked();
  inline void clear_has_locked();
  inline void set_has_is_new();
  inline void clear_has_is_new();
  inline void set_has_calc_main_option_value();
  inline void clear_has_calc_main_option_value();
  inline void set_has_calc_sub_option_value1();
  inline void clear_has_calc_sub_option_value1();
  inline void set_has_calc_sub_option_value2();
  inline void clear_has_calc_sub_option_value2();
  inline void set_has_calc_sub_option_value3();
  inline void clear_has_calc_sub_option_value3();
  inline void set_has_calc_tier();
  inline void clear_has_calc_tier();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 id_;
  int type_;
  ::google::protobuf::int32 slot_;
  int character_type_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 grade_;
  int tier_;
  ::google::protobuf::int32 main_option_id_;
  float main_option_value_;
  ::google::protobuf::int32 sub_option_id1_;
  ::google::protobuf::int32 sub_option_id2_;
  ::google::protobuf::int32 sub_option_id3_;
  float sub_option_value1_;
  float sub_option_value2_;
  float sub_option_value3_;
  ::google::protobuf::int32 sub_option_enhance_count1_;
  ::google::protobuf::int32 sub_option_enhance_count2_;
  ::google::protobuf::int32 sub_option_enhance_count3_;
  bool locked_;
  bool is_new_;
  float calc_main_option_value_;
  float calc_sub_option_value1_;
  float calc_sub_option_value2_;
  float calc_sub_option_value3_;
  int calc_tier_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static Aether* default_instance_;
};
// -------------------------------------------------------------------

class CharacterSetOptionInfo : public ::google::protobuf::Message {
 public:
  CharacterSetOptionInfo();
  virtual ~CharacterSetOptionInfo();

  CharacterSetOptionInfo(const CharacterSetOptionInfo& from);

  inline CharacterSetOptionInfo& operator=(const CharacterSetOptionInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterSetOptionInfo& default_instance();

  void Swap(CharacterSetOptionInfo* other);

  // implements Message ----------------------------------------------

  CharacterSetOptionInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterSetOptionInfo& from);
  void MergeFrom(const CharacterSetOptionInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 selected_offense_set_option_id = 1;
  inline bool has_selected_offense_set_option_id() const;
  inline void clear_selected_offense_set_option_id();
  static const int kSelectedOffenseSetOptionIdFieldNumber = 1;
  inline ::google::protobuf::int32 selected_offense_set_option_id() const;
  inline void set_selected_offense_set_option_id(::google::protobuf::int32 value);

  // optional int32 selected_defense_set_option_id = 2;
  inline bool has_selected_defense_set_option_id() const;
  inline void clear_selected_defense_set_option_id();
  static const int kSelectedDefenseSetOptionIdFieldNumber = 2;
  inline ::google::protobuf::int32 selected_defense_set_option_id() const;
  inline void set_selected_defense_set_option_id(::google::protobuf::int32 value);

  // repeated int32 defense_set_option_ids = 3;
  inline int defense_set_option_ids_size() const;
  inline void clear_defense_set_option_ids();
  static const int kDefenseSetOptionIdsFieldNumber = 3;
  inline ::google::protobuf::int32 defense_set_option_ids(int index) const;
  inline void set_defense_set_option_ids(int index, ::google::protobuf::int32 value);
  inline void add_defense_set_option_ids(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      defense_set_option_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_defense_set_option_ids();

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.CharacterSetOptionInfo)
 private:
  inline void set_has_selected_offense_set_option_id();
  inline void clear_has_selected_offense_set_option_id();
  inline void set_has_selected_defense_set_option_id();
  inline void clear_has_selected_defense_set_option_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 selected_offense_set_option_id_;
  ::google::protobuf::int32 selected_defense_set_option_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > defense_set_option_ids_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static CharacterSetOptionInfo* default_instance_;
};
// -------------------------------------------------------------------

class SkillQuickSlot : public ::google::protobuf::Message {
 public:
  SkillQuickSlot();
  virtual ~SkillQuickSlot();

  SkillQuickSlot(const SkillQuickSlot& from);

  inline SkillQuickSlot& operator=(const SkillQuickSlot& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillQuickSlot& default_instance();

  void Swap(SkillQuickSlot* other);

  // implements Message ----------------------------------------------

  SkillQuickSlot* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillQuickSlot& from);
  void MergeFrom(const SkillQuickSlot& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 slot = 1;
  inline bool has_slot() const;
  inline void clear_slot();
  static const int kSlotFieldNumber = 1;
  inline ::google::protobuf::int32 slot() const;
  inline void set_slot(::google::protobuf::int32 value);

  // required int32 left_skill_point = 2;
  inline bool has_left_skill_point() const;
  inline void clear_left_skill_point();
  static const int kLeftSkillPointFieldNumber = 2;
  inline ::google::protobuf::int32 left_skill_point() const;
  inline void set_left_skill_point(::google::protobuf::int32 value);

  // required float skill_total_power = 3;
  inline bool has_skill_total_power() const;
  inline void clear_skill_total_power();
  static const int kSkillTotalPowerFieldNumber = 3;
  inline float skill_total_power() const;
  inline void set_skill_total_power(float value);

  // required int32 using_skill_id_1 = 10;
  inline bool has_using_skill_id_1() const;
  inline void clear_using_skill_id_1();
  static const int kUsingSkillId1FieldNumber = 10;
  inline ::google::protobuf::int32 using_skill_id_1() const;
  inline void set_using_skill_id_1(::google::protobuf::int32 value);

  // required int32 using_skill_id_2 = 11;
  inline bool has_using_skill_id_2() const;
  inline void clear_using_skill_id_2();
  static const int kUsingSkillId2FieldNumber = 11;
  inline ::google::protobuf::int32 using_skill_id_2() const;
  inline void set_using_skill_id_2(::google::protobuf::int32 value);

  // required int32 using_skill_id_3 = 12;
  inline bool has_using_skill_id_3() const;
  inline void clear_using_skill_id_3();
  static const int kUsingSkillId3FieldNumber = 12;
  inline ::google::protobuf::int32 using_skill_id_3() const;
  inline void set_using_skill_id_3(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.SkillQuickSlot)
 private:
  inline void set_has_slot();
  inline void clear_has_slot();
  inline void set_has_left_skill_point();
  inline void clear_has_left_skill_point();
  inline void set_has_skill_total_power();
  inline void clear_has_skill_total_power();
  inline void set_has_using_skill_id_1();
  inline void clear_has_using_skill_id_1();
  inline void set_has_using_skill_id_2();
  inline void clear_has_using_skill_id_2();
  inline void set_has_using_skill_id_3();
  inline void clear_has_using_skill_id_3();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 slot_;
  ::google::protobuf::int32 left_skill_point_;
  float skill_total_power_;
  ::google::protobuf::int32 using_skill_id_1_;
  ::google::protobuf::int32 using_skill_id_2_;
  ::google::protobuf::int32 using_skill_id_3_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static SkillQuickSlot* default_instance_;
};
// -------------------------------------------------------------------

class Skill : public ::google::protobuf::Message {
 public:
  Skill();
  virtual ~Skill();

  Skill(const Skill& from);

  inline Skill& operator=(const Skill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Skill& default_instance();

  void Swap(Skill* other);

  // implements Message ----------------------------------------------

  Skill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Skill& from);
  void MergeFrom(const Skill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 skill_id = 1;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::int32 skill_id() const;
  inline void set_skill_id(::google::protobuf::int32 value);

  // required int32 skill_level = 2;
  inline bool has_skill_level() const;
  inline void clear_skill_level();
  static const int kSkillLevelFieldNumber = 2;
  inline ::google::protobuf::int32 skill_level() const;
  inline void set_skill_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.Skill)
 private:
  inline void set_has_skill_id();
  inline void clear_has_skill_id();
  inline void set_has_skill_level();
  inline void clear_has_skill_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 skill_id_;
  ::google::protobuf::int32 skill_level_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static Skill* default_instance_;
};
// -------------------------------------------------------------------

class RawReward : public ::google::protobuf::Message {
 public:
  RawReward();
  virtual ~RawReward();

  RawReward(const RawReward& from);

  inline RawReward& operator=(const RawReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RawReward& default_instance();

  void Swap(RawReward* other);

  // implements Message ----------------------------------------------

  RawReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RawReward& from);
  void MergeFrom(const RawReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.RawReward)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 count_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static RawReward* default_instance_;
};
// -------------------------------------------------------------------

class Reward : public ::google::protobuf::Message {
 public:
  Reward();
  virtual ~Reward();

  Reward(const Reward& from);

  inline Reward& operator=(const Reward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Reward& default_instance();

  void Swap(Reward* other);

  // implements Message ----------------------------------------------

  Reward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Reward& from);
  void MergeFrom(const Reward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .b2.protocol.commondata.RawReward raw_reward = 1;
  inline bool has_raw_reward() const;
  inline void clear_raw_reward();
  static const int kRawRewardFieldNumber = 1;
  inline const ::b2::protocol::commondata::RawReward& raw_reward() const;
  inline ::b2::protocol::commondata::RawReward* mutable_raw_reward();
  inline ::b2::protocol::commondata::RawReward* release_raw_reward();
  inline void set_allocated_raw_reward(::b2::protocol::commondata::RawReward* raw_reward);

  // optional .b2.protocol.commondata.Item item = 5;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 5;
  inline const ::b2::protocol::commondata::Item& item() const;
  inline ::b2::protocol::commondata::Item* mutable_item();
  inline ::b2::protocol::commondata::Item* release_item();
  inline void set_allocated_item(::b2::protocol::commondata::Item* item);

  // optional .b2.protocol.commondata.Costume costume = 6;
  inline bool has_costume() const;
  inline void clear_costume();
  static const int kCostumeFieldNumber = 6;
  inline const ::b2::protocol::commondata::Costume& costume() const;
  inline ::b2::protocol::commondata::Costume* mutable_costume();
  inline ::b2::protocol::commondata::Costume* release_costume();
  inline void set_allocated_costume(::b2::protocol::commondata::Costume* costume);

  // optional .b2.protocol.commondata.Totem totem = 7;
  inline bool has_totem() const;
  inline void clear_totem();
  static const int kTotemFieldNumber = 7;
  inline const ::b2::protocol::commondata::Totem& totem() const;
  inline ::b2::protocol::commondata::Totem* mutable_totem();
  inline ::b2::protocol::commondata::Totem* release_totem();
  inline void set_allocated_totem(::b2::protocol::commondata::Totem* totem);

  // optional .b2.protocol.commondata.Aether aether = 8;
  inline bool has_aether() const;
  inline void clear_aether();
  static const int kAetherFieldNumber = 8;
  inline const ::b2::protocol::commondata::Aether& aether() const;
  inline ::b2::protocol::commondata::Aether* mutable_aether();
  inline ::b2::protocol::commondata::Aether* release_aether();
  inline void set_allocated_aether(::b2::protocol::commondata::Aether* aether);

  // optional .b2.protocol.commondata.LightAccount light_account = 9;
  inline bool has_light_account() const;
  inline void clear_light_account();
  static const int kLightAccountFieldNumber = 9;
  inline const ::b2::protocol::commondata::LightAccount& light_account() const;
  inline ::b2::protocol::commondata::LightAccount* mutable_light_account();
  inline ::b2::protocol::commondata::LightAccount* release_light_account();
  inline void set_allocated_light_account(::b2::protocol::commondata::LightAccount* light_account);

  // repeated .b2.protocol.commondata.LightCharacter light_characters = 10;
  inline int light_characters_size() const;
  inline void clear_light_characters();
  static const int kLightCharactersFieldNumber = 10;
  inline const ::b2::protocol::commondata::LightCharacter& light_characters(int index) const;
  inline ::b2::protocol::commondata::LightCharacter* mutable_light_characters(int index);
  inline ::b2::protocol::commondata::LightCharacter* add_light_characters();
  inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::LightCharacter >&
      light_characters() const;
  inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::LightCharacter >*
      mutable_light_characters();

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.Reward)
 private:
  inline void set_has_raw_reward();
  inline void clear_has_raw_reward();
  inline void set_has_item();
  inline void clear_has_item();
  inline void set_has_costume();
  inline void clear_has_costume();
  inline void set_has_totem();
  inline void clear_has_totem();
  inline void set_has_aether();
  inline void clear_has_aether();
  inline void set_has_light_account();
  inline void clear_has_light_account();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::b2::protocol::commondata::RawReward* raw_reward_;
  ::b2::protocol::commondata::Item* item_;
  ::b2::protocol::commondata::Costume* costume_;
  ::b2::protocol::commondata::Totem* totem_;
  ::b2::protocol::commondata::Aether* aether_;
  ::b2::protocol::commondata::LightAccount* light_account_;
  ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::LightCharacter > light_characters_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static Reward* default_instance_;
};
// -------------------------------------------------------------------

class RewardRandomCount : public ::google::protobuf::Message {
 public:
  RewardRandomCount();
  virtual ~RewardRandomCount();

  RewardRandomCount(const RewardRandomCount& from);

  inline RewardRandomCount& operator=(const RewardRandomCount& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RewardRandomCount& default_instance();

  void Swap(RewardRandomCount* other);

  // implements Message ----------------------------------------------

  RewardRandomCount* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RewardRandomCount& from);
  void MergeFrom(const RewardRandomCount& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 min_count = 2;
  inline bool has_min_count() const;
  inline void clear_min_count();
  static const int kMinCountFieldNumber = 2;
  inline ::google::protobuf::int32 min_count() const;
  inline void set_min_count(::google::protobuf::int32 value);

  // required int32 max_count = 3;
  inline bool has_max_count() const;
  inline void clear_max_count();
  static const int kMaxCountFieldNumber = 3;
  inline ::google::protobuf::int32 max_count() const;
  inline void set_max_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.RewardRandomCount)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_min_count();
  inline void clear_has_min_count();
  inline void set_has_max_count();
  inline void clear_has_max_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 min_count_;
  ::google::protobuf::int32 max_count_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static RewardRandomCount* default_instance_;
};
// -------------------------------------------------------------------

class QuestInfo : public ::google::protobuf::Message {
 public:
  QuestInfo();
  virtual ~QuestInfo();

  QuestInfo(const QuestInfo& from);

  inline QuestInfo& operator=(const QuestInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestInfo& default_instance();

  void Swap(QuestInfo* other);

  // implements Message ----------------------------------------------

  QuestInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuestInfo& from);
  void MergeFrom(const QuestInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef QuestInfo_QuestSlotType QuestSlotType;
  static const QuestSlotType QUEST_MAIN1 = QuestInfo_QuestSlotType_QUEST_MAIN1;
  static const QuestSlotType QUEST_MAIN2 = QuestInfo_QuestSlotType_QUEST_MAIN2;
  static const QuestSlotType QUEST_SUB1 = QuestInfo_QuestSlotType_QUEST_SUB1;
  static const QuestSlotType QUEST_SUB2 = QuestInfo_QuestSlotType_QUEST_SUB2;
  static inline bool QuestSlotType_IsValid(int value) {
    return QuestInfo_QuestSlotType_IsValid(value);
  }
  static const QuestSlotType QuestSlotType_MIN =
    QuestInfo_QuestSlotType_QuestSlotType_MIN;
  static const QuestSlotType QuestSlotType_MAX =
    QuestInfo_QuestSlotType_QuestSlotType_MAX;
  static const int QuestSlotType_ARRAYSIZE =
    QuestInfo_QuestSlotType_QuestSlotType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  QuestSlotType_descriptor() {
    return QuestInfo_QuestSlotType_descriptor();
  }
  static inline const ::std::string& QuestSlotType_Name(QuestSlotType value) {
    return QuestInfo_QuestSlotType_Name(value);
  }
  static inline bool QuestSlotType_Parse(const ::std::string& name,
      QuestSlotType* value) {
    return QuestInfo_QuestSlotType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .b2.protocol.commondata.QuestInfo.QuestSlotType slot = 1;
  inline bool has_slot() const;
  inline void clear_slot();
  static const int kSlotFieldNumber = 1;
  inline ::b2::protocol::commondata::QuestInfo_QuestSlotType slot() const;
  inline void set_slot(::b2::protocol::commondata::QuestInfo_QuestSlotType value);

  // required .b2.protocol.commondata.QuestType type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::b2::protocol::commondata::QuestType type() const;
  inline void set_type(::b2::protocol::commondata::QuestType value);

  // required int32 quest_id = 3;
  inline bool has_quest_id() const;
  inline void clear_quest_id();
  static const int kQuestIdFieldNumber = 3;
  inline ::google::protobuf::int32 quest_id() const;
  inline void set_quest_id(::google::protobuf::int32 value);

  // required int32 progress_count = 4;
  inline bool has_progress_count() const;
  inline void clear_progress_count();
  static const int kProgressCountFieldNumber = 4;
  inline ::google::protobuf::int32 progress_count() const;
  inline void set_progress_count(::google::protobuf::int32 value);

  // required int32 state = 5;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 5;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.QuestInfo)
 private:
  inline void set_has_slot();
  inline void clear_has_slot();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_quest_id();
  inline void clear_has_quest_id();
  inline void set_has_progress_count();
  inline void clear_has_progress_count();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int slot_;
  int type_;
  ::google::protobuf::int32 quest_id_;
  ::google::protobuf::int32 progress_count_;
  ::google::protobuf::int32 state_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static QuestInfo* default_instance_;
};
// -------------------------------------------------------------------

class MissionInfo : public ::google::protobuf::Message {
 public:
  MissionInfo();
  virtual ~MissionInfo();

  MissionInfo(const MissionInfo& from);

  inline MissionInfo& operator=(const MissionInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MissionInfo& default_instance();

  void Swap(MissionInfo* other);

  // implements Message ----------------------------------------------

  MissionInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MissionInfo& from);
  void MergeFrom(const MissionInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef MissionInfo_MissionType MissionType;
  static const MissionType DAILY = MissionInfo_MissionType_DAILY;
  static const MissionType WEEKLY = MissionInfo_MissionType_WEEKLY;
  static const MissionType MONTHLY = MissionInfo_MissionType_MONTHLY;
  static const MissionType SERIAL = MissionInfo_MissionType_SERIAL;
  static const MissionType FEATURED = MissionInfo_MissionType_FEATURED;
  static inline bool MissionType_IsValid(int value) {
    return MissionInfo_MissionType_IsValid(value);
  }
  static const MissionType MissionType_MIN =
    MissionInfo_MissionType_MissionType_MIN;
  static const MissionType MissionType_MAX =
    MissionInfo_MissionType_MissionType_MAX;
  static const int MissionType_ARRAYSIZE =
    MissionInfo_MissionType_MissionType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MissionType_descriptor() {
    return MissionInfo_MissionType_descriptor();
  }
  static inline const ::std::string& MissionType_Name(MissionType value) {
    return MissionInfo_MissionType_Name(value);
  }
  static inline bool MissionType_Parse(const ::std::string& name,
      MissionType* value) {
    return MissionInfo_MissionType_Parse(name, value);
  }

  typedef MissionInfo_MissionStateType MissionStateType;
  static const MissionStateType PROGRESS = MissionInfo_MissionStateType_PROGRESS;
  static const MissionStateType COMPLETED = MissionInfo_MissionStateType_COMPLETED;
  static const MissionStateType REWARDED = MissionInfo_MissionStateType_REWARDED;
  static inline bool MissionStateType_IsValid(int value) {
    return MissionInfo_MissionStateType_IsValid(value);
  }
  static const MissionStateType MissionStateType_MIN =
    MissionInfo_MissionStateType_MissionStateType_MIN;
  static const MissionStateType MissionStateType_MAX =
    MissionInfo_MissionStateType_MissionStateType_MAX;
  static const int MissionStateType_ARRAYSIZE =
    MissionInfo_MissionStateType_MissionStateType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MissionStateType_descriptor() {
    return MissionInfo_MissionStateType_descriptor();
  }
  static inline const ::std::string& MissionStateType_Name(MissionStateType value) {
    return MissionInfo_MissionStateType_Name(value);
  }
  static inline bool MissionStateType_Parse(const ::std::string& name,
      MissionStateType* value) {
    return MissionInfo_MissionStateType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .b2.protocol.commondata.MissionInfo.MissionType mission_type = 1;
  inline bool has_mission_type() const;
  inline void clear_mission_type();
  static const int kMissionTypeFieldNumber = 1;
  inline ::b2::protocol::commondata::MissionInfo_MissionType mission_type() const;
  inline void set_mission_type(::b2::protocol::commondata::MissionInfo_MissionType value);

  // required .b2.protocol.commondata.MissionInfo.MissionStateType mission_state_type = 2;
  inline bool has_mission_state_type() const;
  inline void clear_mission_state_type();
  static const int kMissionStateTypeFieldNumber = 2;
  inline ::b2::protocol::commondata::MissionInfo_MissionStateType mission_state_type() const;
  inline void set_mission_state_type(::b2::protocol::commondata::MissionInfo_MissionStateType value);

  // required int32 mission_id = 3;
  inline bool has_mission_id() const;
  inline void clear_mission_id();
  static const int kMissionIdFieldNumber = 3;
  inline ::google::protobuf::int32 mission_id() const;
  inline void set_mission_id(::google::protobuf::int32 value);

  // required int64 progress_count = 4;
  inline bool has_progress_count() const;
  inline void clear_progress_count();
  static const int kProgressCountFieldNumber = 4;
  inline ::google::protobuf::int64 progress_count() const;
  inline void set_progress_count(::google::protobuf::int64 value);

  // optional int32 completed_step = 5;
  inline bool has_completed_step() const;
  inline void clear_completed_step();
  static const int kCompletedStepFieldNumber = 5;
  inline ::google::protobuf::int32 completed_step() const;
  inline void set_completed_step(::google::protobuf::int32 value);

  // optional int32 rewarded_step = 6;
  inline bool has_rewarded_step() const;
  inline void clear_rewarded_step();
  static const int kRewardedStepFieldNumber = 6;
  inline ::google::protobuf::int32 rewarded_step() const;
  inline void set_rewarded_step(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.MissionInfo)
 private:
  inline void set_has_mission_type();
  inline void clear_has_mission_type();
  inline void set_has_mission_state_type();
  inline void clear_has_mission_state_type();
  inline void set_has_mission_id();
  inline void clear_has_mission_id();
  inline void set_has_progress_count();
  inline void clear_has_progress_count();
  inline void set_has_completed_step();
  inline void clear_has_completed_step();
  inline void set_has_rewarded_step();
  inline void clear_has_rewarded_step();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int mission_type_;
  int mission_state_type_;
  ::google::protobuf::int64 progress_count_;
  ::google::protobuf::int32 mission_id_;
  ::google::protobuf::int32 completed_step_;
  ::google::protobuf::int32 rewarded_step_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static MissionInfo* default_instance_;
};
// -------------------------------------------------------------------

class MissionCompletePointInfo : public ::google::protobuf::Message {
 public:
  MissionCompletePointInfo();
  virtual ~MissionCompletePointInfo();

  MissionCompletePointInfo(const MissionCompletePointInfo& from);

  inline MissionCompletePointInfo& operator=(const MissionCompletePointInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MissionCompletePointInfo& default_instance();

  void Swap(MissionCompletePointInfo* other);

  // implements Message ----------------------------------------------

  MissionCompletePointInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MissionCompletePointInfo& from);
  void MergeFrom(const MissionCompletePointInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .b2.protocol.commondata.MissionInfo.MissionType mission_type = 1;
  inline bool has_mission_type() const;
  inline void clear_mission_type();
  static const int kMissionTypeFieldNumber = 1;
  inline ::b2::protocol::commondata::MissionInfo_MissionType mission_type() const;
  inline void set_mission_type(::b2::protocol::commondata::MissionInfo_MissionType value);

  // required int32 completePoint = 2;
  inline bool has_completepoint() const;
  inline void clear_completepoint();
  static const int kCompletePointFieldNumber = 2;
  inline ::google::protobuf::int32 completepoint() const;
  inline void set_completepoint(::google::protobuf::int32 value);

  // repeated int32 reward_indexs = 3;
  inline int reward_indexs_size() const;
  inline void clear_reward_indexs();
  static const int kRewardIndexsFieldNumber = 3;
  inline ::google::protobuf::int32 reward_indexs(int index) const;
  inline void set_reward_indexs(int index, ::google::protobuf::int32 value);
  inline void add_reward_indexs(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      reward_indexs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_reward_indexs();

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.MissionCompletePointInfo)
 private:
  inline void set_has_mission_type();
  inline void clear_has_mission_type();
  inline void set_has_completepoint();
  inline void clear_has_completepoint();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int mission_type_;
  ::google::protobuf::int32 completepoint_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > reward_indexs_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static MissionCompletePointInfo* default_instance_;
};
// -------------------------------------------------------------------

class Guild : public ::google::protobuf::Message {
 public:
  Guild();
  virtual ~Guild();

  Guild(const Guild& from);

  inline Guild& operator=(const Guild& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Guild& default_instance();

  void Swap(Guild* other);

  // implements Message ----------------------------------------------

  Guild* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Guild& from);
  void MergeFrom(const Guild& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Guild_JoinOption JoinOption;
  static const JoinOption PUBLIC = Guild_JoinOption_PUBLIC;
  static const JoinOption PRIVATE = Guild_JoinOption_PRIVATE;
  static inline bool JoinOption_IsValid(int value) {
    return Guild_JoinOption_IsValid(value);
  }
  static const JoinOption JoinOption_MIN =
    Guild_JoinOption_JoinOption_MIN;
  static const JoinOption JoinOption_MAX =
    Guild_JoinOption_JoinOption_MAX;
  static const int JoinOption_ARRAYSIZE =
    Guild_JoinOption_JoinOption_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  JoinOption_descriptor() {
    return Guild_JoinOption_descriptor();
  }
  static inline const ::std::string& JoinOption_Name(JoinOption value) {
    return Guild_JoinOption_Name(value);
  }
  static inline bool JoinOption_Parse(const ::std::string& name,
      JoinOption* value) {
    return Guild_JoinOption_Parse(name, value);
  }

  typedef Guild_InviteState InviteState;
  static const InviteState NONE = Guild_InviteState_NONE;
  static const InviteState JOINED_GUILD = Guild_InviteState_JOINED_GUILD;
  static const InviteState INVITED = Guild_InviteState_INVITED;
  static const InviteState NON_INVITING = Guild_InviteState_NON_INVITING;
  static const InviteState INVITABLE = Guild_InviteState_INVITABLE;
  static inline bool InviteState_IsValid(int value) {
    return Guild_InviteState_IsValid(value);
  }
  static const InviteState InviteState_MIN =
    Guild_InviteState_InviteState_MIN;
  static const InviteState InviteState_MAX =
    Guild_InviteState_InviteState_MAX;
  static const int InviteState_ARRAYSIZE =
    Guild_InviteState_InviteState_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  InviteState_descriptor() {
    return Guild_InviteState_descriptor();
  }
  static inline const ::std::string& InviteState_Name(InviteState value) {
    return Guild_InviteState_Name(value);
  }
  static inline bool InviteState_Parse(const ::std::string& name,
      InviteState* value) {
    return Guild_InviteState_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int64 guild_id = 1;
  inline bool has_guild_id() const;
  inline void clear_guild_id();
  static const int kGuildIdFieldNumber = 1;
  inline ::google::protobuf::int64 guild_id() const;
  inline void set_guild_id(::google::protobuf::int64 value);

  // required string guild_name = 2;
  inline bool has_guild_name() const;
  inline void clear_guild_name();
  static const int kGuildNameFieldNumber = 2;
  inline const ::std::string& guild_name() const;
  inline void set_guild_name(const ::std::string& value);
  inline void set_guild_name(const char* value);
  inline void set_guild_name(const char* value, size_t size);
  inline ::std::string* mutable_guild_name();
  inline ::std::string* release_guild_name();
  inline void set_allocated_guild_name(::std::string* guild_name);

  // required int64 master_account_id = 3;
  inline bool has_master_account_id() const;
  inline void clear_master_account_id();
  static const int kMasterAccountIdFieldNumber = 3;
  inline ::google::protobuf::int64 master_account_id() const;
  inline void set_master_account_id(::google::protobuf::int64 value);

  // required string master_name = 4;
  inline bool has_master_name() const;
  inline void clear_master_name();
  static const int kMasterNameFieldNumber = 4;
  inline const ::std::string& master_name() const;
  inline void set_master_name(const ::std::string& value);
  inline void set_master_name(const char* value);
  inline void set_master_name(const char* value, size_t size);
  inline ::std::string* mutable_master_name();
  inline ::std::string* release_master_name();
  inline void set_allocated_master_name(::std::string* master_name);

  // required int32 max_member_count = 5;
  inline bool has_max_member_count() const;
  inline void clear_max_member_count();
  static const int kMaxMemberCountFieldNumber = 5;
  inline ::google::protobuf::int32 max_member_count() const;
  inline void set_max_member_count(::google::protobuf::int32 value);

  // required string notice = 6;
  inline bool has_notice() const;
  inline void clear_notice();
  static const int kNoticeFieldNumber = 6;
  inline const ::std::string& notice() const;
  inline void set_notice(const ::std::string& value);
  inline void set_notice(const char* value);
  inline void set_notice(const char* value, size_t size);
  inline ::std::string* mutable_notice();
  inline ::std::string* release_notice();
  inline void set_allocated_notice(::std::string* notice);

  // required int32 level = 7;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 7;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // required int32 exp = 8;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 8;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // required .b2.protocol.commondata.Guild.JoinOption join_option = 10;
  inline bool has_join_option() const;
  inline void clear_join_option();
  static const int kJoinOptionFieldNumber = 10;
  inline ::b2::protocol::commondata::Guild_JoinOption join_option() const;
  inline void set_join_option(::b2::protocol::commondata::Guild_JoinOption value);

  // required int32 mark_index = 11;
  inline bool has_mark_index() const;
  inline void clear_mark_index();
  static const int kMarkIndexFieldNumber = 11;
  inline ::google::protobuf::int32 mark_index() const;
  inline void set_mark_index(::google::protobuf::int32 value);

  // required int32 mark_color = 12;
  inline bool has_mark_color() const;
  inline void clear_mark_color();
  static const int kMarkColorFieldNumber = 12;
  inline ::google::protobuf::int32 mark_color() const;
  inline void set_mark_color(::google::protobuf::int32 value);

  // required int32 mark_bg_index = 13;
  inline bool has_mark_bg_index() const;
  inline void clear_mark_bg_index();
  static const int kMarkBgIndexFieldNumber = 13;
  inline ::google::protobuf::int32 mark_bg_index() const;
  inline void set_mark_bg_index(::google::protobuf::int32 value);

  // required int32 mark_bg_color = 14;
  inline bool has_mark_bg_color() const;
  inline void clear_mark_bg_color();
  static const int kMarkBgColorFieldNumber = 14;
  inline ::google::protobuf::int32 mark_bg_color() const;
  inline void set_mark_bg_color(::google::protobuf::int32 value);

  // required int32 cur_member_count = 15;
  inline bool has_cur_member_count() const;
  inline void clear_cur_member_count();
  static const int kCurMemberCountFieldNumber = 15;
  inline ::google::protobuf::int32 cur_member_count() const;
  inline void set_cur_member_count(::google::protobuf::int32 value);

  // required int64 create_time = 16;
  inline bool has_create_time() const;
  inline void clear_create_time();
  static const int kCreateTimeFieldNumber = 16;
  inline ::google::protobuf::int64 create_time() const;
  inline void set_create_time(::google::protobuf::int64 value);

  // optional int64 master_elected_time = 17;
  inline bool has_master_elected_time() const;
  inline void clear_master_elected_time();
  static const int kMasterElectedTimeFieldNumber = 17;
  inline ::google::protobuf::int64 master_elected_time() const;
  inline void set_master_elected_time(::google::protobuf::int64 value);

  // required int32 season_obtain_medal = 20;
  inline bool has_season_obtain_medal() const;
  inline void clear_season_obtain_medal();
  static const int kSeasonObtainMedalFieldNumber = 20;
  inline ::google::protobuf::int32 season_obtain_medal() const;
  inline void set_season_obtain_medal(::google::protobuf::int32 value);

  // required int32 season_ranking = 21;
  inline bool has_season_ranking() const;
  inline void clear_season_ranking();
  static const int kSeasonRankingFieldNumber = 21;
  inline ::google::protobuf::int32 season_ranking() const;
  inline void set_season_ranking(::google::protobuf::int32 value);

  // required int32 season_ranking_total = 22;
  inline bool has_season_ranking_total() const;
  inline void clear_season_ranking_total();
  static const int kSeasonRankingTotalFieldNumber = 22;
  inline ::google::protobuf::int32 season_ranking_total() const;
  inline void set_season_ranking_total(::google::protobuf::int32 value);

  // required int32 members_avg_power = 23;
  inline bool has_members_avg_power() const;
  inline void clear_members_avg_power();
  static const int kMembersAvgPowerFieldNumber = 23;
  inline ::google::protobuf::int32 members_avg_power() const;
  inline void set_members_avg_power(::google::protobuf::int32 value);

  // required int32 total_result = 24;
  inline bool has_total_result() const;
  inline void clear_total_result();
  static const int kTotalResultFieldNumber = 24;
  inline ::google::protobuf::int32 total_result() const;
  inline void set_total_result(::google::protobuf::int32 value);

  // optional bool join_guild_battle = 30;
  inline bool has_join_guild_battle() const;
  inline void clear_join_guild_battle();
  static const int kJoinGuildBattleFieldNumber = 30;
  inline bool join_guild_battle() const;
  inline void set_join_guild_battle(bool value);

  // optional int32 turn_obtain_medal = 31;
  inline bool has_turn_obtain_medal() const;
  inline void clear_turn_obtain_medal();
  static const int kTurnObtainMedalFieldNumber = 31;
  inline ::google::protobuf::int32 turn_obtain_medal() const;
  inline void set_turn_obtain_medal(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.Guild)
 private:
  inline void set_has_guild_id();
  inline void clear_has_guild_id();
  inline void set_has_guild_name();
  inline void clear_has_guild_name();
  inline void set_has_master_account_id();
  inline void clear_has_master_account_id();
  inline void set_has_master_name();
  inline void clear_has_master_name();
  inline void set_has_max_member_count();
  inline void clear_has_max_member_count();
  inline void set_has_notice();
  inline void clear_has_notice();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_join_option();
  inline void clear_has_join_option();
  inline void set_has_mark_index();
  inline void clear_has_mark_index();
  inline void set_has_mark_color();
  inline void clear_has_mark_color();
  inline void set_has_mark_bg_index();
  inline void clear_has_mark_bg_index();
  inline void set_has_mark_bg_color();
  inline void clear_has_mark_bg_color();
  inline void set_has_cur_member_count();
  inline void clear_has_cur_member_count();
  inline void set_has_create_time();
  inline void clear_has_create_time();
  inline void set_has_master_elected_time();
  inline void clear_has_master_elected_time();
  inline void set_has_season_obtain_medal();
  inline void clear_has_season_obtain_medal();
  inline void set_has_season_ranking();
  inline void clear_has_season_ranking();
  inline void set_has_season_ranking_total();
  inline void clear_has_season_ranking_total();
  inline void set_has_members_avg_power();
  inline void clear_has_members_avg_power();
  inline void set_has_total_result();
  inline void clear_has_total_result();
  inline void set_has_join_guild_battle();
  inline void clear_has_join_guild_battle();
  inline void set_has_turn_obtain_medal();
  inline void clear_has_turn_obtain_medal();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 guild_id_;
  ::std::string* guild_name_;
  ::google::protobuf::int64 master_account_id_;
  ::std::string* master_name_;
  ::std::string* notice_;
  ::google::protobuf::int32 max_member_count_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 exp_;
  int join_option_;
  ::google::protobuf::int32 mark_index_;
  ::google::protobuf::int32 mark_color_;
  ::google::protobuf::int32 mark_bg_index_;
  ::google::protobuf::int32 mark_bg_color_;
  ::google::protobuf::int64 create_time_;
  ::google::protobuf::int32 cur_member_count_;
  ::google::protobuf::int32 season_obtain_medal_;
  ::google::protobuf::int64 master_elected_time_;
  ::google::protobuf::int32 season_ranking_;
  ::google::protobuf::int32 season_ranking_total_;
  ::google::protobuf::int32 members_avg_power_;
  ::google::protobuf::int32 total_result_;
  bool join_guild_battle_;
  ::google::protobuf::int32 turn_obtain_medal_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static Guild* default_instance_;
};
// -------------------------------------------------------------------

class GuildRanking : public ::google::protobuf::Message {
 public:
  GuildRanking();
  virtual ~GuildRanking();

  GuildRanking(const GuildRanking& from);

  inline GuildRanking& operator=(const GuildRanking& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRanking& default_instance();

  void Swap(GuildRanking* other);

  // implements Message ----------------------------------------------

  GuildRanking* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildRanking& from);
  void MergeFrom(const GuildRanking& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ranking = 1;
  inline bool has_ranking() const;
  inline void clear_ranking();
  static const int kRankingFieldNumber = 1;
  inline ::google::protobuf::int32 ranking() const;
  inline void set_ranking(::google::protobuf::int32 value);

  // required int64 guild_id = 2;
  inline bool has_guild_id() const;
  inline void clear_guild_id();
  static const int kGuildIdFieldNumber = 2;
  inline ::google::protobuf::int64 guild_id() const;
  inline void set_guild_id(::google::protobuf::int64 value);

  // required string guild_name = 3;
  inline bool has_guild_name() const;
  inline void clear_guild_name();
  static const int kGuildNameFieldNumber = 3;
  inline const ::std::string& guild_name() const;
  inline void set_guild_name(const ::std::string& value);
  inline void set_guild_name(const char* value);
  inline void set_guild_name(const char* value, size_t size);
  inline ::std::string* mutable_guild_name();
  inline ::std::string* release_guild_name();
  inline void set_allocated_guild_name(::std::string* guild_name);

  // required int32 total_obtain_medal = 4;
  inline bool has_total_obtain_medal() const;
  inline void clear_total_obtain_medal();
  static const int kTotalObtainMedalFieldNumber = 4;
  inline ::google::protobuf::int32 total_obtain_medal() const;
  inline void set_total_obtain_medal(::google::protobuf::int32 value);

  // required int32 total_result = 5;
  inline bool has_total_result() const;
  inline void clear_total_result();
  static const int kTotalResultFieldNumber = 5;
  inline ::google::protobuf::int32 total_result() const;
  inline void set_total_result(::google::protobuf::int32 value);

  // required int32 members_avg_power = 6;
  inline bool has_members_avg_power() const;
  inline void clear_members_avg_power();
  static const int kMembersAvgPowerFieldNumber = 6;
  inline ::google::protobuf::int32 members_avg_power() const;
  inline void set_members_avg_power(::google::protobuf::int32 value);

  // required int64 create_time = 7;
  inline bool has_create_time() const;
  inline void clear_create_time();
  static const int kCreateTimeFieldNumber = 7;
  inline ::google::protobuf::int64 create_time() const;
  inline void set_create_time(::google::protobuf::int64 value);

  // required int32 mark = 10;
  inline bool has_mark() const;
  inline void clear_mark();
  static const int kMarkFieldNumber = 10;
  inline ::google::protobuf::int32 mark() const;
  inline void set_mark(::google::protobuf::int32 value);

  // required int32 mark_color = 11;
  inline bool has_mark_color() const;
  inline void clear_mark_color();
  static const int kMarkColorFieldNumber = 11;
  inline ::google::protobuf::int32 mark_color() const;
  inline void set_mark_color(::google::protobuf::int32 value);

  // required int32 mark_bg = 12;
  inline bool has_mark_bg() const;
  inline void clear_mark_bg();
  static const int kMarkBgFieldNumber = 12;
  inline ::google::protobuf::int32 mark_bg() const;
  inline void set_mark_bg(::google::protobuf::int32 value);

  // required int32 mark_bg_color = 13;
  inline bool has_mark_bg_color() const;
  inline void clear_mark_bg_color();
  static const int kMarkBgColorFieldNumber = 13;
  inline ::google::protobuf::int32 mark_bg_color() const;
  inline void set_mark_bg_color(::google::protobuf::int32 value);

  // required string gm_nickname = 14;
  inline bool has_gm_nickname() const;
  inline void clear_gm_nickname();
  static const int kGmNicknameFieldNumber = 14;
  inline const ::std::string& gm_nickname() const;
  inline void set_gm_nickname(const ::std::string& value);
  inline void set_gm_nickname(const char* value);
  inline void set_gm_nickname(const char* value, size_t size);
  inline ::std::string* mutable_gm_nickname();
  inline ::std::string* release_gm_nickname();
  inline void set_allocated_gm_nickname(::std::string* gm_nickname);

  // required int32 max_member_count = 15;
  inline bool has_max_member_count() const;
  inline void clear_max_member_count();
  static const int kMaxMemberCountFieldNumber = 15;
  inline ::google::protobuf::int32 max_member_count() const;
  inline void set_max_member_count(::google::protobuf::int32 value);

  // required int32 cur_member_count = 16;
  inline bool has_cur_member_count() const;
  inline void clear_cur_member_count();
  static const int kCurMemberCountFieldNumber = 16;
  inline ::google::protobuf::int32 cur_member_count() const;
  inline void set_cur_member_count(::google::protobuf::int32 value);

  // required int32 level = 17;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 17;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // required int32 exp = 18;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 18;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.GuildRanking)
 private:
  inline void set_has_ranking();
  inline void clear_has_ranking();
  inline void set_has_guild_id();
  inline void clear_has_guild_id();
  inline void set_has_guild_name();
  inline void clear_has_guild_name();
  inline void set_has_total_obtain_medal();
  inline void clear_has_total_obtain_medal();
  inline void set_has_total_result();
  inline void clear_has_total_result();
  inline void set_has_members_avg_power();
  inline void clear_has_members_avg_power();
  inline void set_has_create_time();
  inline void clear_has_create_time();
  inline void set_has_mark();
  inline void clear_has_mark();
  inline void set_has_mark_color();
  inline void clear_has_mark_color();
  inline void set_has_mark_bg();
  inline void clear_has_mark_bg();
  inline void set_has_mark_bg_color();
  inline void clear_has_mark_bg_color();
  inline void set_has_gm_nickname();
  inline void clear_has_gm_nickname();
  inline void set_has_max_member_count();
  inline void clear_has_max_member_count();
  inline void set_has_cur_member_count();
  inline void clear_has_cur_member_count();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_exp();
  inline void clear_has_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 guild_id_;
  ::google::protobuf::int32 ranking_;
  ::google::protobuf::int32 total_obtain_medal_;
  ::std::string* guild_name_;
  ::google::protobuf::int32 total_result_;
  ::google::protobuf::int32 members_avg_power_;
  ::google::protobuf::int64 create_time_;
  ::google::protobuf::int32 mark_;
  ::google::protobuf::int32 mark_color_;
  ::google::protobuf::int32 mark_bg_;
  ::google::protobuf::int32 mark_bg_color_;
  ::std::string* gm_nickname_;
  ::google::protobuf::int32 max_member_count_;
  ::google::protobuf::int32 cur_member_count_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 exp_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static GuildRanking* default_instance_;
};
// -------------------------------------------------------------------

class GuildMember : public ::google::protobuf::Message {
 public:
  GuildMember();
  virtual ~GuildMember();

  GuildMember(const GuildMember& from);

  inline GuildMember& operator=(const GuildMember& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMember& default_instance();

  void Swap(GuildMember* other);

  // implements Message ----------------------------------------------

  GuildMember* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMember& from);
  void MergeFrom(const GuildMember& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef GuildMember_Rank Rank;
  static const Rank MASTER = GuildMember_Rank_MASTER;
  static const Rank SUB_MASTER = GuildMember_Rank_SUB_MASTER;
  static const Rank NORMAL = GuildMember_Rank_NORMAL;
  static inline bool Rank_IsValid(int value) {
    return GuildMember_Rank_IsValid(value);
  }
  static const Rank Rank_MIN =
    GuildMember_Rank_Rank_MIN;
  static const Rank Rank_MAX =
    GuildMember_Rank_Rank_MAX;
  static const int Rank_ARRAYSIZE =
    GuildMember_Rank_Rank_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Rank_descriptor() {
    return GuildMember_Rank_descriptor();
  }
  static inline const ::std::string& Rank_Name(Rank value) {
    return GuildMember_Rank_Name(value);
  }
  static inline bool Rank_Parse(const ::std::string& name,
      Rank* value) {
    return GuildMember_Rank_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int64 guild_id = 1;
  inline bool has_guild_id() const;
  inline void clear_guild_id();
  static const int kGuildIdFieldNumber = 1;
  inline ::google::protobuf::int64 guild_id() const;
  inline void set_guild_id(::google::protobuf::int64 value);

  // required int32 contribution = 2;
  inline bool has_contribution() const;
  inline void clear_contribution();
  static const int kContributionFieldNumber = 2;
  inline ::google::protobuf::int32 contribution() const;
  inline void set_contribution(::google::protobuf::int32 value);

  // required .b2.protocol.commondata.GuildMember.Rank rank = 3;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 3;
  inline ::b2::protocol::commondata::GuildMember_Rank rank() const;
  inline void set_rank(::b2::protocol::commondata::GuildMember_Rank value);

  // required .b2.protocol.commondata.CharacterSummary character_summary = 4;
  inline bool has_character_summary() const;
  inline void clear_character_summary();
  static const int kCharacterSummaryFieldNumber = 4;
  inline const ::b2::protocol::commondata::CharacterSummary& character_summary() const;
  inline ::b2::protocol::commondata::CharacterSummary* mutable_character_summary();
  inline ::b2::protocol::commondata::CharacterSummary* release_character_summary();
  inline void set_allocated_character_summary(::b2::protocol::commondata::CharacterSummary* character_summary);

  // required int64 last_logout_time = 5;
  inline bool has_last_logout_time() const;
  inline void clear_last_logout_time();
  static const int kLastLogoutTimeFieldNumber = 5;
  inline ::google::protobuf::int64 last_logout_time() const;
  inline void set_last_logout_time(::google::protobuf::int64 value);

  // required int32 total_support_count = 10;
  inline bool has_total_support_count() const;
  inline void clear_total_support_count();
  static const int kTotalSupportCountFieldNumber = 10;
  inline ::google::protobuf::int32 total_support_count() const;
  inline void set_total_support_count(::google::protobuf::int32 value);

  // required int32 today_support_count = 11;
  inline bool has_today_support_count() const;
  inline void clear_today_support_count();
  static const int kTodaySupportCountFieldNumber = 11;
  inline ::google::protobuf::int32 today_support_count() const;
  inline void set_today_support_count(::google::protobuf::int32 value);

  // required int32 total_donation_count = 12;
  inline bool has_total_donation_count() const;
  inline void clear_total_donation_count();
  static const int kTotalDonationCountFieldNumber = 12;
  inline ::google::protobuf::int32 total_donation_count() const;
  inline void set_total_donation_count(::google::protobuf::int32 value);

  // required int32 today_donation_count = 13;
  inline bool has_today_donation_count() const;
  inline void clear_today_donation_count();
  static const int kTodayDonationCountFieldNumber = 13;
  inline ::google::protobuf::int32 today_donation_count() const;
  inline void set_today_donation_count(::google::protobuf::int32 value);

  // required int64 raid_penalty_remove_time = 14;
  inline bool has_raid_penalty_remove_time() const;
  inline void clear_raid_penalty_remove_time();
  static const int kRaidPenaltyRemoveTimeFieldNumber = 14;
  inline ::google::protobuf::int64 raid_penalty_remove_time() const;
  inline void set_raid_penalty_remove_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.GuildMember)
 private:
  inline void set_has_guild_id();
  inline void clear_has_guild_id();
  inline void set_has_contribution();
  inline void clear_has_contribution();
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_character_summary();
  inline void clear_has_character_summary();
  inline void set_has_last_logout_time();
  inline void clear_has_last_logout_time();
  inline void set_has_total_support_count();
  inline void clear_has_total_support_count();
  inline void set_has_today_support_count();
  inline void clear_has_today_support_count();
  inline void set_has_total_donation_count();
  inline void clear_has_total_donation_count();
  inline void set_has_today_donation_count();
  inline void clear_has_today_donation_count();
  inline void set_has_raid_penalty_remove_time();
  inline void clear_has_raid_penalty_remove_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 guild_id_;
  ::google::protobuf::int32 contribution_;
  int rank_;
  ::b2::protocol::commondata::CharacterSummary* character_summary_;
  ::google::protobuf::int64 last_logout_time_;
  ::google::protobuf::int32 total_support_count_;
  ::google::protobuf::int32 today_support_count_;
  ::google::protobuf::int32 total_donation_count_;
  ::google::protobuf::int32 today_donation_count_;
  ::google::protobuf::int64 raid_penalty_remove_time_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static GuildMember* default_instance_;
};
// -------------------------------------------------------------------

class GuildMemberCandidate : public ::google::protobuf::Message {
 public:
  GuildMemberCandidate();
  virtual ~GuildMemberCandidate();

  GuildMemberCandidate(const GuildMemberCandidate& from);

  inline GuildMemberCandidate& operator=(const GuildMemberCandidate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMemberCandidate& default_instance();

  void Swap(GuildMemberCandidate* other);

  // implements Message ----------------------------------------------

  GuildMemberCandidate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMemberCandidate& from);
  void MergeFrom(const GuildMemberCandidate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::int64 account_id() const;
  inline void set_account_id(::google::protobuf::int64 value);

  // required .b2.protocol.commondata.Guild.InviteState invite_state = 2;
  inline bool has_invite_state() const;
  inline void clear_invite_state();
  static const int kInviteStateFieldNumber = 2;
  inline ::b2::protocol::commondata::Guild_InviteState invite_state() const;
  inline void set_invite_state(::b2::protocol::commondata::Guild_InviteState value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.GuildMemberCandidate)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_invite_state();
  inline void clear_has_invite_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 account_id_;
  int invite_state_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static GuildMemberCandidate* default_instance_;
};
// -------------------------------------------------------------------

class BattleFormation : public ::google::protobuf::Message {
 public:
  BattleFormation();
  virtual ~BattleFormation();

  BattleFormation(const BattleFormation& from);

  inline BattleFormation& operator=(const BattleFormation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleFormation& default_instance();

  void Swap(BattleFormation* other);

  // implements Message ----------------------------------------------

  BattleFormation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleFormation& from);
  void MergeFrom(const BattleFormation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BattleFormation_TYPE TYPE;
  static const TYPE NORMAL = BattleFormation_TYPE_NORMAL;
  static const TYPE OFFENSIVE = BattleFormation_TYPE_OFFENSIVE;
  static const TYPE DEFENSIVE = BattleFormation_TYPE_DEFENSIVE;
  static inline bool TYPE_IsValid(int value) {
    return BattleFormation_TYPE_IsValid(value);
  }
  static const TYPE TYPE_MIN =
    BattleFormation_TYPE_TYPE_MIN;
  static const TYPE TYPE_MAX =
    BattleFormation_TYPE_TYPE_MAX;
  static const int TYPE_ARRAYSIZE =
    BattleFormation_TYPE_TYPE_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  TYPE_descriptor() {
    return BattleFormation_TYPE_descriptor();
  }
  static inline const ::std::string& TYPE_Name(TYPE value) {
    return BattleFormation_TYPE_Name(value);
  }
  static inline bool TYPE_Parse(const ::std::string& name,
      TYPE* value) {
    return BattleFormation_TYPE_Parse(name, value);
  }

  typedef BattleFormation_BuffType BuffType;
  static const BuffType NONE = BattleFormation_BuffType_NONE;
  static const BuffType INC_ATTACK = BattleFormation_BuffType_INC_ATTACK;
  static const BuffType DEC_DAMAGE = BattleFormation_BuffType_DEC_DAMAGE;
  static inline bool BuffType_IsValid(int value) {
    return BattleFormation_BuffType_IsValid(value);
  }
  static const BuffType BuffType_MIN =
    BattleFormation_BuffType_BuffType_MIN;
  static const BuffType BuffType_MAX =
    BattleFormation_BuffType_BuffType_MAX;
  static const int BuffType_ARRAYSIZE =
    BattleFormation_BuffType_BuffType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  BuffType_descriptor() {
    return BattleFormation_BuffType_descriptor();
  }
  static inline const ::std::string& BuffType_Name(BuffType value) {
    return BattleFormation_BuffType_Name(value);
  }
  static inline bool BuffType_Parse(const ::std::string& name,
      BuffType* value) {
    return BattleFormation_BuffType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .b2.protocol.commondata.BattleFormation.TYPE formation_type = 1;
  inline bool has_formation_type() const;
  inline void clear_formation_type();
  static const int kFormationTypeFieldNumber = 1;
  inline ::b2::protocol::commondata::BattleFormation_TYPE formation_type() const;
  inline void set_formation_type(::b2::protocol::commondata::BattleFormation_TYPE value);

  // required int32 formation_level = 2;
  inline bool has_formation_level() const;
  inline void clear_formation_level();
  static const int kFormationLevelFieldNumber = 2;
  inline ::google::protobuf::int32 formation_level() const;
  inline void set_formation_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.BattleFormation)
 private:
  inline void set_has_formation_type();
  inline void clear_has_formation_type();
  inline void set_has_formation_level();
  inline void clear_has_formation_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int formation_type_;
  ::google::protobuf::int32 formation_level_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static BattleFormation* default_instance_;
};
// -------------------------------------------------------------------

class BattleFormationBuff : public ::google::protobuf::Message {
 public:
  BattleFormationBuff();
  virtual ~BattleFormationBuff();

  BattleFormationBuff(const BattleFormationBuff& from);

  inline BattleFormationBuff& operator=(const BattleFormationBuff& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleFormationBuff& default_instance();

  void Swap(BattleFormationBuff* other);

  // implements Message ----------------------------------------------

  BattleFormationBuff* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleFormationBuff& from);
  void MergeFrom(const BattleFormationBuff& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required .b2.protocol.commondata.BattleFormation.BuffType buff_type1 = 10;
  inline bool has_buff_type1() const;
  inline void clear_buff_type1();
  static const int kBuffType1FieldNumber = 10;
  inline ::b2::protocol::commondata::BattleFormation_BuffType buff_type1() const;
  inline void set_buff_type1(::b2::protocol::commondata::BattleFormation_BuffType value);

  // required float buff_value1 = 11;
  inline bool has_buff_value1() const;
  inline void clear_buff_value1();
  static const int kBuffValue1FieldNumber = 11;
  inline float buff_value1() const;
  inline void set_buff_value1(float value);

  // required .b2.protocol.commondata.BattleFormation.BuffType buff_type2 = 12;
  inline bool has_buff_type2() const;
  inline void clear_buff_type2();
  static const int kBuffType2FieldNumber = 12;
  inline ::b2::protocol::commondata::BattleFormation_BuffType buff_type2() const;
  inline void set_buff_type2(::b2::protocol::commondata::BattleFormation_BuffType value);

  // required float buff_value2 = 13;
  inline bool has_buff_value2() const;
  inline void clear_buff_value2();
  static const int kBuffValue2FieldNumber = 13;
  inline float buff_value2() const;
  inline void set_buff_value2(float value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.BattleFormationBuff)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_buff_type1();
  inline void clear_has_buff_type1();
  inline void set_has_buff_value1();
  inline void clear_has_buff_value1();
  inline void set_has_buff_type2();
  inline void clear_has_buff_type2();
  inline void set_has_buff_value2();
  inline void clear_has_buff_value2();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  int buff_type1_;
  float buff_value1_;
  int buff_type2_;
  float buff_value2_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static BattleFormationBuff* default_instance_;
};
// -------------------------------------------------------------------

class GuildBattleEntry_SlotData : public ::google::protobuf::Message {
 public:
  GuildBattleEntry_SlotData();
  virtual ~GuildBattleEntry_SlotData();

  GuildBattleEntry_SlotData(const GuildBattleEntry_SlotData& from);

  inline GuildBattleEntry_SlotData& operator=(const GuildBattleEntry_SlotData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildBattleEntry_SlotData& default_instance();

  void Swap(GuildBattleEntry_SlotData* other);

  // implements Message ----------------------------------------------

  GuildBattleEntry_SlotData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildBattleEntry_SlotData& from);
  void MergeFrom(const GuildBattleEntry_SlotData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 slot_num = 1;
  inline bool has_slot_num() const;
  inline void clear_slot_num();
  static const int kSlotNumFieldNumber = 1;
  inline ::google::protobuf::int32 slot_num() const;
  inline void set_slot_num(::google::protobuf::int32 value);

  // required int32 entry_code = 2;
  inline bool has_entry_code() const;
  inline void clear_entry_code();
  static const int kEntryCodeFieldNumber = 2;
  inline ::google::protobuf::int32 entry_code() const;
  inline void set_entry_code(::google::protobuf::int32 value);

  // optional .b2.protocol.commondata.GuildBattleEntry.TYPE entry_type = 10;
  inline bool has_entry_type() const;
  inline void clear_entry_type();
  static const int kEntryTypeFieldNumber = 10;
  inline ::b2::protocol::commondata::GuildBattleEntry_TYPE entry_type() const;
  inline void set_entry_type(::b2::protocol::commondata::GuildBattleEntry_TYPE value);

  // optional int32 level = 11;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 11;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.GuildBattleEntry.SlotData)
 private:
  inline void set_has_slot_num();
  inline void clear_has_slot_num();
  inline void set_has_entry_code();
  inline void clear_has_entry_code();
  inline void set_has_entry_type();
  inline void clear_has_entry_type();
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 slot_num_;
  ::google::protobuf::int32 entry_code_;
  int entry_type_;
  ::google::protobuf::int32 level_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static GuildBattleEntry_SlotData* default_instance_;
};
// -------------------------------------------------------------------

class GuildBattleEntry : public ::google::protobuf::Message {
 public:
  GuildBattleEntry();
  virtual ~GuildBattleEntry();

  GuildBattleEntry(const GuildBattleEntry& from);

  inline GuildBattleEntry& operator=(const GuildBattleEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildBattleEntry& default_instance();

  void Swap(GuildBattleEntry* other);

  // implements Message ----------------------------------------------

  GuildBattleEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildBattleEntry& from);
  void MergeFrom(const GuildBattleEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef GuildBattleEntry_SlotData SlotData;

  typedef GuildBattleEntry_TYPE TYPE;
  static const TYPE CHARACTER = GuildBattleEntry_TYPE_CHARACTER;
  static const TYPE MERCENARY = GuildBattleEntry_TYPE_MERCENARY;
  static inline bool TYPE_IsValid(int value) {
    return GuildBattleEntry_TYPE_IsValid(value);
  }
  static const TYPE TYPE_MIN =
    GuildBattleEntry_TYPE_TYPE_MIN;
  static const TYPE TYPE_MAX =
    GuildBattleEntry_TYPE_TYPE_MAX;
  static const int TYPE_ARRAYSIZE =
    GuildBattleEntry_TYPE_TYPE_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  TYPE_descriptor() {
    return GuildBattleEntry_TYPE_descriptor();
  }
  static inline const ::std::string& TYPE_Name(TYPE value) {
    return GuildBattleEntry_TYPE_Name(value);
  }
  static inline bool TYPE_Parse(const ::std::string& name,
      TYPE* value) {
    return GuildBattleEntry_TYPE_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .b2.protocol.commondata.GuildBattleEntry.SlotData slots = 3;
  inline int slots_size() const;
  inline void clear_slots();
  static const int kSlotsFieldNumber = 3;
  inline const ::b2::protocol::commondata::GuildBattleEntry_SlotData& slots(int index) const;
  inline ::b2::protocol::commondata::GuildBattleEntry_SlotData* mutable_slots(int index);
  inline ::b2::protocol::commondata::GuildBattleEntry_SlotData* add_slots();
  inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::GuildBattleEntry_SlotData >&
      slots() const;
  inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::GuildBattleEntry_SlotData >*
      mutable_slots();

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.GuildBattleEntry)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::GuildBattleEntry_SlotData > slots_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static GuildBattleEntry* default_instance_;
};
// -------------------------------------------------------------------

class GuildBattleResult : public ::google::protobuf::Message {
 public:
  GuildBattleResult();
  virtual ~GuildBattleResult();

  GuildBattleResult(const GuildBattleResult& from);

  inline GuildBattleResult& operator=(const GuildBattleResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildBattleResult& default_instance();

  void Swap(GuildBattleResult* other);

  // implements Message ----------------------------------------------

  GuildBattleResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildBattleResult& from);
  void MergeFrom(const GuildBattleResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef GuildBattleResult_TYPE TYPE;
  static const TYPE LOSE = GuildBattleResult_TYPE_LOSE;
  static const TYPE DRAW = GuildBattleResult_TYPE_DRAW;
  static const TYPE WIN = GuildBattleResult_TYPE_WIN;
  static inline bool TYPE_IsValid(int value) {
    return GuildBattleResult_TYPE_IsValid(value);
  }
  static const TYPE TYPE_MIN =
    GuildBattleResult_TYPE_TYPE_MIN;
  static const TYPE TYPE_MAX =
    GuildBattleResult_TYPE_TYPE_MAX;
  static const int TYPE_ARRAYSIZE =
    GuildBattleResult_TYPE_TYPE_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  TYPE_descriptor() {
    return GuildBattleResult_TYPE_descriptor();
  }
  static inline const ::std::string& TYPE_Name(TYPE value) {
    return GuildBattleResult_TYPE_Name(value);
  }
  static inline bool TYPE_Parse(const ::std::string& name,
      TYPE* value) {
    return GuildBattleResult_TYPE_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.GuildBattleResult)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static GuildBattleResult* default_instance_;
};
// -------------------------------------------------------------------

class GuildBattleState : public ::google::protobuf::Message {
 public:
  GuildBattleState();
  virtual ~GuildBattleState();

  GuildBattleState(const GuildBattleState& from);

  inline GuildBattleState& operator=(const GuildBattleState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildBattleState& default_instance();

  void Swap(GuildBattleState* other);

  // implements Message ----------------------------------------------

  GuildBattleState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildBattleState& from);
  void MergeFrom(const GuildBattleState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef GuildBattleState_TYPE TYPE;
  static const TYPE NONE = GuildBattleState_TYPE_NONE;
  static const TYPE INIT = GuildBattleState_TYPE_INIT;
  static const TYPE INITDONE = GuildBattleState_TYPE_INITDONE;
  static const TYPE READY = GuildBattleState_TYPE_READY;
  static const TYPE MATCHING = GuildBattleState_TYPE_MATCHING;
  static const TYPE MATCHINGDONE = GuildBattleState_TYPE_MATCHINGDONE;
  static const TYPE BATTLE = GuildBattleState_TYPE_BATTLE;
  static const TYPE SETTLEMENT = GuildBattleState_TYPE_SETTLEMENT;
  static const TYPE SETTLEMENTDONE = GuildBattleState_TYPE_SETTLEMENTDONE;
  static const TYPE RESULT = GuildBattleState_TYPE_RESULT;
  static inline bool TYPE_IsValid(int value) {
    return GuildBattleState_TYPE_IsValid(value);
  }
  static const TYPE TYPE_MIN =
    GuildBattleState_TYPE_TYPE_MIN;
  static const TYPE TYPE_MAX =
    GuildBattleState_TYPE_TYPE_MAX;
  static const int TYPE_ARRAYSIZE =
    GuildBattleState_TYPE_TYPE_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  TYPE_descriptor() {
    return GuildBattleState_TYPE_descriptor();
  }
  static inline const ::std::string& TYPE_Name(TYPE value) {
    return GuildBattleState_TYPE_Name(value);
  }
  static inline bool TYPE_Parse(const ::std::string& name,
      TYPE* value) {
    return GuildBattleState_TYPE_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int32 season_id = 1;
  inline bool has_season_id() const;
  inline void clear_season_id();
  static const int kSeasonIdFieldNumber = 1;
  inline ::google::protobuf::int32 season_id() const;
  inline void set_season_id(::google::protobuf::int32 value);

  // required int32 turn = 2;
  inline bool has_turn() const;
  inline void clear_turn();
  static const int kTurnFieldNumber = 2;
  inline ::google::protobuf::int32 turn() const;
  inline void set_turn(::google::protobuf::int32 value);

  // required .b2.protocol.commondata.GuildBattleState.TYPE current_state = 3;
  inline bool has_current_state() const;
  inline void clear_current_state();
  static const int kCurrentStateFieldNumber = 3;
  inline ::b2::protocol::commondata::GuildBattleState_TYPE current_state() const;
  inline void set_current_state(::b2::protocol::commondata::GuildBattleState_TYPE value);

  // required int64 begin_time = 4;
  inline bool has_begin_time() const;
  inline void clear_begin_time();
  static const int kBeginTimeFieldNumber = 4;
  inline ::google::protobuf::int64 begin_time() const;
  inline void set_begin_time(::google::protobuf::int64 value);

  // required int64 end_time = 5;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 5;
  inline ::google::protobuf::int64 end_time() const;
  inline void set_end_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.GuildBattleState)
 private:
  inline void set_has_season_id();
  inline void clear_has_season_id();
  inline void set_has_turn();
  inline void clear_has_turn();
  inline void set_has_current_state();
  inline void clear_has_current_state();
  inline void set_has_begin_time();
  inline void clear_has_begin_time();
  inline void set_has_end_time();
  inline void clear_has_end_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 season_id_;
  ::google::protobuf::int32 turn_;
  ::google::protobuf::int64 begin_time_;
  ::google::protobuf::int64 end_time_;
  int current_state_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static GuildBattleState* default_instance_;
};
// -------------------------------------------------------------------

class GuildBattleHistory : public ::google::protobuf::Message {
 public:
  GuildBattleHistory();
  virtual ~GuildBattleHistory();

  GuildBattleHistory(const GuildBattleHistory& from);

  inline GuildBattleHistory& operator=(const GuildBattleHistory& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildBattleHistory& default_instance();

  void Swap(GuildBattleHistory* other);

  // implements Message ----------------------------------------------

  GuildBattleHistory* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildBattleHistory& from);
  void MergeFrom(const GuildBattleHistory& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 obtain_medal = 1;
  inline bool has_obtain_medal() const;
  inline void clear_obtain_medal();
  static const int kObtainMedalFieldNumber = 1;
  inline ::google::protobuf::int32 obtain_medal() const;
  inline void set_obtain_medal(::google::protobuf::int32 value);

  // required int32 medal_total_count = 2;
  inline bool has_medal_total_count() const;
  inline void clear_medal_total_count();
  static const int kMedalTotalCountFieldNumber = 2;
  inline ::google::protobuf::int32 medal_total_count() const;
  inline void set_medal_total_count(::google::protobuf::int32 value);

  // required .b2.protocol.commondata.GuildBattleResult.TYPE result = 3;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 3;
  inline ::b2::protocol::commondata::GuildBattleResult_TYPE result() const;
  inline void set_result(::b2::protocol::commondata::GuildBattleResult_TYPE value);

  // required int64 battle_end_time = 4;
  inline bool has_battle_end_time() const;
  inline void clear_battle_end_time();
  static const int kBattleEndTimeFieldNumber = 4;
  inline ::google::protobuf::int64 battle_end_time() const;
  inline void set_battle_end_time(::google::protobuf::int64 value);

  // required int32 member_count = 5;
  inline bool has_member_count() const;
  inline void clear_member_count();
  static const int kMemberCountFieldNumber = 5;
  inline ::google::protobuf::int32 member_count() const;
  inline void set_member_count(::google::protobuf::int32 value);

  // required int32 attack_count = 6;
  inline bool has_attack_count() const;
  inline void clear_attack_count();
  static const int kAttackCountFieldNumber = 6;
  inline ::google::protobuf::int32 attack_count() const;
  inline void set_attack_count(::google::protobuf::int32 value);

  // required int64 target_guild_id = 11;
  inline bool has_target_guild_id() const;
  inline void clear_target_guild_id();
  static const int kTargetGuildIdFieldNumber = 11;
  inline ::google::protobuf::int64 target_guild_id() const;
  inline void set_target_guild_id(::google::protobuf::int64 value);

  // required string target_guild_name = 12;
  inline bool has_target_guild_name() const;
  inline void clear_target_guild_name();
  static const int kTargetGuildNameFieldNumber = 12;
  inline const ::std::string& target_guild_name() const;
  inline void set_target_guild_name(const ::std::string& value);
  inline void set_target_guild_name(const char* value);
  inline void set_target_guild_name(const char* value, size_t size);
  inline ::std::string* mutable_target_guild_name();
  inline ::std::string* release_target_guild_name();
  inline void set_allocated_target_guild_name(::std::string* target_guild_name);

  // required int32 target_obtain_medal = 13;
  inline bool has_target_obtain_medal() const;
  inline void clear_target_obtain_medal();
  static const int kTargetObtainMedalFieldNumber = 13;
  inline ::google::protobuf::int32 target_obtain_medal() const;
  inline void set_target_obtain_medal(::google::protobuf::int32 value);

  // required int32 target_mark = 14;
  inline bool has_target_mark() const;
  inline void clear_target_mark();
  static const int kTargetMarkFieldNumber = 14;
  inline ::google::protobuf::int32 target_mark() const;
  inline void set_target_mark(::google::protobuf::int32 value);

  // required int32 target_mark_color = 15;
  inline bool has_target_mark_color() const;
  inline void clear_target_mark_color();
  static const int kTargetMarkColorFieldNumber = 15;
  inline ::google::protobuf::int32 target_mark_color() const;
  inline void set_target_mark_color(::google::protobuf::int32 value);

  // required int32 target_mark_bg = 16;
  inline bool has_target_mark_bg() const;
  inline void clear_target_mark_bg();
  static const int kTargetMarkBgFieldNumber = 16;
  inline ::google::protobuf::int32 target_mark_bg() const;
  inline void set_target_mark_bg(::google::protobuf::int32 value);

  // required int32 target_mark_bg_color = 17;
  inline bool has_target_mark_bg_color() const;
  inline void clear_target_mark_bg_color();
  static const int kTargetMarkBgColorFieldNumber = 17;
  inline ::google::protobuf::int32 target_mark_bg_color() const;
  inline void set_target_mark_bg_color(::google::protobuf::int32 value);

  // required int32 target_medal_total_count = 18;
  inline bool has_target_medal_total_count() const;
  inline void clear_target_medal_total_count();
  static const int kTargetMedalTotalCountFieldNumber = 18;
  inline ::google::protobuf::int32 target_medal_total_count() const;
  inline void set_target_medal_total_count(::google::protobuf::int32 value);

  // required int32 target_member_count = 19;
  inline bool has_target_member_count() const;
  inline void clear_target_member_count();
  static const int kTargetMemberCountFieldNumber = 19;
  inline ::google::protobuf::int32 target_member_count() const;
  inline void set_target_member_count(::google::protobuf::int32 value);

  // required int32 target_attack_count = 20;
  inline bool has_target_attack_count() const;
  inline void clear_target_attack_count();
  static const int kTargetAttackCountFieldNumber = 20;
  inline ::google::protobuf::int32 target_attack_count() const;
  inline void set_target_attack_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.GuildBattleHistory)
 private:
  inline void set_has_obtain_medal();
  inline void clear_has_obtain_medal();
  inline void set_has_medal_total_count();
  inline void clear_has_medal_total_count();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_battle_end_time();
  inline void clear_has_battle_end_time();
  inline void set_has_member_count();
  inline void clear_has_member_count();
  inline void set_has_attack_count();
  inline void clear_has_attack_count();
  inline void set_has_target_guild_id();
  inline void clear_has_target_guild_id();
  inline void set_has_target_guild_name();
  inline void clear_has_target_guild_name();
  inline void set_has_target_obtain_medal();
  inline void clear_has_target_obtain_medal();
  inline void set_has_target_mark();
  inline void clear_has_target_mark();
  inline void set_has_target_mark_color();
  inline void clear_has_target_mark_color();
  inline void set_has_target_mark_bg();
  inline void clear_has_target_mark_bg();
  inline void set_has_target_mark_bg_color();
  inline void clear_has_target_mark_bg_color();
  inline void set_has_target_medal_total_count();
  inline void clear_has_target_medal_total_count();
  inline void set_has_target_member_count();
  inline void clear_has_target_member_count();
  inline void set_has_target_attack_count();
  inline void clear_has_target_attack_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 obtain_medal_;
  ::google::protobuf::int32 medal_total_count_;
  ::google::protobuf::int64 battle_end_time_;
  int result_;
  ::google::protobuf::int32 member_count_;
  ::google::protobuf::int64 target_guild_id_;
  ::google::protobuf::int32 attack_count_;
  ::google::protobuf::int32 target_obtain_medal_;
  ::std::string* target_guild_name_;
  ::google::protobuf::int32 target_mark_;
  ::google::protobuf::int32 target_mark_color_;
  ::google::protobuf::int32 target_mark_bg_;
  ::google::protobuf::int32 target_mark_bg_color_;
  ::google::protobuf::int32 target_medal_total_count_;
  ::google::protobuf::int32 target_member_count_;
  ::google::protobuf::int32 target_attack_count_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static GuildBattleHistory* default_instance_;
};
// -------------------------------------------------------------------

class GuildBattleRecord : public ::google::protobuf::Message {
 public:
  GuildBattleRecord();
  virtual ~GuildBattleRecord();

  GuildBattleRecord(const GuildBattleRecord& from);

  inline GuildBattleRecord& operator=(const GuildBattleRecord& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildBattleRecord& default_instance();

  void Swap(GuildBattleRecord* other);

  // implements Message ----------------------------------------------

  GuildBattleRecord* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildBattleRecord& from);
  void MergeFrom(const GuildBattleRecord& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 win_count = 1;
  inline bool has_win_count() const;
  inline void clear_win_count();
  static const int kWinCountFieldNumber = 1;
  inline ::google::protobuf::int32 win_count() const;
  inline void set_win_count(::google::protobuf::int32 value);

  // required int32 draw_count = 2;
  inline bool has_draw_count() const;
  inline void clear_draw_count();
  static const int kDrawCountFieldNumber = 2;
  inline ::google::protobuf::int32 draw_count() const;
  inline void set_draw_count(::google::protobuf::int32 value);

  // required int32 lose_count = 3;
  inline bool has_lose_count() const;
  inline void clear_lose_count();
  static const int kLoseCountFieldNumber = 3;
  inline ::google::protobuf::int32 lose_count() const;
  inline void set_lose_count(::google::protobuf::int32 value);

  // required int32 total_obtain_medal = 11;
  inline bool has_total_obtain_medal() const;
  inline void clear_total_obtain_medal();
  static const int kTotalObtainMedalFieldNumber = 11;
  inline ::google::protobuf::int32 total_obtain_medal() const;
  inline void set_total_obtain_medal(::google::protobuf::int32 value);

  // required int32 ranking = 12;
  inline bool has_ranking() const;
  inline void clear_ranking();
  static const int kRankingFieldNumber = 12;
  inline ::google::protobuf::int32 ranking() const;
  inline void set_ranking(::google::protobuf::int32 value);

  // required int32 ranking_total_count = 13;
  inline bool has_ranking_total_count() const;
  inline void clear_ranking_total_count();
  static const int kRankingTotalCountFieldNumber = 13;
  inline ::google::protobuf::int32 ranking_total_count() const;
  inline void set_ranking_total_count(::google::protobuf::int32 value);

  // required int32 season_id = 21;
  inline bool has_season_id() const;
  inline void clear_season_id();
  static const int kSeasonIdFieldNumber = 21;
  inline ::google::protobuf::int32 season_id() const;
  inline void set_season_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.GuildBattleRecord)
 private:
  inline void set_has_win_count();
  inline void clear_has_win_count();
  inline void set_has_draw_count();
  inline void clear_has_draw_count();
  inline void set_has_lose_count();
  inline void clear_has_lose_count();
  inline void set_has_total_obtain_medal();
  inline void clear_has_total_obtain_medal();
  inline void set_has_ranking();
  inline void clear_has_ranking();
  inline void set_has_ranking_total_count();
  inline void clear_has_ranking_total_count();
  inline void set_has_season_id();
  inline void clear_has_season_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 win_count_;
  ::google::protobuf::int32 draw_count_;
  ::google::protobuf::int32 lose_count_;
  ::google::protobuf::int32 total_obtain_medal_;
  ::google::protobuf::int32 ranking_;
  ::google::protobuf::int32 ranking_total_count_;
  ::google::protobuf::int32 season_id_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static GuildBattleRecord* default_instance_;
};
// -------------------------------------------------------------------

class GuildSkill : public ::google::protobuf::Message {
 public:
  GuildSkill();
  virtual ~GuildSkill();

  GuildSkill(const GuildSkill& from);

  inline GuildSkill& operator=(const GuildSkill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildSkill& default_instance();

  void Swap(GuildSkill* other);

  // implements Message ----------------------------------------------

  GuildSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildSkill& from);
  void MergeFrom(const GuildSkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // required bool enabled = 3;
  inline bool has_enabled() const;
  inline void clear_enabled();
  static const int kEnabledFieldNumber = 3;
  inline bool enabled() const;
  inline void set_enabled(bool value);

  // optional int64 buff_end_time = 10;
  inline bool has_buff_end_time() const;
  inline void clear_buff_end_time();
  static const int kBuffEndTimeFieldNumber = 10;
  inline ::google::protobuf::int64 buff_end_time() const;
  inline void set_buff_end_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.GuildSkill)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_enabled();
  inline void clear_has_enabled();
  inline void set_has_buff_end_time();
  inline void clear_has_buff_end_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int64 buff_end_time_;
  bool enabled_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static GuildSkill* default_instance_;
};
// -------------------------------------------------------------------

class GuildInfo : public ::google::protobuf::Message {
 public:
  GuildInfo();
  virtual ~GuildInfo();

  GuildInfo(const GuildInfo& from);

  inline GuildInfo& operator=(const GuildInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildInfo& default_instance();

  void Swap(GuildInfo* other);

  // implements Message ----------------------------------------------

  GuildInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildInfo& from);
  void MergeFrom(const GuildInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 guild_id = 1;
  inline bool has_guild_id() const;
  inline void clear_guild_id();
  static const int kGuildIdFieldNumber = 1;
  inline ::google::protobuf::int64 guild_id() const;
  inline void set_guild_id(::google::protobuf::int64 value);

  // required string guild_name = 2;
  inline bool has_guild_name() const;
  inline void clear_guild_name();
  static const int kGuildNameFieldNumber = 2;
  inline const ::std::string& guild_name() const;
  inline void set_guild_name(const ::std::string& value);
  inline void set_guild_name(const char* value);
  inline void set_guild_name(const char* value, size_t size);
  inline ::std::string* mutable_guild_name();
  inline ::std::string* release_guild_name();
  inline void set_allocated_guild_name(::std::string* guild_name);

  // required int32 mark_index = 3;
  inline bool has_mark_index() const;
  inline void clear_mark_index();
  static const int kMarkIndexFieldNumber = 3;
  inline ::google::protobuf::int32 mark_index() const;
  inline void set_mark_index(::google::protobuf::int32 value);

  // required int32 mark_color = 4;
  inline bool has_mark_color() const;
  inline void clear_mark_color();
  static const int kMarkColorFieldNumber = 4;
  inline ::google::protobuf::int32 mark_color() const;
  inline void set_mark_color(::google::protobuf::int32 value);

  // required int32 mark_bg_index = 5;
  inline bool has_mark_bg_index() const;
  inline void clear_mark_bg_index();
  static const int kMarkBgIndexFieldNumber = 5;
  inline ::google::protobuf::int32 mark_bg_index() const;
  inline void set_mark_bg_index(::google::protobuf::int32 value);

  // required int32 mark_bg_color = 6;
  inline bool has_mark_bg_color() const;
  inline void clear_mark_bg_color();
  static const int kMarkBgColorFieldNumber = 6;
  inline ::google::protobuf::int32 mark_bg_color() const;
  inline void set_mark_bg_color(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.GuildInfo)
 private:
  inline void set_has_guild_id();
  inline void clear_has_guild_id();
  inline void set_has_guild_name();
  inline void clear_has_guild_name();
  inline void set_has_mark_index();
  inline void clear_has_mark_index();
  inline void set_has_mark_color();
  inline void clear_has_mark_color();
  inline void set_has_mark_bg_index();
  inline void clear_has_mark_bg_index();
  inline void set_has_mark_bg_color();
  inline void clear_has_mark_bg_color();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 guild_id_;
  ::std::string* guild_name_;
  ::google::protobuf::int32 mark_index_;
  ::google::protobuf::int32 mark_color_;
  ::google::protobuf::int32 mark_bg_index_;
  ::google::protobuf::int32 mark_bg_color_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static GuildInfo* default_instance_;
};
// -------------------------------------------------------------------

class GuildMercenary : public ::google::protobuf::Message {
 public:
  GuildMercenary();
  virtual ~GuildMercenary();

  GuildMercenary(const GuildMercenary& from);

  inline GuildMercenary& operator=(const GuildMercenary& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMercenary& default_instance();

  void Swap(GuildMercenary* other);

  // implements Message ----------------------------------------------

  GuildMercenary* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMercenary& from);
  void MergeFrom(const GuildMercenary& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // required int32 exp = 3;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 3;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.GuildMercenary)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_exp();
  inline void clear_has_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 exp_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static GuildMercenary* default_instance_;
};
// -------------------------------------------------------------------

class MatchMaking : public ::google::protobuf::Message {
 public:
  MatchMaking();
  virtual ~MatchMaking();

  MatchMaking(const MatchMaking& from);

  inline MatchMaking& operator=(const MatchMaking& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MatchMaking& default_instance();

  void Swap(MatchMaking* other);

  // implements Message ----------------------------------------------

  MatchMaking* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MatchMaking& from);
  void MergeFrom(const MatchMaking& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef MatchMaking_TYPE TYPE;
  static const TYPE PVP_RANK = MatchMaking_TYPE_PVP_RANK;
  static const TYPE PVP_FRIENDLY = MatchMaking_TYPE_PVP_FRIENDLY;
  static const TYPE RAID_RANK = MatchMaking_TYPE_RAID_RANK;
  static const TYPE ASSAULT_RANK = MatchMaking_TYPE_ASSAULT_RANK;
  static inline bool TYPE_IsValid(int value) {
    return MatchMaking_TYPE_IsValid(value);
  }
  static const TYPE TYPE_MIN =
    MatchMaking_TYPE_TYPE_MIN;
  static const TYPE TYPE_MAX =
    MatchMaking_TYPE_TYPE_MAX;
  static const int TYPE_ARRAYSIZE =
    MatchMaking_TYPE_TYPE_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  TYPE_descriptor() {
    return MatchMaking_TYPE_descriptor();
  }
  static inline const ::std::string& TYPE_Name(TYPE value) {
    return MatchMaking_TYPE_Name(value);
  }
  static inline bool TYPE_Parse(const ::std::string& name,
      TYPE* value) {
    return MatchMaking_TYPE_Parse(name, value);
  }

  typedef MatchMaking_STATE STATE;
  static const STATE WAITING = MatchMaking_STATE_WAITING;
  static const STATE ARRANGED = MatchMaking_STATE_ARRANGED;
  static const STATE CANCELED = MatchMaking_STATE_CANCELED;
  static inline bool STATE_IsValid(int value) {
    return MatchMaking_STATE_IsValid(value);
  }
  static const STATE STATE_MIN =
    MatchMaking_STATE_STATE_MIN;
  static const STATE STATE_MAX =
    MatchMaking_STATE_STATE_MAX;
  static const int STATE_ARRAYSIZE =
    MatchMaking_STATE_STATE_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  STATE_descriptor() {
    return MatchMaking_STATE_descriptor();
  }
  static inline const ::std::string& STATE_Name(STATE value) {
    return MatchMaking_STATE_Name(value);
  }
  static inline bool STATE_Parse(const ::std::string& name,
      STATE* value) {
    return MatchMaking_STATE_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.MatchMaking)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static MatchMaking* default_instance_;
};
// -------------------------------------------------------------------

class Invitation : public ::google::protobuf::Message {
 public:
  Invitation();
  virtual ~Invitation();

  Invitation(const Invitation& from);

  inline Invitation& operator=(const Invitation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Invitation& default_instance();

  void Swap(Invitation* other);

  // implements Message ----------------------------------------------

  Invitation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Invitation& from);
  void MergeFrom(const Invitation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Invitation_TYPE TYPE;
  static const TYPE PVP_INVITE = Invitation_TYPE_PVP_INVITE;
  static inline bool TYPE_IsValid(int value) {
    return Invitation_TYPE_IsValid(value);
  }
  static const TYPE TYPE_MIN =
    Invitation_TYPE_TYPE_MIN;
  static const TYPE TYPE_MAX =
    Invitation_TYPE_TYPE_MAX;
  static const int TYPE_ARRAYSIZE =
    Invitation_TYPE_TYPE_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  TYPE_descriptor() {
    return Invitation_TYPE_descriptor();
  }
  static inline const ::std::string& TYPE_Name(TYPE value) {
    return Invitation_TYPE_Name(value);
  }
  static inline bool TYPE_Parse(const ::std::string& name,
      TYPE* value) {
    return Invitation_TYPE_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.Invitation)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static Invitation* default_instance_;
};
// -------------------------------------------------------------------

class MatchInfo : public ::google::protobuf::Message {
 public:
  MatchInfo();
  virtual ~MatchInfo();

  MatchInfo(const MatchInfo& from);

  inline MatchInfo& operator=(const MatchInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MatchInfo& default_instance();

  void Swap(MatchInfo* other);

  // implements Message ----------------------------------------------

  MatchInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MatchInfo& from);
  void MergeFrom(const MatchInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef MatchInfo_TYPE TYPE;
  static const TYPE AI = MatchInfo_TYPE_AI;
  static const TYPE PLAYER = MatchInfo_TYPE_PLAYER;
  static const TYPE TEAM = MatchInfo_TYPE_TEAM;
  static const TYPE RAID = MatchInfo_TYPE_RAID;
  static const TYPE ASSAULT = MatchInfo_TYPE_ASSAULT;
  static const TYPE HEROTOWER = MatchInfo_TYPE_HEROTOWER;
  static const TYPE DONATION = MatchInfo_TYPE_DONATION;
  static const TYPE DIMENSION = MatchInfo_TYPE_DIMENSION;
  static inline bool TYPE_IsValid(int value) {
    return MatchInfo_TYPE_IsValid(value);
  }
  static const TYPE TYPE_MIN =
    MatchInfo_TYPE_TYPE_MIN;
  static const TYPE TYPE_MAX =
    MatchInfo_TYPE_TYPE_MAX;
  static const int TYPE_ARRAYSIZE =
    MatchInfo_TYPE_TYPE_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  TYPE_descriptor() {
    return MatchInfo_TYPE_descriptor();
  }
  static inline const ::std::string& TYPE_Name(TYPE value) {
    return MatchInfo_TYPE_Name(value);
  }
  static inline bool TYPE_Parse(const ::std::string& name,
      TYPE* value) {
    return MatchInfo_TYPE_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required string match_token = 1;
  inline bool has_match_token() const;
  inline void clear_match_token();
  static const int kMatchTokenFieldNumber = 1;
  inline const ::std::string& match_token() const;
  inline void set_match_token(const ::std::string& value);
  inline void set_match_token(const char* value);
  inline void set_match_token(const char* value, size_t size);
  inline ::std::string* mutable_match_token();
  inline ::std::string* release_match_token();
  inline void set_allocated_match_token(::std::string* match_token);

  // required .b2.protocol.commondata.MatchInfo.TYPE opponent_type = 2;
  inline bool has_opponent_type() const;
  inline void clear_opponent_type();
  static const int kOpponentTypeFieldNumber = 2;
  inline ::b2::protocol::commondata::MatchInfo_TYPE opponent_type() const;
  inline void set_opponent_type(::b2::protocol::commondata::MatchInfo_TYPE value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.MatchInfo)
 private:
  inline void set_has_match_token();
  inline void clear_has_match_token();
  inline void set_has_opponent_type();
  inline void clear_has_opponent_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* match_token_;
  int opponent_type_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static MatchInfo* default_instance_;
};
// -------------------------------------------------------------------

class MatchStatus : public ::google::protobuf::Message {
 public:
  MatchStatus();
  virtual ~MatchStatus();

  MatchStatus(const MatchStatus& from);

  inline MatchStatus& operator=(const MatchStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MatchStatus& default_instance();

  void Swap(MatchStatus* other);

  // implements Message ----------------------------------------------

  MatchStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MatchStatus& from);
  void MergeFrom(const MatchStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 battle_grade = 1;
  inline bool has_battle_grade() const;
  inline void clear_battle_grade();
  static const int kBattleGradeFieldNumber = 1;
  inline ::google::protobuf::int32 battle_grade() const;
  inline void set_battle_grade(::google::protobuf::int32 value);

  // optional int32 battle_star_count = 2;
  inline bool has_battle_star_count() const;
  inline void clear_battle_star_count();
  static const int kBattleStarCountFieldNumber = 2;
  inline ::google::protobuf::int32 battle_star_count() const;
  inline void set_battle_star_count(::google::protobuf::int32 value);

  // optional int32 continue_win = 3;
  inline bool has_continue_win() const;
  inline void clear_continue_win();
  static const int kContinueWinFieldNumber = 3;
  inline ::google::protobuf::int32 continue_win() const;
  inline void set_continue_win(::google::protobuf::int32 value);

  // optional int32 continue_win_max = 4;
  inline bool has_continue_win_max() const;
  inline void clear_continue_win_max();
  static const int kContinueWinMaxFieldNumber = 4;
  inline ::google::protobuf::int32 continue_win_max() const;
  inline void set_continue_win_max(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.MatchStatus)
 private:
  inline void set_has_battle_grade();
  inline void clear_has_battle_grade();
  inline void set_has_battle_star_count();
  inline void clear_has_battle_star_count();
  inline void set_has_continue_win();
  inline void clear_has_continue_win();
  inline void set_has_continue_win_max();
  inline void clear_has_continue_win_max();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 battle_grade_;
  ::google::protobuf::int32 battle_star_count_;
  ::google::protobuf::int32 continue_win_;
  ::google::protobuf::int32 continue_win_max_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static MatchStatus* default_instance_;
};
// -------------------------------------------------------------------

class Ranking : public ::google::protobuf::Message {
 public:
  Ranking();
  virtual ~Ranking();

  Ranking(const Ranking& from);

  inline Ranking& operator=(const Ranking& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Ranking& default_instance();

  void Swap(Ranking* other);

  // implements Message ----------------------------------------------

  Ranking* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Ranking& from);
  void MergeFrom(const Ranking& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::int64 account_id() const;
  inline void set_account_id(::google::protobuf::int64 value);

  // required int32 ranking = 11;
  inline bool has_ranking() const;
  inline void clear_ranking();
  static const int kRankingFieldNumber = 11;
  inline ::google::protobuf::int32 ranking() const;
  inline void set_ranking(::google::protobuf::int32 value);

  // required int32 total_ranker_count = 12;
  inline bool has_total_ranker_count() const;
  inline void clear_total_ranker_count();
  static const int kTotalRankerCountFieldNumber = 12;
  inline ::google::protobuf::int32 total_ranker_count() const;
  inline void set_total_ranker_count(::google::protobuf::int32 value);

  // optional string pvp_replay_url = 20;
  inline bool has_pvp_replay_url() const;
  inline void clear_pvp_replay_url();
  static const int kPvpReplayUrlFieldNumber = 20;
  inline const ::std::string& pvp_replay_url() const;
  inline void set_pvp_replay_url(const ::std::string& value);
  inline void set_pvp_replay_url(const char* value);
  inline void set_pvp_replay_url(const char* value, size_t size);
  inline ::std::string* mutable_pvp_replay_url();
  inline ::std::string* release_pvp_replay_url();
  inline void set_allocated_pvp_replay_url(::std::string* pvp_replay_url);

  // optional int32 replay_size_compressed = 21;
  inline bool has_replay_size_compressed() const;
  inline void clear_replay_size_compressed();
  static const int kReplaySizeCompressedFieldNumber = 21;
  inline ::google::protobuf::int32 replay_size_compressed() const;
  inline void set_replay_size_compressed(::google::protobuf::int32 value);

  // optional int32 replay_size_uncompressed = 22;
  inline bool has_replay_size_uncompressed() const;
  inline void clear_replay_size_uncompressed();
  static const int kReplaySizeUncompressedFieldNumber = 22;
  inline ::google::protobuf::int32 replay_size_uncompressed() const;
  inline void set_replay_size_uncompressed(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.Ranking)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_ranking();
  inline void clear_has_ranking();
  inline void set_has_total_ranker_count();
  inline void clear_has_total_ranker_count();
  inline void set_has_pvp_replay_url();
  inline void clear_has_pvp_replay_url();
  inline void set_has_replay_size_compressed();
  inline void clear_has_replay_size_compressed();
  inline void set_has_replay_size_uncompressed();
  inline void clear_has_replay_size_uncompressed();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 account_id_;
  ::google::protobuf::int32 ranking_;
  ::google::protobuf::int32 total_ranker_count_;
  ::std::string* pvp_replay_url_;
  ::google::protobuf::int32 replay_size_compressed_;
  ::google::protobuf::int32 replay_size_uncompressed_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static Ranking* default_instance_;
};
// -------------------------------------------------------------------

class MatchRanker_Entry : public ::google::protobuf::Message {
 public:
  MatchRanker_Entry();
  virtual ~MatchRanker_Entry();

  MatchRanker_Entry(const MatchRanker_Entry& from);

  inline MatchRanker_Entry& operator=(const MatchRanker_Entry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MatchRanker_Entry& default_instance();

  void Swap(MatchRanker_Entry* other);

  // implements Message ----------------------------------------------

  MatchRanker_Entry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MatchRanker_Entry& from);
  void MergeFrom(const MatchRanker_Entry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .b2.protocol.commondata.Character.TYPE character_type = 1;
  inline bool has_character_type() const;
  inline void clear_character_type();
  static const int kCharacterTypeFieldNumber = 1;
  inline ::b2::protocol::commondata::Character_TYPE character_type() const;
  inline void set_character_type(::b2::protocol::commondata::Character_TYPE value);

  // required int32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.MatchRanker.Entry)
 private:
  inline void set_has_character_type();
  inline void clear_has_character_type();
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int character_type_;
  ::google::protobuf::int32 level_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static MatchRanker_Entry* default_instance_;
};
// -------------------------------------------------------------------

class MatchRanker : public ::google::protobuf::Message {
 public:
  MatchRanker();
  virtual ~MatchRanker();

  MatchRanker(const MatchRanker& from);

  inline MatchRanker& operator=(const MatchRanker& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MatchRanker& default_instance();

  void Swap(MatchRanker* other);

  // implements Message ----------------------------------------------

  MatchRanker* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MatchRanker& from);
  void MergeFrom(const MatchRanker& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef MatchRanker_Entry Entry;

  // accessors -------------------------------------------------------

  // required int64 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::int64 account_id() const;
  inline void set_account_id(::google::protobuf::int64 value);

  // required string nickname = 2;
  inline bool has_nickname() const;
  inline void clear_nickname();
  static const int kNicknameFieldNumber = 2;
  inline const ::std::string& nickname() const;
  inline void set_nickname(const ::std::string& value);
  inline void set_nickname(const char* value);
  inline void set_nickname(const char* value, size_t size);
  inline ::std::string* mutable_nickname();
  inline ::std::string* release_nickname();
  inline void set_allocated_nickname(::std::string* nickname);

  // optional int32 battle_grade = 3;
  inline bool has_battle_grade() const;
  inline void clear_battle_grade();
  static const int kBattleGradeFieldNumber = 3;
  inline ::google::protobuf::int32 battle_grade() const;
  inline void set_battle_grade(::google::protobuf::int32 value);

  // optional int32 battle_star_count = 4;
  inline bool has_battle_star_count() const;
  inline void clear_battle_star_count();
  static const int kBattleStarCountFieldNumber = 4;
  inline ::google::protobuf::int32 battle_star_count() const;
  inline void set_battle_star_count(::google::protobuf::int32 value);

  // optional int32 best_floor = 5;
  inline bool has_best_floor() const;
  inline void clear_best_floor();
  static const int kBestFloorFieldNumber = 5;
  inline ::google::protobuf::int32 best_floor() const;
  inline void set_best_floor(::google::protobuf::int32 value);

  // optional int32 clear_time = 6;
  inline bool has_clear_time() const;
  inline void clear_clear_time();
  static const int kClearTimeFieldNumber = 6;
  inline ::google::protobuf::int32 clear_time() const;
  inline void set_clear_time(::google::protobuf::int32 value);

  // required int32 total_power = 7;
  inline bool has_total_power() const;
  inline void clear_total_power();
  static const int kTotalPowerFieldNumber = 7;
  inline ::google::protobuf::int32 total_power() const;
  inline void set_total_power(::google::protobuf::int32 value);

  // optional int32 point = 8;
  inline bool has_point() const;
  inline void clear_point();
  static const int kPointFieldNumber = 8;
  inline ::google::protobuf::int32 point() const;
  inline void set_point(::google::protobuf::int32 value);

  // repeated .b2.protocol.commondata.MatchRanker.Entry entries = 9;
  inline int entries_size() const;
  inline void clear_entries();
  static const int kEntriesFieldNumber = 9;
  inline const ::b2::protocol::commondata::MatchRanker_Entry& entries(int index) const;
  inline ::b2::protocol::commondata::MatchRanker_Entry* mutable_entries(int index);
  inline ::b2::protocol::commondata::MatchRanker_Entry* add_entries();
  inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::MatchRanker_Entry >&
      entries() const;
  inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::MatchRanker_Entry >*
      mutable_entries();

  // optional string pvp_replay_url = 10;
  inline bool has_pvp_replay_url() const;
  inline void clear_pvp_replay_url();
  static const int kPvpReplayUrlFieldNumber = 10;
  inline const ::std::string& pvp_replay_url() const;
  inline void set_pvp_replay_url(const ::std::string& value);
  inline void set_pvp_replay_url(const char* value);
  inline void set_pvp_replay_url(const char* value, size_t size);
  inline ::std::string* mutable_pvp_replay_url();
  inline ::std::string* release_pvp_replay_url();
  inline void set_allocated_pvp_replay_url(::std::string* pvp_replay_url);

  // optional int32 replay_size_compressed = 11;
  inline bool has_replay_size_compressed() const;
  inline void clear_replay_size_compressed();
  static const int kReplaySizeCompressedFieldNumber = 11;
  inline ::google::protobuf::int32 replay_size_compressed() const;
  inline void set_replay_size_compressed(::google::protobuf::int32 value);

  // optional int32 replay_size_uncompressed = 12;
  inline bool has_replay_size_uncompressed() const;
  inline void clear_replay_size_uncompressed();
  static const int kReplaySizeUncompressedFieldNumber = 12;
  inline ::google::protobuf::int32 replay_size_uncompressed() const;
  inline void set_replay_size_uncompressed(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.MatchRanker)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_nickname();
  inline void clear_has_nickname();
  inline void set_has_battle_grade();
  inline void clear_has_battle_grade();
  inline void set_has_battle_star_count();
  inline void clear_has_battle_star_count();
  inline void set_has_best_floor();
  inline void clear_has_best_floor();
  inline void set_has_clear_time();
  inline void clear_has_clear_time();
  inline void set_has_total_power();
  inline void clear_has_total_power();
  inline void set_has_point();
  inline void clear_has_point();
  inline void set_has_pvp_replay_url();
  inline void clear_has_pvp_replay_url();
  inline void set_has_replay_size_compressed();
  inline void clear_has_replay_size_compressed();
  inline void set_has_replay_size_uncompressed();
  inline void clear_has_replay_size_uncompressed();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 account_id_;
  ::std::string* nickname_;
  ::google::protobuf::int32 battle_grade_;
  ::google::protobuf::int32 battle_star_count_;
  ::google::protobuf::int32 best_floor_;
  ::google::protobuf::int32 clear_time_;
  ::google::protobuf::int32 total_power_;
  ::google::protobuf::int32 point_;
  ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::MatchRanker_Entry > entries_;
  ::std::string* pvp_replay_url_;
  ::google::protobuf::int32 replay_size_compressed_;
  ::google::protobuf::int32 replay_size_uncompressed_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static MatchRanker* default_instance_;
};
// -------------------------------------------------------------------

class RankingReward : public ::google::protobuf::Message {
 public:
  RankingReward();
  virtual ~RankingReward();

  RankingReward(const RankingReward& from);

  inline RankingReward& operator=(const RankingReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RankingReward& default_instance();

  void Swap(RankingReward* other);

  // implements Message ----------------------------------------------

  RankingReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RankingReward& from);
  void MergeFrom(const RankingReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 grade = 1;
  inline bool has_grade() const;
  inline void clear_grade();
  static const int kGradeFieldNumber = 1;
  inline ::google::protobuf::int32 grade() const;
  inline void set_grade(::google::protobuf::int32 value);

  // required int32 star_count = 2;
  inline bool has_star_count() const;
  inline void clear_star_count();
  static const int kStarCountFieldNumber = 2;
  inline ::google::protobuf::int32 star_count() const;
  inline void set_star_count(::google::protobuf::int32 value);

  // required int32 ranking = 3;
  inline bool has_ranking() const;
  inline void clear_ranking();
  static const int kRankingFieldNumber = 3;
  inline ::google::protobuf::int32 ranking() const;
  inline void set_ranking(::google::protobuf::int32 value);

  // required int32 ranker_count = 4;
  inline bool has_ranker_count() const;
  inline void clear_ranker_count();
  static const int kRankerCountFieldNumber = 4;
  inline ::google::protobuf::int32 ranker_count() const;
  inline void set_ranker_count(::google::protobuf::int32 value);

  // required int32 initial_grade = 5;
  inline bool has_initial_grade() const;
  inline void clear_initial_grade();
  static const int kInitialGradeFieldNumber = 5;
  inline ::google::protobuf::int32 initial_grade() const;
  inline void set_initial_grade(::google::protobuf::int32 value);

  // repeated .b2.protocol.commondata.Reward rewards = 10;
  inline int rewards_size() const;
  inline void clear_rewards();
  static const int kRewardsFieldNumber = 10;
  inline const ::b2::protocol::commondata::Reward& rewards(int index) const;
  inline ::b2::protocol::commondata::Reward* mutable_rewards(int index);
  inline ::b2::protocol::commondata::Reward* add_rewards();
  inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward >&
      rewards() const;
  inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward >*
      mutable_rewards();

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.RankingReward)
 private:
  inline void set_has_grade();
  inline void clear_has_grade();
  inline void set_has_star_count();
  inline void clear_has_star_count();
  inline void set_has_ranking();
  inline void clear_has_ranking();
  inline void set_has_ranker_count();
  inline void clear_has_ranker_count();
  inline void set_has_initial_grade();
  inline void clear_has_initial_grade();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 grade_;
  ::google::protobuf::int32 star_count_;
  ::google::protobuf::int32 ranking_;
  ::google::protobuf::int32 ranker_count_;
  ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward > rewards_;
  ::google::protobuf::int32 initial_grade_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static RankingReward* default_instance_;
};
// -------------------------------------------------------------------

class DimensionRankingReward : public ::google::protobuf::Message {
 public:
  DimensionRankingReward();
  virtual ~DimensionRankingReward();

  DimensionRankingReward(const DimensionRankingReward& from);

  inline DimensionRankingReward& operator=(const DimensionRankingReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DimensionRankingReward& default_instance();

  void Swap(DimensionRankingReward* other);

  // implements Message ----------------------------------------------

  DimensionRankingReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DimensionRankingReward& from);
  void MergeFrom(const DimensionRankingReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 best_difficulty_level = 1;
  inline bool has_best_difficulty_level() const;
  inline void clear_best_difficulty_level();
  static const int kBestDifficultyLevelFieldNumber = 1;
  inline ::google::protobuf::int32 best_difficulty_level() const;
  inline void set_best_difficulty_level(::google::protobuf::int32 value);

  // required int32 best_clear_time_millis = 2;
  inline bool has_best_clear_time_millis() const;
  inline void clear_best_clear_time_millis();
  static const int kBestClearTimeMillisFieldNumber = 2;
  inline ::google::protobuf::int32 best_clear_time_millis() const;
  inline void set_best_clear_time_millis(::google::protobuf::int32 value);

  // required int32 ranking = 3;
  inline bool has_ranking() const;
  inline void clear_ranking();
  static const int kRankingFieldNumber = 3;
  inline ::google::protobuf::int32 ranking() const;
  inline void set_ranking(::google::protobuf::int32 value);

  // required int32 ranker_count = 4;
  inline bool has_ranker_count() const;
  inline void clear_ranker_count();
  static const int kRankerCountFieldNumber = 4;
  inline ::google::protobuf::int32 ranker_count() const;
  inline void set_ranker_count(::google::protobuf::int32 value);

  // repeated .b2.protocol.commondata.Reward rewards = 10;
  inline int rewards_size() const;
  inline void clear_rewards();
  static const int kRewardsFieldNumber = 10;
  inline const ::b2::protocol::commondata::Reward& rewards(int index) const;
  inline ::b2::protocol::commondata::Reward* mutable_rewards(int index);
  inline ::b2::protocol::commondata::Reward* add_rewards();
  inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward >&
      rewards() const;
  inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward >*
      mutable_rewards();

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.DimensionRankingReward)
 private:
  inline void set_has_best_difficulty_level();
  inline void clear_has_best_difficulty_level();
  inline void set_has_best_clear_time_millis();
  inline void clear_has_best_clear_time_millis();
  inline void set_has_ranking();
  inline void clear_has_ranking();
  inline void set_has_ranker_count();
  inline void clear_has_ranker_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 best_difficulty_level_;
  ::google::protobuf::int32 best_clear_time_millis_;
  ::google::protobuf::int32 ranking_;
  ::google::protobuf::int32 ranker_count_;
  ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward > rewards_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static DimensionRankingReward* default_instance_;
};
// -------------------------------------------------------------------

class DimensionStatus : public ::google::protobuf::Message {
 public:
  DimensionStatus();
  virtual ~DimensionStatus();

  DimensionStatus(const DimensionStatus& from);

  inline DimensionStatus& operator=(const DimensionStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DimensionStatus& default_instance();

  void Swap(DimensionStatus* other);

  // implements Message ----------------------------------------------

  DimensionStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DimensionStatus& from);
  void MergeFrom(const DimensionStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 best_difficulty_level = 1;
  inline bool has_best_difficulty_level() const;
  inline void clear_best_difficulty_level();
  static const int kBestDifficultyLevelFieldNumber = 1;
  inline ::google::protobuf::int32 best_difficulty_level() const;
  inline void set_best_difficulty_level(::google::protobuf::int32 value);

  // optional int32 best_clear_time_millis = 2;
  inline bool has_best_clear_time_millis() const;
  inline void clear_best_clear_time_millis();
  static const int kBestClearTimeMillisFieldNumber = 2;
  inline ::google::protobuf::int32 best_clear_time_millis() const;
  inline void set_best_clear_time_millis(::google::protobuf::int32 value);

  // optional .b2.protocol.commondata.Character.TYPE best_character_type = 3;
  inline bool has_best_character_type() const;
  inline void clear_best_character_type();
  static const int kBestCharacterTypeFieldNumber = 3;
  inline ::b2::protocol::commondata::Character_TYPE best_character_type() const;
  inline void set_best_character_type(::b2::protocol::commondata::Character_TYPE value);

  // optional int32 best_character_level = 4;
  inline bool has_best_character_level() const;
  inline void clear_best_character_level();
  static const int kBestCharacterLevelFieldNumber = 4;
  inline ::google::protobuf::int32 best_character_level() const;
  inline void set_best_character_level(::google::protobuf::int32 value);

  // optional int32 best_total_power = 5;
  inline bool has_best_total_power() const;
  inline void clear_best_total_power();
  static const int kBestTotalPowerFieldNumber = 5;
  inline ::google::protobuf::int32 best_total_power() const;
  inline void set_best_total_power(::google::protobuf::int32 value);

  // optional int64 best_record_time = 6;
  inline bool has_best_record_time() const;
  inline void clear_best_record_time();
  static const int kBestRecordTimeFieldNumber = 6;
  inline ::google::protobuf::int64 best_record_time() const;
  inline void set_best_record_time(::google::protobuf::int64 value);

  // required int32 top_difficulty_level = 7;
  inline bool has_top_difficulty_level() const;
  inline void clear_top_difficulty_level();
  static const int kTopDifficultyLevelFieldNumber = 7;
  inline ::google::protobuf::int32 top_difficulty_level() const;
  inline void set_top_difficulty_level(::google::protobuf::int32 value);

  // optional int32 last_difficulty_level = 8;
  inline bool has_last_difficulty_level() const;
  inline void clear_last_difficulty_level();
  static const int kLastDifficultyLevelFieldNumber = 8;
  inline ::google::protobuf::int32 last_difficulty_level() const;
  inline void set_last_difficulty_level(::google::protobuf::int32 value);

  // optional .b2.protocol.commondata.Character.TYPE last_character_type = 9;
  inline bool has_last_character_type() const;
  inline void clear_last_character_type();
  static const int kLastCharacterTypeFieldNumber = 9;
  inline ::b2::protocol::commondata::Character_TYPE last_character_type() const;
  inline void set_last_character_type(::b2::protocol::commondata::Character_TYPE value);

  // required int32 daily_clear_count = 10;
  inline bool has_daily_clear_count() const;
  inline void clear_daily_clear_count();
  static const int kDailyClearCountFieldNumber = 10;
  inline ::google::protobuf::int32 daily_clear_count() const;
  inline void set_daily_clear_count(::google::protobuf::int32 value);

  // required int32 daily_clear_count_max = 11;
  inline bool has_daily_clear_count_max() const;
  inline void clear_daily_clear_count_max();
  static const int kDailyClearCountMaxFieldNumber = 11;
  inline ::google::protobuf::int32 daily_clear_count_max() const;
  inline void set_daily_clear_count_max(::google::protobuf::int32 value);

  // required int64 daily_count_init_time = 12;
  inline bool has_daily_count_init_time() const;
  inline void clear_daily_count_init_time();
  static const int kDailyCountInitTimeFieldNumber = 12;
  inline ::google::protobuf::int64 daily_count_init_time() const;
  inline void set_daily_count_init_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.DimensionStatus)
 private:
  inline void set_has_best_difficulty_level();
  inline void clear_has_best_difficulty_level();
  inline void set_has_best_clear_time_millis();
  inline void clear_has_best_clear_time_millis();
  inline void set_has_best_character_type();
  inline void clear_has_best_character_type();
  inline void set_has_best_character_level();
  inline void clear_has_best_character_level();
  inline void set_has_best_total_power();
  inline void clear_has_best_total_power();
  inline void set_has_best_record_time();
  inline void clear_has_best_record_time();
  inline void set_has_top_difficulty_level();
  inline void clear_has_top_difficulty_level();
  inline void set_has_last_difficulty_level();
  inline void clear_has_last_difficulty_level();
  inline void set_has_last_character_type();
  inline void clear_has_last_character_type();
  inline void set_has_daily_clear_count();
  inline void clear_has_daily_clear_count();
  inline void set_has_daily_clear_count_max();
  inline void clear_has_daily_clear_count_max();
  inline void set_has_daily_count_init_time();
  inline void clear_has_daily_count_init_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 best_difficulty_level_;
  ::google::protobuf::int32 best_clear_time_millis_;
  int best_character_type_;
  ::google::protobuf::int32 best_character_level_;
  ::google::protobuf::int64 best_record_time_;
  ::google::protobuf::int32 best_total_power_;
  ::google::protobuf::int32 top_difficulty_level_;
  ::google::protobuf::int32 last_difficulty_level_;
  int last_character_type_;
  ::google::protobuf::int32 daily_clear_count_;
  ::google::protobuf::int32 daily_clear_count_max_;
  ::google::protobuf::int64 daily_count_init_time_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static DimensionStatus* default_instance_;
};
// -------------------------------------------------------------------

class Room : public ::google::protobuf::Message {
 public:
  Room();
  virtual ~Room();

  Room(const Room& from);

  inline Room& operator=(const Room& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room& default_instance();

  void Swap(Room* other);

  // implements Message ----------------------------------------------

  Room* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room& from);
  void MergeFrom(const Room& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Room_TYPE TYPE;
  static const TYPE PVP = Room_TYPE_PVP;
  static const TYPE RAID = Room_TYPE_RAID;
  static const TYPE ASSAULT = Room_TYPE_ASSAULT;
  static inline bool TYPE_IsValid(int value) {
    return Room_TYPE_IsValid(value);
  }
  static const TYPE TYPE_MIN =
    Room_TYPE_TYPE_MIN;
  static const TYPE TYPE_MAX =
    Room_TYPE_TYPE_MAX;
  static const int TYPE_ARRAYSIZE =
    Room_TYPE_TYPE_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  TYPE_descriptor() {
    return Room_TYPE_descriptor();
  }
  static inline const ::std::string& TYPE_Name(TYPE value) {
    return Room_TYPE_Name(value);
  }
  static inline bool TYPE_Parse(const ::std::string& name,
      TYPE* value) {
    return Room_TYPE_Parse(name, value);
  }

  typedef Room_ACCESS ACCESS;
  static const ACCESS PUBLIC = Room_ACCESS_PUBLIC;
  static const ACCESS PRIVATE = Room_ACCESS_PRIVATE;
  static inline bool ACCESS_IsValid(int value) {
    return Room_ACCESS_IsValid(value);
  }
  static const ACCESS ACCESS_MIN =
    Room_ACCESS_ACCESS_MIN;
  static const ACCESS ACCESS_MAX =
    Room_ACCESS_ACCESS_MAX;
  static const int ACCESS_ARRAYSIZE =
    Room_ACCESS_ACCESS_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ACCESS_descriptor() {
    return Room_ACCESS_descriptor();
  }
  static inline const ::std::string& ACCESS_Name(ACCESS value) {
    return Room_ACCESS_Name(value);
  }
  static inline bool ACCESS_Parse(const ::std::string& name,
      ACCESS* value) {
    return Room_ACCESS_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.Room)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static Room* default_instance_;
};
// -------------------------------------------------------------------

class RoomLocation : public ::google::protobuf::Message {
 public:
  RoomLocation();
  virtual ~RoomLocation();

  RoomLocation(const RoomLocation& from);

  inline RoomLocation& operator=(const RoomLocation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomLocation& default_instance();

  void Swap(RoomLocation* other);

  // implements Message ----------------------------------------------

  RoomLocation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoomLocation& from);
  void MergeFrom(const RoomLocation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .b2.protocol.commondata.Endpoint channel_endpoint = 1;
  inline bool has_channel_endpoint() const;
  inline void clear_channel_endpoint();
  static const int kChannelEndpointFieldNumber = 1;
  inline const ::b2::protocol::commondata::Endpoint& channel_endpoint() const;
  inline ::b2::protocol::commondata::Endpoint* mutable_channel_endpoint();
  inline ::b2::protocol::commondata::Endpoint* release_channel_endpoint();
  inline void set_allocated_channel_endpoint(::b2::protocol::commondata::Endpoint* channel_endpoint);

  // required string room_id = 2;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 2;
  inline const ::std::string& room_id() const;
  inline void set_room_id(const ::std::string& value);
  inline void set_room_id(const char* value);
  inline void set_room_id(const char* value, size_t size);
  inline ::std::string* mutable_room_id();
  inline ::std::string* release_room_id();
  inline void set_allocated_room_id(::std::string* room_id);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.RoomLocation)
 private:
  inline void set_has_channel_endpoint();
  inline void clear_has_channel_endpoint();
  inline void set_has_room_id();
  inline void clear_has_room_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::b2::protocol::commondata::Endpoint* channel_endpoint_;
  ::std::string* room_id_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static RoomLocation* default_instance_;
};
// -------------------------------------------------------------------

class TeamBattleEntry : public ::google::protobuf::Message {
 public:
  TeamBattleEntry();
  virtual ~TeamBattleEntry();

  TeamBattleEntry(const TeamBattleEntry& from);

  inline TeamBattleEntry& operator=(const TeamBattleEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamBattleEntry& default_instance();

  void Swap(TeamBattleEntry* other);

  // implements Message ----------------------------------------------

  TeamBattleEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamBattleEntry& from);
  void MergeFrom(const TeamBattleEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .b2.protocol.commondata.BattleFormation.TYPE formation_type = 1;
  inline bool has_formation_type() const;
  inline void clear_formation_type();
  static const int kFormationTypeFieldNumber = 1;
  inline ::b2::protocol::commondata::BattleFormation_TYPE formation_type() const;
  inline void set_formation_type(::b2::protocol::commondata::BattleFormation_TYPE value);

  // required .b2.protocol.commondata.Character.TYPE character_slot_1 = 10;
  inline bool has_character_slot_1() const;
  inline void clear_character_slot_1();
  static const int kCharacterSlot1FieldNumber = 10;
  inline ::b2::protocol::commondata::Character_TYPE character_slot_1() const;
  inline void set_character_slot_1(::b2::protocol::commondata::Character_TYPE value);

  // required .b2.protocol.commondata.Character.TYPE character_slot_2 = 11;
  inline bool has_character_slot_2() const;
  inline void clear_character_slot_2();
  static const int kCharacterSlot2FieldNumber = 11;
  inline ::b2::protocol::commondata::Character_TYPE character_slot_2() const;
  inline void set_character_slot_2(::b2::protocol::commondata::Character_TYPE value);

  // required .b2.protocol.commondata.Character.TYPE character_slot_3 = 12;
  inline bool has_character_slot_3() const;
  inline void clear_character_slot_3();
  static const int kCharacterSlot3FieldNumber = 12;
  inline ::b2::protocol::commondata::Character_TYPE character_slot_3() const;
  inline void set_character_slot_3(::b2::protocol::commondata::Character_TYPE value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.TeamBattleEntry)
 private:
  inline void set_has_formation_type();
  inline void clear_has_formation_type();
  inline void set_has_character_slot_1();
  inline void clear_has_character_slot_1();
  inline void set_has_character_slot_2();
  inline void clear_has_character_slot_2();
  inline void set_has_character_slot_3();
  inline void clear_has_character_slot_3();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int formation_type_;
  int character_slot_1_;
  int character_slot_2_;
  int character_slot_3_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static TeamBattleEntry* default_instance_;
};
// -------------------------------------------------------------------

class MatchOpenPeriodInfo : public ::google::protobuf::Message {
 public:
  MatchOpenPeriodInfo();
  virtual ~MatchOpenPeriodInfo();

  MatchOpenPeriodInfo(const MatchOpenPeriodInfo& from);

  inline MatchOpenPeriodInfo& operator=(const MatchOpenPeriodInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MatchOpenPeriodInfo& default_instance();

  void Swap(MatchOpenPeriodInfo* other);

  // implements Message ----------------------------------------------

  MatchOpenPeriodInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MatchOpenPeriodInfo& from);
  void MergeFrom(const MatchOpenPeriodInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 day_of_week = 1;
  inline bool has_day_of_week() const;
  inline void clear_day_of_week();
  static const int kDayOfWeekFieldNumber = 1;
  inline ::google::protobuf::int32 day_of_week() const;
  inline void set_day_of_week(::google::protobuf::int32 value);

  // required int32 begin_hour = 2;
  inline bool has_begin_hour() const;
  inline void clear_begin_hour();
  static const int kBeginHourFieldNumber = 2;
  inline ::google::protobuf::int32 begin_hour() const;
  inline void set_begin_hour(::google::protobuf::int32 value);

  // required int32 begin_min = 3;
  inline bool has_begin_min() const;
  inline void clear_begin_min();
  static const int kBeginMinFieldNumber = 3;
  inline ::google::protobuf::int32 begin_min() const;
  inline void set_begin_min(::google::protobuf::int32 value);

  // required int32 end_hour = 4;
  inline bool has_end_hour() const;
  inline void clear_end_hour();
  static const int kEndHourFieldNumber = 4;
  inline ::google::protobuf::int32 end_hour() const;
  inline void set_end_hour(::google::protobuf::int32 value);

  // required int32 end_min = 5;
  inline bool has_end_min() const;
  inline void clear_end_min();
  static const int kEndMinFieldNumber = 5;
  inline ::google::protobuf::int32 end_min() const;
  inline void set_end_min(::google::protobuf::int32 value);

  // optional int32 raid_type = 6;
  inline bool has_raid_type() const;
  inline void clear_raid_type();
  static const int kRaidTypeFieldNumber = 6;
  inline ::google::protobuf::int32 raid_type() const;
  inline void set_raid_type(::google::protobuf::int32 value);

  // optional int32 assault_type = 7;
  inline bool has_assault_type() const;
  inline void clear_assault_type();
  static const int kAssaultTypeFieldNumber = 7;
  inline ::google::protobuf::int32 assault_type() const;
  inline void set_assault_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.MatchOpenPeriodInfo)
 private:
  inline void set_has_day_of_week();
  inline void clear_has_day_of_week();
  inline void set_has_begin_hour();
  inline void clear_has_begin_hour();
  inline void set_has_begin_min();
  inline void clear_has_begin_min();
  inline void set_has_end_hour();
  inline void clear_has_end_hour();
  inline void set_has_end_min();
  inline void clear_has_end_min();
  inline void set_has_raid_type();
  inline void clear_has_raid_type();
  inline void set_has_assault_type();
  inline void clear_has_assault_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 day_of_week_;
  ::google::protobuf::int32 begin_hour_;
  ::google::protobuf::int32 begin_min_;
  ::google::protobuf::int32 end_hour_;
  ::google::protobuf::int32 end_min_;
  ::google::protobuf::int32 raid_type_;
  ::google::protobuf::int32 assault_type_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static MatchOpenPeriodInfo* default_instance_;
};
// -------------------------------------------------------------------

class KillMonsterInfo : public ::google::protobuf::Message {
 public:
  KillMonsterInfo();
  virtual ~KillMonsterInfo();

  KillMonsterInfo(const KillMonsterInfo& from);

  inline KillMonsterInfo& operator=(const KillMonsterInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KillMonsterInfo& default_instance();

  void Swap(KillMonsterInfo* other);

  // implements Message ----------------------------------------------

  KillMonsterInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KillMonsterInfo& from);
  void MergeFrom(const KillMonsterInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 monster_id = 1;
  inline bool has_monster_id() const;
  inline void clear_monster_id();
  static const int kMonsterIdFieldNumber = 1;
  inline ::google::protobuf::int32 monster_id() const;
  inline void set_monster_id(::google::protobuf::int32 value);

  // required int32 monster_grade = 2;
  inline bool has_monster_grade() const;
  inline void clear_monster_grade();
  static const int kMonsterGradeFieldNumber = 2;
  inline ::google::protobuf::int32 monster_grade() const;
  inline void set_monster_grade(::google::protobuf::int32 value);

  // required int32 kill_count = 3;
  inline bool has_kill_count() const;
  inline void clear_kill_count();
  static const int kKillCountFieldNumber = 3;
  inline ::google::protobuf::int32 kill_count() const;
  inline void set_kill_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.KillMonsterInfo)
 private:
  inline void set_has_monster_id();
  inline void clear_has_monster_id();
  inline void set_has_monster_grade();
  inline void clear_has_monster_grade();
  inline void set_has_kill_count();
  inline void clear_has_kill_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 monster_id_;
  ::google::protobuf::int32 monster_grade_;
  ::google::protobuf::int32 kill_count_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static KillMonsterInfo* default_instance_;
};
// -------------------------------------------------------------------

class DropData : public ::google::protobuf::Message {
 public:
  DropData();
  virtual ~DropData();

  DropData(const DropData& from);

  inline DropData& operator=(const DropData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DropData& default_instance();

  void Swap(DropData* other);

  // implements Message ----------------------------------------------

  DropData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DropData& from);
  void MergeFrom(const DropData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 template_id = 1;
  inline bool has_template_id() const;
  inline void clear_template_id();
  static const int kTemplateIdFieldNumber = 1;
  inline ::google::protobuf::int32 template_id() const;
  inline void set_template_id(::google::protobuf::int32 value);

  // required int32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.DropData)
 private:
  inline void set_has_template_id();
  inline void clear_has_template_id();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 template_id_;
  ::google::protobuf::int32 count_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static DropData* default_instance_;
};
// -------------------------------------------------------------------

class MailItemInfo : public ::google::protobuf::Message {
 public:
  MailItemInfo();
  virtual ~MailItemInfo();

  MailItemInfo(const MailItemInfo& from);

  inline MailItemInfo& operator=(const MailItemInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MailItemInfo& default_instance();

  void Swap(MailItemInfo* other);

  // implements Message ----------------------------------------------

  MailItemInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MailItemInfo& from);
  void MergeFrom(const MailItemInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 item_template_id = 1;
  inline bool has_item_template_id() const;
  inline void clear_item_template_id();
  static const int kItemTemplateIdFieldNumber = 1;
  inline ::google::protobuf::int32 item_template_id() const;
  inline void set_item_template_id(::google::protobuf::int32 value);

  // required int32 item_amount = 2;
  inline bool has_item_amount() const;
  inline void clear_item_amount();
  static const int kItemAmountFieldNumber = 2;
  inline ::google::protobuf::int32 item_amount() const;
  inline void set_item_amount(::google::protobuf::int32 value);

  // optional .b2.protocol.commondata.Item.CharacterType character_type = 3;
  inline bool has_character_type() const;
  inline void clear_character_type();
  static const int kCharacterTypeFieldNumber = 3;
  inline ::b2::protocol::commondata::Item_CharacterType character_type() const;
  inline void set_character_type(::b2::protocol::commondata::Item_CharacterType value);

  // optional .b2.protocol.commondata.Item item = 4;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 4;
  inline const ::b2::protocol::commondata::Item& item() const;
  inline ::b2::protocol::commondata::Item* mutable_item();
  inline ::b2::protocol::commondata::Item* release_item();
  inline void set_allocated_item(::b2::protocol::commondata::Item* item);

  // optional .b2.protocol.commondata.Costume costume = 5;
  inline bool has_costume() const;
  inline void clear_costume();
  static const int kCostumeFieldNumber = 5;
  inline const ::b2::protocol::commondata::Costume& costume() const;
  inline ::b2::protocol::commondata::Costume* mutable_costume();
  inline ::b2::protocol::commondata::Costume* release_costume();
  inline void set_allocated_costume(::b2::protocol::commondata::Costume* costume);

  // optional .b2.protocol.commondata.Totem totem = 6;
  inline bool has_totem() const;
  inline void clear_totem();
  static const int kTotemFieldNumber = 6;
  inline const ::b2::protocol::commondata::Totem& totem() const;
  inline ::b2::protocol::commondata::Totem* mutable_totem();
  inline ::b2::protocol::commondata::Totem* release_totem();
  inline void set_allocated_totem(::b2::protocol::commondata::Totem* totem);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.MailItemInfo)
 private:
  inline void set_has_item_template_id();
  inline void clear_has_item_template_id();
  inline void set_has_item_amount();
  inline void clear_has_item_amount();
  inline void set_has_character_type();
  inline void clear_has_character_type();
  inline void set_has_item();
  inline void clear_has_item();
  inline void set_has_costume();
  inline void clear_has_costume();
  inline void set_has_totem();
  inline void clear_has_totem();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 item_template_id_;
  ::google::protobuf::int32 item_amount_;
  ::b2::protocol::commondata::Item* item_;
  ::b2::protocol::commondata::Costume* costume_;
  ::b2::protocol::commondata::Totem* totem_;
  int character_type_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static MailItemInfo* default_instance_;
};
// -------------------------------------------------------------------

class WingOption : public ::google::protobuf::Message {
 public:
  WingOption();
  virtual ~WingOption();

  WingOption(const WingOption& from);

  inline WingOption& operator=(const WingOption& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WingOption& default_instance();

  void Swap(WingOption* other);

  // implements Message ----------------------------------------------

  WingOption* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WingOption& from);
  void MergeFrom(const WingOption& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .b2.protocol.commondata.Character.TYPE character_type = 1;
  inline bool has_character_type() const;
  inline void clear_character_type();
  static const int kCharacterTypeFieldNumber = 1;
  inline ::b2::protocol::commondata::Character_TYPE character_type() const;
  inline void set_character_type(::b2::protocol::commondata::Character_TYPE value);

  // required int32 option_index = 2;
  inline bool has_option_index() const;
  inline void clear_option_index();
  static const int kOptionIndexFieldNumber = 2;
  inline ::google::protobuf::int32 option_index() const;
  inline void set_option_index(::google::protobuf::int32 value);

  // required int32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.WingOption)
 private:
  inline void set_has_character_type();
  inline void clear_has_character_type();
  inline void set_has_option_index();
  inline void clear_has_option_index();
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int character_type_;
  ::google::protobuf::int32 option_index_;
  ::google::protobuf::int32 level_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static WingOption* default_instance_;
};
// -------------------------------------------------------------------

class FairyStatus : public ::google::protobuf::Message {
 public:
  FairyStatus();
  virtual ~FairyStatus();

  FairyStatus(const FairyStatus& from);

  inline FairyStatus& operator=(const FairyStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FairyStatus& default_instance();

  void Swap(FairyStatus* other);

  // implements Message ----------------------------------------------

  FairyStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FairyStatus& from);
  void MergeFrom(const FairyStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .b2.protocol.commondata.FairyType fairy_type = 1;
  inline bool has_fairy_type() const;
  inline void clear_fairy_type();
  static const int kFairyTypeFieldNumber = 1;
  inline ::b2::protocol::commondata::FairyType fairy_type() const;
  inline void set_fairy_type(::b2::protocol::commondata::FairyType value);

  // required int32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // required int32 enhance_point = 3;
  inline bool has_enhance_point() const;
  inline void clear_enhance_point();
  static const int kEnhancePointFieldNumber = 3;
  inline ::google::protobuf::int32 enhance_point() const;
  inline void set_enhance_point(::google::protobuf::int32 value);

  // required int32 activated_bless_option_id = 5;
  inline bool has_activated_bless_option_id() const;
  inline void clear_activated_bless_option_id();
  static const int kActivatedBlessOptionIdFieldNumber = 5;
  inline ::google::protobuf::int32 activated_bless_option_id() const;
  inline void set_activated_bless_option_id(::google::protobuf::int32 value);

  // required int32 bless_level = 6;
  inline bool has_bless_level() const;
  inline void clear_bless_level();
  static const int kBlessLevelFieldNumber = 6;
  inline ::google::protobuf::int32 bless_level() const;
  inline void set_bless_level(::google::protobuf::int32 value);

  // required float option_value = 7;
  inline bool has_option_value() const;
  inline void clear_option_value();
  static const int kOptionValueFieldNumber = 7;
  inline float option_value() const;
  inline void set_option_value(float value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.FairyStatus)
 private:
  inline void set_has_fairy_type();
  inline void clear_has_fairy_type();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_enhance_point();
  inline void clear_has_enhance_point();
  inline void set_has_activated_bless_option_id();
  inline void clear_has_activated_bless_option_id();
  inline void set_has_bless_level();
  inline void clear_has_bless_level();
  inline void set_has_option_value();
  inline void clear_has_option_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int fairy_type_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 enhance_point_;
  ::google::protobuf::int32 activated_bless_option_id_;
  ::google::protobuf::int32 bless_level_;
  float option_value_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static FairyStatus* default_instance_;
};
// -------------------------------------------------------------------

class Relic : public ::google::protobuf::Message {
 public:
  Relic();
  virtual ~Relic();

  Relic(const Relic& from);

  inline Relic& operator=(const Relic& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Relic& default_instance();

  void Swap(Relic* other);

  // implements Message ----------------------------------------------

  Relic* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Relic& from);
  void MergeFrom(const Relic& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .b2.protocol.commondata.Character.TYPE character_type = 1;
  inline bool has_character_type() const;
  inline void clear_character_type();
  static const int kCharacterTypeFieldNumber = 1;
  inline ::b2::protocol::commondata::Character_TYPE character_type() const;
  inline void set_character_type(::b2::protocol::commondata::Character_TYPE value);

  // required int32 relic_id = 2;
  inline bool has_relic_id() const;
  inline void clear_relic_id();
  static const int kRelicIdFieldNumber = 2;
  inline ::google::protobuf::int32 relic_id() const;
  inline void set_relic_id(::google::protobuf::int32 value);

  // required int32 grade = 3;
  inline bool has_grade() const;
  inline void clear_grade();
  static const int kGradeFieldNumber = 3;
  inline ::google::protobuf::int32 grade() const;
  inline void set_grade(::google::protobuf::int32 value);

  // required int32 enhance_level = 4;
  inline bool has_enhance_level() const;
  inline void clear_enhance_level();
  static const int kEnhanceLevelFieldNumber = 4;
  inline ::google::protobuf::int32 enhance_level() const;
  inline void set_enhance_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.Relic)
 private:
  inline void set_has_character_type();
  inline void clear_has_character_type();
  inline void set_has_relic_id();
  inline void clear_has_relic_id();
  inline void set_has_grade();
  inline void clear_has_grade();
  inline void set_has_enhance_level();
  inline void clear_has_enhance_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int character_type_;
  ::google::protobuf::int32 relic_id_;
  ::google::protobuf::int32 grade_;
  ::google::protobuf::int32 enhance_level_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static Relic* default_instance_;
};
// -------------------------------------------------------------------

class RollingBanner : public ::google::protobuf::Message {
 public:
  RollingBanner();
  virtual ~RollingBanner();

  RollingBanner(const RollingBanner& from);

  inline RollingBanner& operator=(const RollingBanner& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RollingBanner& default_instance();

  void Swap(RollingBanner* other);

  // implements Message ----------------------------------------------

  RollingBanner* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RollingBanner& from);
  void MergeFrom(const RollingBanner& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // required int32 sub_type = 3;
  inline bool has_sub_type() const;
  inline void clear_sub_type();
  static const int kSubTypeFieldNumber = 3;
  inline ::google::protobuf::int32 sub_type() const;
  inline void set_sub_type(::google::protobuf::int32 value);

  // required string banner_img_url = 4;
  inline bool has_banner_img_url() const;
  inline void clear_banner_img_url();
  static const int kBannerImgUrlFieldNumber = 4;
  inline const ::std::string& banner_img_url() const;
  inline void set_banner_img_url(const ::std::string& value);
  inline void set_banner_img_url(const char* value);
  inline void set_banner_img_url(const char* value, size_t size);
  inline ::std::string* mutable_banner_img_url();
  inline ::std::string* release_banner_img_url();
  inline void set_allocated_banner_img_url(::std::string* banner_img_url);

  // required int64 start_time = 5;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 5;
  inline ::google::protobuf::int64 start_time() const;
  inline void set_start_time(::google::protobuf::int64 value);

  // required int64 end_time = 6;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 6;
  inline ::google::protobuf::int64 end_time() const;
  inline void set_end_time(::google::protobuf::int64 value);

  // required int32 banner_duration = 7;
  inline bool has_banner_duration() const;
  inline void clear_banner_duration();
  static const int kBannerDurationFieldNumber = 7;
  inline ::google::protobuf::int32 banner_duration() const;
  inline void set_banner_duration(::google::protobuf::int32 value);

  // required string web_url = 8;
  inline bool has_web_url() const;
  inline void clear_web_url();
  static const int kWebUrlFieldNumber = 8;
  inline const ::std::string& web_url() const;
  inline void set_web_url(const ::std::string& value);
  inline void set_web_url(const char* value);
  inline void set_web_url(const char* value, size_t size);
  inline ::std::string* mutable_web_url();
  inline ::std::string* release_web_url();
  inline void set_allocated_web_url(::std::string* web_url);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.RollingBanner)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_sub_type();
  inline void clear_has_sub_type();
  inline void set_has_banner_img_url();
  inline void clear_has_banner_img_url();
  inline void set_has_start_time();
  inline void clear_has_start_time();
  inline void set_has_end_time();
  inline void clear_has_end_time();
  inline void set_has_banner_duration();
  inline void clear_has_banner_duration();
  inline void set_has_web_url();
  inline void clear_has_web_url();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 type_;
  ::std::string* banner_img_url_;
  ::google::protobuf::int64 start_time_;
  ::google::protobuf::int32 sub_type_;
  ::google::protobuf::int32 banner_duration_;
  ::google::protobuf::int64 end_time_;
  ::std::string* web_url_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static RollingBanner* default_instance_;
};
// -------------------------------------------------------------------

class ConfigData : public ::google::protobuf::Message {
 public:
  ConfigData();
  virtual ~ConfigData();

  ConfigData(const ConfigData& from);

  inline ConfigData& operator=(const ConfigData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigData& default_instance();

  void Swap(ConfigData* other);

  // implements Message ----------------------------------------------

  ConfigData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConfigData& from);
  void MergeFrom(const ConfigData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 skill_point_buy_price_gem = 1;
  inline bool has_skill_point_buy_price_gem() const;
  inline void clear_skill_point_buy_price_gem();
  static const int kSkillPointBuyPriceGemFieldNumber = 1;
  inline ::google::protobuf::int32 skill_point_buy_price_gem() const;
  inline void set_skill_point_buy_price_gem(::google::protobuf::int32 value);

  // optional int32 max_skill_point_buy_count = 2;
  inline bool has_max_skill_point_buy_count() const;
  inline void clear_max_skill_point_buy_count();
  static const int kMaxSkillPointBuyCountFieldNumber = 2;
  inline ::google::protobuf::int32 max_skill_point_buy_count() const;
  inline void set_max_skill_point_buy_count(::google::protobuf::int32 value);

  // optional int32 skill_point_reset_price_gem = 3;
  inline bool has_skill_point_reset_price_gem() const;
  inline void clear_skill_point_reset_price_gem();
  static const int kSkillPointResetPriceGemFieldNumber = 3;
  inline ::google::protobuf::int32 skill_point_reset_price_gem() const;
  inline void set_skill_point_reset_price_gem(::google::protobuf::int32 value);

  // optional int32 need_cash_for_extend_inventory = 4;
  inline bool has_need_cash_for_extend_inventory() const;
  inline void clear_need_cash_for_extend_inventory();
  static const int kNeedCashForExtendInventoryFieldNumber = 4;
  inline ::google::protobuf::int32 need_cash_for_extend_inventory() const;
  inline void set_need_cash_for_extend_inventory(::google::protobuf::int32 value);

  // optional int32 increase_inventory_slot_per_buy_count = 5;
  inline bool has_increase_inventory_slot_per_buy_count() const;
  inline void clear_increase_inventory_slot_per_buy_count();
  static const int kIncreaseInventorySlotPerBuyCountFieldNumber = 5;
  inline ::google::protobuf::int32 increase_inventory_slot_per_buy_count() const;
  inline void set_increase_inventory_slot_per_buy_count(::google::protobuf::int32 value);

  // optional int32 max_inventory_slot_count = 6;
  inline bool has_max_inventory_slot_count() const;
  inline void clear_max_inventory_slot_count();
  static const int kMaxInventorySlotCountFieldNumber = 6;
  inline ::google::protobuf::int32 max_inventory_slot_count() const;
  inline void set_max_inventory_slot_count(::google::protobuf::int32 value);

  // optional int32 max_friend_count = 7;
  inline bool has_max_friend_count() const;
  inline void clear_max_friend_count();
  static const int kMaxFriendCountFieldNumber = 7;
  inline ::google::protobuf::int32 max_friend_count() const;
  inline void set_max_friend_count(::google::protobuf::int32 value);

  // optional int32 max_send_ask_friend = 8;
  inline bool has_max_send_ask_friend() const;
  inline void clear_max_send_ask_friend();
  static const int kMaxSendAskFriendFieldNumber = 8;
  inline ::google::protobuf::int32 max_send_ask_friend() const;
  inline void set_max_send_ask_friend(::google::protobuf::int32 value);

  // optional int32 max_receive_ask_friend = 9;
  inline bool has_max_receive_ask_friend() const;
  inline void clear_max_receive_ask_friend();
  static const int kMaxReceiveAskFriendFieldNumber = 9;
  inline ::google::protobuf::int32 max_receive_ask_friend() const;
  inline void set_max_receive_ask_friend(::google::protobuf::int32 value);

  // optional int32 cooltime_for_send_social_point = 10;
  inline bool has_cooltime_for_send_social_point() const;
  inline void clear_cooltime_for_send_social_point();
  static const int kCooltimeForSendSocialPointFieldNumber = 10;
  inline ::google::protobuf::int32 cooltime_for_send_social_point() const;
  inline void set_cooltime_for_send_social_point(::google::protobuf::int32 value);

  // optional int32 max_delete_friend_count_for_day = 11;
  inline bool has_max_delete_friend_count_for_day() const;
  inline void clear_max_delete_friend_count_for_day();
  static const int kMaxDeleteFriendCountForDayFieldNumber = 11;
  inline ::google::protobuf::int32 max_delete_friend_count_for_day() const;
  inline void set_max_delete_friend_count_for_day(::google::protobuf::int32 value);

  // optional int32 max_social_point_value = 12;
  inline bool has_max_social_point_value() const;
  inline void clear_max_social_point_value();
  static const int kMaxSocialPointValueFieldNumber = 12;
  inline ::google::protobuf::int32 max_social_point_value() const;
  inline void set_max_social_point_value(::google::protobuf::int32 value);

  // optional int32 add_social_point_for_send_to_friend = 13;
  inline bool has_add_social_point_for_send_to_friend() const;
  inline void clear_add_social_point_for_send_to_friend();
  static const int kAddSocialPointForSendToFriendFieldNumber = 13;
  inline ::google::protobuf::int32 add_social_point_for_send_to_friend() const;
  inline void set_add_social_point_for_send_to_friend(::google::protobuf::int32 value);

  // optional int32 add_social_point_for_receive_from_friend = 14;
  inline bool has_add_social_point_for_receive_from_friend() const;
  inline void clear_add_social_point_for_receive_from_friend();
  static const int kAddSocialPointForReceiveFromFriendFieldNumber = 14;
  inline ::google::protobuf::int32 add_social_point_for_receive_from_friend() const;
  inline void set_add_social_point_for_receive_from_friend(::google::protobuf::int32 value);

  // optional float stage_buff_rate_for_increase_exp = 15;
  inline bool has_stage_buff_rate_for_increase_exp() const;
  inline void clear_stage_buff_rate_for_increase_exp();
  static const int kStageBuffRateForIncreaseExpFieldNumber = 15;
  inline float stage_buff_rate_for_increase_exp() const;
  inline void set_stage_buff_rate_for_increase_exp(float value);

  // optional float stage_buff_rate_for_increase_gold = 16;
  inline bool has_stage_buff_rate_for_increase_gold() const;
  inline void clear_stage_buff_rate_for_increase_gold();
  static const int kStageBuffRateForIncreaseGoldFieldNumber = 16;
  inline float stage_buff_rate_for_increase_gold() const;
  inline void set_stage_buff_rate_for_increase_gold(float value);

  // optional float stage_buff_rate_for_boost_game_speed = 17;
  inline bool has_stage_buff_rate_for_boost_game_speed() const;
  inline void clear_stage_buff_rate_for_boost_game_speed();
  static const int kStageBuffRateForBoostGameSpeedFieldNumber = 17;
  inline float stage_buff_rate_for_boost_game_speed() const;
  inline void set_stage_buff_rate_for_boost_game_speed(float value);

  // optional int32 guild_set_up_gold_cost = 18;
  inline bool has_guild_set_up_gold_cost() const;
  inline void clear_guild_set_up_gold_cost();
  static const int kGuildSetUpGoldCostFieldNumber = 18;
  inline ::google::protobuf::int32 guild_set_up_gold_cost() const;
  inline void set_guild_set_up_gold_cost(::google::protobuf::int32 value);

  // optional int32 default_max_guild_member_count = 19;
  inline bool has_default_max_guild_member_count() const;
  inline void clear_default_max_guild_member_count();
  static const int kDefaultMaxGuildMemberCountFieldNumber = 19;
  inline ::google::protobuf::int32 default_max_guild_member_count() const;
  inline void set_default_max_guild_member_count(::google::protobuf::int32 value);

  // optional int32 max_invite_guild_count_for_account = 20;
  inline bool has_max_invite_guild_count_for_account() const;
  inline void clear_max_invite_guild_count_for_account();
  static const int kMaxInviteGuildCountForAccountFieldNumber = 20;
  inline ::google::protobuf::int32 max_invite_guild_count_for_account() const;
  inline void set_max_invite_guild_count_for_account(::google::protobuf::int32 value);

  // optional int32 invite_guild_expire_period_by_day = 21;
  inline bool has_invite_guild_expire_period_by_day() const;
  inline void clear_invite_guild_expire_period_by_day();
  static const int kInviteGuildExpirePeriodByDayFieldNumber = 21;
  inline ::google::protobuf::int32 invite_guild_expire_period_by_day() const;
  inline void set_invite_guild_expire_period_by_day(::google::protobuf::int32 value);

  // optional int32 max_raid_count_per_day = 22;
  inline bool has_max_raid_count_per_day() const;
  inline void clear_max_raid_count_per_day();
  static const int kMaxRaidCountPerDayFieldNumber = 22;
  inline ::google::protobuf::int32 max_raid_count_per_day() const;
  inline void set_max_raid_count_per_day(::google::protobuf::int32 value);

  // optional int32 update_guild_gold_cost = 23;
  inline bool has_update_guild_gold_cost() const;
  inline void clear_update_guild_gold_cost();
  static const int kUpdateGuildGoldCostFieldNumber = 23;
  inline ::google::protobuf::int32 update_guild_gold_cost() const;
  inline void set_update_guild_gold_cost(::google::protobuf::int32 value);

  // optional int32 guild_master_logout_limit_period_day = 24;
  inline bool has_guild_master_logout_limit_period_day() const;
  inline void clear_guild_master_logout_limit_period_day();
  static const int kGuildMasterLogoutLimitPeriodDayFieldNumber = 24;
  inline ::google::protobuf::int32 guild_master_logout_limit_period_day() const;
  inline void set_guild_master_logout_limit_period_day(::google::protobuf::int32 value);

  // optional int32 guild_battle_time_limit_sec_client = 25;
  inline bool has_guild_battle_time_limit_sec_client() const;
  inline void clear_guild_battle_time_limit_sec_client();
  static const int kGuildBattleTimeLimitSecClientFieldNumber = 25;
  inline ::google::protobuf::int32 guild_battle_time_limit_sec_client() const;
  inline void set_guild_battle_time_limit_sec_client(::google::protobuf::int32 value);

  // optional int32 hero_tower_sweep_reward_count_per_floor = 26;
  inline bool has_hero_tower_sweep_reward_count_per_floor() const;
  inline void clear_hero_tower_sweep_reward_count_per_floor();
  static const int kHeroTowerSweepRewardCountPerFloorFieldNumber = 26;
  inline ::google::protobuf::int32 hero_tower_sweep_reward_count_per_floor() const;
  inline void set_hero_tower_sweep_reward_count_per_floor(::google::protobuf::int32 value);

  // optional int32 assault_resurrection_max_count = 27;
  inline bool has_assault_resurrection_max_count() const;
  inline void clear_assault_resurrection_max_count();
  static const int kAssaultResurrectionMaxCountFieldNumber = 27;
  inline ::google::protobuf::int32 assault_resurrection_max_count() const;
  inline void set_assault_resurrection_max_count(::google::protobuf::int32 value);

  // optional int32 pvp_match_point_max = 29;
  inline bool has_pvp_match_point_max() const;
  inline void clear_pvp_match_point_max();
  static const int kPvpMatchPointMaxFieldNumber = 29;
  inline ::google::protobuf::int32 pvp_match_point_max() const;
  inline void set_pvp_match_point_max(::google::protobuf::int32 value);

  // optional int32 pvp_match_point_charge_period_second = 30;
  inline bool has_pvp_match_point_charge_period_second() const;
  inline void clear_pvp_match_point_charge_period_second();
  static const int kPvpMatchPointChargePeriodSecondFieldNumber = 30;
  inline ::google::protobuf::int32 pvp_match_point_charge_period_second() const;
  inline void set_pvp_match_point_charge_period_second(::google::protobuf::int32 value);

  // optional int32 team_match_point_max = 31;
  inline bool has_team_match_point_max() const;
  inline void clear_team_match_point_max();
  static const int kTeamMatchPointMaxFieldNumber = 31;
  inline ::google::protobuf::int32 team_match_point_max() const;
  inline void set_team_match_point_max(::google::protobuf::int32 value);

  // optional int32 team_match_point_charge_period_second = 32;
  inline bool has_team_match_point_charge_period_second() const;
  inline void clear_team_match_point_charge_period_second();
  static const int kTeamMatchPointChargePeriodSecondFieldNumber = 32;
  inline ::google::protobuf::int32 team_match_point_charge_period_second() const;
  inline void set_team_match_point_charge_period_second(::google::protobuf::int32 value);

  // optional int32 item_random_option_change_cost_dark_crystal = 33;
  inline bool has_item_random_option_change_cost_dark_crystal() const;
  inline void clear_item_random_option_change_cost_dark_crystal();
  static const int kItemRandomOptionChangeCostDarkCrystalFieldNumber = 33;
  inline ::google::protobuf::int32 item_random_option_change_cost_dark_crystal() const;
  inline void set_item_random_option_change_cost_dark_crystal(::google::protobuf::int32 value);

  // optional int32 item_preset_max_count = 34;
  inline bool has_item_preset_max_count() const;
  inline void clear_item_preset_max_count();
  static const int kItemPresetMaxCountFieldNumber = 34;
  inline ::google::protobuf::int32 item_preset_max_count() const;
  inline void set_item_preset_max_count(::google::protobuf::int32 value);

  // optional int32 skill_quick_slot_max_count = 35;
  inline bool has_skill_quick_slot_max_count() const;
  inline void clear_skill_quick_slot_max_count();
  static const int kSkillQuickSlotMaxCountFieldNumber = 35;
  inline ::google::protobuf::int32 skill_quick_slot_max_count() const;
  inline void set_skill_quick_slot_max_count(::google::protobuf::int32 value);

  // optional int32 assault_mvp_point_to_open_reward = 36;
  inline bool has_assault_mvp_point_to_open_reward() const;
  inline void clear_assault_mvp_point_to_open_reward();
  static const int kAssaultMvpPointToOpenRewardFieldNumber = 36;
  inline ::google::protobuf::int32 assault_mvp_point_to_open_reward() const;
  inline void set_assault_mvp_point_to_open_reward(::google::protobuf::int32 value);

  // optional int32 duel_reward_challenge_max_count = 37;
  inline bool has_duel_reward_challenge_max_count() const;
  inline void clear_duel_reward_challenge_max_count();
  static const int kDuelRewardChallengeMaxCountFieldNumber = 37;
  inline ::google::protobuf::int32 duel_reward_challenge_max_count() const;
  inline void set_duel_reward_challenge_max_count(::google::protobuf::int32 value);

  // optional int32 guild_support_cool_time_hour = 38;
  inline bool has_guild_support_cool_time_hour() const;
  inline void clear_guild_support_cool_time_hour();
  static const int kGuildSupportCoolTimeHourFieldNumber = 38;
  inline ::google::protobuf::int32 guild_support_cool_time_hour() const;
  inline void set_guild_support_cool_time_hour(::google::protobuf::int32 value);

  // optional int32 guild_support_max_count_for_day = 39;
  inline bool has_guild_support_max_count_for_day() const;
  inline void clear_guild_support_max_count_for_day();
  static const int kGuildSupportMaxCountForDayFieldNumber = 39;
  inline ::google::protobuf::int32 guild_support_max_count_for_day() const;
  inline void set_guild_support_max_count_for_day(::google::protobuf::int32 value);

  // optional int32 rest_max_time_second = 40;
  inline bool has_rest_max_time_second() const;
  inline void clear_rest_max_time_second();
  static const int kRestMaxTimeSecondFieldNumber = 40;
  inline ::google::protobuf::int32 rest_max_time_second() const;
  inline void set_rest_max_time_second(::google::protobuf::int32 value);

  // optional int32 rest_time_second_per_one_point = 41;
  inline bool has_rest_time_second_per_one_point() const;
  inline void clear_rest_time_second_per_one_point();
  static const int kRestTimeSecondPerOnePointFieldNumber = 41;
  inline ::google::protobuf::int32 rest_time_second_per_one_point() const;
  inline void set_rest_time_second_per_one_point(::google::protobuf::int32 value);

  // optional int32 guild_mercenary_donation_max_count_for_day = 42;
  inline bool has_guild_mercenary_donation_max_count_for_day() const;
  inline void clear_guild_mercenary_donation_max_count_for_day();
  static const int kGuildMercenaryDonationMaxCountForDayFieldNumber = 42;
  inline ::google::protobuf::int32 guild_mercenary_donation_max_count_for_day() const;
  inline void set_guild_mercenary_donation_max_count_for_day(::google::protobuf::int32 value);

  // optional int32 guild_rejoin_wait_time_min = 43;
  inline bool has_guild_rejoin_wait_time_min() const;
  inline void clear_guild_rejoin_wait_time_min();
  static const int kGuildRejoinWaitTimeMinFieldNumber = 43;
  inline ::google::protobuf::int32 guild_rejoin_wait_time_min() const;
  inline void set_guild_rejoin_wait_time_min(::google::protobuf::int32 value);

  // optional int32 character_level_max = 44;
  inline bool has_character_level_max() const;
  inline void clear_character_level_max();
  static const int kCharacterLevelMaxFieldNumber = 44;
  inline ::google::protobuf::int32 character_level_max() const;
  inline void set_character_level_max(::google::protobuf::int32 value);

  // optional int32 match_continuous_win_count_for_bonus = 45;
  inline bool has_match_continuous_win_count_for_bonus() const;
  inline void clear_match_continuous_win_count_for_bonus();
  static const int kMatchContinuousWinCountForBonusFieldNumber = 45;
  inline ::google::protobuf::int32 match_continuous_win_count_for_bonus() const;
  inline void set_match_continuous_win_count_for_bonus(::google::protobuf::int32 value);

  // optional int32 hero_tower_free_ticket_count_max = 46;
  inline bool has_hero_tower_free_ticket_count_max() const;
  inline void clear_hero_tower_free_ticket_count_max();
  static const int kHeroTowerFreeTicketCountMaxFieldNumber = 46;
  inline ::google::protobuf::int32 hero_tower_free_ticket_count_max() const;
  inline void set_hero_tower_free_ticket_count_max(::google::protobuf::int32 value);

  // optional int32 counter_dungeon_daily_enter_count_max = 47;
  inline bool has_counter_dungeon_daily_enter_count_max() const;
  inline void clear_counter_dungeon_daily_enter_count_max();
  static const int kCounterDungeonDailyEnterCountMaxFieldNumber = 47;
  inline ::google::protobuf::int32 counter_dungeon_daily_enter_count_max() const;
  inline void set_counter_dungeon_daily_enter_count_max(::google::protobuf::int32 value);

  // optional int32 max_chat_block_count = 48;
  inline bool has_max_chat_block_count() const;
  inline void clear_max_chat_block_count();
  static const int kMaxChatBlockCountFieldNumber = 48;
  inline ::google::protobuf::int32 max_chat_block_count() const;
  inline void set_max_chat_block_count(::google::protobuf::int32 value);

  // optional int32 min_floor_for_hero_tower_ranking = 49;
  inline bool has_min_floor_for_hero_tower_ranking() const;
  inline void clear_min_floor_for_hero_tower_ranking();
  static const int kMinFloorForHeroTowerRankingFieldNumber = 49;
  inline ::google::protobuf::int32 min_floor_for_hero_tower_ranking() const;
  inline void set_min_floor_for_hero_tower_ranking(::google::protobuf::int32 value);

  // optional int32 raid_guild_bonus_count_member_2 = 50;
  inline bool has_raid_guild_bonus_count_member_2() const;
  inline void clear_raid_guild_bonus_count_member_2();
  static const int kRaidGuildBonusCountMember2FieldNumber = 50;
  inline ::google::protobuf::int32 raid_guild_bonus_count_member_2() const;
  inline void set_raid_guild_bonus_count_member_2(::google::protobuf::int32 value);

  // optional int32 raid_guild_bonus_count_member_3 = 51;
  inline bool has_raid_guild_bonus_count_member_3() const;
  inline void clear_raid_guild_bonus_count_member_3();
  static const int kRaidGuildBonusCountMember3FieldNumber = 51;
  inline ::google::protobuf::int32 raid_guild_bonus_count_member_3() const;
  inline void set_raid_guild_bonus_count_member_3(::google::protobuf::int32 value);

  // optional int32 raid_guild_bonus_count_member_4 = 52;
  inline bool has_raid_guild_bonus_count_member_4() const;
  inline void clear_raid_guild_bonus_count_member_4();
  static const int kRaidGuildBonusCountMember4FieldNumber = 52;
  inline ::google::protobuf::int32 raid_guild_bonus_count_member_4() const;
  inline void set_raid_guild_bonus_count_member_4(::google::protobuf::int32 value);

  // optional int32 show_review_inducement_popup = 53;
  inline bool has_show_review_inducement_popup() const;
  inline void clear_show_review_inducement_popup();
  static const int kShowReviewInducementPopupFieldNumber = 53;
  inline ::google::protobuf::int32 show_review_inducement_popup() const;
  inline void set_show_review_inducement_popup(::google::protobuf::int32 value);

  // optional int32 max_open_stage_difficulty = 54;
  inline bool has_max_open_stage_difficulty() const;
  inline void clear_max_open_stage_difficulty();
  static const int kMaxOpenStageDifficultyFieldNumber = 54;
  inline ::google::protobuf::int32 max_open_stage_difficulty() const;
  inline void set_max_open_stage_difficulty(::google::protobuf::int32 value);

  // optional int32 item_random_option_change_cost_cash = 55;
  inline bool has_item_random_option_change_cost_cash() const;
  inline void clear_item_random_option_change_cost_cash();
  static const int kItemRandomOptionChangeCostCashFieldNumber = 55;
  inline ::google::protobuf::int32 item_random_option_change_cost_cash() const;
  inline void set_item_random_option_change_cost_cash(::google::protobuf::int32 value);

  // optional int32 event_dice_free_count = 56;
  inline bool has_event_dice_free_count() const;
  inline void clear_event_dice_free_count();
  static const int kEventDiceFreeCountFieldNumber = 56;
  inline ::google::protobuf::int32 event_dice_free_count() const;
  inline void set_event_dice_free_count(::google::protobuf::int32 value);

  // optional int32 event_dice_point_per_one_dice = 57;
  inline bool has_event_dice_point_per_one_dice() const;
  inline void clear_event_dice_point_per_one_dice();
  static const int kEventDicePointPerOneDiceFieldNumber = 57;
  inline ::google::protobuf::int32 event_dice_point_per_one_dice() const;
  inline void set_event_dice_point_per_one_dice(::google::protobuf::int32 value);

  // optional int32 max_costume_inventory_slot_count = 58;
  inline bool has_max_costume_inventory_slot_count() const;
  inline void clear_max_costume_inventory_slot_count();
  static const int kMaxCostumeInventorySlotCountFieldNumber = 58;
  inline ::google::protobuf::int32 max_costume_inventory_slot_count() const;
  inline void set_max_costume_inventory_slot_count(::google::protobuf::int32 value);

  // optional int32 guild_master_change_period_day = 59;
  inline bool has_guild_master_change_period_day() const;
  inline void clear_guild_master_change_period_day();
  static const int kGuildMasterChangePeriodDayFieldNumber = 59;
  inline ::google::protobuf::int32 guild_master_change_period_day() const;
  inline void set_guild_master_change_period_day(::google::protobuf::int32 value);

  // optional int32 exchange_item_count_gold = 60;
  inline bool has_exchange_item_count_gold() const;
  inline void clear_exchange_item_count_gold();
  static const int kExchangeItemCountGoldFieldNumber = 60;
  inline ::google::protobuf::int32 exchange_item_count_gold() const;
  inline void set_exchange_item_count_gold(::google::protobuf::int32 value);

  // optional int32 exchange_item_count_gem = 61;
  inline bool has_exchange_item_count_gem() const;
  inline void clear_exchange_item_count_gem();
  static const int kExchangeItemCountGemFieldNumber = 61;
  inline ::google::protobuf::int32 exchange_item_count_gem() const;
  inline void set_exchange_item_count_gem(::google::protobuf::int32 value);

  // optional int32 lobby_style = 62;
  inline bool has_lobby_style() const;
  inline void clear_lobby_style();
  static const int kLobbyStyleFieldNumber = 62;
  inline ::google::protobuf::int32 lobby_style() const;
  inline void set_lobby_style(::google::protobuf::int32 value);

  // optional int32 advanced_rank_level = 63;
  inline bool has_advanced_rank_level() const;
  inline void clear_advanced_rank_level();
  static const int kAdvancedRankLevelFieldNumber = 63;
  inline ::google::protobuf::int32 advanced_rank_level() const;
  inline void set_advanced_rank_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.ConfigData)
 private:
  inline void set_has_skill_point_buy_price_gem();
  inline void clear_has_skill_point_buy_price_gem();
  inline void set_has_max_skill_point_buy_count();
  inline void clear_has_max_skill_point_buy_count();
  inline void set_has_skill_point_reset_price_gem();
  inline void clear_has_skill_point_reset_price_gem();
  inline void set_has_need_cash_for_extend_inventory();
  inline void clear_has_need_cash_for_extend_inventory();
  inline void set_has_increase_inventory_slot_per_buy_count();
  inline void clear_has_increase_inventory_slot_per_buy_count();
  inline void set_has_max_inventory_slot_count();
  inline void clear_has_max_inventory_slot_count();
  inline void set_has_max_friend_count();
  inline void clear_has_max_friend_count();
  inline void set_has_max_send_ask_friend();
  inline void clear_has_max_send_ask_friend();
  inline void set_has_max_receive_ask_friend();
  inline void clear_has_max_receive_ask_friend();
  inline void set_has_cooltime_for_send_social_point();
  inline void clear_has_cooltime_for_send_social_point();
  inline void set_has_max_delete_friend_count_for_day();
  inline void clear_has_max_delete_friend_count_for_day();
  inline void set_has_max_social_point_value();
  inline void clear_has_max_social_point_value();
  inline void set_has_add_social_point_for_send_to_friend();
  inline void clear_has_add_social_point_for_send_to_friend();
  inline void set_has_add_social_point_for_receive_from_friend();
  inline void clear_has_add_social_point_for_receive_from_friend();
  inline void set_has_stage_buff_rate_for_increase_exp();
  inline void clear_has_stage_buff_rate_for_increase_exp();
  inline void set_has_stage_buff_rate_for_increase_gold();
  inline void clear_has_stage_buff_rate_for_increase_gold();
  inline void set_has_stage_buff_rate_for_boost_game_speed();
  inline void clear_has_stage_buff_rate_for_boost_game_speed();
  inline void set_has_guild_set_up_gold_cost();
  inline void clear_has_guild_set_up_gold_cost();
  inline void set_has_default_max_guild_member_count();
  inline void clear_has_default_max_guild_member_count();
  inline void set_has_max_invite_guild_count_for_account();
  inline void clear_has_max_invite_guild_count_for_account();
  inline void set_has_invite_guild_expire_period_by_day();
  inline void clear_has_invite_guild_expire_period_by_day();
  inline void set_has_max_raid_count_per_day();
  inline void clear_has_max_raid_count_per_day();
  inline void set_has_update_guild_gold_cost();
  inline void clear_has_update_guild_gold_cost();
  inline void set_has_guild_master_logout_limit_period_day();
  inline void clear_has_guild_master_logout_limit_period_day();
  inline void set_has_guild_battle_time_limit_sec_client();
  inline void clear_has_guild_battle_time_limit_sec_client();
  inline void set_has_hero_tower_sweep_reward_count_per_floor();
  inline void clear_has_hero_tower_sweep_reward_count_per_floor();
  inline void set_has_assault_resurrection_max_count();
  inline void clear_has_assault_resurrection_max_count();
  inline void set_has_pvp_match_point_max();
  inline void clear_has_pvp_match_point_max();
  inline void set_has_pvp_match_point_charge_period_second();
  inline void clear_has_pvp_match_point_charge_period_second();
  inline void set_has_team_match_point_max();
  inline void clear_has_team_match_point_max();
  inline void set_has_team_match_point_charge_period_second();
  inline void clear_has_team_match_point_charge_period_second();
  inline void set_has_item_random_option_change_cost_dark_crystal();
  inline void clear_has_item_random_option_change_cost_dark_crystal();
  inline void set_has_item_preset_max_count();
  inline void clear_has_item_preset_max_count();
  inline void set_has_skill_quick_slot_max_count();
  inline void clear_has_skill_quick_slot_max_count();
  inline void set_has_assault_mvp_point_to_open_reward();
  inline void clear_has_assault_mvp_point_to_open_reward();
  inline void set_has_duel_reward_challenge_max_count();
  inline void clear_has_duel_reward_challenge_max_count();
  inline void set_has_guild_support_cool_time_hour();
  inline void clear_has_guild_support_cool_time_hour();
  inline void set_has_guild_support_max_count_for_day();
  inline void clear_has_guild_support_max_count_for_day();
  inline void set_has_rest_max_time_second();
  inline void clear_has_rest_max_time_second();
  inline void set_has_rest_time_second_per_one_point();
  inline void clear_has_rest_time_second_per_one_point();
  inline void set_has_guild_mercenary_donation_max_count_for_day();
  inline void clear_has_guild_mercenary_donation_max_count_for_day();
  inline void set_has_guild_rejoin_wait_time_min();
  inline void clear_has_guild_rejoin_wait_time_min();
  inline void set_has_character_level_max();
  inline void clear_has_character_level_max();
  inline void set_has_match_continuous_win_count_for_bonus();
  inline void clear_has_match_continuous_win_count_for_bonus();
  inline void set_has_hero_tower_free_ticket_count_max();
  inline void clear_has_hero_tower_free_ticket_count_max();
  inline void set_has_counter_dungeon_daily_enter_count_max();
  inline void clear_has_counter_dungeon_daily_enter_count_max();
  inline void set_has_max_chat_block_count();
  inline void clear_has_max_chat_block_count();
  inline void set_has_min_floor_for_hero_tower_ranking();
  inline void clear_has_min_floor_for_hero_tower_ranking();
  inline void set_has_raid_guild_bonus_count_member_2();
  inline void clear_has_raid_guild_bonus_count_member_2();
  inline void set_has_raid_guild_bonus_count_member_3();
  inline void clear_has_raid_guild_bonus_count_member_3();
  inline void set_has_raid_guild_bonus_count_member_4();
  inline void clear_has_raid_guild_bonus_count_member_4();
  inline void set_has_show_review_inducement_popup();
  inline void clear_has_show_review_inducement_popup();
  inline void set_has_max_open_stage_difficulty();
  inline void clear_has_max_open_stage_difficulty();
  inline void set_has_item_random_option_change_cost_cash();
  inline void clear_has_item_random_option_change_cost_cash();
  inline void set_has_event_dice_free_count();
  inline void clear_has_event_dice_free_count();
  inline void set_has_event_dice_point_per_one_dice();
  inline void clear_has_event_dice_point_per_one_dice();
  inline void set_has_max_costume_inventory_slot_count();
  inline void clear_has_max_costume_inventory_slot_count();
  inline void set_has_guild_master_change_period_day();
  inline void clear_has_guild_master_change_period_day();
  inline void set_has_exchange_item_count_gold();
  inline void clear_has_exchange_item_count_gold();
  inline void set_has_exchange_item_count_gem();
  inline void clear_has_exchange_item_count_gem();
  inline void set_has_lobby_style();
  inline void clear_has_lobby_style();
  inline void set_has_advanced_rank_level();
  inline void clear_has_advanced_rank_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[2];
  ::google::protobuf::int32 skill_point_buy_price_gem_;
  ::google::protobuf::int32 max_skill_point_buy_count_;
  ::google::protobuf::int32 skill_point_reset_price_gem_;
  ::google::protobuf::int32 need_cash_for_extend_inventory_;
  ::google::protobuf::int32 increase_inventory_slot_per_buy_count_;
  ::google::protobuf::int32 max_inventory_slot_count_;
  ::google::protobuf::int32 max_friend_count_;
  ::google::protobuf::int32 max_send_ask_friend_;
  ::google::protobuf::int32 max_receive_ask_friend_;
  ::google::protobuf::int32 cooltime_for_send_social_point_;
  ::google::protobuf::int32 max_delete_friend_count_for_day_;
  ::google::protobuf::int32 max_social_point_value_;
  ::google::protobuf::int32 add_social_point_for_send_to_friend_;
  ::google::protobuf::int32 add_social_point_for_receive_from_friend_;
  float stage_buff_rate_for_increase_exp_;
  float stage_buff_rate_for_increase_gold_;
  float stage_buff_rate_for_boost_game_speed_;
  ::google::protobuf::int32 guild_set_up_gold_cost_;
  ::google::protobuf::int32 default_max_guild_member_count_;
  ::google::protobuf::int32 max_invite_guild_count_for_account_;
  ::google::protobuf::int32 invite_guild_expire_period_by_day_;
  ::google::protobuf::int32 max_raid_count_per_day_;
  ::google::protobuf::int32 update_guild_gold_cost_;
  ::google::protobuf::int32 guild_master_logout_limit_period_day_;
  ::google::protobuf::int32 guild_battle_time_limit_sec_client_;
  ::google::protobuf::int32 hero_tower_sweep_reward_count_per_floor_;
  ::google::protobuf::int32 assault_resurrection_max_count_;
  ::google::protobuf::int32 pvp_match_point_max_;
  ::google::protobuf::int32 pvp_match_point_charge_period_second_;
  ::google::protobuf::int32 team_match_point_max_;
  ::google::protobuf::int32 team_match_point_charge_period_second_;
  ::google::protobuf::int32 item_random_option_change_cost_dark_crystal_;
  ::google::protobuf::int32 item_preset_max_count_;
  ::google::protobuf::int32 skill_quick_slot_max_count_;
  ::google::protobuf::int32 assault_mvp_point_to_open_reward_;
  ::google::protobuf::int32 duel_reward_challenge_max_count_;
  ::google::protobuf::int32 guild_support_cool_time_hour_;
  ::google::protobuf::int32 guild_support_max_count_for_day_;
  ::google::protobuf::int32 rest_max_time_second_;
  ::google::protobuf::int32 rest_time_second_per_one_point_;
  ::google::protobuf::int32 guild_mercenary_donation_max_count_for_day_;
  ::google::protobuf::int32 guild_rejoin_wait_time_min_;
  ::google::protobuf::int32 character_level_max_;
  ::google::protobuf::int32 match_continuous_win_count_for_bonus_;
  ::google::protobuf::int32 hero_tower_free_ticket_count_max_;
  ::google::protobuf::int32 counter_dungeon_daily_enter_count_max_;
  ::google::protobuf::int32 max_chat_block_count_;
  ::google::protobuf::int32 min_floor_for_hero_tower_ranking_;
  ::google::protobuf::int32 raid_guild_bonus_count_member_2_;
  ::google::protobuf::int32 raid_guild_bonus_count_member_3_;
  ::google::protobuf::int32 raid_guild_bonus_count_member_4_;
  ::google::protobuf::int32 show_review_inducement_popup_;
  ::google::protobuf::int32 max_open_stage_difficulty_;
  ::google::protobuf::int32 item_random_option_change_cost_cash_;
  ::google::protobuf::int32 event_dice_free_count_;
  ::google::protobuf::int32 event_dice_point_per_one_dice_;
  ::google::protobuf::int32 max_costume_inventory_slot_count_;
  ::google::protobuf::int32 guild_master_change_period_day_;
  ::google::protobuf::int32 exchange_item_count_gold_;
  ::google::protobuf::int32 exchange_item_count_gem_;
  ::google::protobuf::int32 lobby_style_;
  ::google::protobuf::int32 advanced_rank_level_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static ConfigData* default_instance_;
};
// -------------------------------------------------------------------

class Shop_PeriodicPackageState : public ::google::protobuf::Message {
 public:
  Shop_PeriodicPackageState();
  virtual ~Shop_PeriodicPackageState();

  Shop_PeriodicPackageState(const Shop_PeriodicPackageState& from);

  inline Shop_PeriodicPackageState& operator=(const Shop_PeriodicPackageState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Shop_PeriodicPackageState& default_instance();

  void Swap(Shop_PeriodicPackageState* other);

  // implements Message ----------------------------------------------

  Shop_PeriodicPackageState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Shop_PeriodicPackageState& from);
  void MergeFrom(const Shop_PeriodicPackageState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 package_id = 1;
  inline bool has_package_id() const;
  inline void clear_package_id();
  static const int kPackageIdFieldNumber = 1;
  inline ::google::protobuf::int32 package_id() const;
  inline void set_package_id(::google::protobuf::int32 value);

  // required int64 end_pay_time = 2;
  inline bool has_end_pay_time() const;
  inline void clear_end_pay_time();
  static const int kEndPayTimeFieldNumber = 2;
  inline ::google::protobuf::int64 end_pay_time() const;
  inline void set_end_pay_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.Shop.PeriodicPackageState)
 private:
  inline void set_has_package_id();
  inline void clear_has_package_id();
  inline void set_has_end_pay_time();
  inline void clear_has_end_pay_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 end_pay_time_;
  ::google::protobuf::int32 package_id_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static Shop_PeriodicPackageState* default_instance_;
};
// -------------------------------------------------------------------

class Shop_FlatRatePackageBonusState : public ::google::protobuf::Message {
 public:
  Shop_FlatRatePackageBonusState();
  virtual ~Shop_FlatRatePackageBonusState();

  Shop_FlatRatePackageBonusState(const Shop_FlatRatePackageBonusState& from);

  inline Shop_FlatRatePackageBonusState& operator=(const Shop_FlatRatePackageBonusState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Shop_FlatRatePackageBonusState& default_instance();

  void Swap(Shop_FlatRatePackageBonusState* other);

  // implements Message ----------------------------------------------

  Shop_FlatRatePackageBonusState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Shop_FlatRatePackageBonusState& from);
  void MergeFrom(const Shop_FlatRatePackageBonusState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 current_index = 1;
  inline bool has_current_index() const;
  inline void clear_current_index();
  static const int kCurrentIndexFieldNumber = 1;
  inline ::google::protobuf::int32 current_index() const;
  inline void set_current_index(::google::protobuf::int32 value);

  // required bool weekly_state = 2;
  inline bool has_weekly_state() const;
  inline void clear_weekly_state();
  static const int kWeeklyStateFieldNumber = 2;
  inline bool weekly_state() const;
  inline void set_weekly_state(bool value);

  // required bool monthly_state = 3;
  inline bool has_monthly_state() const;
  inline void clear_monthly_state();
  static const int kMonthlyStateFieldNumber = 3;
  inline bool monthly_state() const;
  inline void set_monthly_state(bool value);

  // required bool reward_state = 4;
  inline bool has_reward_state() const;
  inline void clear_reward_state();
  static const int kRewardStateFieldNumber = 4;
  inline bool reward_state() const;
  inline void set_reward_state(bool value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.Shop.FlatRatePackageBonusState)
 private:
  inline void set_has_current_index();
  inline void clear_has_current_index();
  inline void set_has_weekly_state();
  inline void clear_has_weekly_state();
  inline void set_has_monthly_state();
  inline void clear_has_monthly_state();
  inline void set_has_reward_state();
  inline void clear_has_reward_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 current_index_;
  bool weekly_state_;
  bool monthly_state_;
  bool reward_state_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static Shop_FlatRatePackageBonusState* default_instance_;
};
// -------------------------------------------------------------------

class Shop_LevelUpPackageMission : public ::google::protobuf::Message {
 public:
  Shop_LevelUpPackageMission();
  virtual ~Shop_LevelUpPackageMission();

  Shop_LevelUpPackageMission(const Shop_LevelUpPackageMission& from);

  inline Shop_LevelUpPackageMission& operator=(const Shop_LevelUpPackageMission& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Shop_LevelUpPackageMission& default_instance();

  void Swap(Shop_LevelUpPackageMission* other);

  // implements Message ----------------------------------------------

  Shop_LevelUpPackageMission* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Shop_LevelUpPackageMission& from);
  void MergeFrom(const Shop_LevelUpPackageMission& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 package_id = 1;
  inline bool has_package_id() const;
  inline void clear_package_id();
  static const int kPackageIdFieldNumber = 1;
  inline ::google::protobuf::int32 package_id() const;
  inline void set_package_id(::google::protobuf::int32 value);

  // required .b2.protocol.commondata.Character.TYPE character_type = 2;
  inline bool has_character_type() const;
  inline void clear_character_type();
  static const int kCharacterTypeFieldNumber = 2;
  inline ::b2::protocol::commondata::Character_TYPE character_type() const;
  inline void set_character_type(::b2::protocol::commondata::Character_TYPE value);

  // required int32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // required int32 state = 4;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 4;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.Shop.LevelUpPackageMission)
 private:
  inline void set_has_package_id();
  inline void clear_has_package_id();
  inline void set_has_character_type();
  inline void clear_has_character_type();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 package_id_;
  int character_type_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 state_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static Shop_LevelUpPackageMission* default_instance_;
};
// -------------------------------------------------------------------

class Shop_ReachLevelPackageMission : public ::google::protobuf::Message {
 public:
  Shop_ReachLevelPackageMission();
  virtual ~Shop_ReachLevelPackageMission();

  Shop_ReachLevelPackageMission(const Shop_ReachLevelPackageMission& from);

  inline Shop_ReachLevelPackageMission& operator=(const Shop_ReachLevelPackageMission& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Shop_ReachLevelPackageMission& default_instance();

  void Swap(Shop_ReachLevelPackageMission* other);

  // implements Message ----------------------------------------------

  Shop_ReachLevelPackageMission* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Shop_ReachLevelPackageMission& from);
  void MergeFrom(const Shop_ReachLevelPackageMission& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 package_id = 1;
  inline bool has_package_id() const;
  inline void clear_package_id();
  static const int kPackageIdFieldNumber = 1;
  inline ::google::protobuf::int32 package_id() const;
  inline void set_package_id(::google::protobuf::int32 value);

  // required .b2.protocol.commondata.Character.TYPE character_type = 2;
  inline bool has_character_type() const;
  inline void clear_character_type();
  static const int kCharacterTypeFieldNumber = 2;
  inline ::b2::protocol::commondata::Character_TYPE character_type() const;
  inline void set_character_type(::b2::protocol::commondata::Character_TYPE value);

  // required int32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // required int32 state = 4;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 4;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // required int64 expire_time = 5;
  inline bool has_expire_time() const;
  inline void clear_expire_time();
  static const int kExpireTimeFieldNumber = 5;
  inline ::google::protobuf::int64 expire_time() const;
  inline void set_expire_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.Shop.ReachLevelPackageMission)
 private:
  inline void set_has_package_id();
  inline void clear_has_package_id();
  inline void set_has_character_type();
  inline void clear_has_character_type();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_expire_time();
  inline void clear_has_expire_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 package_id_;
  int character_type_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int64 expire_time_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static Shop_ReachLevelPackageMission* default_instance_;
};
// -------------------------------------------------------------------

class Shop_BuyResultInfo : public ::google::protobuf::Message {
 public:
  Shop_BuyResultInfo();
  virtual ~Shop_BuyResultInfo();

  Shop_BuyResultInfo(const Shop_BuyResultInfo& from);

  inline Shop_BuyResultInfo& operator=(const Shop_BuyResultInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Shop_BuyResultInfo& default_instance();

  void Swap(Shop_BuyResultInfo* other);

  // implements Message ----------------------------------------------

  Shop_BuyResultInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Shop_BuyResultInfo& from);
  void MergeFrom(const Shop_BuyResultInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .b2.protocol.commondata.ShopProduct add_products = 1;
  inline int add_products_size() const;
  inline void clear_add_products();
  static const int kAddProductsFieldNumber = 1;
  inline const ::b2::protocol::commondata::ShopProduct& add_products(int index) const;
  inline ::b2::protocol::commondata::ShopProduct* mutable_add_products(int index);
  inline ::b2::protocol::commondata::ShopProduct* add_add_products();
  inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::ShopProduct >&
      add_products() const;
  inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::ShopProduct >*
      mutable_add_products();

  // repeated .b2.protocol.commondata.ShopBuyManage shop_buy_manages = 2;
  inline int shop_buy_manages_size() const;
  inline void clear_shop_buy_manages();
  static const int kShopBuyManagesFieldNumber = 2;
  inline const ::b2::protocol::commondata::ShopBuyManage& shop_buy_manages(int index) const;
  inline ::b2::protocol::commondata::ShopBuyManage* mutable_shop_buy_manages(int index);
  inline ::b2::protocol::commondata::ShopBuyManage* add_shop_buy_manages();
  inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::ShopBuyManage >&
      shop_buy_manages() const;
  inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::ShopBuyManage >*
      mutable_shop_buy_manages();

  // optional .b2.protocol.commondata.Shop.ProductType buy_product_type = 3;
  inline bool has_buy_product_type() const;
  inline void clear_buy_product_type();
  static const int kBuyProductTypeFieldNumber = 3;
  inline ::b2::protocol::commondata::Shop_ProductType buy_product_type() const;
  inline void set_buy_product_type(::b2::protocol::commondata::Shop_ProductType value);

  // optional .b2.protocol.commondata.Shop.PeriodicPackageState periodic_package_state = 4;
  inline bool has_periodic_package_state() const;
  inline void clear_periodic_package_state();
  static const int kPeriodicPackageStateFieldNumber = 4;
  inline const ::b2::protocol::commondata::Shop_PeriodicPackageState& periodic_package_state() const;
  inline ::b2::protocol::commondata::Shop_PeriodicPackageState* mutable_periodic_package_state();
  inline ::b2::protocol::commondata::Shop_PeriodicPackageState* release_periodic_package_state();
  inline void set_allocated_periodic_package_state(::b2::protocol::commondata::Shop_PeriodicPackageState* periodic_package_state);

  // optional .b2.protocol.commondata.Shop.FlatRatePackageBonusState flat_rate_package_bonus_state = 5;
  inline bool has_flat_rate_package_bonus_state() const;
  inline void clear_flat_rate_package_bonus_state();
  static const int kFlatRatePackageBonusStateFieldNumber = 5;
  inline const ::b2::protocol::commondata::Shop_FlatRatePackageBonusState& flat_rate_package_bonus_state() const;
  inline ::b2::protocol::commondata::Shop_FlatRatePackageBonusState* mutable_flat_rate_package_bonus_state();
  inline ::b2::protocol::commondata::Shop_FlatRatePackageBonusState* release_flat_rate_package_bonus_state();
  inline void set_allocated_flat_rate_package_bonus_state(::b2::protocol::commondata::Shop_FlatRatePackageBonusState* flat_rate_package_bonus_state);

  // repeated .b2.protocol.commondata.Shop.LevelUpPackageMission level_up_package_missions = 6;
  inline int level_up_package_missions_size() const;
  inline void clear_level_up_package_missions();
  static const int kLevelUpPackageMissionsFieldNumber = 6;
  inline const ::b2::protocol::commondata::Shop_LevelUpPackageMission& level_up_package_missions(int index) const;
  inline ::b2::protocol::commondata::Shop_LevelUpPackageMission* mutable_level_up_package_missions(int index);
  inline ::b2::protocol::commondata::Shop_LevelUpPackageMission* add_level_up_package_missions();
  inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Shop_LevelUpPackageMission >&
      level_up_package_missions() const;
  inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Shop_LevelUpPackageMission >*
      mutable_level_up_package_missions();

  // optional .b2.protocol.commondata.Shop.ReachLevelPackageMission reach_level_package_mission = 7;
  inline bool has_reach_level_package_mission() const;
  inline void clear_reach_level_package_mission();
  static const int kReachLevelPackageMissionFieldNumber = 7;
  inline const ::b2::protocol::commondata::Shop_ReachLevelPackageMission& reach_level_package_mission() const;
  inline ::b2::protocol::commondata::Shop_ReachLevelPackageMission* mutable_reach_level_package_mission();
  inline ::b2::protocol::commondata::Shop_ReachLevelPackageMission* release_reach_level_package_mission();
  inline void set_allocated_reach_level_package_mission(::b2::protocol::commondata::Shop_ReachLevelPackageMission* reach_level_package_mission);

  // optional .b2.protocol.commondata.Shop.MileageType mileage_type = 12;
  inline bool has_mileage_type() const;
  inline void clear_mileage_type();
  static const int kMileageTypeFieldNumber = 12;
  inline ::b2::protocol::commondata::Shop_MileageType mileage_type() const;
  inline void set_mileage_type(::b2::protocol::commondata::Shop_MileageType value);

  // optional int32 current_mileage = 13;
  inline bool has_current_mileage() const;
  inline void clear_current_mileage();
  static const int kCurrentMileageFieldNumber = 13;
  inline ::google::protobuf::int32 current_mileage() const;
  inline void set_current_mileage(::google::protobuf::int32 value);

  // repeated .b2.protocol.commondata.Costume costumes = 20;
  inline int costumes_size() const;
  inline void clear_costumes();
  static const int kCostumesFieldNumber = 20;
  inline const ::b2::protocol::commondata::Costume& costumes(int index) const;
  inline ::b2::protocol::commondata::Costume* mutable_costumes(int index);
  inline ::b2::protocol::commondata::Costume* add_costumes();
  inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Costume >&
      costumes() const;
  inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Costume >*
      mutable_costumes();

  // repeated .b2.protocol.commondata.Totem totems = 30;
  inline int totems_size() const;
  inline void clear_totems();
  static const int kTotemsFieldNumber = 30;
  inline const ::b2::protocol::commondata::Totem& totems(int index) const;
  inline ::b2::protocol::commondata::Totem* mutable_totems(int index);
  inline ::b2::protocol::commondata::Totem* add_totems();
  inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Totem >&
      totems() const;
  inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Totem >*
      mutable_totems();

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.Shop.BuyResultInfo)
 private:
  inline void set_has_buy_product_type();
  inline void clear_has_buy_product_type();
  inline void set_has_periodic_package_state();
  inline void clear_has_periodic_package_state();
  inline void set_has_flat_rate_package_bonus_state();
  inline void clear_has_flat_rate_package_bonus_state();
  inline void set_has_reach_level_package_mission();
  inline void clear_has_reach_level_package_mission();
  inline void set_has_mileage_type();
  inline void clear_has_mileage_type();
  inline void set_has_current_mileage();
  inline void clear_has_current_mileage();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::ShopProduct > add_products_;
  ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::ShopBuyManage > shop_buy_manages_;
  ::b2::protocol::commondata::Shop_PeriodicPackageState* periodic_package_state_;
  ::b2::protocol::commondata::Shop_FlatRatePackageBonusState* flat_rate_package_bonus_state_;
  int buy_product_type_;
  int mileage_type_;
  ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Shop_LevelUpPackageMission > level_up_package_missions_;
  ::b2::protocol::commondata::Shop_ReachLevelPackageMission* reach_level_package_mission_;
  ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Costume > costumes_;
  ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Totem > totems_;
  ::google::protobuf::int32 current_mileage_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static Shop_BuyResultInfo* default_instance_;
};
// -------------------------------------------------------------------

class Shop : public ::google::protobuf::Message {
 public:
  Shop();
  virtual ~Shop();

  Shop(const Shop& from);

  inline Shop& operator=(const Shop& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Shop& default_instance();

  void Swap(Shop* other);

  // implements Message ----------------------------------------------

  Shop* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Shop& from);
  void MergeFrom(const Shop& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Shop_PeriodicPackageState PeriodicPackageState;
  typedef Shop_FlatRatePackageBonusState FlatRatePackageBonusState;
  typedef Shop_LevelUpPackageMission LevelUpPackageMission;
  typedef Shop_ReachLevelPackageMission ReachLevelPackageMission;
  typedef Shop_BuyResultInfo BuyResultInfo;

  typedef Shop_DrawPriceType DrawPriceType;
  static const DrawPriceType DRAW_GEM = Shop_DrawPriceType_DRAW_GEM;
  static const DrawPriceType DRAW_SOCIAL_POINT = Shop_DrawPriceType_DRAW_SOCIAL_POINT;
  static const DrawPriceType SHOP_TEN_LOTTERY_TICKET = Shop_DrawPriceType_SHOP_TEN_LOTTERY_TICKET;
  static inline bool DrawPriceType_IsValid(int value) {
    return Shop_DrawPriceType_IsValid(value);
  }
  static const DrawPriceType DrawPriceType_MIN =
    Shop_DrawPriceType_DrawPriceType_MIN;
  static const DrawPriceType DrawPriceType_MAX =
    Shop_DrawPriceType_DrawPriceType_MAX;
  static const int DrawPriceType_ARRAYSIZE =
    Shop_DrawPriceType_DrawPriceType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  DrawPriceType_descriptor() {
    return Shop_DrawPriceType_descriptor();
  }
  static inline const ::std::string& DrawPriceType_Name(DrawPriceType value) {
    return Shop_DrawPriceType_Name(value);
  }
  static inline bool DrawPriceType_Parse(const ::std::string& name,
      DrawPriceType* value) {
    return Shop_DrawPriceType_Parse(name, value);
  }

  typedef Shop_MileageType MileageType;
  static const MileageType MILEAGE_LOTTERY = Shop_MileageType_MILEAGE_LOTTERY;
  static const MileageType MILEAGE_BLADE_POINT = Shop_MileageType_MILEAGE_BLADE_POINT;
  static const MileageType MILEAGE_GEM = Shop_MileageType_MILEAGE_GEM;
  static const MileageType MILEAGE_GOLD = Shop_MileageType_MILEAGE_GOLD;
  static const MileageType MILEAGE_DARK_CRYSTAL = Shop_MileageType_MILEAGE_DARK_CRYSTAL;
  static const MileageType MILEAGE_PACKAGE = Shop_MileageType_MILEAGE_PACKAGE;
  static inline bool MileageType_IsValid(int value) {
    return Shop_MileageType_IsValid(value);
  }
  static const MileageType MileageType_MIN =
    Shop_MileageType_MileageType_MIN;
  static const MileageType MileageType_MAX =
    Shop_MileageType_MileageType_MAX;
  static const int MileageType_ARRAYSIZE =
    Shop_MileageType_MileageType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MileageType_descriptor() {
    return Shop_MileageType_descriptor();
  }
  static inline const ::std::string& MileageType_Name(MileageType value) {
    return Shop_MileageType_Name(value);
  }
  static inline bool MileageType_Parse(const ::std::string& name,
      MileageType* value) {
    return Shop_MileageType_Parse(name, value);
  }

  typedef Shop_BuyPriceType BuyPriceType;
  static const BuyPriceType GEM = Shop_BuyPriceType_GEM;
  static const BuyPriceType SOCIAL_POINT = Shop_BuyPriceType_SOCIAL_POINT;
  static const BuyPriceType DARK_CRYSTAL = Shop_BuyPriceType_DARK_CRYSTAL;
  static const BuyPriceType CASH = Shop_BuyPriceType_CASH;
  static const BuyPriceType GOLD = Shop_BuyPriceType_GOLD;
  static const BuyPriceType FAME_POINT = Shop_BuyPriceType_FAME_POINT;
  static inline bool BuyPriceType_IsValid(int value) {
    return Shop_BuyPriceType_IsValid(value);
  }
  static const BuyPriceType BuyPriceType_MIN =
    Shop_BuyPriceType_BuyPriceType_MIN;
  static const BuyPriceType BuyPriceType_MAX =
    Shop_BuyPriceType_BuyPriceType_MAX;
  static const int BuyPriceType_ARRAYSIZE =
    Shop_BuyPriceType_BuyPriceType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  BuyPriceType_descriptor() {
    return Shop_BuyPriceType_descriptor();
  }
  static inline const ::std::string& BuyPriceType_Name(BuyPriceType value) {
    return Shop_BuyPriceType_Name(value);
  }
  static inline bool BuyPriceType_Parse(const ::std::string& name,
      BuyPriceType* value) {
    return Shop_BuyPriceType_Parse(name, value);
  }

  typedef Shop_ProductType ProductType;
  static const ProductType PRODUCT_NONE = Shop_ProductType_PRODUCT_NONE;
  static const ProductType PRODUCT_BLADE_POINT = Shop_ProductType_PRODUCT_BLADE_POINT;
  static const ProductType PRODUCT_GEM = Shop_ProductType_PRODUCT_GEM;
  static const ProductType PRODUCT_GOLD = Shop_ProductType_PRODUCT_GOLD;
  static const ProductType PRODUCT_ITEM = Shop_ProductType_PRODUCT_ITEM;
  static const ProductType PRODUCT_GENERAL_LOTTERY = Shop_ProductType_PRODUCT_GENERAL_LOTTERY;
  static const ProductType PRODUCT_SELECTIVE_LOTTERY = Shop_ProductType_PRODUCT_SELECTIVE_LOTTERY;
  static const ProductType PRODUCT_PACKAGE = Shop_ProductType_PRODUCT_PACKAGE;
  static const ProductType PRODUCT_DARK_CRYSTAL = Shop_ProductType_PRODUCT_DARK_CRYSTAL;
  static const ProductType PRODUCT_GOLD_BUFF_TICKET = Shop_ProductType_PRODUCT_GOLD_BUFF_TICKET;
  static const ProductType PRODUCT_EXP_BUFF_TICKET = Shop_ProductType_PRODUCT_EXP_BUFF_TICKET;
  static const ProductType PRODUCT_STAGE_BOOST_TICKET = Shop_ProductType_PRODUCT_STAGE_BOOST_TICKET;
  static const ProductType PRODUCT_SHOP_TEN_LOTTERY_TICKET = Shop_ProductType_PRODUCT_SHOP_TEN_LOTTERY_TICKET;
  static const ProductType PRODUCT_SELECTIVE_AETHER_LOTTERY = Shop_ProductType_PRODUCT_SELECTIVE_AETHER_LOTTERY;
  static const ProductType PRODUCT_PREFIX_SELECTIVE_LOTTERY = Shop_ProductType_PRODUCT_PREFIX_SELECTIVE_LOTTERY;
  static const ProductType PRODUCT_STAGE_AUTO_CLEAR_TICKET = Shop_ProductType_PRODUCT_STAGE_AUTO_CLEAR_TICKET;
  static const ProductType PRODUCT_COSTUME = Shop_ProductType_PRODUCT_COSTUME;
  static const ProductType PRODUCT_TOTEM = Shop_ProductType_PRODUCT_TOTEM;
  static const ProductType PRODUCT_TOTEM_PREFIX_LOTTERY = Shop_ProductType_PRODUCT_TOTEM_PREFIX_LOTTERY;
  static inline bool ProductType_IsValid(int value) {
    return Shop_ProductType_IsValid(value);
  }
  static const ProductType ProductType_MIN =
    Shop_ProductType_ProductType_MIN;
  static const ProductType ProductType_MAX =
    Shop_ProductType_ProductType_MAX;
  static const int ProductType_ARRAYSIZE =
    Shop_ProductType_ProductType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ProductType_descriptor() {
    return Shop_ProductType_descriptor();
  }
  static inline const ::std::string& ProductType_Name(ProductType value) {
    return Shop_ProductType_Name(value);
  }
  static inline bool ProductType_Parse(const ::std::string& name,
      ProductType* value) {
    return Shop_ProductType_Parse(name, value);
  }

  typedef Shop_MarkType MarkType;
  static const MarkType MARK_NONE = Shop_MarkType_MARK_NONE;
  static const MarkType MARK_NEW = Shop_MarkType_MARK_NEW;
  static const MarkType MARK_HOT = Shop_MarkType_MARK_HOT;
  static const MarkType MARK_HIT = Shop_MarkType_MARK_HIT;
  static const MarkType MARK_LIMITED = Shop_MarkType_MARK_LIMITED;
  static inline bool MarkType_IsValid(int value) {
    return Shop_MarkType_IsValid(value);
  }
  static const MarkType MarkType_MIN =
    Shop_MarkType_MarkType_MIN;
  static const MarkType MarkType_MAX =
    Shop_MarkType_MarkType_MAX;
  static const int MarkType_ARRAYSIZE =
    Shop_MarkType_MarkType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MarkType_descriptor() {
    return Shop_MarkType_descriptor();
  }
  static inline const ::std::string& MarkType_Name(MarkType value) {
    return Shop_MarkType_Name(value);
  }
  static inline bool MarkType_Parse(const ::std::string& name,
      MarkType* value) {
    return Shop_MarkType_Parse(name, value);
  }

  typedef Shop_ShopType ShopType;
  static const ShopType SHOP_PACKAGE = Shop_ShopType_SHOP_PACKAGE;
  static const ShopType SHOP_DARK_CRYSTAL = Shop_ShopType_SHOP_DARK_CRYSTAL;
  static const ShopType SHOP_GOODS = Shop_ShopType_SHOP_GOODS;
  static const ShopType SHOP_FAME_POINT = Shop_ShopType_SHOP_FAME_POINT;
  static inline bool ShopType_IsValid(int value) {
    return Shop_ShopType_IsValid(value);
  }
  static const ShopType ShopType_MIN =
    Shop_ShopType_ShopType_MIN;
  static const ShopType ShopType_MAX =
    Shop_ShopType_ShopType_MAX;
  static const int ShopType_ARRAYSIZE =
    Shop_ShopType_ShopType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ShopType_descriptor() {
    return Shop_ShopType_descriptor();
  }
  static inline const ::std::string& ShopType_Name(ShopType value) {
    return Shop_ShopType_Name(value);
  }
  static inline bool ShopType_Parse(const ::std::string& name,
      ShopType* value) {
    return Shop_ShopType_Parse(name, value);
  }

  typedef Shop_RestrictType RestrictType;
  static const RestrictType SHOP_NONE = Shop_RestrictType_SHOP_NONE;
  static const RestrictType SHOP_DAY = Shop_RestrictType_SHOP_DAY;
  static const RestrictType SHOP_WEEK = Shop_RestrictType_SHOP_WEEK;
  static const RestrictType SHOP_MONTH = Shop_RestrictType_SHOP_MONTH;
  static const RestrictType SHOP_NUMBER = Shop_RestrictType_SHOP_NUMBER;
  static inline bool RestrictType_IsValid(int value) {
    return Shop_RestrictType_IsValid(value);
  }
  static const RestrictType RestrictType_MIN =
    Shop_RestrictType_RestrictType_MIN;
  static const RestrictType RestrictType_MAX =
    Shop_RestrictType_RestrictType_MAX;
  static const int RestrictType_ARRAYSIZE =
    Shop_RestrictType_RestrictType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  RestrictType_descriptor() {
    return Shop_RestrictType_descriptor();
  }
  static inline const ::std::string& RestrictType_Name(RestrictType value) {
    return Shop_RestrictType_Name(value);
  }
  static inline bool RestrictType_Parse(const ::std::string& name,
      RestrictType* value) {
    return Shop_RestrictType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.Shop)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static Shop* default_instance_;
};
// -------------------------------------------------------------------

class MagicShop : public ::google::protobuf::Message {
 public:
  MagicShop();
  virtual ~MagicShop();

  MagicShop(const MagicShop& from);

  inline MagicShop& operator=(const MagicShop& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MagicShop& default_instance();

  void Swap(MagicShop* other);

  // implements Message ----------------------------------------------

  MagicShop* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MagicShop& from);
  void MergeFrom(const MagicShop& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required bool is_purchased = 4;
  inline bool has_is_purchased() const;
  inline void clear_is_purchased();
  static const int kIsPurchasedFieldNumber = 4;
  inline bool is_purchased() const;
  inline void set_is_purchased(bool value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.MagicShop)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_is_purchased();
  inline void clear_has_is_purchased();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  bool is_purchased_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static MagicShop* default_instance_;
};
// -------------------------------------------------------------------

class ShopLottery : public ::google::protobuf::Message {
 public:
  ShopLottery();
  virtual ~ShopLottery();

  ShopLottery(const ShopLottery& from);

  inline ShopLottery& operator=(const ShopLottery& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShopLottery& default_instance();

  void Swap(ShopLottery* other);

  // implements Message ----------------------------------------------

  ShopLottery* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShopLottery& from);
  void MergeFrom(const ShopLottery& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .b2.protocol.commondata.Shop.DrawPriceType draw_price_type = 1;
  inline bool has_draw_price_type() const;
  inline void clear_draw_price_type();
  static const int kDrawPriceTypeFieldNumber = 1;
  inline ::b2::protocol::commondata::Shop_DrawPriceType draw_price_type() const;
  inline void set_draw_price_type(::b2::protocol::commondata::Shop_DrawPriceType value);

  // required bool is_continuous = 2;
  inline bool has_is_continuous() const;
  inline void clear_is_continuous();
  static const int kIsContinuousFieldNumber = 2;
  inline bool is_continuous() const;
  inline void set_is_continuous(bool value);

  // required int64 next_free_time = 3;
  inline bool has_next_free_time() const;
  inline void clear_next_free_time();
  static const int kNextFreeTimeFieldNumber = 3;
  inline ::google::protobuf::int64 next_free_time() const;
  inline void set_next_free_time(::google::protobuf::int64 value);

  // required int32 lottery_count = 4;
  inline bool has_lottery_count() const;
  inline void clear_lottery_count();
  static const int kLotteryCountFieldNumber = 4;
  inline ::google::protobuf::int32 lottery_count() const;
  inline void set_lottery_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.ShopLottery)
 private:
  inline void set_has_draw_price_type();
  inline void clear_has_draw_price_type();
  inline void set_has_is_continuous();
  inline void clear_has_is_continuous();
  inline void set_has_next_free_time();
  inline void clear_has_next_free_time();
  inline void set_has_lottery_count();
  inline void clear_has_lottery_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int draw_price_type_;
  bool is_continuous_;
  ::google::protobuf::int64 next_free_time_;
  ::google::protobuf::int32 lottery_count_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static ShopLottery* default_instance_;
};
// -------------------------------------------------------------------

class ShopProduct : public ::google::protobuf::Message {
 public:
  ShopProduct();
  virtual ~ShopProduct();

  ShopProduct(const ShopProduct& from);

  inline ShopProduct& operator=(const ShopProduct& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShopProduct& default_instance();

  void Swap(ShopProduct* other);

  // implements Message ----------------------------------------------

  ShopProduct* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShopProduct& from);
  void MergeFrom(const ShopProduct& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .b2.protocol.commondata.Shop.ProductType product_type = 1;
  inline bool has_product_type() const;
  inline void clear_product_type();
  static const int kProductTypeFieldNumber = 1;
  inline ::b2::protocol::commondata::Shop_ProductType product_type() const;
  inline void set_product_type(::b2::protocol::commondata::Shop_ProductType value);

  // required int32 product_id = 2;
  inline bool has_product_id() const;
  inline void clear_product_id();
  static const int kProductIdFieldNumber = 2;
  inline ::google::protobuf::int32 product_id() const;
  inline void set_product_id(::google::protobuf::int32 value);

  // required int32 product_count = 3;
  inline bool has_product_count() const;
  inline void clear_product_count();
  static const int kProductCountFieldNumber = 3;
  inline ::google::protobuf::int32 product_count() const;
  inline void set_product_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.ShopProduct)
 private:
  inline void set_has_product_type();
  inline void clear_has_product_type();
  inline void set_has_product_id();
  inline void clear_has_product_id();
  inline void set_has_product_count();
  inline void clear_has_product_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int product_type_;
  ::google::protobuf::int32 product_id_;
  ::google::protobuf::int32 product_count_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static ShopProduct* default_instance_;
};
// -------------------------------------------------------------------

class ShopMileage : public ::google::protobuf::Message {
 public:
  ShopMileage();
  virtual ~ShopMileage();

  ShopMileage(const ShopMileage& from);

  inline ShopMileage& operator=(const ShopMileage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShopMileage& default_instance();

  void Swap(ShopMileage* other);

  // implements Message ----------------------------------------------

  ShopMileage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShopMileage& from);
  void MergeFrom(const ShopMileage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .b2.protocol.commondata.Shop.MileageType shop_mileage_type = 1;
  inline bool has_shop_mileage_type() const;
  inline void clear_shop_mileage_type();
  static const int kShopMileageTypeFieldNumber = 1;
  inline ::b2::protocol::commondata::Shop_MileageType shop_mileage_type() const;
  inline void set_shop_mileage_type(::b2::protocol::commondata::Shop_MileageType value);

  // required int32 mileage = 2;
  inline bool has_mileage() const;
  inline void clear_mileage();
  static const int kMileageFieldNumber = 2;
  inline ::google::protobuf::int32 mileage() const;
  inline void set_mileage(::google::protobuf::int32 value);

  // required int32 reward_index = 3;
  inline bool has_reward_index() const;
  inline void clear_reward_index();
  static const int kRewardIndexFieldNumber = 3;
  inline ::google::protobuf::int32 reward_index() const;
  inline void set_reward_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.ShopMileage)
 private:
  inline void set_has_shop_mileage_type();
  inline void clear_has_shop_mileage_type();
  inline void set_has_mileage();
  inline void clear_has_mileage();
  inline void set_has_reward_index();
  inline void clear_has_reward_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int shop_mileage_type_;
  ::google::protobuf::int32 mileage_;
  ::google::protobuf::int32 reward_index_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static ShopMileage* default_instance_;
};
// -------------------------------------------------------------------

class ShopBuyManage : public ::google::protobuf::Message {
 public:
  ShopBuyManage();
  virtual ~ShopBuyManage();

  ShopBuyManage(const ShopBuyManage& from);

  inline ShopBuyManage& operator=(const ShopBuyManage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShopBuyManage& default_instance();

  void Swap(ShopBuyManage* other);

  // implements Message ----------------------------------------------

  ShopBuyManage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShopBuyManage& from);
  void MergeFrom(const ShopBuyManage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 product_id = 1;
  inline bool has_product_id() const;
  inline void clear_product_id();
  static const int kProductIdFieldNumber = 1;
  inline ::google::protobuf::int32 product_id() const;
  inline void set_product_id(::google::protobuf::int32 value);

  // required int32 buy_count = 2;
  inline bool has_buy_count() const;
  inline void clear_buy_count();
  static const int kBuyCountFieldNumber = 2;
  inline ::google::protobuf::int32 buy_count() const;
  inline void set_buy_count(::google::protobuf::int32 value);

  // required int64 updated_time = 3;
  inline bool has_updated_time() const;
  inline void clear_updated_time();
  static const int kUpdatedTimeFieldNumber = 3;
  inline ::google::protobuf::int64 updated_time() const;
  inline void set_updated_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.ShopBuyManage)
 private:
  inline void set_has_product_id();
  inline void clear_has_product_id();
  inline void set_has_buy_count();
  inline void clear_has_buy_count();
  inline void set_has_updated_time();
  inline void clear_has_updated_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 product_id_;
  ::google::protobuf::int32 buy_count_;
  ::google::protobuf::int64 updated_time_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static ShopBuyManage* default_instance_;
};
// -------------------------------------------------------------------

class ShopProductMark : public ::google::protobuf::Message {
 public:
  ShopProductMark();
  virtual ~ShopProductMark();

  ShopProductMark(const ShopProductMark& from);

  inline ShopProductMark& operator=(const ShopProductMark& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShopProductMark& default_instance();

  void Swap(ShopProductMark* other);

  // implements Message ----------------------------------------------

  ShopProductMark* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShopProductMark& from);
  void MergeFrom(const ShopProductMark& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 product_id = 1;
  inline bool has_product_id() const;
  inline void clear_product_id();
  static const int kProductIdFieldNumber = 1;
  inline ::google::protobuf::int32 product_id() const;
  inline void set_product_id(::google::protobuf::int32 value);

  // required .b2.protocol.commondata.Shop.MarkType mark_type = 2;
  inline bool has_mark_type() const;
  inline void clear_mark_type();
  static const int kMarkTypeFieldNumber = 2;
  inline ::b2::protocol::commondata::Shop_MarkType mark_type() const;
  inline void set_mark_type(::b2::protocol::commondata::Shop_MarkType value);

  // optional int64 sales_start_time = 10;
  inline bool has_sales_start_time() const;
  inline void clear_sales_start_time();
  static const int kSalesStartTimeFieldNumber = 10;
  inline ::google::protobuf::int64 sales_start_time() const;
  inline void set_sales_start_time(::google::protobuf::int64 value);

  // optional int64 sales_end_time = 11;
  inline bool has_sales_end_time() const;
  inline void clear_sales_end_time();
  static const int kSalesEndTimeFieldNumber = 11;
  inline ::google::protobuf::int64 sales_end_time() const;
  inline void set_sales_end_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.ShopProductMark)
 private:
  inline void set_has_product_id();
  inline void clear_has_product_id();
  inline void set_has_mark_type();
  inline void clear_has_mark_type();
  inline void set_has_sales_start_time();
  inline void clear_has_sales_start_time();
  inline void set_has_sales_end_time();
  inline void clear_has_sales_end_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 product_id_;
  int mark_type_;
  ::google::protobuf::int64 sales_start_time_;
  ::google::protobuf::int64 sales_end_time_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static ShopProductMark* default_instance_;
};
// -------------------------------------------------------------------

class MarketPurchaseInfo : public ::google::protobuf::Message {
 public:
  MarketPurchaseInfo();
  virtual ~MarketPurchaseInfo();

  MarketPurchaseInfo(const MarketPurchaseInfo& from);

  inline MarketPurchaseInfo& operator=(const MarketPurchaseInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MarketPurchaseInfo& default_instance();

  void Swap(MarketPurchaseInfo* other);

  // implements Message ----------------------------------------------

  MarketPurchaseInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MarketPurchaseInfo& from);
  void MergeFrom(const MarketPurchaseInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef MarketPurchaseInfo_STATE STATE;
  static const STATE REGISTERED = MarketPurchaseInfo_STATE_REGISTERED;
  static const STATE VERIFIED = MarketPurchaseInfo_STATE_VERIFIED;
  static const STATE COMPLETED = MarketPurchaseInfo_STATE_COMPLETED;
  static inline bool STATE_IsValid(int value) {
    return MarketPurchaseInfo_STATE_IsValid(value);
  }
  static const STATE STATE_MIN =
    MarketPurchaseInfo_STATE_STATE_MIN;
  static const STATE STATE_MAX =
    MarketPurchaseInfo_STATE_STATE_MAX;
  static const int STATE_ARRAYSIZE =
    MarketPurchaseInfo_STATE_STATE_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  STATE_descriptor() {
    return MarketPurchaseInfo_STATE_descriptor();
  }
  static inline const ::std::string& STATE_Name(STATE value) {
    return MarketPurchaseInfo_STATE_Name(value);
  }
  static inline bool STATE_Parse(const ::std::string& name,
      STATE* value) {
    return MarketPurchaseInfo_STATE_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int32 product_id = 1;
  inline bool has_product_id() const;
  inline void clear_product_id();
  static const int kProductIdFieldNumber = 1;
  inline ::google::protobuf::int32 product_id() const;
  inline void set_product_id(::google::protobuf::int32 value);

  // required string market_product_id = 2;
  inline bool has_market_product_id() const;
  inline void clear_market_product_id();
  static const int kMarketProductIdFieldNumber = 2;
  inline const ::std::string& market_product_id() const;
  inline void set_market_product_id(const ::std::string& value);
  inline void set_market_product_id(const char* value);
  inline void set_market_product_id(const char* value, size_t size);
  inline ::std::string* mutable_market_product_id();
  inline ::std::string* release_market_product_id();
  inline void set_allocated_market_product_id(::std::string* market_product_id);

  // required string developer_payload = 3;
  inline bool has_developer_payload() const;
  inline void clear_developer_payload();
  static const int kDeveloperPayloadFieldNumber = 3;
  inline const ::std::string& developer_payload() const;
  inline void set_developer_payload(const ::std::string& value);
  inline void set_developer_payload(const char* value);
  inline void set_developer_payload(const char* value, size_t size);
  inline ::std::string* mutable_developer_payload();
  inline ::std::string* release_developer_payload();
  inline void set_allocated_developer_payload(::std::string* developer_payload);

  // required .b2.protocol.commondata.MarketPurchaseInfo.STATE purchase_state = 4;
  inline bool has_purchase_state() const;
  inline void clear_purchase_state();
  static const int kPurchaseStateFieldNumber = 4;
  inline ::b2::protocol::commondata::MarketPurchaseInfo_STATE purchase_state() const;
  inline void set_purchase_state(::b2::protocol::commondata::MarketPurchaseInfo_STATE value);

  // required int32 bonus_increase_rate = 5;
  inline bool has_bonus_increase_rate() const;
  inline void clear_bonus_increase_rate();
  static const int kBonusIncreaseRateFieldNumber = 5;
  inline ::google::protobuf::int32 bonus_increase_rate() const;
  inline void set_bonus_increase_rate(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.MarketPurchaseInfo)
 private:
  inline void set_has_product_id();
  inline void clear_has_product_id();
  inline void set_has_market_product_id();
  inline void clear_has_market_product_id();
  inline void set_has_developer_payload();
  inline void clear_has_developer_payload();
  inline void set_has_purchase_state();
  inline void clear_has_purchase_state();
  inline void set_has_bonus_increase_rate();
  inline void clear_has_bonus_increase_rate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* market_product_id_;
  ::google::protobuf::int32 product_id_;
  int purchase_state_;
  ::std::string* developer_payload_;
  ::google::protobuf::int32 bonus_increase_rate_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static MarketPurchaseInfo* default_instance_;
};
// -------------------------------------------------------------------

class CollectionItem : public ::google::protobuf::Message {
 public:
  CollectionItem();
  virtual ~CollectionItem();

  CollectionItem(const CollectionItem& from);

  inline CollectionItem& operator=(const CollectionItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CollectionItem& default_instance();

  void Swap(CollectionItem* other);

  // implements Message ----------------------------------------------

  CollectionItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CollectionItem& from);
  void MergeFrom(const CollectionItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 item_template_id = 1;
  inline bool has_item_template_id() const;
  inline void clear_item_template_id();
  static const int kItemTemplateIdFieldNumber = 1;
  inline ::google::protobuf::int32 item_template_id() const;
  inline void set_item_template_id(::google::protobuf::int32 value);

  // required .b2.protocol.commondata.CollectionItemState collect_state = 2;
  inline bool has_collect_state() const;
  inline void clear_collect_state();
  static const int kCollectStateFieldNumber = 2;
  inline ::b2::protocol::commondata::CollectionItemState collect_state() const;
  inline void set_collect_state(::b2::protocol::commondata::CollectionItemState value);

  // required bool is_new_item = 3;
  inline bool has_is_new_item() const;
  inline void clear_is_new_item();
  static const int kIsNewItemFieldNumber = 3;
  inline bool is_new_item() const;
  inline void set_is_new_item(bool value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.CollectionItem)
 private:
  inline void set_has_item_template_id();
  inline void clear_has_item_template_id();
  inline void set_has_collect_state();
  inline void clear_has_collect_state();
  inline void set_has_is_new_item();
  inline void clear_has_is_new_item();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 item_template_id_;
  int collect_state_;
  bool is_new_item_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static CollectionItem* default_instance_;
};
// -------------------------------------------------------------------

class CollectionSetItem : public ::google::protobuf::Message {
 public:
  CollectionSetItem();
  virtual ~CollectionSetItem();

  CollectionSetItem(const CollectionSetItem& from);

  inline CollectionSetItem& operator=(const CollectionSetItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CollectionSetItem& default_instance();

  void Swap(CollectionSetItem* other);

  // implements Message ----------------------------------------------

  CollectionSetItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CollectionSetItem& from);
  void MergeFrom(const CollectionSetItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .b2.protocol.commondata.GroupPrefix group_id = 1;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 1;
  inline ::b2::protocol::commondata::GroupPrefix group_id() const;
  inline void set_group_id(::b2::protocol::commondata::GroupPrefix value);

  // required int32 grade = 2;
  inline bool has_grade() const;
  inline void clear_grade();
  static const int kGradeFieldNumber = 2;
  inline ::google::protobuf::int32 grade() const;
  inline void set_grade(::google::protobuf::int32 value);

  // required .b2.protocol.commondata.Character.TYPE character_type = 3;
  inline bool has_character_type() const;
  inline void clear_character_type();
  static const int kCharacterTypeFieldNumber = 3;
  inline ::b2::protocol::commondata::Character_TYPE character_type() const;
  inline void set_character_type(::b2::protocol::commondata::Character_TYPE value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.CollectionSetItem)
 private:
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_grade();
  inline void clear_has_grade();
  inline void set_has_character_type();
  inline void clear_has_character_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int group_id_;
  ::google::protobuf::int32 grade_;
  int character_type_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static CollectionSetItem* default_instance_;
};
// -------------------------------------------------------------------

class RaidRankingReward : public ::google::protobuf::Message {
 public:
  RaidRankingReward();
  virtual ~RaidRankingReward();

  RaidRankingReward(const RaidRankingReward& from);

  inline RaidRankingReward& operator=(const RaidRankingReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RaidRankingReward& default_instance();

  void Swap(RaidRankingReward* other);

  // implements Message ----------------------------------------------

  RaidRankingReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RaidRankingReward& from);
  void MergeFrom(const RaidRankingReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ranking = 1;
  inline bool has_ranking() const;
  inline void clear_ranking();
  static const int kRankingFieldNumber = 1;
  inline ::google::protobuf::int32 ranking() const;
  inline void set_ranking(::google::protobuf::int32 value);

  // required int32 item_template_id = 2;
  inline bool has_item_template_id() const;
  inline void clear_item_template_id();
  static const int kItemTemplateIdFieldNumber = 2;
  inline ::google::protobuf::int32 item_template_id() const;
  inline void set_item_template_id(::google::protobuf::int32 value);

  // required int32 item_count = 3;
  inline bool has_item_count() const;
  inline void clear_item_count();
  static const int kItemCountFieldNumber = 3;
  inline ::google::protobuf::int32 item_count() const;
  inline void set_item_count(::google::protobuf::int32 value);

  // required bool is_bonus = 4;
  inline bool has_is_bonus() const;
  inline void clear_is_bonus();
  static const int kIsBonusFieldNumber = 4;
  inline bool is_bonus() const;
  inline void set_is_bonus(bool value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.RaidRankingReward)
 private:
  inline void set_has_ranking();
  inline void clear_has_ranking();
  inline void set_has_item_template_id();
  inline void clear_has_item_template_id();
  inline void set_has_item_count();
  inline void clear_has_item_count();
  inline void set_has_is_bonus();
  inline void clear_has_is_bonus();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 ranking_;
  ::google::protobuf::int32 item_template_id_;
  ::google::protobuf::int32 item_count_;
  bool is_bonus_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static RaidRankingReward* default_instance_;
};
// -------------------------------------------------------------------

class EventAttendanceStatus : public ::google::protobuf::Message {
 public:
  EventAttendanceStatus();
  virtual ~EventAttendanceStatus();

  EventAttendanceStatus(const EventAttendanceStatus& from);

  inline EventAttendanceStatus& operator=(const EventAttendanceStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EventAttendanceStatus& default_instance();

  void Swap(EventAttendanceStatus* other);

  // implements Message ----------------------------------------------

  EventAttendanceStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EventAttendanceStatus& from);
  void MergeFrom(const EventAttendanceStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 event_id = 1;
  inline bool has_event_id() const;
  inline void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  inline ::google::protobuf::int32 event_id() const;
  inline void set_event_id(::google::protobuf::int32 value);

  // required int32 attendance_day = 2;
  inline bool has_attendance_day() const;
  inline void clear_attendance_day();
  static const int kAttendanceDayFieldNumber = 2;
  inline ::google::protobuf::int32 attendance_day() const;
  inline void set_attendance_day(::google::protobuf::int32 value);

  // required int64 last_attendance_time = 3;
  inline bool has_last_attendance_time() const;
  inline void clear_last_attendance_time();
  static const int kLastAttendanceTimeFieldNumber = 3;
  inline ::google::protobuf::int64 last_attendance_time() const;
  inline void set_last_attendance_time(::google::protobuf::int64 value);

  // required int64 next_attendance_time = 4;
  inline bool has_next_attendance_time() const;
  inline void clear_next_attendance_time();
  static const int kNextAttendanceTimeFieldNumber = 4;
  inline ::google::protobuf::int64 next_attendance_time() const;
  inline void set_next_attendance_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.EventAttendanceStatus)
 private:
  inline void set_has_event_id();
  inline void clear_has_event_id();
  inline void set_has_attendance_day();
  inline void clear_has_attendance_day();
  inline void set_has_last_attendance_time();
  inline void clear_has_last_attendance_time();
  inline void set_has_next_attendance_time();
  inline void clear_has_next_attendance_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 event_id_;
  ::google::protobuf::int32 attendance_day_;
  ::google::protobuf::int64 last_attendance_time_;
  ::google::protobuf::int64 next_attendance_time_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static EventAttendanceStatus* default_instance_;
};
// -------------------------------------------------------------------

class BeginnerAttendanceStatus : public ::google::protobuf::Message {
 public:
  BeginnerAttendanceStatus();
  virtual ~BeginnerAttendanceStatus();

  BeginnerAttendanceStatus(const BeginnerAttendanceStatus& from);

  inline BeginnerAttendanceStatus& operator=(const BeginnerAttendanceStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BeginnerAttendanceStatus& default_instance();

  void Swap(BeginnerAttendanceStatus* other);

  // implements Message ----------------------------------------------

  BeginnerAttendanceStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BeginnerAttendanceStatus& from);
  void MergeFrom(const BeginnerAttendanceStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 attendance_day = 1;
  inline bool has_attendance_day() const;
  inline void clear_attendance_day();
  static const int kAttendanceDayFieldNumber = 1;
  inline ::google::protobuf::int32 attendance_day() const;
  inline void set_attendance_day(::google::protobuf::int32 value);

  // required int64 last_attendance_time = 2;
  inline bool has_last_attendance_time() const;
  inline void clear_last_attendance_time();
  static const int kLastAttendanceTimeFieldNumber = 2;
  inline ::google::protobuf::int64 last_attendance_time() const;
  inline void set_last_attendance_time(::google::protobuf::int64 value);

  // required int64 next_attendance_time = 3;
  inline bool has_next_attendance_time() const;
  inline void clear_next_attendance_time();
  static const int kNextAttendanceTimeFieldNumber = 3;
  inline ::google::protobuf::int64 next_attendance_time() const;
  inline void set_next_attendance_time(::google::protobuf::int64 value);

  // required int32 total_attendance_days = 5;
  inline bool has_total_attendance_days() const;
  inline void clear_total_attendance_days();
  static const int kTotalAttendanceDaysFieldNumber = 5;
  inline ::google::protobuf::int32 total_attendance_days() const;
  inline void set_total_attendance_days(::google::protobuf::int32 value);

  // required int64 finish_time = 6;
  inline bool has_finish_time() const;
  inline void clear_finish_time();
  static const int kFinishTimeFieldNumber = 6;
  inline ::google::protobuf::int64 finish_time() const;
  inline void set_finish_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.BeginnerAttendanceStatus)
 private:
  inline void set_has_attendance_day();
  inline void clear_has_attendance_day();
  inline void set_has_last_attendance_time();
  inline void clear_has_last_attendance_time();
  inline void set_has_next_attendance_time();
  inline void clear_has_next_attendance_time();
  inline void set_has_total_attendance_days();
  inline void clear_has_total_attendance_days();
  inline void set_has_finish_time();
  inline void clear_has_finish_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 last_attendance_time_;
  ::google::protobuf::int32 attendance_day_;
  ::google::protobuf::int32 total_attendance_days_;
  ::google::protobuf::int64 next_attendance_time_;
  ::google::protobuf::int64 finish_time_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static BeginnerAttendanceStatus* default_instance_;
};
// -------------------------------------------------------------------

class DuelRewardBoxStatus : public ::google::protobuf::Message {
 public:
  DuelRewardBoxStatus();
  virtual ~DuelRewardBoxStatus();

  DuelRewardBoxStatus(const DuelRewardBoxStatus& from);

  inline DuelRewardBoxStatus& operator=(const DuelRewardBoxStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DuelRewardBoxStatus& default_instance();

  void Swap(DuelRewardBoxStatus* other);

  // implements Message ----------------------------------------------

  DuelRewardBoxStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DuelRewardBoxStatus& from);
  void MergeFrom(const DuelRewardBoxStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool is_reward_state = 1;
  inline bool has_is_reward_state() const;
  inline void clear_is_reward_state();
  static const int kIsRewardStateFieldNumber = 1;
  inline bool is_reward_state() const;
  inline void set_is_reward_state(bool value);

  // required .b2.protocol.commondata.RewardBoxGrade box_grade = 2;
  inline bool has_box_grade() const;
  inline void clear_box_grade();
  static const int kBoxGradeFieldNumber = 2;
  inline ::b2::protocol::commondata::RewardBoxGrade box_grade() const;
  inline void set_box_grade(::b2::protocol::commondata::RewardBoxGrade value);

  // required int32 win_count = 3;
  inline bool has_win_count() const;
  inline void clear_win_count();
  static const int kWinCountFieldNumber = 3;
  inline ::google::protobuf::int32 win_count() const;
  inline void set_win_count(::google::protobuf::int32 value);

  // required int32 upgrade_win_count = 4;
  inline bool has_upgrade_win_count() const;
  inline void clear_upgrade_win_count();
  static const int kUpgradeWinCountFieldNumber = 4;
  inline ::google::protobuf::int32 upgrade_win_count() const;
  inline void set_upgrade_win_count(::google::protobuf::int32 value);

  // required int32 defeat_count = 5;
  inline bool has_defeat_count() const;
  inline void clear_defeat_count();
  static const int kDefeatCountFieldNumber = 5;
  inline ::google::protobuf::int32 defeat_count() const;
  inline void set_defeat_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.DuelRewardBoxStatus)
 private:
  inline void set_has_is_reward_state();
  inline void clear_has_is_reward_state();
  inline void set_has_box_grade();
  inline void clear_has_box_grade();
  inline void set_has_win_count();
  inline void clear_has_win_count();
  inline void set_has_upgrade_win_count();
  inline void clear_has_upgrade_win_count();
  inline void set_has_defeat_count();
  inline void clear_has_defeat_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool is_reward_state_;
  int box_grade_;
  ::google::protobuf::int32 win_count_;
  ::google::protobuf::int32 upgrade_win_count_;
  ::google::protobuf::int32 defeat_count_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static DuelRewardBoxStatus* default_instance_;
};
// -------------------------------------------------------------------

class MatchResult : public ::google::protobuf::Message {
 public:
  MatchResult();
  virtual ~MatchResult();

  MatchResult(const MatchResult& from);

  inline MatchResult& operator=(const MatchResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MatchResult& default_instance();

  void Swap(MatchResult* other);

  // implements Message ----------------------------------------------

  MatchResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MatchResult& from);
  void MergeFrom(const MatchResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef MatchResult_TYPE TYPE;
  static const TYPE WIN = MatchResult_TYPE_WIN;
  static const TYPE LOSE = MatchResult_TYPE_LOSE;
  static const TYPE DRAW = MatchResult_TYPE_DRAW;
  static inline bool TYPE_IsValid(int value) {
    return MatchResult_TYPE_IsValid(value);
  }
  static const TYPE TYPE_MIN =
    MatchResult_TYPE_TYPE_MIN;
  static const TYPE TYPE_MAX =
    MatchResult_TYPE_TYPE_MAX;
  static const int TYPE_ARRAYSIZE =
    MatchResult_TYPE_TYPE_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  TYPE_descriptor() {
    return MatchResult_TYPE_descriptor();
  }
  static inline const ::std::string& TYPE_Name(TYPE value) {
    return MatchResult_TYPE_Name(value);
  }
  static inline bool TYPE_Parse(const ::std::string& name,
      TYPE* value) {
    return MatchResult_TYPE_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int64 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::int64 account_id() const;
  inline void set_account_id(::google::protobuf::int64 value);

  // required string match_token = 2;
  inline bool has_match_token() const;
  inline void clear_match_token();
  static const int kMatchTokenFieldNumber = 2;
  inline const ::std::string& match_token() const;
  inline void set_match_token(const ::std::string& value);
  inline void set_match_token(const char* value);
  inline void set_match_token(const char* value, size_t size);
  inline ::std::string* mutable_match_token();
  inline ::std::string* release_match_token();
  inline void set_allocated_match_token(::std::string* match_token);

  // required .b2.protocol.commondata.MatchResult.TYPE result = 3;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 3;
  inline ::b2::protocol::commondata::MatchResult_TYPE result() const;
  inline void set_result(::b2::protocol::commondata::MatchResult_TYPE value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.MatchResult)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_match_token();
  inline void clear_has_match_token();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 account_id_;
  ::std::string* match_token_;
  int result_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static MatchResult* default_instance_;
};
// -------------------------------------------------------------------

class UnitySkillMission : public ::google::protobuf::Message {
 public:
  UnitySkillMission();
  virtual ~UnitySkillMission();

  UnitySkillMission(const UnitySkillMission& from);

  inline UnitySkillMission& operator=(const UnitySkillMission& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnitySkillMission& default_instance();

  void Swap(UnitySkillMission* other);

  // implements Message ----------------------------------------------

  UnitySkillMission* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnitySkillMission& from);
  void MergeFrom(const UnitySkillMission& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .b2.protocol.commondata.Character.TYPE main_character_type = 1;
  inline bool has_main_character_type() const;
  inline void clear_main_character_type();
  static const int kMainCharacterTypeFieldNumber = 1;
  inline ::b2::protocol::commondata::Character_TYPE main_character_type() const;
  inline void set_main_character_type(::b2::protocol::commondata::Character_TYPE value);

  // required .b2.protocol.commondata.Character.TYPE unity_character_type = 2;
  inline bool has_unity_character_type() const;
  inline void clear_unity_character_type();
  static const int kUnityCharacterTypeFieldNumber = 2;
  inline ::b2::protocol::commondata::Character_TYPE unity_character_type() const;
  inline void set_unity_character_type(::b2::protocol::commondata::Character_TYPE value);

  // required int32 step = 3;
  inline bool has_step() const;
  inline void clear_step();
  static const int kStepFieldNumber = 3;
  inline ::google::protobuf::int32 step() const;
  inline void set_step(::google::protobuf::int32 value);

  // required .b2.protocol.commondata.MissionInfo.MissionStateType state = 4;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 4;
  inline ::b2::protocol::commondata::MissionInfo_MissionStateType state() const;
  inline void set_state(::b2::protocol::commondata::MissionInfo_MissionStateType value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.UnitySkillMission)
 private:
  inline void set_has_main_character_type();
  inline void clear_has_main_character_type();
  inline void set_has_unity_character_type();
  inline void clear_has_unity_character_type();
  inline void set_has_step();
  inline void clear_has_step();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int main_character_type_;
  int unity_character_type_;
  ::google::protobuf::int32 step_;
  int state_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static UnitySkillMission* default_instance_;
};
// -------------------------------------------------------------------

class UnitySkill : public ::google::protobuf::Message {
 public:
  UnitySkill();
  virtual ~UnitySkill();

  UnitySkill(const UnitySkill& from);

  inline UnitySkill& operator=(const UnitySkill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnitySkill& default_instance();

  void Swap(UnitySkill* other);

  // implements Message ----------------------------------------------

  UnitySkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnitySkill& from);
  void MergeFrom(const UnitySkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .b2.protocol.commondata.Character.TYPE main_character_type = 1;
  inline bool has_main_character_type() const;
  inline void clear_main_character_type();
  static const int kMainCharacterTypeFieldNumber = 1;
  inline ::b2::protocol::commondata::Character_TYPE main_character_type() const;
  inline void set_main_character_type(::b2::protocol::commondata::Character_TYPE value);

  // required .b2.protocol.commondata.Character.TYPE unity_character_type = 2;
  inline bool has_unity_character_type() const;
  inline void clear_unity_character_type();
  static const int kUnityCharacterTypeFieldNumber = 2;
  inline ::b2::protocol::commondata::Character_TYPE unity_character_type() const;
  inline void set_unity_character_type(::b2::protocol::commondata::Character_TYPE value);

  // required int32 step = 3;
  inline bool has_step() const;
  inline void clear_step();
  static const int kStepFieldNumber = 3;
  inline ::google::protobuf::int32 step() const;
  inline void set_step(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.UnitySkill)
 private:
  inline void set_has_main_character_type();
  inline void clear_has_main_character_type();
  inline void set_has_unity_character_type();
  inline void clear_has_unity_character_type();
  inline void set_has_step();
  inline void clear_has_step();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int main_character_type_;
  int unity_character_type_;
  ::google::protobuf::int32 step_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static UnitySkill* default_instance_;
};
// -------------------------------------------------------------------

class UnitySkillAwakenMission : public ::google::protobuf::Message {
 public:
  UnitySkillAwakenMission();
  virtual ~UnitySkillAwakenMission();

  UnitySkillAwakenMission(const UnitySkillAwakenMission& from);

  inline UnitySkillAwakenMission& operator=(const UnitySkillAwakenMission& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnitySkillAwakenMission& default_instance();

  void Swap(UnitySkillAwakenMission* other);

  // implements Message ----------------------------------------------

  UnitySkillAwakenMission* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnitySkillAwakenMission& from);
  void MergeFrom(const UnitySkillAwakenMission& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .b2.protocol.commondata.Character.TYPE character_type = 1;
  inline bool has_character_type() const;
  inline void clear_character_type();
  static const int kCharacterTypeFieldNumber = 1;
  inline ::b2::protocol::commondata::Character_TYPE character_type() const;
  inline void set_character_type(::b2::protocol::commondata::Character_TYPE value);

  // required int32 mission_id = 2;
  inline bool has_mission_id() const;
  inline void clear_mission_id();
  static const int kMissionIdFieldNumber = 2;
  inline ::google::protobuf::int32 mission_id() const;
  inline void set_mission_id(::google::protobuf::int32 value);

  // required int32 try_count = 3;
  inline bool has_try_count() const;
  inline void clear_try_count();
  static const int kTryCountFieldNumber = 3;
  inline ::google::protobuf::int32 try_count() const;
  inline void set_try_count(::google::protobuf::int32 value);

  // required bool completed = 4;
  inline bool has_completed() const;
  inline void clear_completed();
  static const int kCompletedFieldNumber = 4;
  inline bool completed() const;
  inline void set_completed(bool value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.UnitySkillAwakenMission)
 private:
  inline void set_has_character_type();
  inline void clear_has_character_type();
  inline void set_has_mission_id();
  inline void clear_has_mission_id();
  inline void set_has_try_count();
  inline void clear_has_try_count();
  inline void set_has_completed();
  inline void clear_has_completed();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int character_type_;
  ::google::protobuf::int32 mission_id_;
  ::google::protobuf::int32 try_count_;
  bool completed_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static UnitySkillAwakenMission* default_instance_;
};
// -------------------------------------------------------------------

class ContentsModeInfo : public ::google::protobuf::Message {
 public:
  ContentsModeInfo();
  virtual ~ContentsModeInfo();

  ContentsModeInfo(const ContentsModeInfo& from);

  inline ContentsModeInfo& operator=(const ContentsModeInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContentsModeInfo& default_instance();

  void Swap(ContentsModeInfo* other);

  // implements Message ----------------------------------------------

  ContentsModeInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContentsModeInfo& from);
  void MergeFrom(const ContentsModeInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .b2.protocol.commondata.ContentsMode mode = 1;
  inline bool has_mode() const;
  inline void clear_mode();
  static const int kModeFieldNumber = 1;
  inline ::b2::protocol::commondata::ContentsMode mode() const;
  inline void set_mode(::b2::protocol::commondata::ContentsMode value);

  // required .b2.protocol.commondata.ContentsModeState state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::b2::protocol::commondata::ContentsModeState state() const;
  inline void set_state(::b2::protocol::commondata::ContentsModeState value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.ContentsModeInfo)
 private:
  inline void set_has_mode();
  inline void clear_has_mode();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int mode_;
  int state_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static ContentsModeInfo* default_instance_;
};
// -------------------------------------------------------------------

class ContentsOpen : public ::google::protobuf::Message {
 public:
  ContentsOpen();
  virtual ~ContentsOpen();

  ContentsOpen(const ContentsOpen& from);

  inline ContentsOpen& operator=(const ContentsOpen& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContentsOpen& default_instance();

  void Swap(ContentsOpen* other);

  // implements Message ----------------------------------------------

  ContentsOpen* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContentsOpen& from);
  void MergeFrom(const ContentsOpen& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 mode_id = 1;
  inline bool has_mode_id() const;
  inline void clear_mode_id();
  static const int kModeIdFieldNumber = 1;
  inline ::google::protobuf::int32 mode_id() const;
  inline void set_mode_id(::google::protobuf::int32 value);

  // required bool opened = 2;
  inline bool has_opened() const;
  inline void clear_opened();
  static const int kOpenedFieldNumber = 2;
  inline bool opened() const;
  inline void set_opened(bool value);

  // required int32 stage_id = 3;
  inline bool has_stage_id() const;
  inline void clear_stage_id();
  static const int kStageIdFieldNumber = 3;
  inline ::google::protobuf::int32 stage_id() const;
  inline void set_stage_id(::google::protobuf::int32 value);

  // required int32 tutorial_id = 4;
  inline bool has_tutorial_id() const;
  inline void clear_tutorial_id();
  static const int kTutorialIdFieldNumber = 4;
  inline ::google::protobuf::int32 tutorial_id() const;
  inline void set_tutorial_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.ContentsOpen)
 private:
  inline void set_has_mode_id();
  inline void clear_has_mode_id();
  inline void set_has_opened();
  inline void clear_has_opened();
  inline void set_has_stage_id();
  inline void clear_has_stage_id();
  inline void set_has_tutorial_id();
  inline void clear_has_tutorial_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 mode_id_;
  bool opened_;
  ::google::protobuf::int32 stage_id_;
  ::google::protobuf::int32 tutorial_id_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static ContentsOpen* default_instance_;
};
// -------------------------------------------------------------------

class CharacterPower : public ::google::protobuf::Message {
 public:
  CharacterPower();
  virtual ~CharacterPower();

  CharacterPower(const CharacterPower& from);

  inline CharacterPower& operator=(const CharacterPower& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharacterPower& default_instance();

  void Swap(CharacterPower* other);

  // implements Message ----------------------------------------------

  CharacterPower* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharacterPower& from);
  void MergeFrom(const CharacterPower& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .b2.protocol.commondata.Character.TYPE character_type = 1;
  inline bool has_character_type() const;
  inline void clear_character_type();
  static const int kCharacterTypeFieldNumber = 1;
  inline ::b2::protocol::commondata::Character_TYPE character_type() const;
  inline void set_character_type(::b2::protocol::commondata::Character_TYPE value);

  // required int32 total_power = 2;
  inline bool has_total_power() const;
  inline void clear_total_power();
  static const int kTotalPowerFieldNumber = 2;
  inline ::google::protobuf::int32 total_power() const;
  inline void set_total_power(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.CharacterPower)
 private:
  inline void set_has_character_type();
  inline void clear_has_character_type();
  inline void set_has_total_power();
  inline void clear_has_total_power();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int character_type_;
  ::google::protobuf::int32 total_power_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static CharacterPower* default_instance_;
};
// -------------------------------------------------------------------

class AssaultBattleInfo : public ::google::protobuf::Message {
 public:
  AssaultBattleInfo();
  virtual ~AssaultBattleInfo();

  AssaultBattleInfo(const AssaultBattleInfo& from);

  inline AssaultBattleInfo& operator=(const AssaultBattleInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AssaultBattleInfo& default_instance();

  void Swap(AssaultBattleInfo* other);

  // implements Message ----------------------------------------------

  AssaultBattleInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AssaultBattleInfo& from);
  void MergeFrom(const AssaultBattleInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 kill_count = 1;
  inline bool has_kill_count() const;
  inline void clear_kill_count();
  static const int kKillCountFieldNumber = 1;
  inline ::google::protobuf::int32 kill_count() const;
  inline void set_kill_count(::google::protobuf::int32 value);

  // optional int32 death_count = 2;
  inline bool has_death_count() const;
  inline void clear_death_count();
  static const int kDeathCountFieldNumber = 2;
  inline ::google::protobuf::int32 death_count() const;
  inline void set_death_count(::google::protobuf::int32 value);

  // optional int32 damage = 3;
  inline bool has_damage() const;
  inline void clear_damage();
  static const int kDamageFieldNumber = 3;
  inline ::google::protobuf::int32 damage() const;
  inline void set_damage(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.AssaultBattleInfo)
 private:
  inline void set_has_kill_count();
  inline void clear_has_kill_count();
  inline void set_has_death_count();
  inline void clear_has_death_count();
  inline void set_has_damage();
  inline void clear_has_damage();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 kill_count_;
  ::google::protobuf::int32 death_count_;
  ::google::protobuf::int32 damage_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static AssaultBattleInfo* default_instance_;
};
// -------------------------------------------------------------------

class RoomCharacter : public ::google::protobuf::Message {
 public:
  RoomCharacter();
  virtual ~RoomCharacter();

  RoomCharacter(const RoomCharacter& from);

  inline RoomCharacter& operator=(const RoomCharacter& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomCharacter& default_instance();

  void Swap(RoomCharacter* other);

  // implements Message ----------------------------------------------

  RoomCharacter* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoomCharacter& from);
  void MergeFrom(const RoomCharacter& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .b2.protocol.commondata.Character.TYPE character_type = 1;
  inline bool has_character_type() const;
  inline void clear_character_type();
  static const int kCharacterTypeFieldNumber = 1;
  inline ::b2::protocol::commondata::Character_TYPE character_type() const;
  inline void set_character_type(::b2::protocol::commondata::Character_TYPE value);

  // optional int32 character_power = 2;
  inline bool has_character_power() const;
  inline void clear_character_power();
  static const int kCharacterPowerFieldNumber = 2;
  inline ::google::protobuf::int32 character_power() const;
  inline void set_character_power(::google::protobuf::int32 value);

  // optional int32 character_level = 3;
  inline bool has_character_level() const;
  inline void clear_character_level();
  static const int kCharacterLevelFieldNumber = 3;
  inline ::google::protobuf::int32 character_level() const;
  inline void set_character_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.RoomCharacter)
 private:
  inline void set_has_character_type();
  inline void clear_has_character_type();
  inline void set_has_character_power();
  inline void clear_has_character_power();
  inline void set_has_character_level();
  inline void clear_has_character_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int character_type_;
  ::google::protobuf::int32 character_power_;
  ::google::protobuf::int32 character_level_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static RoomCharacter* default_instance_;
};
// -------------------------------------------------------------------

class AdminMessage : public ::google::protobuf::Message {
 public:
  AdminMessage();
  virtual ~AdminMessage();

  AdminMessage(const AdminMessage& from);

  inline AdminMessage& operator=(const AdminMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AdminMessage& default_instance();

  void Swap(AdminMessage* other);

  // implements Message ----------------------------------------------

  AdminMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AdminMessage& from);
  void MergeFrom(const AdminMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string message = 1;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 1;
  inline const ::std::string& message() const;
  inline void set_message(const ::std::string& value);
  inline void set_message(const char* value);
  inline void set_message(const char* value, size_t size);
  inline ::std::string* mutable_message();
  inline ::std::string* release_message();
  inline void set_allocated_message(::std::string* message);

  // required int32 display_time = 2;
  inline bool has_display_time() const;
  inline void clear_display_time();
  static const int kDisplayTimeFieldNumber = 2;
  inline ::google::protobuf::int32 display_time() const;
  inline void set_display_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.AdminMessage)
 private:
  inline void set_has_message();
  inline void clear_has_message();
  inline void set_has_display_time();
  inline void clear_has_display_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* message_;
  ::google::protobuf::int32 display_time_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static AdminMessage* default_instance_;
};
// -------------------------------------------------------------------

class PointEventStatus : public ::google::protobuf::Message {
 public:
  PointEventStatus();
  virtual ~PointEventStatus();

  PointEventStatus(const PointEventStatus& from);

  inline PointEventStatus& operator=(const PointEventStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PointEventStatus& default_instance();

  void Swap(PointEventStatus* other);

  // implements Message ----------------------------------------------

  PointEventStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PointEventStatus& from);
  void MergeFrom(const PointEventStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 event_id = 1;
  inline bool has_event_id() const;
  inline void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  inline ::google::protobuf::int32 event_id() const;
  inline void set_event_id(::google::protobuf::int32 value);

  // required int32 point = 2;
  inline bool has_point() const;
  inline void clear_point();
  static const int kPointFieldNumber = 2;
  inline ::google::protobuf::int32 point() const;
  inline void set_point(::google::protobuf::int32 value);

  // required int32 reward_state_value = 3;
  inline bool has_reward_state_value() const;
  inline void clear_reward_state_value();
  static const int kRewardStateValueFieldNumber = 3;
  inline ::google::protobuf::int32 reward_state_value() const;
  inline void set_reward_state_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.PointEventStatus)
 private:
  inline void set_has_event_id();
  inline void clear_has_event_id();
  inline void set_has_point();
  inline void clear_has_point();
  inline void set_has_reward_state_value();
  inline void clear_has_reward_state_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 event_id_;
  ::google::protobuf::int32 point_;
  ::google::protobuf::int32 reward_state_value_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static PointEventStatus* default_instance_;
};
// -------------------------------------------------------------------

class PointShopEventStatus : public ::google::protobuf::Message {
 public:
  PointShopEventStatus();
  virtual ~PointShopEventStatus();

  PointShopEventStatus(const PointShopEventStatus& from);

  inline PointShopEventStatus& operator=(const PointShopEventStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PointShopEventStatus& default_instance();

  void Swap(PointShopEventStatus* other);

  // implements Message ----------------------------------------------

  PointShopEventStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PointShopEventStatus& from);
  void MergeFrom(const PointShopEventStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 event_id = 1;
  inline bool has_event_id() const;
  inline void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  inline ::google::protobuf::int32 event_id() const;
  inline void set_event_id(::google::protobuf::int32 value);

  // required int32 point = 2;
  inline bool has_point() const;
  inline void clear_point();
  static const int kPointFieldNumber = 2;
  inline ::google::protobuf::int32 point() const;
  inline void set_point(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.PointShopEventStatus)
 private:
  inline void set_has_event_id();
  inline void clear_has_event_id();
  inline void set_has_point();
  inline void clear_has_point();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 event_id_;
  ::google::protobuf::int32 point_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static PointShopEventStatus* default_instance_;
};
// -------------------------------------------------------------------

class PointShopEventRewardHistory : public ::google::protobuf::Message {
 public:
  PointShopEventRewardHistory();
  virtual ~PointShopEventRewardHistory();

  PointShopEventRewardHistory(const PointShopEventRewardHistory& from);

  inline PointShopEventRewardHistory& operator=(const PointShopEventRewardHistory& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PointShopEventRewardHistory& default_instance();

  void Swap(PointShopEventRewardHistory* other);

  // implements Message ----------------------------------------------

  PointShopEventRewardHistory* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PointShopEventRewardHistory& from);
  void MergeFrom(const PointShopEventRewardHistory& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 event_id = 1;
  inline bool has_event_id() const;
  inline void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  inline ::google::protobuf::int32 event_id() const;
  inline void set_event_id(::google::protobuf::int32 value);

  // required int32 index = 2;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 2;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // required int32 total_reward_count = 3;
  inline bool has_total_reward_count() const;
  inline void clear_total_reward_count();
  static const int kTotalRewardCountFieldNumber = 3;
  inline ::google::protobuf::int32 total_reward_count() const;
  inline void set_total_reward_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.PointShopEventRewardHistory)
 private:
  inline void set_has_event_id();
  inline void clear_has_event_id();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_total_reward_count();
  inline void clear_has_total_reward_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 event_id_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 total_reward_count_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static PointShopEventRewardHistory* default_instance_;
};
// -------------------------------------------------------------------

class GemPurchaseEventStatus : public ::google::protobuf::Message {
 public:
  GemPurchaseEventStatus();
  virtual ~GemPurchaseEventStatus();

  GemPurchaseEventStatus(const GemPurchaseEventStatus& from);

  inline GemPurchaseEventStatus& operator=(const GemPurchaseEventStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GemPurchaseEventStatus& default_instance();

  void Swap(GemPurchaseEventStatus* other);

  // implements Message ----------------------------------------------

  GemPurchaseEventStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GemPurchaseEventStatus& from);
  void MergeFrom(const GemPurchaseEventStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 event_id = 1;
  inline bool has_event_id() const;
  inline void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  inline ::google::protobuf::int32 event_id() const;
  inline void set_event_id(::google::protobuf::int32 value);

  // required int32 gem_count = 2;
  inline bool has_gem_count() const;
  inline void clear_gem_count();
  static const int kGemCountFieldNumber = 2;
  inline ::google::protobuf::int32 gem_count() const;
  inline void set_gem_count(::google::protobuf::int32 value);

  // required int32 reward_state_value = 3;
  inline bool has_reward_state_value() const;
  inline void clear_reward_state_value();
  static const int kRewardStateValueFieldNumber = 3;
  inline ::google::protobuf::int32 reward_state_value() const;
  inline void set_reward_state_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.GemPurchaseEventStatus)
 private:
  inline void set_has_event_id();
  inline void clear_has_event_id();
  inline void set_has_gem_count();
  inline void clear_has_gem_count();
  inline void set_has_reward_state_value();
  inline void clear_has_reward_state_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 event_id_;
  ::google::protobuf::int32 gem_count_;
  ::google::protobuf::int32 reward_state_value_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static GemPurchaseEventStatus* default_instance_;
};
// -------------------------------------------------------------------

class LevelUpEventInfo : public ::google::protobuf::Message {
 public:
  LevelUpEventInfo();
  virtual ~LevelUpEventInfo();

  LevelUpEventInfo(const LevelUpEventInfo& from);

  inline LevelUpEventInfo& operator=(const LevelUpEventInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LevelUpEventInfo& default_instance();

  void Swap(LevelUpEventInfo* other);

  // implements Message ----------------------------------------------

  LevelUpEventInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LevelUpEventInfo& from);
  void MergeFrom(const LevelUpEventInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 event_id = 1;
  inline bool has_event_id() const;
  inline void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  inline ::google::protobuf::int32 event_id() const;
  inline void set_event_id(::google::protobuf::int32 value);

  // required int32 index = 2;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 2;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // required int32 state = 3;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 3;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.LevelUpEventInfo)
 private:
  inline void set_has_event_id();
  inline void clear_has_event_id();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 event_id_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 state_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static LevelUpEventInfo* default_instance_;
};
// -------------------------------------------------------------------

class SeasonMissionInfo : public ::google::protobuf::Message {
 public:
  SeasonMissionInfo();
  virtual ~SeasonMissionInfo();

  SeasonMissionInfo(const SeasonMissionInfo& from);

  inline SeasonMissionInfo& operator=(const SeasonMissionInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SeasonMissionInfo& default_instance();

  void Swap(SeasonMissionInfo* other);

  // implements Message ----------------------------------------------

  SeasonMissionInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SeasonMissionInfo& from);
  void MergeFrom(const SeasonMissionInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 event_id = 1;
  inline bool has_event_id() const;
  inline void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  inline ::google::protobuf::int32 event_id() const;
  inline void set_event_id(::google::protobuf::int32 value);

  // required int32 day = 2;
  inline bool has_day() const;
  inline void clear_day();
  static const int kDayFieldNumber = 2;
  inline ::google::protobuf::int32 day() const;
  inline void set_day(::google::protobuf::int32 value);

  // required int32 index = 3;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 3;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // required int32 progress_count = 4;
  inline bool has_progress_count() const;
  inline void clear_progress_count();
  static const int kProgressCountFieldNumber = 4;
  inline ::google::protobuf::int32 progress_count() const;
  inline void set_progress_count(::google::protobuf::int32 value);

  // required .b2.protocol.commondata.MissionInfo.MissionStateType state = 5;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 5;
  inline ::b2::protocol::commondata::MissionInfo_MissionStateType state() const;
  inline void set_state(::b2::protocol::commondata::MissionInfo_MissionStateType value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.SeasonMissionInfo)
 private:
  inline void set_has_event_id();
  inline void clear_has_event_id();
  inline void set_has_day();
  inline void clear_has_day();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_progress_count();
  inline void clear_has_progress_count();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 event_id_;
  ::google::protobuf::int32 day_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 progress_count_;
  int state_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static SeasonMissionInfo* default_instance_;
};
// -------------------------------------------------------------------

class SeasonMissionEventStatus : public ::google::protobuf::Message {
 public:
  SeasonMissionEventStatus();
  virtual ~SeasonMissionEventStatus();

  SeasonMissionEventStatus(const SeasonMissionEventStatus& from);

  inline SeasonMissionEventStatus& operator=(const SeasonMissionEventStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SeasonMissionEventStatus& default_instance();

  void Swap(SeasonMissionEventStatus* other);

  // implements Message ----------------------------------------------

  SeasonMissionEventStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SeasonMissionEventStatus& from);
  void MergeFrom(const SeasonMissionEventStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 event_id = 1;
  inline bool has_event_id() const;
  inline void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  inline ::google::protobuf::int32 event_id() const;
  inline void set_event_id(::google::protobuf::int32 value);

  // required int32 attendance_day = 2;
  inline bool has_attendance_day() const;
  inline void clear_attendance_day();
  static const int kAttendanceDayFieldNumber = 2;
  inline ::google::protobuf::int32 attendance_day() const;
  inline void set_attendance_day(::google::protobuf::int32 value);

  // required int64 next_attendance_time = 3;
  inline bool has_next_attendance_time() const;
  inline void clear_next_attendance_time();
  static const int kNextAttendanceTimeFieldNumber = 3;
  inline ::google::protobuf::int64 next_attendance_time() const;
  inline void set_next_attendance_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.SeasonMissionEventStatus)
 private:
  inline void set_has_event_id();
  inline void clear_has_event_id();
  inline void set_has_attendance_day();
  inline void clear_has_attendance_day();
  inline void set_has_next_attendance_time();
  inline void clear_has_next_attendance_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 event_id_;
  ::google::protobuf::int32 attendance_day_;
  ::google::protobuf::int64 next_attendance_time_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static SeasonMissionEventStatus* default_instance_;
};
// -------------------------------------------------------------------

class StageClearEventStatus : public ::google::protobuf::Message {
 public:
  StageClearEventStatus();
  virtual ~StageClearEventStatus();

  StageClearEventStatus(const StageClearEventStatus& from);

  inline StageClearEventStatus& operator=(const StageClearEventStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StageClearEventStatus& default_instance();

  void Swap(StageClearEventStatus* other);

  // implements Message ----------------------------------------------

  StageClearEventStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StageClearEventStatus& from);
  void MergeFrom(const StageClearEventStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 event_id = 1;
  inline bool has_event_id() const;
  inline void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  inline ::google::protobuf::int32 event_id() const;
  inline void set_event_id(::google::protobuf::int32 value);

  // required int32 index = 2;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 2;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // required int32 state = 3;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 3;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.StageClearEventStatus)
 private:
  inline void set_has_event_id();
  inline void clear_has_event_id();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 event_id_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 state_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static StageClearEventStatus* default_instance_;
};
// -------------------------------------------------------------------

class BlockChatUser : public ::google::protobuf::Message {
 public:
  BlockChatUser();
  virtual ~BlockChatUser();

  BlockChatUser(const BlockChatUser& from);

  inline BlockChatUser& operator=(const BlockChatUser& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BlockChatUser& default_instance();

  void Swap(BlockChatUser* other);

  // implements Message ----------------------------------------------

  BlockChatUser* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BlockChatUser& from);
  void MergeFrom(const BlockChatUser& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::int64 account_id() const;
  inline void set_account_id(::google::protobuf::int64 value);

  // required string nickname = 2;
  inline bool has_nickname() const;
  inline void clear_nickname();
  static const int kNicknameFieldNumber = 2;
  inline const ::std::string& nickname() const;
  inline void set_nickname(const ::std::string& value);
  inline void set_nickname(const char* value);
  inline void set_nickname(const char* value, size_t size);
  inline ::std::string* mutable_nickname();
  inline ::std::string* release_nickname();
  inline void set_allocated_nickname(::std::string* nickname);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.BlockChatUser)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_nickname();
  inline void clear_has_nickname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 account_id_;
  ::std::string* nickname_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static BlockChatUser* default_instance_;
};
// -------------------------------------------------------------------

class TenLotteryEventStatus : public ::google::protobuf::Message {
 public:
  TenLotteryEventStatus();
  virtual ~TenLotteryEventStatus();

  TenLotteryEventStatus(const TenLotteryEventStatus& from);

  inline TenLotteryEventStatus& operator=(const TenLotteryEventStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TenLotteryEventStatus& default_instance();

  void Swap(TenLotteryEventStatus* other);

  // implements Message ----------------------------------------------

  TenLotteryEventStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TenLotteryEventStatus& from);
  void MergeFrom(const TenLotteryEventStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 event_id = 1;
  inline bool has_event_id() const;
  inline void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  inline ::google::protobuf::int32 event_id() const;
  inline void set_event_id(::google::protobuf::int32 value);

  // required int32 lottery_count = 2;
  inline bool has_lottery_count() const;
  inline void clear_lottery_count();
  static const int kLotteryCountFieldNumber = 2;
  inline ::google::protobuf::int32 lottery_count() const;
  inline void set_lottery_count(::google::protobuf::int32 value);

  // repeated int32 rewarded_indexs = 3;
  inline int rewarded_indexs_size() const;
  inline void clear_rewarded_indexs();
  static const int kRewardedIndexsFieldNumber = 3;
  inline ::google::protobuf::int32 rewarded_indexs(int index) const;
  inline void set_rewarded_indexs(int index, ::google::protobuf::int32 value);
  inline void add_rewarded_indexs(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      rewarded_indexs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_rewarded_indexs();

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.TenLotteryEventStatus)
 private:
  inline void set_has_event_id();
  inline void clear_has_event_id();
  inline void set_has_lottery_count();
  inline void clear_has_lottery_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 event_id_;
  ::google::protobuf::int32 lottery_count_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > rewarded_indexs_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static TenLotteryEventStatus* default_instance_;
};
// -------------------------------------------------------------------

class HallOfFame : public ::google::protobuf::Message {
 public:
  HallOfFame();
  virtual ~HallOfFame();

  HallOfFame(const HallOfFame& from);

  inline HallOfFame& operator=(const HallOfFame& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HallOfFame& default_instance();

  void Swap(HallOfFame* other);

  // implements Message ----------------------------------------------

  HallOfFame* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HallOfFame& from);
  void MergeFrom(const HallOfFame& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .b2.protocol.commondata.ContentsMode mode = 1;
  inline bool has_mode() const;
  inline void clear_mode();
  static const int kModeFieldNumber = 1;
  inline ::b2::protocol::commondata::ContentsMode mode() const;
  inline void set_mode(::b2::protocol::commondata::ContentsMode value);

  // required int32 ranking = 2;
  inline bool has_ranking() const;
  inline void clear_ranking();
  static const int kRankingFieldNumber = 2;
  inline ::google::protobuf::int32 ranking() const;
  inline void set_ranking(::google::protobuf::int32 value);

  // required int64 account_id = 3;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 3;
  inline ::google::protobuf::int64 account_id() const;
  inline void set_account_id(::google::protobuf::int64 value);

  // required int32 praised_count = 4;
  inline bool has_praised_count() const;
  inline void clear_praised_count();
  static const int kPraisedCountFieldNumber = 4;
  inline ::google::protobuf::int32 praised_count() const;
  inline void set_praised_count(::google::protobuf::int32 value);

  // required int32 match_grade = 10;
  inline bool has_match_grade() const;
  inline void clear_match_grade();
  static const int kMatchGradeFieldNumber = 10;
  inline ::google::protobuf::int32 match_grade() const;
  inline void set_match_grade(::google::protobuf::int32 value);

  // required int32 match_start_count = 11;
  inline bool has_match_start_count() const;
  inline void clear_match_start_count();
  static const int kMatchStartCountFieldNumber = 11;
  inline ::google::protobuf::int32 match_start_count() const;
  inline void set_match_start_count(::google::protobuf::int32 value);

  // required int32 mvp_count = 12;
  inline bool has_mvp_count() const;
  inline void clear_mvp_count();
  static const int kMvpCountFieldNumber = 12;
  inline ::google::protobuf::int32 mvp_count() const;
  inline void set_mvp_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.HallOfFame)
 private:
  inline void set_has_mode();
  inline void clear_has_mode();
  inline void set_has_ranking();
  inline void clear_has_ranking();
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_praised_count();
  inline void clear_has_praised_count();
  inline void set_has_match_grade();
  inline void clear_has_match_grade();
  inline void set_has_match_start_count();
  inline void clear_has_match_start_count();
  inline void set_has_mvp_count();
  inline void clear_has_mvp_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int mode_;
  ::google::protobuf::int32 ranking_;
  ::google::protobuf::int64 account_id_;
  ::google::protobuf::int32 praised_count_;
  ::google::protobuf::int32 match_grade_;
  ::google::protobuf::int32 match_start_count_;
  ::google::protobuf::int32 mvp_count_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static HallOfFame* default_instance_;
};
// -------------------------------------------------------------------

class HallOfFameUser : public ::google::protobuf::Message {
 public:
  HallOfFameUser();
  virtual ~HallOfFameUser();

  HallOfFameUser(const HallOfFameUser& from);

  inline HallOfFameUser& operator=(const HallOfFameUser& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HallOfFameUser& default_instance();

  void Swap(HallOfFameUser* other);

  // implements Message ----------------------------------------------

  HallOfFameUser* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HallOfFameUser& from);
  void MergeFrom(const HallOfFameUser& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .b2.protocol.commondata.User user = 1;
  inline bool has_user() const;
  inline void clear_user();
  static const int kUserFieldNumber = 1;
  inline const ::b2::protocol::commondata::User& user() const;
  inline ::b2::protocol::commondata::User* mutable_user();
  inline ::b2::protocol::commondata::User* release_user();
  inline void set_allocated_user(::b2::protocol::commondata::User* user);

  // repeated .b2.protocol.commondata.Item equip_items = 3;
  inline int equip_items_size() const;
  inline void clear_equip_items();
  static const int kEquipItemsFieldNumber = 3;
  inline const ::b2::protocol::commondata::Item& equip_items(int index) const;
  inline ::b2::protocol::commondata::Item* mutable_equip_items(int index);
  inline ::b2::protocol::commondata::Item* add_equip_items();
  inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Item >&
      equip_items() const;
  inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Item >*
      mutable_equip_items();

  // repeated .b2.protocol.commondata.Costume equip_costumes = 4;
  inline int equip_costumes_size() const;
  inline void clear_equip_costumes();
  static const int kEquipCostumesFieldNumber = 4;
  inline const ::b2::protocol::commondata::Costume& equip_costumes(int index) const;
  inline ::b2::protocol::commondata::Costume* mutable_equip_costumes(int index);
  inline ::b2::protocol::commondata::Costume* add_equip_costumes();
  inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Costume >&
      equip_costumes() const;
  inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Costume >*
      mutable_equip_costumes();

  // repeated .b2.protocol.commondata.Totem equip_totems = 5;
  inline int equip_totems_size() const;
  inline void clear_equip_totems();
  static const int kEquipTotemsFieldNumber = 5;
  inline const ::b2::protocol::commondata::Totem& equip_totems(int index) const;
  inline ::b2::protocol::commondata::Totem* mutable_equip_totems(int index);
  inline ::b2::protocol::commondata::Totem* add_equip_totems();
  inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Totem >&
      equip_totems() const;
  inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Totem >*
      mutable_equip_totems();

  // optional int32 wing_grade = 10;
  inline bool has_wing_grade() const;
  inline void clear_wing_grade();
  static const int kWingGradeFieldNumber = 10;
  inline ::google::protobuf::int32 wing_grade() const;
  inline void set_wing_grade(::google::protobuf::int32 value);

  // optional int32 wing_Level = 11;
  inline bool has_wing_level() const;
  inline void clear_wing_level();
  static const int kWingLevelFieldNumber = 11;
  inline ::google::protobuf::int32 wing_level() const;
  inline void set_wing_level(::google::protobuf::int32 value);

  // optional bool wing_visible = 12;
  inline bool has_wing_visible() const;
  inline void clear_wing_visible();
  static const int kWingVisibleFieldNumber = 12;
  inline bool wing_visible() const;
  inline void set_wing_visible(bool value);

  // optional bool helmet_visible = 13;
  inline bool has_helmet_visible() const;
  inline void clear_helmet_visible();
  static const int kHelmetVisibleFieldNumber = 13;
  inline bool helmet_visible() const;
  inline void set_helmet_visible(bool value);

  // optional bool costume_weapon_visible = 14;
  inline bool has_costume_weapon_visible() const;
  inline void clear_costume_weapon_visible();
  static const int kCostumeWeaponVisibleFieldNumber = 14;
  inline bool costume_weapon_visible() const;
  inline void set_costume_weapon_visible(bool value);

  // optional bool costume_hat_visible = 15;
  inline bool has_costume_hat_visible() const;
  inline void clear_costume_hat_visible();
  static const int kCostumeHatVisibleFieldNumber = 15;
  inline bool costume_hat_visible() const;
  inline void set_costume_hat_visible(bool value);

  // optional bool costume_armor_visible = 16;
  inline bool has_costume_armor_visible() const;
  inline void clear_costume_armor_visible();
  static const int kCostumeArmorVisibleFieldNumber = 16;
  inline bool costume_armor_visible() const;
  inline void set_costume_armor_visible(bool value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.HallOfFameUser)
 private:
  inline void set_has_user();
  inline void clear_has_user();
  inline void set_has_wing_grade();
  inline void clear_has_wing_grade();
  inline void set_has_wing_level();
  inline void clear_has_wing_level();
  inline void set_has_wing_visible();
  inline void clear_has_wing_visible();
  inline void set_has_helmet_visible();
  inline void clear_has_helmet_visible();
  inline void set_has_costume_weapon_visible();
  inline void clear_has_costume_weapon_visible();
  inline void set_has_costume_hat_visible();
  inline void clear_has_costume_hat_visible();
  inline void set_has_costume_armor_visible();
  inline void clear_has_costume_armor_visible();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::b2::protocol::commondata::User* user_;
  ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Item > equip_items_;
  ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Costume > equip_costumes_;
  ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Totem > equip_totems_;
  ::google::protobuf::int32 wing_grade_;
  ::google::protobuf::int32 wing_level_;
  bool wing_visible_;
  bool helmet_visible_;
  bool costume_weapon_visible_;
  bool costume_hat_visible_;
  bool costume_armor_visible_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static HallOfFameUser* default_instance_;
};
// -------------------------------------------------------------------

class HallOfFameReward : public ::google::protobuf::Message {
 public:
  HallOfFameReward();
  virtual ~HallOfFameReward();

  HallOfFameReward(const HallOfFameReward& from);

  inline HallOfFameReward& operator=(const HallOfFameReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HallOfFameReward& default_instance();

  void Swap(HallOfFameReward* other);

  // implements Message ----------------------------------------------

  HallOfFameReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HallOfFameReward& from);
  void MergeFrom(const HallOfFameReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .b2.protocol.commondata.ContentsMode mode = 1;
  inline bool has_mode() const;
  inline void clear_mode();
  static const int kModeFieldNumber = 1;
  inline ::b2::protocol::commondata::ContentsMode mode() const;
  inline void set_mode(::b2::protocol::commondata::ContentsMode value);

  // required int32 ranking = 2;
  inline bool has_ranking() const;
  inline void clear_ranking();
  static const int kRankingFieldNumber = 2;
  inline ::google::protobuf::int32 ranking() const;
  inline void set_ranking(::google::protobuf::int32 value);

  // repeated .b2.protocol.commondata.Reward rewards = 3;
  inline int rewards_size() const;
  inline void clear_rewards();
  static const int kRewardsFieldNumber = 3;
  inline const ::b2::protocol::commondata::Reward& rewards(int index) const;
  inline ::b2::protocol::commondata::Reward* mutable_rewards(int index);
  inline ::b2::protocol::commondata::Reward* add_rewards();
  inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward >&
      rewards() const;
  inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward >*
      mutable_rewards();

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.HallOfFameReward)
 private:
  inline void set_has_mode();
  inline void clear_has_mode();
  inline void set_has_ranking();
  inline void clear_has_ranking();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int mode_;
  ::google::protobuf::int32 ranking_;
  ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward > rewards_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static HallOfFameReward* default_instance_;
};
// -------------------------------------------------------------------

class HallOfFamePraise : public ::google::protobuf::Message {
 public:
  HallOfFamePraise();
  virtual ~HallOfFamePraise();

  HallOfFamePraise(const HallOfFamePraise& from);

  inline HallOfFamePraise& operator=(const HallOfFamePraise& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HallOfFamePraise& default_instance();

  void Swap(HallOfFamePraise* other);

  // implements Message ----------------------------------------------

  HallOfFamePraise* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HallOfFamePraise& from);
  void MergeFrom(const HallOfFamePraise& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .b2.protocol.commondata.ContentsMode mode = 1;
  inline bool has_mode() const;
  inline void clear_mode();
  static const int kModeFieldNumber = 1;
  inline ::b2::protocol::commondata::ContentsMode mode() const;
  inline void set_mode(::b2::protocol::commondata::ContentsMode value);

  // required int32 praise_count = 2;
  inline bool has_praise_count() const;
  inline void clear_praise_count();
  static const int kPraiseCountFieldNumber = 2;
  inline ::google::protobuf::int32 praise_count() const;
  inline void set_praise_count(::google::protobuf::int32 value);

  // required int32 max_count = 3;
  inline bool has_max_count() const;
  inline void clear_max_count();
  static const int kMaxCountFieldNumber = 3;
  inline ::google::protobuf::int32 max_count() const;
  inline void set_max_count(::google::protobuf::int32 value);

  // required int64 target_account_id = 4;
  inline bool has_target_account_id() const;
  inline void clear_target_account_id();
  static const int kTargetAccountIdFieldNumber = 4;
  inline ::google::protobuf::int64 target_account_id() const;
  inline void set_target_account_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.HallOfFamePraise)
 private:
  inline void set_has_mode();
  inline void clear_has_mode();
  inline void set_has_praise_count();
  inline void clear_has_praise_count();
  inline void set_has_max_count();
  inline void clear_has_max_count();
  inline void set_has_target_account_id();
  inline void clear_has_target_account_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int mode_;
  ::google::protobuf::int32 praise_count_;
  ::google::protobuf::int64 target_account_id_;
  ::google::protobuf::int32 max_count_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static HallOfFamePraise* default_instance_;
};
// -------------------------------------------------------------------

class SpendGemEventStatus : public ::google::protobuf::Message {
 public:
  SpendGemEventStatus();
  virtual ~SpendGemEventStatus();

  SpendGemEventStatus(const SpendGemEventStatus& from);

  inline SpendGemEventStatus& operator=(const SpendGemEventStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SpendGemEventStatus& default_instance();

  void Swap(SpendGemEventStatus* other);

  // implements Message ----------------------------------------------

  SpendGemEventStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SpendGemEventStatus& from);
  void MergeFrom(const SpendGemEventStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 event_id = 1;
  inline bool has_event_id() const;
  inline void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  inline ::google::protobuf::int32 event_id() const;
  inline void set_event_id(::google::protobuf::int32 value);

  // required int32 spend_gem_count = 2;
  inline bool has_spend_gem_count() const;
  inline void clear_spend_gem_count();
  static const int kSpendGemCountFieldNumber = 2;
  inline ::google::protobuf::int32 spend_gem_count() const;
  inline void set_spend_gem_count(::google::protobuf::int32 value);

  // required int32 reward_state_value = 3;
  inline bool has_reward_state_value() const;
  inline void clear_reward_state_value();
  static const int kRewardStateValueFieldNumber = 3;
  inline ::google::protobuf::int32 reward_state_value() const;
  inline void set_reward_state_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.SpendGemEventStatus)
 private:
  inline void set_has_event_id();
  inline void clear_has_event_id();
  inline void set_has_spend_gem_count();
  inline void clear_has_spend_gem_count();
  inline void set_has_reward_state_value();
  inline void clear_has_reward_state_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 event_id_;
  ::google::protobuf::int32 spend_gem_count_;
  ::google::protobuf::int32 reward_state_value_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static SpendGemEventStatus* default_instance_;
};
// -------------------------------------------------------------------

class TenLotterySavingsStatus : public ::google::protobuf::Message {
 public:
  TenLotterySavingsStatus();
  virtual ~TenLotterySavingsStatus();

  TenLotterySavingsStatus(const TenLotterySavingsStatus& from);

  inline TenLotterySavingsStatus& operator=(const TenLotterySavingsStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TenLotterySavingsStatus& default_instance();

  void Swap(TenLotterySavingsStatus* other);

  // implements Message ----------------------------------------------

  TenLotterySavingsStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TenLotterySavingsStatus& from);
  void MergeFrom(const TenLotterySavingsStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 event_id = 1;
  inline bool has_event_id() const;
  inline void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  inline ::google::protobuf::int32 event_id() const;
  inline void set_event_id(::google::protobuf::int32 value);

  // required int32 current_point = 2;
  inline bool has_current_point() const;
  inline void clear_current_point();
  static const int kCurrentPointFieldNumber = 2;
  inline ::google::protobuf::int32 current_point() const;
  inline void set_current_point(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.TenLotterySavingsStatus)
 private:
  inline void set_has_event_id();
  inline void clear_has_event_id();
  inline void set_has_current_point();
  inline void clear_has_current_point();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 event_id_;
  ::google::protobuf::int32 current_point_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static TenLotterySavingsStatus* default_instance_;
};
// -------------------------------------------------------------------

class DiceEventMission : public ::google::protobuf::Message {
 public:
  DiceEventMission();
  virtual ~DiceEventMission();

  DiceEventMission(const DiceEventMission& from);

  inline DiceEventMission& operator=(const DiceEventMission& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DiceEventMission& default_instance();

  void Swap(DiceEventMission* other);

  // implements Message ----------------------------------------------

  DiceEventMission* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DiceEventMission& from);
  void MergeFrom(const DiceEventMission& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 event_type = 1;
  inline bool has_event_type() const;
  inline void clear_event_type();
  static const int kEventTypeFieldNumber = 1;
  inline ::google::protobuf::int32 event_type() const;
  inline void set_event_type(::google::protobuf::int32 value);

  // required int32 progress_count = 2;
  inline bool has_progress_count() const;
  inline void clear_progress_count();
  static const int kProgressCountFieldNumber = 2;
  inline ::google::protobuf::int32 progress_count() const;
  inline void set_progress_count(::google::protobuf::int32 value);

  // required int32 state = 3;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 3;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.DiceEventMission)
 private:
  inline void set_has_event_type();
  inline void clear_has_event_type();
  inline void set_has_progress_count();
  inline void clear_has_progress_count();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 event_type_;
  ::google::protobuf::int32 progress_count_;
  ::google::protobuf::int32 state_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static DiceEventMission* default_instance_;
};
// -------------------------------------------------------------------

class DiceEventStatus : public ::google::protobuf::Message {
 public:
  DiceEventStatus();
  virtual ~DiceEventStatus();

  DiceEventStatus(const DiceEventStatus& from);

  inline DiceEventStatus& operator=(const DiceEventStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DiceEventStatus& default_instance();

  void Swap(DiceEventStatus* other);

  // implements Message ----------------------------------------------

  DiceEventStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DiceEventStatus& from);
  void MergeFrom(const DiceEventStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 event_id = 1;
  inline bool has_event_id() const;
  inline void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  inline ::google::protobuf::int32 event_id() const;
  inline void set_event_id(::google::protobuf::int32 value);

  // required int32 point = 2;
  inline bool has_point() const;
  inline void clear_point();
  static const int kPointFieldNumber = 2;
  inline ::google::protobuf::int32 point() const;
  inline void set_point(::google::protobuf::int32 value);

  // required int32 free_dice = 3;
  inline bool has_free_dice() const;
  inline void clear_free_dice();
  static const int kFreeDiceFieldNumber = 3;
  inline ::google::protobuf::int32 free_dice() const;
  inline void set_free_dice(::google::protobuf::int32 value);

  // required int32 position = 4;
  inline bool has_position() const;
  inline void clear_position();
  static const int kPositionFieldNumber = 4;
  inline ::google::protobuf::int32 position() const;
  inline void set_position(::google::protobuf::int32 value);

  // repeated .b2.protocol.commondata.DiceEventMission missions = 5;
  inline int missions_size() const;
  inline void clear_missions();
  static const int kMissionsFieldNumber = 5;
  inline const ::b2::protocol::commondata::DiceEventMission& missions(int index) const;
  inline ::b2::protocol::commondata::DiceEventMission* mutable_missions(int index);
  inline ::b2::protocol::commondata::DiceEventMission* add_missions();
  inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::DiceEventMission >&
      missions() const;
  inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::DiceEventMission >*
      mutable_missions();

  // required int32 finish_count = 6;
  inline bool has_finish_count() const;
  inline void clear_finish_count();
  static const int kFinishCountFieldNumber = 6;
  inline ::google::protobuf::int32 finish_count() const;
  inline void set_finish_count(::google::protobuf::int32 value);

  // required int32 buy_point_count = 7;
  inline bool has_buy_point_count() const;
  inline void clear_buy_point_count();
  static const int kBuyPointCountFieldNumber = 7;
  inline ::google::protobuf::int32 buy_point_count() const;
  inline void set_buy_point_count(::google::protobuf::int32 value);

  // required int32 roll_dice_count = 8;
  inline bool has_roll_dice_count() const;
  inline void clear_roll_dice_count();
  static const int kRollDiceCountFieldNumber = 8;
  inline ::google::protobuf::int32 roll_dice_count() const;
  inline void set_roll_dice_count(::google::protobuf::int32 value);

  // required int32 mileage_reward_value = 9;
  inline bool has_mileage_reward_value() const;
  inline void clear_mileage_reward_value();
  static const int kMileageRewardValueFieldNumber = 9;
  inline ::google::protobuf::int32 mileage_reward_value() const;
  inline void set_mileage_reward_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.DiceEventStatus)
 private:
  inline void set_has_event_id();
  inline void clear_has_event_id();
  inline void set_has_point();
  inline void clear_has_point();
  inline void set_has_free_dice();
  inline void clear_has_free_dice();
  inline void set_has_position();
  inline void clear_has_position();
  inline void set_has_finish_count();
  inline void clear_has_finish_count();
  inline void set_has_buy_point_count();
  inline void clear_has_buy_point_count();
  inline void set_has_roll_dice_count();
  inline void clear_has_roll_dice_count();
  inline void set_has_mileage_reward_value();
  inline void clear_has_mileage_reward_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 event_id_;
  ::google::protobuf::int32 point_;
  ::google::protobuf::int32 free_dice_;
  ::google::protobuf::int32 position_;
  ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::DiceEventMission > missions_;
  ::google::protobuf::int32 finish_count_;
  ::google::protobuf::int32 buy_point_count_;
  ::google::protobuf::int32 roll_dice_count_;
  ::google::protobuf::int32 mileage_reward_value_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static DiceEventStatus* default_instance_;
};
// -------------------------------------------------------------------

class DonationPointRewardState : public ::google::protobuf::Message {
 public:
  DonationPointRewardState();
  virtual ~DonationPointRewardState();

  DonationPointRewardState(const DonationPointRewardState& from);

  inline DonationPointRewardState& operator=(const DonationPointRewardState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DonationPointRewardState& default_instance();

  void Swap(DonationPointRewardState* other);

  // implements Message ----------------------------------------------

  DonationPointRewardState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DonationPointRewardState& from);
  void MergeFrom(const DonationPointRewardState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // required bool rewarded = 2;
  inline bool has_rewarded() const;
  inline void clear_rewarded();
  static const int kRewardedFieldNumber = 2;
  inline bool rewarded() const;
  inline void set_rewarded(bool value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.DonationPointRewardState)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_rewarded();
  inline void clear_has_rewarded();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 index_;
  bool rewarded_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static DonationPointRewardState* default_instance_;
};
// -------------------------------------------------------------------

class DonationPresent : public ::google::protobuf::Message {
 public:
  DonationPresent();
  virtual ~DonationPresent();

  DonationPresent(const DonationPresent& from);

  inline DonationPresent& operator=(const DonationPresent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DonationPresent& default_instance();

  void Swap(DonationPresent* other);

  // implements Message ----------------------------------------------

  DonationPresent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DonationPresent& from);
  void MergeFrom(const DonationPresent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 item_template_id = 1;
  inline bool has_item_template_id() const;
  inline void clear_item_template_id();
  static const int kItemTemplateIdFieldNumber = 1;
  inline ::google::protobuf::int32 item_template_id() const;
  inline void set_item_template_id(::google::protobuf::int32 value);

  // required int32 amount = 2;
  inline bool has_amount() const;
  inline void clear_amount();
  static const int kAmountFieldNumber = 2;
  inline ::google::protobuf::int32 amount() const;
  inline void set_amount(::google::protobuf::int32 value);

  // required .b2.protocol.commondata.DonationConsumableType donation_consumable_type = 3;
  inline bool has_donation_consumable_type() const;
  inline void clear_donation_consumable_type();
  static const int kDonationConsumableTypeFieldNumber = 3;
  inline ::b2::protocol::commondata::DonationConsumableType donation_consumable_type() const;
  inline void set_donation_consumable_type(::b2::protocol::commondata::DonationConsumableType value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.DonationPresent)
 private:
  inline void set_has_item_template_id();
  inline void clear_has_item_template_id();
  inline void set_has_amount();
  inline void clear_has_amount();
  inline void set_has_donation_consumable_type();
  inline void clear_has_donation_consumable_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 item_template_id_;
  ::google::protobuf::int32 amount_;
  int donation_consumable_type_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static DonationPresent* default_instance_;
};
// -------------------------------------------------------------------

class DonationJobState : public ::google::protobuf::Message {
 public:
  DonationJobState();
  virtual ~DonationJobState();

  DonationJobState(const DonationJobState& from);

  inline DonationJobState& operator=(const DonationJobState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DonationJobState& default_instance();

  void Swap(DonationJobState* other);

  // implements Message ----------------------------------------------

  DonationJobState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DonationJobState& from);
  void MergeFrom(const DonationJobState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef DonationJobState_TYPE TYPE;
  static const TYPE START = DonationJobState_TYPE_START;
  static const TYPE END = DonationJobState_TYPE_END;
  static const TYPE REWARDED = DonationJobState_TYPE_REWARDED;
  static inline bool TYPE_IsValid(int value) {
    return DonationJobState_TYPE_IsValid(value);
  }
  static const TYPE TYPE_MIN =
    DonationJobState_TYPE_TYPE_MIN;
  static const TYPE TYPE_MAX =
    DonationJobState_TYPE_TYPE_MAX;
  static const int TYPE_ARRAYSIZE =
    DonationJobState_TYPE_TYPE_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  TYPE_descriptor() {
    return DonationJobState_TYPE_descriptor();
  }
  static inline const ::std::string& TYPE_Name(TYPE value) {
    return DonationJobState_TYPE_Name(value);
  }
  static inline bool TYPE_Parse(const ::std::string& name,
      TYPE* value) {
    return DonationJobState_TYPE_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int32 donation_id = 1;
  inline bool has_donation_id() const;
  inline void clear_donation_id();
  static const int kDonationIdFieldNumber = 1;
  inline ::google::protobuf::int32 donation_id() const;
  inline void set_donation_id(::google::protobuf::int32 value);

  // required .b2.protocol.commondata.DonationJobState.TYPE current_state = 2;
  inline bool has_current_state() const;
  inline void clear_current_state();
  static const int kCurrentStateFieldNumber = 2;
  inline ::b2::protocol::commondata::DonationJobState_TYPE current_state() const;
  inline void set_current_state(::b2::protocol::commondata::DonationJobState_TYPE value);

  // required bool completed = 3;
  inline bool has_completed() const;
  inline void clear_completed();
  static const int kCompletedFieldNumber = 3;
  inline bool completed() const;
  inline void set_completed(bool value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.DonationJobState)
 private:
  inline void set_has_donation_id();
  inline void clear_has_donation_id();
  inline void set_has_current_state();
  inline void clear_has_current_state();
  inline void set_has_completed();
  inline void clear_has_completed();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 donation_id_;
  int current_state_;
  bool completed_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static DonationJobState* default_instance_;
};
// -------------------------------------------------------------------

class FactoryLimitStatus : public ::google::protobuf::Message {
 public:
  FactoryLimitStatus();
  virtual ~FactoryLimitStatus();

  FactoryLimitStatus(const FactoryLimitStatus& from);

  inline FactoryLimitStatus& operator=(const FactoryLimitStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FactoryLimitStatus& default_instance();

  void Swap(FactoryLimitStatus* other);

  // implements Message ----------------------------------------------

  FactoryLimitStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FactoryLimitStatus& from);
  void MergeFrom(const FactoryLimitStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 limit_id = 1;
  inline bool has_limit_id() const;
  inline void clear_limit_id();
  static const int kLimitIdFieldNumber = 1;
  inline ::google::protobuf::int32 limit_id() const;
  inline void set_limit_id(::google::protobuf::int32 value);

  // required .b2.protocol.commondata.FactoryLimitType limit_type = 2;
  inline bool has_limit_type() const;
  inline void clear_limit_type();
  static const int kLimitTypeFieldNumber = 2;
  inline ::b2::protocol::commondata::FactoryLimitType limit_type() const;
  inline void set_limit_type(::b2::protocol::commondata::FactoryLimitType value);

  // required .b2.protocol.commondata.FactoryLimitTimeType limit_time_type = 3;
  inline bool has_limit_time_type() const;
  inline void clear_limit_time_type();
  static const int kLimitTimeTypeFieldNumber = 3;
  inline ::b2::protocol::commondata::FactoryLimitTimeType limit_time_type() const;
  inline void set_limit_time_type(::b2::protocol::commondata::FactoryLimitTimeType value);

  // required int32 left_count = 4;
  inline bool has_left_count() const;
  inline void clear_left_count();
  static const int kLeftCountFieldNumber = 4;
  inline ::google::protobuf::int32 left_count() const;
  inline void set_left_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.FactoryLimitStatus)
 private:
  inline void set_has_limit_id();
  inline void clear_has_limit_id();
  inline void set_has_limit_type();
  inline void clear_has_limit_type();
  inline void set_has_limit_time_type();
  inline void clear_has_limit_time_type();
  inline void set_has_left_count();
  inline void clear_has_left_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 limit_id_;
  int limit_type_;
  int limit_time_type_;
  ::google::protobuf::int32 left_count_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static FactoryLimitStatus* default_instance_;
};
// -------------------------------------------------------------------

class FactoryPeriodicStatus : public ::google::protobuf::Message {
 public:
  FactoryPeriodicStatus();
  virtual ~FactoryPeriodicStatus();

  FactoryPeriodicStatus(const FactoryPeriodicStatus& from);

  inline FactoryPeriodicStatus& operator=(const FactoryPeriodicStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FactoryPeriodicStatus& default_instance();

  void Swap(FactoryPeriodicStatus* other);

  // implements Message ----------------------------------------------

  FactoryPeriodicStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FactoryPeriodicStatus& from);
  void MergeFrom(const FactoryPeriodicStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 factory_id = 1;
  inline bool has_factory_id() const;
  inline void clear_factory_id();
  static const int kFactoryIdFieldNumber = 1;
  inline ::google::protobuf::int32 factory_id() const;
  inline void set_factory_id(::google::protobuf::int32 value);

  // required int64 preview_time = 2;
  inline bool has_preview_time() const;
  inline void clear_preview_time();
  static const int kPreviewTimeFieldNumber = 2;
  inline ::google::protobuf::int64 preview_time() const;
  inline void set_preview_time(::google::protobuf::int64 value);

  // required int64 start_time = 3;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 3;
  inline ::google::protobuf::int64 start_time() const;
  inline void set_start_time(::google::protobuf::int64 value);

  // required int64 end_time = 4;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 4;
  inline ::google::protobuf::int64 end_time() const;
  inline void set_end_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.FactoryPeriodicStatus)
 private:
  inline void set_has_factory_id();
  inline void clear_has_factory_id();
  inline void set_has_preview_time();
  inline void clear_has_preview_time();
  inline void set_has_start_time();
  inline void clear_has_start_time();
  inline void set_has_end_time();
  inline void clear_has_end_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 preview_time_;
  ::google::protobuf::int64 start_time_;
  ::google::protobuf::int64 end_time_;
  ::google::protobuf::int32 factory_id_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static FactoryPeriodicStatus* default_instance_;
};
// -------------------------------------------------------------------

class FactoryResult : public ::google::protobuf::Message {
 public:
  FactoryResult();
  virtual ~FactoryResult();

  FactoryResult(const FactoryResult& from);

  inline FactoryResult& operator=(const FactoryResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FactoryResult& default_instance();

  void Swap(FactoryResult* other);

  // implements Message ----------------------------------------------

  FactoryResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FactoryResult& from);
  void MergeFrom(const FactoryResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .b2.protocol.commondata.FactoryResultType factory_result_type = 1;
  inline bool has_factory_result_type() const;
  inline void clear_factory_result_type();
  static const int kFactoryResultTypeFieldNumber = 1;
  inline ::b2::protocol::commondata::FactoryResultType factory_result_type() const;
  inline void set_factory_result_type(::b2::protocol::commondata::FactoryResultType value);

  // optional .b2.protocol.commondata.Item make_item = 2;
  inline bool has_make_item() const;
  inline void clear_make_item();
  static const int kMakeItemFieldNumber = 2;
  inline const ::b2::protocol::commondata::Item& make_item() const;
  inline ::b2::protocol::commondata::Item* mutable_make_item();
  inline ::b2::protocol::commondata::Item* release_make_item();
  inline void set_allocated_make_item(::b2::protocol::commondata::Item* make_item);

  // optional .b2.protocol.commondata.Item bonus_item = 3;
  inline bool has_bonus_item() const;
  inline void clear_bonus_item();
  static const int kBonusItemFieldNumber = 3;
  inline const ::b2::protocol::commondata::Item& bonus_item() const;
  inline ::b2::protocol::commondata::Item* mutable_bonus_item();
  inline ::b2::protocol::commondata::Item* release_bonus_item();
  inline void set_allocated_bonus_item(::b2::protocol::commondata::Item* bonus_item);

  // repeated .b2.protocol.commondata.Item refund_item = 4;
  inline int refund_item_size() const;
  inline void clear_refund_item();
  static const int kRefundItemFieldNumber = 4;
  inline const ::b2::protocol::commondata::Item& refund_item(int index) const;
  inline ::b2::protocol::commondata::Item* mutable_refund_item(int index);
  inline ::b2::protocol::commondata::Item* add_refund_item();
  inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Item >&
      refund_item() const;
  inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Item >*
      mutable_refund_item();

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.FactoryResult)
 private:
  inline void set_has_factory_result_type();
  inline void clear_has_factory_result_type();
  inline void set_has_make_item();
  inline void clear_has_make_item();
  inline void set_has_bonus_item();
  inline void clear_has_bonus_item();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::b2::protocol::commondata::Item* make_item_;
  ::b2::protocol::commondata::Item* bonus_item_;
  ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Item > refund_item_;
  int factory_result_type_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static FactoryResult* default_instance_;
};
// -------------------------------------------------------------------

class UnsealBoxReward : public ::google::protobuf::Message {
 public:
  UnsealBoxReward();
  virtual ~UnsealBoxReward();

  UnsealBoxReward(const UnsealBoxReward& from);

  inline UnsealBoxReward& operator=(const UnsealBoxReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnsealBoxReward& default_instance();

  void Swap(UnsealBoxReward* other);

  // implements Message ----------------------------------------------

  UnsealBoxReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnsealBoxReward& from);
  void MergeFrom(const UnsealBoxReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .b2.protocol.commondata.RewardType reward_type = 1;
  inline bool has_reward_type() const;
  inline void clear_reward_type();
  static const int kRewardTypeFieldNumber = 1;
  inline ::b2::protocol::commondata::RewardType reward_type() const;
  inline void set_reward_type(::b2::protocol::commondata::RewardType value);

  // optional int32 amount = 2;
  inline bool has_amount() const;
  inline void clear_amount();
  static const int kAmountFieldNumber = 2;
  inline ::google::protobuf::int32 amount() const;
  inline void set_amount(::google::protobuf::int32 value);

  // optional int64 template_id = 3;
  inline bool has_template_id() const;
  inline void clear_template_id();
  static const int kTemplateIdFieldNumber = 3;
  inline ::google::protobuf::int64 template_id() const;
  inline void set_template_id(::google::protobuf::int64 value);

  // optional int32 effect_grade = 4;
  inline bool has_effect_grade() const;
  inline void clear_effect_grade();
  static const int kEffectGradeFieldNumber = 4;
  inline ::google::protobuf::int32 effect_grade() const;
  inline void set_effect_grade(::google::protobuf::int32 value);

  // optional .b2.protocol.commondata.Item item = 5;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 5;
  inline const ::b2::protocol::commondata::Item& item() const;
  inline ::b2::protocol::commondata::Item* mutable_item();
  inline ::b2::protocol::commondata::Item* release_item();
  inline void set_allocated_item(::b2::protocol::commondata::Item* item);

  // optional .b2.protocol.commondata.Totem totem = 6;
  inline bool has_totem() const;
  inline void clear_totem();
  static const int kTotemFieldNumber = 6;
  inline const ::b2::protocol::commondata::Totem& totem() const;
  inline ::b2::protocol::commondata::Totem* mutable_totem();
  inline ::b2::protocol::commondata::Totem* release_totem();
  inline void set_allocated_totem(::b2::protocol::commondata::Totem* totem);

  // optional .b2.protocol.commondata.Aether aether = 7;
  inline bool has_aether() const;
  inline void clear_aether();
  static const int kAetherFieldNumber = 7;
  inline const ::b2::protocol::commondata::Aether& aether() const;
  inline ::b2::protocol::commondata::Aether* mutable_aether();
  inline ::b2::protocol::commondata::Aether* release_aether();
  inline void set_allocated_aether(::b2::protocol::commondata::Aether* aether);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.UnsealBoxReward)
 private:
  inline void set_has_reward_type();
  inline void clear_has_reward_type();
  inline void set_has_amount();
  inline void clear_has_amount();
  inline void set_has_template_id();
  inline void clear_has_template_id();
  inline void set_has_effect_grade();
  inline void clear_has_effect_grade();
  inline void set_has_item();
  inline void clear_has_item();
  inline void set_has_totem();
  inline void clear_has_totem();
  inline void set_has_aether();
  inline void clear_has_aether();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int reward_type_;
  ::google::protobuf::int32 amount_;
  ::google::protobuf::int64 template_id_;
  ::b2::protocol::commondata::Item* item_;
  ::b2::protocol::commondata::Totem* totem_;
  ::b2::protocol::commondata::Aether* aether_;
  ::google::protobuf::int32 effect_grade_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static UnsealBoxReward* default_instance_;
};
// -------------------------------------------------------------------

class WorldLocation : public ::google::protobuf::Message {
 public:
  WorldLocation();
  virtual ~WorldLocation();

  WorldLocation(const WorldLocation& from);

  inline WorldLocation& operator=(const WorldLocation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldLocation& default_instance();

  void Swap(WorldLocation* other);

  // implements Message ----------------------------------------------

  WorldLocation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldLocation& from);
  void MergeFrom(const WorldLocation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .b2.protocol.commondata.Endpoint channel_endpoint = 1;
  inline bool has_channel_endpoint() const;
  inline void clear_channel_endpoint();
  static const int kChannelEndpointFieldNumber = 1;
  inline const ::b2::protocol::commondata::Endpoint& channel_endpoint() const;
  inline ::b2::protocol::commondata::Endpoint* mutable_channel_endpoint();
  inline ::b2::protocol::commondata::Endpoint* release_channel_endpoint();
  inline void set_allocated_channel_endpoint(::b2::protocol::commondata::Endpoint* channel_endpoint);

  // required string world_id = 2;
  inline bool has_world_id() const;
  inline void clear_world_id();
  static const int kWorldIdFieldNumber = 2;
  inline const ::std::string& world_id() const;
  inline void set_world_id(const ::std::string& value);
  inline void set_world_id(const char* value);
  inline void set_world_id(const char* value, size_t size);
  inline ::std::string* mutable_world_id();
  inline ::std::string* release_world_id();
  inline void set_allocated_world_id(::std::string* world_id);

  // @@protoc_insertion_point(class_scope:b2.protocol.commondata.WorldLocation)
 private:
  inline void set_has_channel_endpoint();
  inline void clear_has_channel_endpoint();
  inline void set_has_world_id();
  inline void clear_has_world_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::b2::protocol::commondata::Endpoint* channel_endpoint_;
  ::std::string* world_id_;
  friend void  protobuf_AddDesc_CommonData_2eproto();
  friend void protobuf_AssignDesc_CommonData_2eproto();
  friend void protobuf_ShutdownFile_CommonData_2eproto();

  void InitAsDefaultInstance();
  static WorldLocation* default_instance_;
};
// ===================================================================


// ===================================================================

// Result

// required int32 error_code = 1;
inline bool Result::has_error_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Result::set_has_error_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Result::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Result::clear_error_code() {
  error_code_ = 0;
  clear_has_error_code();
}
inline ::google::protobuf::int32 Result::error_code() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Result.error_code)
  return error_code_;
}
inline void Result::set_error_code(::google::protobuf::int32 value) {
  set_has_error_code();
  error_code_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Result.error_code)
}

// -------------------------------------------------------------------

// Version

// required int32 major = 1;
inline bool Version::has_major() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Version::set_has_major() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Version::clear_has_major() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Version::clear_major() {
  major_ = 0;
  clear_has_major();
}
inline ::google::protobuf::int32 Version::major() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Version.major)
  return major_;
}
inline void Version::set_major(::google::protobuf::int32 value) {
  set_has_major();
  major_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Version.major)
}

// required int32 minor = 2;
inline bool Version::has_minor() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Version::set_has_minor() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Version::clear_has_minor() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Version::clear_minor() {
  minor_ = 0;
  clear_has_minor();
}
inline ::google::protobuf::int32 Version::minor() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Version.minor)
  return minor_;
}
inline void Version::set_minor(::google::protobuf::int32 value) {
  set_has_minor();
  minor_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Version.minor)
}

// required int32 revision = 3;
inline bool Version::has_revision() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Version::set_has_revision() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Version::clear_has_revision() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Version::clear_revision() {
  revision_ = 0;
  clear_has_revision();
}
inline ::google::protobuf::int32 Version::revision() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Version.revision)
  return revision_;
}
inline void Version::set_revision(::google::protobuf::int32 value) {
  set_has_revision();
  revision_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Version.revision)
}

// required int32 changelist = 4;
inline bool Version::has_changelist() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Version::set_has_changelist() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Version::clear_has_changelist() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Version::clear_changelist() {
  changelist_ = 0;
  clear_has_changelist();
}
inline ::google::protobuf::int32 Version::changelist() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Version.changelist)
  return changelist_;
}
inline void Version::set_changelist(::google::protobuf::int32 value) {
  set_has_changelist();
  changelist_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Version.changelist)
}

// required int32 build_num = 5;
inline bool Version::has_build_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Version::set_has_build_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Version::clear_has_build_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Version::clear_build_num() {
  build_num_ = 0;
  clear_has_build_num();
}
inline ::google::protobuf::int32 Version::build_num() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Version.build_num)
  return build_num_;
}
inline void Version::set_build_num(::google::protobuf::int32 value) {
  set_has_build_num();
  build_num_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Version.build_num)
}

// -------------------------------------------------------------------

// Protocol

// required string master_data_hash = 1;
inline bool Protocol::has_master_data_hash() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Protocol::set_has_master_data_hash() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Protocol::clear_has_master_data_hash() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Protocol::clear_master_data_hash() {
  if (master_data_hash_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    master_data_hash_->clear();
  }
  clear_has_master_data_hash();
}
inline const ::std::string& Protocol::master_data_hash() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Protocol.master_data_hash)
  return *master_data_hash_;
}
inline void Protocol::set_master_data_hash(const ::std::string& value) {
  set_has_master_data_hash();
  if (master_data_hash_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    master_data_hash_ = new ::std::string;
  }
  master_data_hash_->assign(value);
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Protocol.master_data_hash)
}
inline void Protocol::set_master_data_hash(const char* value) {
  set_has_master_data_hash();
  if (master_data_hash_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    master_data_hash_ = new ::std::string;
  }
  master_data_hash_->assign(value);
  // @@protoc_insertion_point(field_set_char:b2.protocol.commondata.Protocol.master_data_hash)
}
inline void Protocol::set_master_data_hash(const char* value, size_t size) {
  set_has_master_data_hash();
  if (master_data_hash_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    master_data_hash_ = new ::std::string;
  }
  master_data_hash_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:b2.protocol.commondata.Protocol.master_data_hash)
}
inline ::std::string* Protocol::mutable_master_data_hash() {
  set_has_master_data_hash();
  if (master_data_hash_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    master_data_hash_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.Protocol.master_data_hash)
  return master_data_hash_;
}
inline ::std::string* Protocol::release_master_data_hash() {
  clear_has_master_data_hash();
  if (master_data_hash_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = master_data_hash_;
    master_data_hash_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Protocol::set_allocated_master_data_hash(::std::string* master_data_hash) {
  if (master_data_hash_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete master_data_hash_;
  }
  if (master_data_hash) {
    set_has_master_data_hash();
    master_data_hash_ = master_data_hash;
  } else {
    clear_has_master_data_hash();
    master_data_hash_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.commondata.Protocol.master_data_hash)
}

// required string common_data_hash = 2;
inline bool Protocol::has_common_data_hash() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Protocol::set_has_common_data_hash() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Protocol::clear_has_common_data_hash() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Protocol::clear_common_data_hash() {
  if (common_data_hash_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    common_data_hash_->clear();
  }
  clear_has_common_data_hash();
}
inline const ::std::string& Protocol::common_data_hash() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Protocol.common_data_hash)
  return *common_data_hash_;
}
inline void Protocol::set_common_data_hash(const ::std::string& value) {
  set_has_common_data_hash();
  if (common_data_hash_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    common_data_hash_ = new ::std::string;
  }
  common_data_hash_->assign(value);
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Protocol.common_data_hash)
}
inline void Protocol::set_common_data_hash(const char* value) {
  set_has_common_data_hash();
  if (common_data_hash_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    common_data_hash_ = new ::std::string;
  }
  common_data_hash_->assign(value);
  // @@protoc_insertion_point(field_set_char:b2.protocol.commondata.Protocol.common_data_hash)
}
inline void Protocol::set_common_data_hash(const char* value, size_t size) {
  set_has_common_data_hash();
  if (common_data_hash_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    common_data_hash_ = new ::std::string;
  }
  common_data_hash_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:b2.protocol.commondata.Protocol.common_data_hash)
}
inline ::std::string* Protocol::mutable_common_data_hash() {
  set_has_common_data_hash();
  if (common_data_hash_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    common_data_hash_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.Protocol.common_data_hash)
  return common_data_hash_;
}
inline ::std::string* Protocol::release_common_data_hash() {
  clear_has_common_data_hash();
  if (common_data_hash_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = common_data_hash_;
    common_data_hash_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Protocol::set_allocated_common_data_hash(::std::string* common_data_hash) {
  if (common_data_hash_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete common_data_hash_;
  }
  if (common_data_hash) {
    set_has_common_data_hash();
    common_data_hash_ = common_data_hash;
  } else {
    clear_has_common_data_hash();
    common_data_hash_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.commondata.Protocol.common_data_hash)
}

// required string session_message_hash = 10;
inline bool Protocol::has_session_message_hash() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Protocol::set_has_session_message_hash() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Protocol::clear_has_session_message_hash() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Protocol::clear_session_message_hash() {
  if (session_message_hash_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    session_message_hash_->clear();
  }
  clear_has_session_message_hash();
}
inline const ::std::string& Protocol::session_message_hash() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Protocol.session_message_hash)
  return *session_message_hash_;
}
inline void Protocol::set_session_message_hash(const ::std::string& value) {
  set_has_session_message_hash();
  if (session_message_hash_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    session_message_hash_ = new ::std::string;
  }
  session_message_hash_->assign(value);
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Protocol.session_message_hash)
}
inline void Protocol::set_session_message_hash(const char* value) {
  set_has_session_message_hash();
  if (session_message_hash_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    session_message_hash_ = new ::std::string;
  }
  session_message_hash_->assign(value);
  // @@protoc_insertion_point(field_set_char:b2.protocol.commondata.Protocol.session_message_hash)
}
inline void Protocol::set_session_message_hash(const char* value, size_t size) {
  set_has_session_message_hash();
  if (session_message_hash_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    session_message_hash_ = new ::std::string;
  }
  session_message_hash_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:b2.protocol.commondata.Protocol.session_message_hash)
}
inline ::std::string* Protocol::mutable_session_message_hash() {
  set_has_session_message_hash();
  if (session_message_hash_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    session_message_hash_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.Protocol.session_message_hash)
  return session_message_hash_;
}
inline ::std::string* Protocol::release_session_message_hash() {
  clear_has_session_message_hash();
  if (session_message_hash_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = session_message_hash_;
    session_message_hash_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Protocol::set_allocated_session_message_hash(::std::string* session_message_hash) {
  if (session_message_hash_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete session_message_hash_;
  }
  if (session_message_hash) {
    set_has_session_message_hash();
    session_message_hash_ = session_message_hash;
  } else {
    clear_has_session_message_hash();
    session_message_hash_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.commondata.Protocol.session_message_hash)
}

// required string channel_message_hash = 11;
inline bool Protocol::has_channel_message_hash() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Protocol::set_has_channel_message_hash() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Protocol::clear_has_channel_message_hash() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Protocol::clear_channel_message_hash() {
  if (channel_message_hash_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channel_message_hash_->clear();
  }
  clear_has_channel_message_hash();
}
inline const ::std::string& Protocol::channel_message_hash() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Protocol.channel_message_hash)
  return *channel_message_hash_;
}
inline void Protocol::set_channel_message_hash(const ::std::string& value) {
  set_has_channel_message_hash();
  if (channel_message_hash_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channel_message_hash_ = new ::std::string;
  }
  channel_message_hash_->assign(value);
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Protocol.channel_message_hash)
}
inline void Protocol::set_channel_message_hash(const char* value) {
  set_has_channel_message_hash();
  if (channel_message_hash_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channel_message_hash_ = new ::std::string;
  }
  channel_message_hash_->assign(value);
  // @@protoc_insertion_point(field_set_char:b2.protocol.commondata.Protocol.channel_message_hash)
}
inline void Protocol::set_channel_message_hash(const char* value, size_t size) {
  set_has_channel_message_hash();
  if (channel_message_hash_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channel_message_hash_ = new ::std::string;
  }
  channel_message_hash_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:b2.protocol.commondata.Protocol.channel_message_hash)
}
inline ::std::string* Protocol::mutable_channel_message_hash() {
  set_has_channel_message_hash();
  if (channel_message_hash_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channel_message_hash_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.Protocol.channel_message_hash)
  return channel_message_hash_;
}
inline ::std::string* Protocol::release_channel_message_hash() {
  clear_has_channel_message_hash();
  if (channel_message_hash_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = channel_message_hash_;
    channel_message_hash_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Protocol::set_allocated_channel_message_hash(::std::string* channel_message_hash) {
  if (channel_message_hash_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete channel_message_hash_;
  }
  if (channel_message_hash) {
    set_has_channel_message_hash();
    channel_message_hash_ = channel_message_hash;
  } else {
    clear_has_channel_message_hash();
    channel_message_hash_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.commondata.Protocol.channel_message_hash)
}

// -------------------------------------------------------------------

// Credential

// required int32 platform_type = 1;
inline bool Credential::has_platform_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Credential::set_has_platform_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Credential::clear_has_platform_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Credential::clear_platform_type() {
  platform_type_ = 0;
  clear_has_platform_type();
}
inline ::google::protobuf::int32 Credential::platform_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Credential.platform_type)
  return platform_type_;
}
inline void Credential::set_platform_type(::google::protobuf::int32 value) {
  set_has_platform_type();
  platform_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Credential.platform_type)
}

// required string platform_uid = 2;
inline bool Credential::has_platform_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Credential::set_has_platform_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Credential::clear_has_platform_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Credential::clear_platform_uid() {
  if (platform_uid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platform_uid_->clear();
  }
  clear_has_platform_uid();
}
inline const ::std::string& Credential::platform_uid() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Credential.platform_uid)
  return *platform_uid_;
}
inline void Credential::set_platform_uid(const ::std::string& value) {
  set_has_platform_uid();
  if (platform_uid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platform_uid_ = new ::std::string;
  }
  platform_uid_->assign(value);
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Credential.platform_uid)
}
inline void Credential::set_platform_uid(const char* value) {
  set_has_platform_uid();
  if (platform_uid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platform_uid_ = new ::std::string;
  }
  platform_uid_->assign(value);
  // @@protoc_insertion_point(field_set_char:b2.protocol.commondata.Credential.platform_uid)
}
inline void Credential::set_platform_uid(const char* value, size_t size) {
  set_has_platform_uid();
  if (platform_uid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platform_uid_ = new ::std::string;
  }
  platform_uid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:b2.protocol.commondata.Credential.platform_uid)
}
inline ::std::string* Credential::mutable_platform_uid() {
  set_has_platform_uid();
  if (platform_uid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platform_uid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.Credential.platform_uid)
  return platform_uid_;
}
inline ::std::string* Credential::release_platform_uid() {
  clear_has_platform_uid();
  if (platform_uid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = platform_uid_;
    platform_uid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Credential::set_allocated_platform_uid(::std::string* platform_uid) {
  if (platform_uid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete platform_uid_;
  }
  if (platform_uid) {
    set_has_platform_uid();
    platform_uid_ = platform_uid;
  } else {
    clear_has_platform_uid();
    platform_uid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.commondata.Credential.platform_uid)
}

// required int32 os_type = 3;
inline bool Credential::has_os_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Credential::set_has_os_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Credential::clear_has_os_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Credential::clear_os_type() {
  os_type_ = 0;
  clear_has_os_type();
}
inline ::google::protobuf::int32 Credential::os_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Credential.os_type)
  return os_type_;
}
inline void Credential::set_os_type(::google::protobuf::int32 value) {
  set_has_os_type();
  os_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Credential.os_type)
}

// required int32 market_type = 4;
inline bool Credential::has_market_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Credential::set_has_market_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Credential::clear_has_market_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Credential::clear_market_type() {
  market_type_ = 0;
  clear_has_market_type();
}
inline ::google::protobuf::int32 Credential::market_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Credential.market_type)
  return market_type_;
}
inline void Credential::set_market_type(::google::protobuf::int32 value) {
  set_has_market_type();
  market_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Credential.market_type)
}

// required string country_code = 5;
inline bool Credential::has_country_code() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Credential::set_has_country_code() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Credential::clear_has_country_code() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Credential::clear_country_code() {
  if (country_code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_->clear();
  }
  clear_has_country_code();
}
inline const ::std::string& Credential::country_code() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Credential.country_code)
  return *country_code_;
}
inline void Credential::set_country_code(const ::std::string& value) {
  set_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_ = new ::std::string;
  }
  country_code_->assign(value);
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Credential.country_code)
}
inline void Credential::set_country_code(const char* value) {
  set_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_ = new ::std::string;
  }
  country_code_->assign(value);
  // @@protoc_insertion_point(field_set_char:b2.protocol.commondata.Credential.country_code)
}
inline void Credential::set_country_code(const char* value, size_t size) {
  set_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_ = new ::std::string;
  }
  country_code_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:b2.protocol.commondata.Credential.country_code)
}
inline ::std::string* Credential::mutable_country_code() {
  set_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.Credential.country_code)
  return country_code_;
}
inline ::std::string* Credential::release_country_code() {
  clear_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = country_code_;
    country_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Credential::set_allocated_country_code(::std::string* country_code) {
  if (country_code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete country_code_;
  }
  if (country_code) {
    set_has_country_code();
    country_code_ = country_code;
  } else {
    clear_has_country_code();
    country_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.commondata.Credential.country_code)
}

// required string lang_code = 6;
inline bool Credential::has_lang_code() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Credential::set_has_lang_code() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Credential::clear_has_lang_code() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Credential::clear_lang_code() {
  if (lang_code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    lang_code_->clear();
  }
  clear_has_lang_code();
}
inline const ::std::string& Credential::lang_code() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Credential.lang_code)
  return *lang_code_;
}
inline void Credential::set_lang_code(const ::std::string& value) {
  set_has_lang_code();
  if (lang_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    lang_code_ = new ::std::string;
  }
  lang_code_->assign(value);
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Credential.lang_code)
}
inline void Credential::set_lang_code(const char* value) {
  set_has_lang_code();
  if (lang_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    lang_code_ = new ::std::string;
  }
  lang_code_->assign(value);
  // @@protoc_insertion_point(field_set_char:b2.protocol.commondata.Credential.lang_code)
}
inline void Credential::set_lang_code(const char* value, size_t size) {
  set_has_lang_code();
  if (lang_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    lang_code_ = new ::std::string;
  }
  lang_code_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:b2.protocol.commondata.Credential.lang_code)
}
inline ::std::string* Credential::mutable_lang_code() {
  set_has_lang_code();
  if (lang_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    lang_code_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.Credential.lang_code)
  return lang_code_;
}
inline ::std::string* Credential::release_lang_code() {
  clear_has_lang_code();
  if (lang_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = lang_code_;
    lang_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Credential::set_allocated_lang_code(::std::string* lang_code) {
  if (lang_code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete lang_code_;
  }
  if (lang_code) {
    set_has_lang_code();
    lang_code_ = lang_code;
  } else {
    clear_has_lang_code();
    lang_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.commondata.Credential.lang_code)
}

// optional string push_token = 7;
inline bool Credential::has_push_token() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Credential::set_has_push_token() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Credential::clear_has_push_token() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Credential::clear_push_token() {
  if (push_token_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    push_token_->clear();
  }
  clear_has_push_token();
}
inline const ::std::string& Credential::push_token() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Credential.push_token)
  return *push_token_;
}
inline void Credential::set_push_token(const ::std::string& value) {
  set_has_push_token();
  if (push_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    push_token_ = new ::std::string;
  }
  push_token_->assign(value);
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Credential.push_token)
}
inline void Credential::set_push_token(const char* value) {
  set_has_push_token();
  if (push_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    push_token_ = new ::std::string;
  }
  push_token_->assign(value);
  // @@protoc_insertion_point(field_set_char:b2.protocol.commondata.Credential.push_token)
}
inline void Credential::set_push_token(const char* value, size_t size) {
  set_has_push_token();
  if (push_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    push_token_ = new ::std::string;
  }
  push_token_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:b2.protocol.commondata.Credential.push_token)
}
inline ::std::string* Credential::mutable_push_token() {
  set_has_push_token();
  if (push_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    push_token_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.Credential.push_token)
  return push_token_;
}
inline ::std::string* Credential::release_push_token() {
  clear_has_push_token();
  if (push_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = push_token_;
    push_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Credential::set_allocated_push_token(::std::string* push_token) {
  if (push_token_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete push_token_;
  }
  if (push_token) {
    set_has_push_token();
    push_token_ = push_token;
  } else {
    clear_has_push_token();
    push_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.commondata.Credential.push_token)
}

// optional string ad_id = 10;
inline bool Credential::has_ad_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Credential::set_has_ad_id() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Credential::clear_has_ad_id() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Credential::clear_ad_id() {
  if (ad_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ad_id_->clear();
  }
  clear_has_ad_id();
}
inline const ::std::string& Credential::ad_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Credential.ad_id)
  return *ad_id_;
}
inline void Credential::set_ad_id(const ::std::string& value) {
  set_has_ad_id();
  if (ad_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ad_id_ = new ::std::string;
  }
  ad_id_->assign(value);
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Credential.ad_id)
}
inline void Credential::set_ad_id(const char* value) {
  set_has_ad_id();
  if (ad_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ad_id_ = new ::std::string;
  }
  ad_id_->assign(value);
  // @@protoc_insertion_point(field_set_char:b2.protocol.commondata.Credential.ad_id)
}
inline void Credential::set_ad_id(const char* value, size_t size) {
  set_has_ad_id();
  if (ad_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ad_id_ = new ::std::string;
  }
  ad_id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:b2.protocol.commondata.Credential.ad_id)
}
inline ::std::string* Credential::mutable_ad_id() {
  set_has_ad_id();
  if (ad_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ad_id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.Credential.ad_id)
  return ad_id_;
}
inline ::std::string* Credential::release_ad_id() {
  clear_has_ad_id();
  if (ad_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = ad_id_;
    ad_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Credential::set_allocated_ad_id(::std::string* ad_id) {
  if (ad_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ad_id_;
  }
  if (ad_id) {
    set_has_ad_id();
    ad_id_ = ad_id;
  } else {
    clear_has_ad_id();
    ad_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.commondata.Credential.ad_id)
}

// optional string access_token = 11;
inline bool Credential::has_access_token() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Credential::set_has_access_token() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Credential::clear_has_access_token() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Credential::clear_access_token() {
  if (access_token_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    access_token_->clear();
  }
  clear_has_access_token();
}
inline const ::std::string& Credential::access_token() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Credential.access_token)
  return *access_token_;
}
inline void Credential::set_access_token(const ::std::string& value) {
  set_has_access_token();
  if (access_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    access_token_ = new ::std::string;
  }
  access_token_->assign(value);
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Credential.access_token)
}
inline void Credential::set_access_token(const char* value) {
  set_has_access_token();
  if (access_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    access_token_ = new ::std::string;
  }
  access_token_->assign(value);
  // @@protoc_insertion_point(field_set_char:b2.protocol.commondata.Credential.access_token)
}
inline void Credential::set_access_token(const char* value, size_t size) {
  set_has_access_token();
  if (access_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    access_token_ = new ::std::string;
  }
  access_token_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:b2.protocol.commondata.Credential.access_token)
}
inline ::std::string* Credential::mutable_access_token() {
  set_has_access_token();
  if (access_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    access_token_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.Credential.access_token)
  return access_token_;
}
inline ::std::string* Credential::release_access_token() {
  clear_has_access_token();
  if (access_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = access_token_;
    access_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Credential::set_allocated_access_token(::std::string* access_token) {
  if (access_token_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete access_token_;
  }
  if (access_token) {
    set_has_access_token();
    access_token_ = access_token;
  } else {
    clear_has_access_token();
    access_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.commondata.Credential.access_token)
}

// -------------------------------------------------------------------

// Endpoint

// required string host = 1;
inline bool Endpoint::has_host() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Endpoint::set_has_host() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Endpoint::clear_has_host() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Endpoint::clear_host() {
  if (host_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    host_->clear();
  }
  clear_has_host();
}
inline const ::std::string& Endpoint::host() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Endpoint.host)
  return *host_;
}
inline void Endpoint::set_host(const ::std::string& value) {
  set_has_host();
  if (host_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    host_ = new ::std::string;
  }
  host_->assign(value);
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Endpoint.host)
}
inline void Endpoint::set_host(const char* value) {
  set_has_host();
  if (host_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    host_ = new ::std::string;
  }
  host_->assign(value);
  // @@protoc_insertion_point(field_set_char:b2.protocol.commondata.Endpoint.host)
}
inline void Endpoint::set_host(const char* value, size_t size) {
  set_has_host();
  if (host_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    host_ = new ::std::string;
  }
  host_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:b2.protocol.commondata.Endpoint.host)
}
inline ::std::string* Endpoint::mutable_host() {
  set_has_host();
  if (host_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    host_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.Endpoint.host)
  return host_;
}
inline ::std::string* Endpoint::release_host() {
  clear_has_host();
  if (host_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = host_;
    host_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Endpoint::set_allocated_host(::std::string* host) {
  if (host_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete host_;
  }
  if (host) {
    set_has_host();
    host_ = host;
  } else {
    clear_has_host();
    host_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.commondata.Endpoint.host)
}

// required int32 port = 2;
inline bool Endpoint::has_port() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Endpoint::set_has_port() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Endpoint::clear_has_port() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Endpoint::clear_port() {
  port_ = 0;
  clear_has_port();
}
inline ::google::protobuf::int32 Endpoint::port() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Endpoint.port)
  return port_;
}
inline void Endpoint::set_port(::google::protobuf::int32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Endpoint.port)
}

// -------------------------------------------------------------------

// AccountBlockInfo

// required int32 block_type = 1;
inline bool AccountBlockInfo::has_block_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AccountBlockInfo::set_has_block_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AccountBlockInfo::clear_has_block_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AccountBlockInfo::clear_block_type() {
  block_type_ = 0;
  clear_has_block_type();
}
inline ::google::protobuf::int32 AccountBlockInfo::block_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.AccountBlockInfo.block_type)
  return block_type_;
}
inline void AccountBlockInfo::set_block_type(::google::protobuf::int32 value) {
  set_has_block_type();
  block_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.AccountBlockInfo.block_type)
}

// required int32 block_reason = 2;
inline bool AccountBlockInfo::has_block_reason() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AccountBlockInfo::set_has_block_reason() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AccountBlockInfo::clear_has_block_reason() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AccountBlockInfo::clear_block_reason() {
  block_reason_ = 0;
  clear_has_block_reason();
}
inline ::google::protobuf::int32 AccountBlockInfo::block_reason() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.AccountBlockInfo.block_reason)
  return block_reason_;
}
inline void AccountBlockInfo::set_block_reason(::google::protobuf::int32 value) {
  set_has_block_reason();
  block_reason_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.AccountBlockInfo.block_reason)
}

// required int32 block_message = 3;
inline bool AccountBlockInfo::has_block_message() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AccountBlockInfo::set_has_block_message() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AccountBlockInfo::clear_has_block_message() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AccountBlockInfo::clear_block_message() {
  block_message_ = 0;
  clear_has_block_message();
}
inline ::google::protobuf::int32 AccountBlockInfo::block_message() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.AccountBlockInfo.block_message)
  return block_message_;
}
inline void AccountBlockInfo::set_block_message(::google::protobuf::int32 value) {
  set_has_block_message();
  block_message_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.AccountBlockInfo.block_message)
}

// required int64 start_time = 4;
inline bool AccountBlockInfo::has_start_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AccountBlockInfo::set_has_start_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AccountBlockInfo::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AccountBlockInfo::clear_start_time() {
  start_time_ = GOOGLE_LONGLONG(0);
  clear_has_start_time();
}
inline ::google::protobuf::int64 AccountBlockInfo::start_time() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.AccountBlockInfo.start_time)
  return start_time_;
}
inline void AccountBlockInfo::set_start_time(::google::protobuf::int64 value) {
  set_has_start_time();
  start_time_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.AccountBlockInfo.start_time)
}

// required int64 end_time = 5;
inline bool AccountBlockInfo::has_end_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AccountBlockInfo::set_has_end_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AccountBlockInfo::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AccountBlockInfo::clear_end_time() {
  end_time_ = GOOGLE_LONGLONG(0);
  clear_has_end_time();
}
inline ::google::protobuf::int64 AccountBlockInfo::end_time() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.AccountBlockInfo.end_time)
  return end_time_;
}
inline void AccountBlockInfo::set_end_time(::google::protobuf::int64 value) {
  set_has_end_time();
  end_time_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.AccountBlockInfo.end_time)
}

// -------------------------------------------------------------------

// GlobalAccount

// required int64 account_id = 1;
inline bool GlobalAccount::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GlobalAccount::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GlobalAccount::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GlobalAccount::clear_account_id() {
  account_id_ = GOOGLE_LONGLONG(0);
  clear_has_account_id();
}
inline ::google::protobuf::int64 GlobalAccount::account_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GlobalAccount.account_id)
  return account_id_;
}
inline void GlobalAccount::set_account_id(::google::protobuf::int64 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GlobalAccount.account_id)
}

// optional string nickname = 2;
inline bool GlobalAccount::has_nickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GlobalAccount::set_has_nickname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GlobalAccount::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GlobalAccount::clear_nickname() {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_->clear();
  }
  clear_has_nickname();
}
inline const ::std::string& GlobalAccount::nickname() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GlobalAccount.nickname)
  return *nickname_;
}
inline void GlobalAccount::set_nickname(const ::std::string& value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GlobalAccount.nickname)
}
inline void GlobalAccount::set_nickname(const char* value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set_char:b2.protocol.commondata.GlobalAccount.nickname)
}
inline void GlobalAccount::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:b2.protocol.commondata.GlobalAccount.nickname)
}
inline ::std::string* GlobalAccount::mutable_nickname() {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.GlobalAccount.nickname)
  return nickname_;
}
inline ::std::string* GlobalAccount::release_nickname() {
  clear_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = nickname_;
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GlobalAccount::set_allocated_nickname(::std::string* nickname) {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nickname_;
  }
  if (nickname) {
    set_has_nickname();
    nickname_ = nickname;
  } else {
    clear_has_nickname();
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.commondata.GlobalAccount.nickname)
}

// optional .b2.protocol.commondata.GlobalAccount.TYPE type = 3;
inline bool GlobalAccount::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GlobalAccount::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GlobalAccount::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GlobalAccount::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::b2::protocol::commondata::GlobalAccount_TYPE GlobalAccount::type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GlobalAccount.type)
  return static_cast< ::b2::protocol::commondata::GlobalAccount_TYPE >(type_);
}
inline void GlobalAccount::set_type(::b2::protocol::commondata::GlobalAccount_TYPE value) {
  assert(::b2::protocol::commondata::GlobalAccount_TYPE_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GlobalAccount.type)
}

// optional .b2.protocol.commondata.GlobalAccount.STATUS status = 4;
inline bool GlobalAccount::has_status() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GlobalAccount::set_has_status() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GlobalAccount::clear_has_status() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GlobalAccount::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::b2::protocol::commondata::GlobalAccount_STATUS GlobalAccount::status() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GlobalAccount.status)
  return static_cast< ::b2::protocol::commondata::GlobalAccount_STATUS >(status_);
}
inline void GlobalAccount::set_status(::b2::protocol::commondata::GlobalAccount_STATUS value) {
  assert(::b2::protocol::commondata::GlobalAccount_STATUS_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GlobalAccount.status)
}

// -------------------------------------------------------------------

// WorldAccount

// required string name = 1;
inline bool WorldAccount::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorldAccount::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorldAccount::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorldAccount::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& WorldAccount::name() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.WorldAccount.name)
  return *name_;
}
inline void WorldAccount::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.WorldAccount.name)
}
inline void WorldAccount::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:b2.protocol.commondata.WorldAccount.name)
}
inline void WorldAccount::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:b2.protocol.commondata.WorldAccount.name)
}
inline ::std::string* WorldAccount::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.WorldAccount.name)
  return name_;
}
inline ::std::string* WorldAccount::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void WorldAccount::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.commondata.WorldAccount.name)
}

// optional int64 account_id = 2;
inline bool WorldAccount::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorldAccount::set_has_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorldAccount::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorldAccount::clear_account_id() {
  account_id_ = GOOGLE_LONGLONG(0);
  clear_has_account_id();
}
inline ::google::protobuf::int64 WorldAccount::account_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.WorldAccount.account_id)
  return account_id_;
}
inline void WorldAccount::set_account_id(::google::protobuf::int64 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.WorldAccount.account_id)
}

// optional int32 cash = 10;
inline bool WorldAccount::has_cash() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WorldAccount::set_has_cash() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WorldAccount::clear_has_cash() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WorldAccount::clear_cash() {
  cash_ = 0;
  clear_has_cash();
}
inline ::google::protobuf::int32 WorldAccount::cash() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.WorldAccount.cash)
  return cash_;
}
inline void WorldAccount::set_cash(::google::protobuf::int32 value) {
  set_has_cash();
  cash_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.WorldAccount.cash)
}

// optional int32 money = 11;
inline bool WorldAccount::has_money() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WorldAccount::set_has_money() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WorldAccount::clear_has_money() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WorldAccount::clear_money() {
  money_ = 0;
  clear_has_money();
}
inline ::google::protobuf::int32 WorldAccount::money() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.WorldAccount.money)
  return money_;
}
inline void WorldAccount::set_money(::google::protobuf::int32 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.WorldAccount.money)
}

// optional int32 blade_point = 12;
inline bool WorldAccount::has_blade_point() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WorldAccount::set_has_blade_point() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WorldAccount::clear_has_blade_point() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WorldAccount::clear_blade_point() {
  blade_point_ = 0;
  clear_has_blade_point();
}
inline ::google::protobuf::int32 WorldAccount::blade_point() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.WorldAccount.blade_point)
  return blade_point_;
}
inline void WorldAccount::set_blade_point(::google::protobuf::int32 value) {
  set_has_blade_point();
  blade_point_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.WorldAccount.blade_point)
}

// optional int32 blade_point_max = 13;
inline bool WorldAccount::has_blade_point_max() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void WorldAccount::set_has_blade_point_max() {
  _has_bits_[0] |= 0x00000020u;
}
inline void WorldAccount::clear_has_blade_point_max() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void WorldAccount::clear_blade_point_max() {
  blade_point_max_ = 0;
  clear_has_blade_point_max();
}
inline ::google::protobuf::int32 WorldAccount::blade_point_max() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.WorldAccount.blade_point_max)
  return blade_point_max_;
}
inline void WorldAccount::set_blade_point_max(::google::protobuf::int32 value) {
  set_has_blade_point_max();
  blade_point_max_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.WorldAccount.blade_point_max)
}

// optional int32 blade_point_charge_lefttime_second = 14;
inline bool WorldAccount::has_blade_point_charge_lefttime_second() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void WorldAccount::set_has_blade_point_charge_lefttime_second() {
  _has_bits_[0] |= 0x00000040u;
}
inline void WorldAccount::clear_has_blade_point_charge_lefttime_second() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void WorldAccount::clear_blade_point_charge_lefttime_second() {
  blade_point_charge_lefttime_second_ = 0;
  clear_has_blade_point_charge_lefttime_second();
}
inline ::google::protobuf::int32 WorldAccount::blade_point_charge_lefttime_second() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.WorldAccount.blade_point_charge_lefttime_second)
  return blade_point_charge_lefttime_second_;
}
inline void WorldAccount::set_blade_point_charge_lefttime_second(::google::protobuf::int32 value) {
  set_has_blade_point_charge_lefttime_second();
  blade_point_charge_lefttime_second_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.WorldAccount.blade_point_charge_lefttime_second)
}

// optional int32 inventory_aether_buy_count = 15;
inline bool WorldAccount::has_inventory_aether_buy_count() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void WorldAccount::set_has_inventory_aether_buy_count() {
  _has_bits_[0] |= 0x00000080u;
}
inline void WorldAccount::clear_has_inventory_aether_buy_count() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void WorldAccount::clear_inventory_aether_buy_count() {
  inventory_aether_buy_count_ = 0;
  clear_has_inventory_aether_buy_count();
}
inline ::google::protobuf::int32 WorldAccount::inventory_aether_buy_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.WorldAccount.inventory_aether_buy_count)
  return inventory_aether_buy_count_;
}
inline void WorldAccount::set_inventory_aether_buy_count(::google::protobuf::int32 value) {
  set_has_inventory_aether_buy_count();
  inventory_aether_buy_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.WorldAccount.inventory_aether_buy_count)
}

// optional int32 inventory_consumable_slot_count = 16;
inline bool WorldAccount::has_inventory_consumable_slot_count() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void WorldAccount::set_has_inventory_consumable_slot_count() {
  _has_bits_[0] |= 0x00000100u;
}
inline void WorldAccount::clear_has_inventory_consumable_slot_count() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void WorldAccount::clear_inventory_consumable_slot_count() {
  inventory_consumable_slot_count_ = 0;
  clear_has_inventory_consumable_slot_count();
}
inline ::google::protobuf::int32 WorldAccount::inventory_consumable_slot_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.WorldAccount.inventory_consumable_slot_count)
  return inventory_consumable_slot_count_;
}
inline void WorldAccount::set_inventory_consumable_slot_count(::google::protobuf::int32 value) {
  set_has_inventory_consumable_slot_count();
  inventory_consumable_slot_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.WorldAccount.inventory_consumable_slot_count)
}

// optional int32 dark_crystal = 17;
inline bool WorldAccount::has_dark_crystal() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void WorldAccount::set_has_dark_crystal() {
  _has_bits_[0] |= 0x00000200u;
}
inline void WorldAccount::clear_has_dark_crystal() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void WorldAccount::clear_dark_crystal() {
  dark_crystal_ = 0;
  clear_has_dark_crystal();
}
inline ::google::protobuf::int32 WorldAccount::dark_crystal() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.WorldAccount.dark_crystal)
  return dark_crystal_;
}
inline void WorldAccount::set_dark_crystal(::google::protobuf::int32 value) {
  set_has_dark_crystal();
  dark_crystal_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.WorldAccount.dark_crystal)
}

// optional int32 stage_boost_ticket = 18;
inline bool WorldAccount::has_stage_boost_ticket() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void WorldAccount::set_has_stage_boost_ticket() {
  _has_bits_[0] |= 0x00000400u;
}
inline void WorldAccount::clear_has_stage_boost_ticket() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void WorldAccount::clear_stage_boost_ticket() {
  stage_boost_ticket_ = 0;
  clear_has_stage_boost_ticket();
}
inline ::google::protobuf::int32 WorldAccount::stage_boost_ticket() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.WorldAccount.stage_boost_ticket)
  return stage_boost_ticket_;
}
inline void WorldAccount::set_stage_boost_ticket(::google::protobuf::int32 value) {
  set_has_stage_boost_ticket();
  stage_boost_ticket_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.WorldAccount.stage_boost_ticket)
}

// optional int32 shop_ten_lottery_ticket = 19;
inline bool WorldAccount::has_shop_ten_lottery_ticket() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void WorldAccount::set_has_shop_ten_lottery_ticket() {
  _has_bits_[0] |= 0x00000800u;
}
inline void WorldAccount::clear_has_shop_ten_lottery_ticket() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void WorldAccount::clear_shop_ten_lottery_ticket() {
  shop_ten_lottery_ticket_ = 0;
  clear_has_shop_ten_lottery_ticket();
}
inline ::google::protobuf::int32 WorldAccount::shop_ten_lottery_ticket() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.WorldAccount.shop_ten_lottery_ticket)
  return shop_ten_lottery_ticket_;
}
inline void WorldAccount::set_shop_ten_lottery_ticket(::google::protobuf::int32 value) {
  set_has_shop_ten_lottery_ticket();
  shop_ten_lottery_ticket_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.WorldAccount.shop_ten_lottery_ticket)
}

// optional int32 fame_point = 20;
inline bool WorldAccount::has_fame_point() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void WorldAccount::set_has_fame_point() {
  _has_bits_[0] |= 0x00001000u;
}
inline void WorldAccount::clear_has_fame_point() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void WorldAccount::clear_fame_point() {
  fame_point_ = 0;
  clear_has_fame_point();
}
inline ::google::protobuf::int32 WorldAccount::fame_point() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.WorldAccount.fame_point)
  return fame_point_;
}
inline void WorldAccount::set_fame_point(::google::protobuf::int32 value) {
  set_has_fame_point();
  fame_point_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.WorldAccount.fame_point)
}

// optional int32 social_point = 21;
inline bool WorldAccount::has_social_point() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void WorldAccount::set_has_social_point() {
  _has_bits_[0] |= 0x00002000u;
}
inline void WorldAccount::clear_has_social_point() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void WorldAccount::clear_social_point() {
  social_point_ = 0;
  clear_has_social_point();
}
inline ::google::protobuf::int32 WorldAccount::social_point() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.WorldAccount.social_point)
  return social_point_;
}
inline void WorldAccount::set_social_point(::google::protobuf::int32 value) {
  set_has_social_point();
  social_point_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.WorldAccount.social_point)
}

// optional int32 last_play_stage_id = 22;
inline bool WorldAccount::has_last_play_stage_id() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void WorldAccount::set_has_last_play_stage_id() {
  _has_bits_[0] |= 0x00004000u;
}
inline void WorldAccount::clear_has_last_play_stage_id() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void WorldAccount::clear_last_play_stage_id() {
  last_play_stage_id_ = 0;
  clear_has_last_play_stage_id();
}
inline ::google::protobuf::int32 WorldAccount::last_play_stage_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.WorldAccount.last_play_stage_id)
  return last_play_stage_id_;
}
inline void WorldAccount::set_last_play_stage_id(::google::protobuf::int32 value) {
  set_has_last_play_stage_id();
  last_play_stage_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.WorldAccount.last_play_stage_id)
}

// optional int32 last_clear_stage_id_normal = 23;
inline bool WorldAccount::has_last_clear_stage_id_normal() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void WorldAccount::set_has_last_clear_stage_id_normal() {
  _has_bits_[0] |= 0x00008000u;
}
inline void WorldAccount::clear_has_last_clear_stage_id_normal() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void WorldAccount::clear_last_clear_stage_id_normal() {
  last_clear_stage_id_normal_ = 0;
  clear_has_last_clear_stage_id_normal();
}
inline ::google::protobuf::int32 WorldAccount::last_clear_stage_id_normal() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.WorldAccount.last_clear_stage_id_normal)
  return last_clear_stage_id_normal_;
}
inline void WorldAccount::set_last_clear_stage_id_normal(::google::protobuf::int32 value) {
  set_has_last_clear_stage_id_normal();
  last_clear_stage_id_normal_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.WorldAccount.last_clear_stage_id_normal)
}

// optional int32 last_clear_stage_id_hard = 24;
inline bool WorldAccount::has_last_clear_stage_id_hard() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void WorldAccount::set_has_last_clear_stage_id_hard() {
  _has_bits_[0] |= 0x00010000u;
}
inline void WorldAccount::clear_has_last_clear_stage_id_hard() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void WorldAccount::clear_last_clear_stage_id_hard() {
  last_clear_stage_id_hard_ = 0;
  clear_has_last_clear_stage_id_hard();
}
inline ::google::protobuf::int32 WorldAccount::last_clear_stage_id_hard() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.WorldAccount.last_clear_stage_id_hard)
  return last_clear_stage_id_hard_;
}
inline void WorldAccount::set_last_clear_stage_id_hard(::google::protobuf::int32 value) {
  set_has_last_clear_stage_id_hard();
  last_clear_stage_id_hard_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.WorldAccount.last_clear_stage_id_hard)
}

// optional int32 last_clear_stage_id_very_hard = 25;
inline bool WorldAccount::has_last_clear_stage_id_very_hard() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void WorldAccount::set_has_last_clear_stage_id_very_hard() {
  _has_bits_[0] |= 0x00020000u;
}
inline void WorldAccount::clear_has_last_clear_stage_id_very_hard() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void WorldAccount::clear_last_clear_stage_id_very_hard() {
  last_clear_stage_id_very_hard_ = 0;
  clear_has_last_clear_stage_id_very_hard();
}
inline ::google::protobuf::int32 WorldAccount::last_clear_stage_id_very_hard() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.WorldAccount.last_clear_stage_id_very_hard)
  return last_clear_stage_id_very_hard_;
}
inline void WorldAccount::set_last_clear_stage_id_very_hard(::google::protobuf::int32 value) {
  set_has_last_clear_stage_id_very_hard();
  last_clear_stage_id_very_hard_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.WorldAccount.last_clear_stage_id_very_hard)
}

// optional int32 last_clear_stage_id_hell = 26;
inline bool WorldAccount::has_last_clear_stage_id_hell() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void WorldAccount::set_has_last_clear_stage_id_hell() {
  _has_bits_[0] |= 0x00040000u;
}
inline void WorldAccount::clear_has_last_clear_stage_id_hell() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void WorldAccount::clear_last_clear_stage_id_hell() {
  last_clear_stage_id_hell_ = 0;
  clear_has_last_clear_stage_id_hell();
}
inline ::google::protobuf::int32 WorldAccount::last_clear_stage_id_hell() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.WorldAccount.last_clear_stage_id_hell)
  return last_clear_stage_id_hell_;
}
inline void WorldAccount::set_last_clear_stage_id_hell(::google::protobuf::int32 value) {
  set_has_last_clear_stage_id_hell();
  last_clear_stage_id_hell_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.WorldAccount.last_clear_stage_id_hell)
}

// optional int32 attendance_day = 27;
inline bool WorldAccount::has_attendance_day() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void WorldAccount::set_has_attendance_day() {
  _has_bits_[0] |= 0x00080000u;
}
inline void WorldAccount::clear_has_attendance_day() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void WorldAccount::clear_attendance_day() {
  attendance_day_ = 0;
  clear_has_attendance_day();
}
inline ::google::protobuf::int32 WorldAccount::attendance_day() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.WorldAccount.attendance_day)
  return attendance_day_;
}
inline void WorldAccount::set_attendance_day(::google::protobuf::int32 value) {
  set_has_attendance_day();
  attendance_day_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.WorldAccount.attendance_day)
}

// optional .b2.protocol.commondata.DailyAttendanceType attendance_type = 28;
inline bool WorldAccount::has_attendance_type() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void WorldAccount::set_has_attendance_type() {
  _has_bits_[0] |= 0x00100000u;
}
inline void WorldAccount::clear_has_attendance_type() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void WorldAccount::clear_attendance_type() {
  attendance_type_ = 1;
  clear_has_attendance_type();
}
inline ::b2::protocol::commondata::DailyAttendanceType WorldAccount::attendance_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.WorldAccount.attendance_type)
  return static_cast< ::b2::protocol::commondata::DailyAttendanceType >(attendance_type_);
}
inline void WorldAccount::set_attendance_type(::b2::protocol::commondata::DailyAttendanceType value) {
  assert(::b2::protocol::commondata::DailyAttendanceType_IsValid(value));
  set_has_attendance_type();
  attendance_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.WorldAccount.attendance_type)
}

// optional int64 nextAttendance_time = 29;
inline bool WorldAccount::has_nextattendance_time() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void WorldAccount::set_has_nextattendance_time() {
  _has_bits_[0] |= 0x00200000u;
}
inline void WorldAccount::clear_has_nextattendance_time() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void WorldAccount::clear_nextattendance_time() {
  nextattendance_time_ = GOOGLE_LONGLONG(0);
  clear_has_nextattendance_time();
}
inline ::google::protobuf::int64 WorldAccount::nextattendance_time() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.WorldAccount.nextAttendance_time)
  return nextattendance_time_;
}
inline void WorldAccount::set_nextattendance_time(::google::protobuf::int64 value) {
  set_has_nextattendance_time();
  nextattendance_time_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.WorldAccount.nextAttendance_time)
}

// optional int32 pvp_match_grade = 30;
inline bool WorldAccount::has_pvp_match_grade() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void WorldAccount::set_has_pvp_match_grade() {
  _has_bits_[0] |= 0x00400000u;
}
inline void WorldAccount::clear_has_pvp_match_grade() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void WorldAccount::clear_pvp_match_grade() {
  pvp_match_grade_ = 0;
  clear_has_pvp_match_grade();
}
inline ::google::protobuf::int32 WorldAccount::pvp_match_grade() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.WorldAccount.pvp_match_grade)
  return pvp_match_grade_;
}
inline void WorldAccount::set_pvp_match_grade(::google::protobuf::int32 value) {
  set_has_pvp_match_grade();
  pvp_match_grade_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.WorldAccount.pvp_match_grade)
}

// optional int32 pvp_match_star_count = 31;
inline bool WorldAccount::has_pvp_match_star_count() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void WorldAccount::set_has_pvp_match_star_count() {
  _has_bits_[0] |= 0x00800000u;
}
inline void WorldAccount::clear_has_pvp_match_star_count() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void WorldAccount::clear_pvp_match_star_count() {
  pvp_match_star_count_ = 0;
  clear_has_pvp_match_star_count();
}
inline ::google::protobuf::int32 WorldAccount::pvp_match_star_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.WorldAccount.pvp_match_star_count)
  return pvp_match_star_count_;
}
inline void WorldAccount::set_pvp_match_star_count(::google::protobuf::int32 value) {
  set_has_pvp_match_star_count();
  pvp_match_star_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.WorldAccount.pvp_match_star_count)
}

// optional int32 assault_match_grade = 32;
inline bool WorldAccount::has_assault_match_grade() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void WorldAccount::set_has_assault_match_grade() {
  _has_bits_[0] |= 0x01000000u;
}
inline void WorldAccount::clear_has_assault_match_grade() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void WorldAccount::clear_assault_match_grade() {
  assault_match_grade_ = 0;
  clear_has_assault_match_grade();
}
inline ::google::protobuf::int32 WorldAccount::assault_match_grade() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.WorldAccount.assault_match_grade)
  return assault_match_grade_;
}
inline void WorldAccount::set_assault_match_grade(::google::protobuf::int32 value) {
  set_has_assault_match_grade();
  assault_match_grade_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.WorldAccount.assault_match_grade)
}

// optional int32 assault_match_star_count = 33;
inline bool WorldAccount::has_assault_match_star_count() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void WorldAccount::set_has_assault_match_star_count() {
  _has_bits_[0] |= 0x02000000u;
}
inline void WorldAccount::clear_has_assault_match_star_count() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void WorldAccount::clear_assault_match_star_count() {
  assault_match_star_count_ = 0;
  clear_has_assault_match_star_count();
}
inline ::google::protobuf::int32 WorldAccount::assault_match_star_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.WorldAccount.assault_match_star_count)
  return assault_match_star_count_;
}
inline void WorldAccount::set_assault_match_star_count(::google::protobuf::int32 value) {
  set_has_assault_match_star_count();
  assault_match_star_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.WorldAccount.assault_match_star_count)
}

// optional int32 daily_play_time_in_sec = 40;
inline bool WorldAccount::has_daily_play_time_in_sec() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void WorldAccount::set_has_daily_play_time_in_sec() {
  _has_bits_[0] |= 0x04000000u;
}
inline void WorldAccount::clear_has_daily_play_time_in_sec() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void WorldAccount::clear_daily_play_time_in_sec() {
  daily_play_time_in_sec_ = 0;
  clear_has_daily_play_time_in_sec();
}
inline ::google::protobuf::int32 WorldAccount::daily_play_time_in_sec() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.WorldAccount.daily_play_time_in_sec)
  return daily_play_time_in_sec_;
}
inline void WorldAccount::set_daily_play_time_in_sec(::google::protobuf::int32 value) {
  set_has_daily_play_time_in_sec();
  daily_play_time_in_sec_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.WorldAccount.daily_play_time_in_sec)
}

// optional int32 daily_play_time_reward_index = 41;
inline bool WorldAccount::has_daily_play_time_reward_index() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void WorldAccount::set_has_daily_play_time_reward_index() {
  _has_bits_[0] |= 0x08000000u;
}
inline void WorldAccount::clear_has_daily_play_time_reward_index() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void WorldAccount::clear_daily_play_time_reward_index() {
  daily_play_time_reward_index_ = 0;
  clear_has_daily_play_time_reward_index();
}
inline ::google::protobuf::int32 WorldAccount::daily_play_time_reward_index() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.WorldAccount.daily_play_time_reward_index)
  return daily_play_time_reward_index_;
}
inline void WorldAccount::set_daily_play_time_reward_index(::google::protobuf::int32 value) {
  set_has_daily_play_time_reward_index();
  daily_play_time_reward_index_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.WorldAccount.daily_play_time_reward_index)
}

// optional int64 daily_play_time_update_time = 42;
inline bool WorldAccount::has_daily_play_time_update_time() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void WorldAccount::set_has_daily_play_time_update_time() {
  _has_bits_[0] |= 0x10000000u;
}
inline void WorldAccount::clear_has_daily_play_time_update_time() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void WorldAccount::clear_daily_play_time_update_time() {
  daily_play_time_update_time_ = GOOGLE_LONGLONG(0);
  clear_has_daily_play_time_update_time();
}
inline ::google::protobuf::int64 WorldAccount::daily_play_time_update_time() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.WorldAccount.daily_play_time_update_time)
  return daily_play_time_update_time_;
}
inline void WorldAccount::set_daily_play_time_update_time(::google::protobuf::int64 value) {
  set_has_daily_play_time_update_time();
  daily_play_time_update_time_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.WorldAccount.daily_play_time_update_time)
}

// optional int64 rest_time = 43;
inline bool WorldAccount::has_rest_time() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void WorldAccount::set_has_rest_time() {
  _has_bits_[0] |= 0x20000000u;
}
inline void WorldAccount::clear_has_rest_time() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void WorldAccount::clear_rest_time() {
  rest_time_ = GOOGLE_LONGLONG(0);
  clear_has_rest_time();
}
inline ::google::protobuf::int64 WorldAccount::rest_time() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.WorldAccount.rest_time)
  return rest_time_;
}
inline void WorldAccount::set_rest_time(::google::protobuf::int64 value) {
  set_has_rest_time();
  rest_time_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.WorldAccount.rest_time)
}

// optional int64 next_fairy_gift_time = 44;
inline bool WorldAccount::has_next_fairy_gift_time() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void WorldAccount::set_has_next_fairy_gift_time() {
  _has_bits_[0] |= 0x40000000u;
}
inline void WorldAccount::clear_has_next_fairy_gift_time() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void WorldAccount::clear_next_fairy_gift_time() {
  next_fairy_gift_time_ = GOOGLE_LONGLONG(0);
  clear_has_next_fairy_gift_time();
}
inline ::google::protobuf::int64 WorldAccount::next_fairy_gift_time() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.WorldAccount.next_fairy_gift_time)
  return next_fairy_gift_time_;
}
inline void WorldAccount::set_next_fairy_gift_time(::google::protobuf::int64 value) {
  set_has_next_fairy_gift_time();
  next_fairy_gift_time_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.WorldAccount.next_fairy_gift_time)
}

// optional int64 leave_guild_time = 50;
inline bool WorldAccount::has_leave_guild_time() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void WorldAccount::set_has_leave_guild_time() {
  _has_bits_[0] |= 0x80000000u;
}
inline void WorldAccount::clear_has_leave_guild_time() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void WorldAccount::clear_leave_guild_time() {
  leave_guild_time_ = GOOGLE_LONGLONG(0);
  clear_has_leave_guild_time();
}
inline ::google::protobuf::int64 WorldAccount::leave_guild_time() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.WorldAccount.leave_guild_time)
  return leave_guild_time_;
}
inline void WorldAccount::set_leave_guild_time(::google::protobuf::int64 value) {
  set_has_leave_guild_time();
  leave_guild_time_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.WorldAccount.leave_guild_time)
}

// optional int64 guild_id = 51;
inline bool WorldAccount::has_guild_id() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void WorldAccount::set_has_guild_id() {
  _has_bits_[1] |= 0x00000001u;
}
inline void WorldAccount::clear_has_guild_id() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void WorldAccount::clear_guild_id() {
  guild_id_ = GOOGLE_LONGLONG(0);
  clear_has_guild_id();
}
inline ::google::protobuf::int64 WorldAccount::guild_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.WorldAccount.guild_id)
  return guild_id_;
}
inline void WorldAccount::set_guild_id(::google::protobuf::int64 value) {
  set_has_guild_id();
  guild_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.WorldAccount.guild_id)
}

// optional int64 kicked_guild_id = 52;
inline bool WorldAccount::has_kicked_guild_id() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void WorldAccount::set_has_kicked_guild_id() {
  _has_bits_[1] |= 0x00000002u;
}
inline void WorldAccount::clear_has_kicked_guild_id() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void WorldAccount::clear_kicked_guild_id() {
  kicked_guild_id_ = GOOGLE_LONGLONG(0);
  clear_has_kicked_guild_id();
}
inline ::google::protobuf::int64 WorldAccount::kicked_guild_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.WorldAccount.kicked_guild_id)
  return kicked_guild_id_;
}
inline void WorldAccount::set_kicked_guild_id(::google::protobuf::int64 value) {
  set_has_kicked_guild_id();
  kicked_guild_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.WorldAccount.kicked_guild_id)
}

// optional int64 gold_buff_end_time = 60;
inline bool WorldAccount::has_gold_buff_end_time() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void WorldAccount::set_has_gold_buff_end_time() {
  _has_bits_[1] |= 0x00000004u;
}
inline void WorldAccount::clear_has_gold_buff_end_time() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void WorldAccount::clear_gold_buff_end_time() {
  gold_buff_end_time_ = GOOGLE_LONGLONG(0);
  clear_has_gold_buff_end_time();
}
inline ::google::protobuf::int64 WorldAccount::gold_buff_end_time() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.WorldAccount.gold_buff_end_time)
  return gold_buff_end_time_;
}
inline void WorldAccount::set_gold_buff_end_time(::google::protobuf::int64 value) {
  set_has_gold_buff_end_time();
  gold_buff_end_time_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.WorldAccount.gold_buff_end_time)
}

// optional int64 exp_buff_end_time = 61;
inline bool WorldAccount::has_exp_buff_end_time() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void WorldAccount::set_has_exp_buff_end_time() {
  _has_bits_[1] |= 0x00000008u;
}
inline void WorldAccount::clear_has_exp_buff_end_time() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void WorldAccount::clear_exp_buff_end_time() {
  exp_buff_end_time_ = GOOGLE_LONGLONG(0);
  clear_has_exp_buff_end_time();
}
inline ::google::protobuf::int64 WorldAccount::exp_buff_end_time() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.WorldAccount.exp_buff_end_time)
  return exp_buff_end_time_;
}
inline void WorldAccount::set_exp_buff_end_time(::google::protobuf::int64 value) {
  set_has_exp_buff_end_time();
  exp_buff_end_time_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.WorldAccount.exp_buff_end_time)
}

// optional int64 gold_buff_ticket = 62;
inline bool WorldAccount::has_gold_buff_ticket() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void WorldAccount::set_has_gold_buff_ticket() {
  _has_bits_[1] |= 0x00000010u;
}
inline void WorldAccount::clear_has_gold_buff_ticket() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void WorldAccount::clear_gold_buff_ticket() {
  gold_buff_ticket_ = GOOGLE_LONGLONG(0);
  clear_has_gold_buff_ticket();
}
inline ::google::protobuf::int64 WorldAccount::gold_buff_ticket() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.WorldAccount.gold_buff_ticket)
  return gold_buff_ticket_;
}
inline void WorldAccount::set_gold_buff_ticket(::google::protobuf::int64 value) {
  set_has_gold_buff_ticket();
  gold_buff_ticket_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.WorldAccount.gold_buff_ticket)
}

// optional int64 exp_buff_ticket = 63;
inline bool WorldAccount::has_exp_buff_ticket() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void WorldAccount::set_has_exp_buff_ticket() {
  _has_bits_[1] |= 0x00000020u;
}
inline void WorldAccount::clear_has_exp_buff_ticket() {
  _has_bits_[1] &= ~0x00000020u;
}
inline void WorldAccount::clear_exp_buff_ticket() {
  exp_buff_ticket_ = GOOGLE_LONGLONG(0);
  clear_has_exp_buff_ticket();
}
inline ::google::protobuf::int64 WorldAccount::exp_buff_ticket() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.WorldAccount.exp_buff_ticket)
  return exp_buff_ticket_;
}
inline void WorldAccount::set_exp_buff_ticket(::google::protobuf::int64 value) {
  set_has_exp_buff_ticket();
  exp_buff_ticket_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.WorldAccount.exp_buff_ticket)
}

// optional int32 stage_auto_clear_ticket = 70;
inline bool WorldAccount::has_stage_auto_clear_ticket() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
inline void WorldAccount::set_has_stage_auto_clear_ticket() {
  _has_bits_[1] |= 0x00000040u;
}
inline void WorldAccount::clear_has_stage_auto_clear_ticket() {
  _has_bits_[1] &= ~0x00000040u;
}
inline void WorldAccount::clear_stage_auto_clear_ticket() {
  stage_auto_clear_ticket_ = 0;
  clear_has_stage_auto_clear_ticket();
}
inline ::google::protobuf::int32 WorldAccount::stage_auto_clear_ticket() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.WorldAccount.stage_auto_clear_ticket)
  return stage_auto_clear_ticket_;
}
inline void WorldAccount::set_stage_auto_clear_ticket(::google::protobuf::int32 value) {
  set_has_stage_auto_clear_ticket();
  stage_auto_clear_ticket_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.WorldAccount.stage_auto_clear_ticket)
}

// optional int32 exchange_count_gold = 71;
inline bool WorldAccount::has_exchange_count_gold() const {
  return (_has_bits_[1] & 0x00000080u) != 0;
}
inline void WorldAccount::set_has_exchange_count_gold() {
  _has_bits_[1] |= 0x00000080u;
}
inline void WorldAccount::clear_has_exchange_count_gold() {
  _has_bits_[1] &= ~0x00000080u;
}
inline void WorldAccount::clear_exchange_count_gold() {
  exchange_count_gold_ = 0;
  clear_has_exchange_count_gold();
}
inline ::google::protobuf::int32 WorldAccount::exchange_count_gold() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.WorldAccount.exchange_count_gold)
  return exchange_count_gold_;
}
inline void WorldAccount::set_exchange_count_gold(::google::protobuf::int32 value) {
  set_has_exchange_count_gold();
  exchange_count_gold_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.WorldAccount.exchange_count_gold)
}

// optional int32 exchange_count_gem = 72;
inline bool WorldAccount::has_exchange_count_gem() const {
  return (_has_bits_[1] & 0x00000100u) != 0;
}
inline void WorldAccount::set_has_exchange_count_gem() {
  _has_bits_[1] |= 0x00000100u;
}
inline void WorldAccount::clear_has_exchange_count_gem() {
  _has_bits_[1] &= ~0x00000100u;
}
inline void WorldAccount::clear_exchange_count_gem() {
  exchange_count_gem_ = 0;
  clear_has_exchange_count_gem();
}
inline ::google::protobuf::int32 WorldAccount::exchange_count_gem() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.WorldAccount.exchange_count_gem)
  return exchange_count_gem_;
}
inline void WorldAccount::set_exchange_count_gem(::google::protobuf::int32 value) {
  set_has_exchange_count_gem();
  exchange_count_gem_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.WorldAccount.exchange_count_gem)
}

// -------------------------------------------------------------------

// LightAccount

// optional int64 account_id = 1;
inline bool LightAccount::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LightAccount::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LightAccount::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LightAccount::clear_account_id() {
  account_id_ = GOOGLE_LONGLONG(0);
  clear_has_account_id();
}
inline ::google::protobuf::int64 LightAccount::account_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.LightAccount.account_id)
  return account_id_;
}
inline void LightAccount::set_account_id(::google::protobuf::int64 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.LightAccount.account_id)
}

// optional int32 cash = 5;
inline bool LightAccount::has_cash() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LightAccount::set_has_cash() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LightAccount::clear_has_cash() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LightAccount::clear_cash() {
  cash_ = 0;
  clear_has_cash();
}
inline ::google::protobuf::int32 LightAccount::cash() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.LightAccount.cash)
  return cash_;
}
inline void LightAccount::set_cash(::google::protobuf::int32 value) {
  set_has_cash();
  cash_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.LightAccount.cash)
}

// optional int32 money = 6;
inline bool LightAccount::has_money() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LightAccount::set_has_money() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LightAccount::clear_has_money() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LightAccount::clear_money() {
  money_ = 0;
  clear_has_money();
}
inline ::google::protobuf::int32 LightAccount::money() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.LightAccount.money)
  return money_;
}
inline void LightAccount::set_money(::google::protobuf::int32 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.LightAccount.money)
}

// optional int32 blade_point = 7;
inline bool LightAccount::has_blade_point() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LightAccount::set_has_blade_point() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LightAccount::clear_has_blade_point() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LightAccount::clear_blade_point() {
  blade_point_ = 0;
  clear_has_blade_point();
}
inline ::google::protobuf::int32 LightAccount::blade_point() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.LightAccount.blade_point)
  return blade_point_;
}
inline void LightAccount::set_blade_point(::google::protobuf::int32 value) {
  set_has_blade_point();
  blade_point_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.LightAccount.blade_point)
}

// optional int32 dark_crystal = 8;
inline bool LightAccount::has_dark_crystal() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LightAccount::set_has_dark_crystal() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LightAccount::clear_has_dark_crystal() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LightAccount::clear_dark_crystal() {
  dark_crystal_ = 0;
  clear_has_dark_crystal();
}
inline ::google::protobuf::int32 LightAccount::dark_crystal() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.LightAccount.dark_crystal)
  return dark_crystal_;
}
inline void LightAccount::set_dark_crystal(::google::protobuf::int32 value) {
  set_has_dark_crystal();
  dark_crystal_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.LightAccount.dark_crystal)
}

// optional int32 social_point = 9;
inline bool LightAccount::has_social_point() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LightAccount::set_has_social_point() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LightAccount::clear_has_social_point() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LightAccount::clear_social_point() {
  social_point_ = 0;
  clear_has_social_point();
}
inline ::google::protobuf::int32 LightAccount::social_point() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.LightAccount.social_point)
  return social_point_;
}
inline void LightAccount::set_social_point(::google::protobuf::int32 value) {
  set_has_social_point();
  social_point_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.LightAccount.social_point)
}

// optional int32 stage_boost_ticket = 10;
inline bool LightAccount::has_stage_boost_ticket() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LightAccount::set_has_stage_boost_ticket() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LightAccount::clear_has_stage_boost_ticket() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LightAccount::clear_stage_boost_ticket() {
  stage_boost_ticket_ = 0;
  clear_has_stage_boost_ticket();
}
inline ::google::protobuf::int32 LightAccount::stage_boost_ticket() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.LightAccount.stage_boost_ticket)
  return stage_boost_ticket_;
}
inline void LightAccount::set_stage_boost_ticket(::google::protobuf::int32 value) {
  set_has_stage_boost_ticket();
  stage_boost_ticket_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.LightAccount.stage_boost_ticket)
}

// optional int32 shop_ten_lottery_ticket = 11;
inline bool LightAccount::has_shop_ten_lottery_ticket() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void LightAccount::set_has_shop_ten_lottery_ticket() {
  _has_bits_[0] |= 0x00000080u;
}
inline void LightAccount::clear_has_shop_ten_lottery_ticket() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void LightAccount::clear_shop_ten_lottery_ticket() {
  shop_ten_lottery_ticket_ = 0;
  clear_has_shop_ten_lottery_ticket();
}
inline ::google::protobuf::int32 LightAccount::shop_ten_lottery_ticket() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.LightAccount.shop_ten_lottery_ticket)
  return shop_ten_lottery_ticket_;
}
inline void LightAccount::set_shop_ten_lottery_ticket(::google::protobuf::int32 value) {
  set_has_shop_ten_lottery_ticket();
  shop_ten_lottery_ticket_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.LightAccount.shop_ten_lottery_ticket)
}

// optional int32 fame_point = 12;
inline bool LightAccount::has_fame_point() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void LightAccount::set_has_fame_point() {
  _has_bits_[0] |= 0x00000100u;
}
inline void LightAccount::clear_has_fame_point() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void LightAccount::clear_fame_point() {
  fame_point_ = 0;
  clear_has_fame_point();
}
inline ::google::protobuf::int32 LightAccount::fame_point() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.LightAccount.fame_point)
  return fame_point_;
}
inline void LightAccount::set_fame_point(::google::protobuf::int32 value) {
  set_has_fame_point();
  fame_point_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.LightAccount.fame_point)
}

// optional int32 stage_auto_clear_ticket = 13;
inline bool LightAccount::has_stage_auto_clear_ticket() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void LightAccount::set_has_stage_auto_clear_ticket() {
  _has_bits_[0] |= 0x00000200u;
}
inline void LightAccount::clear_has_stage_auto_clear_ticket() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void LightAccount::clear_stage_auto_clear_ticket() {
  stage_auto_clear_ticket_ = 0;
  clear_has_stage_auto_clear_ticket();
}
inline ::google::protobuf::int32 LightAccount::stage_auto_clear_ticket() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.LightAccount.stage_auto_clear_ticket)
  return stage_auto_clear_ticket_;
}
inline void LightAccount::set_stage_auto_clear_ticket(::google::protobuf::int32 value) {
  set_has_stage_auto_clear_ticket();
  stage_auto_clear_ticket_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.LightAccount.stage_auto_clear_ticket)
}

// -------------------------------------------------------------------

// AccountInfo

// required string nickname = 1;
inline bool AccountInfo::has_nickname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AccountInfo::set_has_nickname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AccountInfo::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AccountInfo::clear_nickname() {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_->clear();
  }
  clear_has_nickname();
}
inline const ::std::string& AccountInfo::nickname() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.AccountInfo.nickname)
  return *nickname_;
}
inline void AccountInfo::set_nickname(const ::std::string& value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.AccountInfo.nickname)
}
inline void AccountInfo::set_nickname(const char* value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set_char:b2.protocol.commondata.AccountInfo.nickname)
}
inline void AccountInfo::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:b2.protocol.commondata.AccountInfo.nickname)
}
inline ::std::string* AccountInfo::mutable_nickname() {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.AccountInfo.nickname)
  return nickname_;
}
inline ::std::string* AccountInfo::release_nickname() {
  clear_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = nickname_;
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AccountInfo::set_allocated_nickname(::std::string* nickname) {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nickname_;
  }
  if (nickname) {
    set_has_nickname();
    nickname_ = nickname;
  } else {
    clear_has_nickname();
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.commondata.AccountInfo.nickname)
}

// repeated .b2.protocol.commondata.Character characters = 2;
inline int AccountInfo::characters_size() const {
  return characters_.size();
}
inline void AccountInfo::clear_characters() {
  characters_.Clear();
}
inline const ::b2::protocol::commondata::Character& AccountInfo::characters(int index) const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.AccountInfo.characters)
  return characters_.Get(index);
}
inline ::b2::protocol::commondata::Character* AccountInfo::mutable_characters(int index) {
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.AccountInfo.characters)
  return characters_.Mutable(index);
}
inline ::b2::protocol::commondata::Character* AccountInfo::add_characters() {
  // @@protoc_insertion_point(field_add:b2.protocol.commondata.AccountInfo.characters)
  return characters_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Character >&
AccountInfo::characters() const {
  // @@protoc_insertion_point(field_list:b2.protocol.commondata.AccountInfo.characters)
  return characters_;
}
inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Character >*
AccountInfo::mutable_characters() {
  // @@protoc_insertion_point(field_mutable_list:b2.protocol.commondata.AccountInfo.characters)
  return &characters_;
}

// repeated .b2.protocol.commondata.Item equip_items = 3;
inline int AccountInfo::equip_items_size() const {
  return equip_items_.size();
}
inline void AccountInfo::clear_equip_items() {
  equip_items_.Clear();
}
inline const ::b2::protocol::commondata::Item& AccountInfo::equip_items(int index) const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.AccountInfo.equip_items)
  return equip_items_.Get(index);
}
inline ::b2::protocol::commondata::Item* AccountInfo::mutable_equip_items(int index) {
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.AccountInfo.equip_items)
  return equip_items_.Mutable(index);
}
inline ::b2::protocol::commondata::Item* AccountInfo::add_equip_items() {
  // @@protoc_insertion_point(field_add:b2.protocol.commondata.AccountInfo.equip_items)
  return equip_items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Item >&
AccountInfo::equip_items() const {
  // @@protoc_insertion_point(field_list:b2.protocol.commondata.AccountInfo.equip_items)
  return equip_items_;
}
inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Item >*
AccountInfo::mutable_equip_items() {
  // @@protoc_insertion_point(field_mutable_list:b2.protocol.commondata.AccountInfo.equip_items)
  return &equip_items_;
}

// repeated .b2.protocol.commondata.Costume equip_costumes = 4;
inline int AccountInfo::equip_costumes_size() const {
  return equip_costumes_.size();
}
inline void AccountInfo::clear_equip_costumes() {
  equip_costumes_.Clear();
}
inline const ::b2::protocol::commondata::Costume& AccountInfo::equip_costumes(int index) const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.AccountInfo.equip_costumes)
  return equip_costumes_.Get(index);
}
inline ::b2::protocol::commondata::Costume* AccountInfo::mutable_equip_costumes(int index) {
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.AccountInfo.equip_costumes)
  return equip_costumes_.Mutable(index);
}
inline ::b2::protocol::commondata::Costume* AccountInfo::add_equip_costumes() {
  // @@protoc_insertion_point(field_add:b2.protocol.commondata.AccountInfo.equip_costumes)
  return equip_costumes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Costume >&
AccountInfo::equip_costumes() const {
  // @@protoc_insertion_point(field_list:b2.protocol.commondata.AccountInfo.equip_costumes)
  return equip_costumes_;
}
inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Costume >*
AccountInfo::mutable_equip_costumes() {
  // @@protoc_insertion_point(field_mutable_list:b2.protocol.commondata.AccountInfo.equip_costumes)
  return &equip_costumes_;
}

// repeated .b2.protocol.commondata.Totem equip_totems = 5;
inline int AccountInfo::equip_totems_size() const {
  return equip_totems_.size();
}
inline void AccountInfo::clear_equip_totems() {
  equip_totems_.Clear();
}
inline const ::b2::protocol::commondata::Totem& AccountInfo::equip_totems(int index) const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.AccountInfo.equip_totems)
  return equip_totems_.Get(index);
}
inline ::b2::protocol::commondata::Totem* AccountInfo::mutable_equip_totems(int index) {
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.AccountInfo.equip_totems)
  return equip_totems_.Mutable(index);
}
inline ::b2::protocol::commondata::Totem* AccountInfo::add_equip_totems() {
  // @@protoc_insertion_point(field_add:b2.protocol.commondata.AccountInfo.equip_totems)
  return equip_totems_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Totem >&
AccountInfo::equip_totems() const {
  // @@protoc_insertion_point(field_list:b2.protocol.commondata.AccountInfo.equip_totems)
  return equip_totems_;
}
inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Totem >*
AccountInfo::mutable_equip_totems() {
  // @@protoc_insertion_point(field_mutable_list:b2.protocol.commondata.AccountInfo.equip_totems)
  return &equip_totems_;
}

// repeated .b2.protocol.commondata.Aether mount_aethers = 6;
inline int AccountInfo::mount_aethers_size() const {
  return mount_aethers_.size();
}
inline void AccountInfo::clear_mount_aethers() {
  mount_aethers_.Clear();
}
inline const ::b2::protocol::commondata::Aether& AccountInfo::mount_aethers(int index) const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.AccountInfo.mount_aethers)
  return mount_aethers_.Get(index);
}
inline ::b2::protocol::commondata::Aether* AccountInfo::mutable_mount_aethers(int index) {
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.AccountInfo.mount_aethers)
  return mount_aethers_.Mutable(index);
}
inline ::b2::protocol::commondata::Aether* AccountInfo::add_mount_aethers() {
  // @@protoc_insertion_point(field_add:b2.protocol.commondata.AccountInfo.mount_aethers)
  return mount_aethers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Aether >&
AccountInfo::mount_aethers() const {
  // @@protoc_insertion_point(field_list:b2.protocol.commondata.AccountInfo.mount_aethers)
  return mount_aethers_;
}
inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Aether >*
AccountInfo::mutable_mount_aethers() {
  // @@protoc_insertion_point(field_mutable_list:b2.protocol.commondata.AccountInfo.mount_aethers)
  return &mount_aethers_;
}

// repeated .b2.protocol.commondata.Relic relics = 7;
inline int AccountInfo::relics_size() const {
  return relics_.size();
}
inline void AccountInfo::clear_relics() {
  relics_.Clear();
}
inline const ::b2::protocol::commondata::Relic& AccountInfo::relics(int index) const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.AccountInfo.relics)
  return relics_.Get(index);
}
inline ::b2::protocol::commondata::Relic* AccountInfo::mutable_relics(int index) {
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.AccountInfo.relics)
  return relics_.Mutable(index);
}
inline ::b2::protocol::commondata::Relic* AccountInfo::add_relics() {
  // @@protoc_insertion_point(field_add:b2.protocol.commondata.AccountInfo.relics)
  return relics_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Relic >&
AccountInfo::relics() const {
  // @@protoc_insertion_point(field_list:b2.protocol.commondata.AccountInfo.relics)
  return relics_;
}
inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Relic >*
AccountInfo::mutable_relics() {
  // @@protoc_insertion_point(field_mutable_list:b2.protocol.commondata.AccountInfo.relics)
  return &relics_;
}

// repeated .b2.protocol.commondata.WingOption wing_options = 8;
inline int AccountInfo::wing_options_size() const {
  return wing_options_.size();
}
inline void AccountInfo::clear_wing_options() {
  wing_options_.Clear();
}
inline const ::b2::protocol::commondata::WingOption& AccountInfo::wing_options(int index) const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.AccountInfo.wing_options)
  return wing_options_.Get(index);
}
inline ::b2::protocol::commondata::WingOption* AccountInfo::mutable_wing_options(int index) {
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.AccountInfo.wing_options)
  return wing_options_.Mutable(index);
}
inline ::b2::protocol::commondata::WingOption* AccountInfo::add_wing_options() {
  // @@protoc_insertion_point(field_add:b2.protocol.commondata.AccountInfo.wing_options)
  return wing_options_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::WingOption >&
AccountInfo::wing_options() const {
  // @@protoc_insertion_point(field_list:b2.protocol.commondata.AccountInfo.wing_options)
  return wing_options_;
}
inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::WingOption >*
AccountInfo::mutable_wing_options() {
  // @@protoc_insertion_point(field_mutable_list:b2.protocol.commondata.AccountInfo.wing_options)
  return &wing_options_;
}

// repeated .b2.protocol.commondata.GuildSkill guild_skills = 9;
inline int AccountInfo::guild_skills_size() const {
  return guild_skills_.size();
}
inline void AccountInfo::clear_guild_skills() {
  guild_skills_.Clear();
}
inline const ::b2::protocol::commondata::GuildSkill& AccountInfo::guild_skills(int index) const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.AccountInfo.guild_skills)
  return guild_skills_.Get(index);
}
inline ::b2::protocol::commondata::GuildSkill* AccountInfo::mutable_guild_skills(int index) {
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.AccountInfo.guild_skills)
  return guild_skills_.Mutable(index);
}
inline ::b2::protocol::commondata::GuildSkill* AccountInfo::add_guild_skills() {
  // @@protoc_insertion_point(field_add:b2.protocol.commondata.AccountInfo.guild_skills)
  return guild_skills_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::GuildSkill >&
AccountInfo::guild_skills() const {
  // @@protoc_insertion_point(field_list:b2.protocol.commondata.AccountInfo.guild_skills)
  return guild_skills_;
}
inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::GuildSkill >*
AccountInfo::mutable_guild_skills() {
  // @@protoc_insertion_point(field_mutable_list:b2.protocol.commondata.AccountInfo.guild_skills)
  return &guild_skills_;
}

// repeated .b2.protocol.commondata.ItemPreset item_presets = 10;
inline int AccountInfo::item_presets_size() const {
  return item_presets_.size();
}
inline void AccountInfo::clear_item_presets() {
  item_presets_.Clear();
}
inline const ::b2::protocol::commondata::ItemPreset& AccountInfo::item_presets(int index) const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.AccountInfo.item_presets)
  return item_presets_.Get(index);
}
inline ::b2::protocol::commondata::ItemPreset* AccountInfo::mutable_item_presets(int index) {
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.AccountInfo.item_presets)
  return item_presets_.Mutable(index);
}
inline ::b2::protocol::commondata::ItemPreset* AccountInfo::add_item_presets() {
  // @@protoc_insertion_point(field_add:b2.protocol.commondata.AccountInfo.item_presets)
  return item_presets_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::ItemPreset >&
AccountInfo::item_presets() const {
  // @@protoc_insertion_point(field_list:b2.protocol.commondata.AccountInfo.item_presets)
  return item_presets_;
}
inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::ItemPreset >*
AccountInfo::mutable_item_presets() {
  // @@protoc_insertion_point(field_mutable_list:b2.protocol.commondata.AccountInfo.item_presets)
  return &item_presets_;
}

// repeated .b2.protocol.commondata.UnitySkill unity_skills = 11;
inline int AccountInfo::unity_skills_size() const {
  return unity_skills_.size();
}
inline void AccountInfo::clear_unity_skills() {
  unity_skills_.Clear();
}
inline const ::b2::protocol::commondata::UnitySkill& AccountInfo::unity_skills(int index) const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.AccountInfo.unity_skills)
  return unity_skills_.Get(index);
}
inline ::b2::protocol::commondata::UnitySkill* AccountInfo::mutable_unity_skills(int index) {
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.AccountInfo.unity_skills)
  return unity_skills_.Mutable(index);
}
inline ::b2::protocol::commondata::UnitySkill* AccountInfo::add_unity_skills() {
  // @@protoc_insertion_point(field_add:b2.protocol.commondata.AccountInfo.unity_skills)
  return unity_skills_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::UnitySkill >&
AccountInfo::unity_skills() const {
  // @@protoc_insertion_point(field_list:b2.protocol.commondata.AccountInfo.unity_skills)
  return unity_skills_;
}
inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::UnitySkill >*
AccountInfo::mutable_unity_skills() {
  // @@protoc_insertion_point(field_mutable_list:b2.protocol.commondata.AccountInfo.unity_skills)
  return &unity_skills_;
}

// repeated .b2.protocol.commondata.FairyStatus fairies = 12;
inline int AccountInfo::fairies_size() const {
  return fairies_.size();
}
inline void AccountInfo::clear_fairies() {
  fairies_.Clear();
}
inline const ::b2::protocol::commondata::FairyStatus& AccountInfo::fairies(int index) const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.AccountInfo.fairies)
  return fairies_.Get(index);
}
inline ::b2::protocol::commondata::FairyStatus* AccountInfo::mutable_fairies(int index) {
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.AccountInfo.fairies)
  return fairies_.Mutable(index);
}
inline ::b2::protocol::commondata::FairyStatus* AccountInfo::add_fairies() {
  // @@protoc_insertion_point(field_add:b2.protocol.commondata.AccountInfo.fairies)
  return fairies_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::FairyStatus >&
AccountInfo::fairies() const {
  // @@protoc_insertion_point(field_list:b2.protocol.commondata.AccountInfo.fairies)
  return fairies_;
}
inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::FairyStatus >*
AccountInfo::mutable_fairies() {
  // @@protoc_insertion_point(field_mutable_list:b2.protocol.commondata.AccountInfo.fairies)
  return &fairies_;
}

// optional int32 pvp_match_grade = 20;
inline bool AccountInfo::has_pvp_match_grade() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void AccountInfo::set_has_pvp_match_grade() {
  _has_bits_[0] |= 0x00001000u;
}
inline void AccountInfo::clear_has_pvp_match_grade() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void AccountInfo::clear_pvp_match_grade() {
  pvp_match_grade_ = 0;
  clear_has_pvp_match_grade();
}
inline ::google::protobuf::int32 AccountInfo::pvp_match_grade() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.AccountInfo.pvp_match_grade)
  return pvp_match_grade_;
}
inline void AccountInfo::set_pvp_match_grade(::google::protobuf::int32 value) {
  set_has_pvp_match_grade();
  pvp_match_grade_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.AccountInfo.pvp_match_grade)
}

// optional int32 pvp_match_star_count = 21;
inline bool AccountInfo::has_pvp_match_star_count() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void AccountInfo::set_has_pvp_match_star_count() {
  _has_bits_[0] |= 0x00002000u;
}
inline void AccountInfo::clear_has_pvp_match_star_count() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void AccountInfo::clear_pvp_match_star_count() {
  pvp_match_star_count_ = 0;
  clear_has_pvp_match_star_count();
}
inline ::google::protobuf::int32 AccountInfo::pvp_match_star_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.AccountInfo.pvp_match_star_count)
  return pvp_match_star_count_;
}
inline void AccountInfo::set_pvp_match_star_count(::google::protobuf::int32 value) {
  set_has_pvp_match_star_count();
  pvp_match_star_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.AccountInfo.pvp_match_star_count)
}

// optional int32 assault_match_grade = 22;
inline bool AccountInfo::has_assault_match_grade() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void AccountInfo::set_has_assault_match_grade() {
  _has_bits_[0] |= 0x00004000u;
}
inline void AccountInfo::clear_has_assault_match_grade() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void AccountInfo::clear_assault_match_grade() {
  assault_match_grade_ = 0;
  clear_has_assault_match_grade();
}
inline ::google::protobuf::int32 AccountInfo::assault_match_grade() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.AccountInfo.assault_match_grade)
  return assault_match_grade_;
}
inline void AccountInfo::set_assault_match_grade(::google::protobuf::int32 value) {
  set_has_assault_match_grade();
  assault_match_grade_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.AccountInfo.assault_match_grade)
}

// optional int32 assault_match_star_count = 23;
inline bool AccountInfo::has_assault_match_star_count() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void AccountInfo::set_has_assault_match_star_count() {
  _has_bits_[0] |= 0x00008000u;
}
inline void AccountInfo::clear_has_assault_match_star_count() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void AccountInfo::clear_assault_match_star_count() {
  assault_match_star_count_ = 0;
  clear_has_assault_match_star_count();
}
inline ::google::protobuf::int32 AccountInfo::assault_match_star_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.AccountInfo.assault_match_star_count)
  return assault_match_star_count_;
}
inline void AccountInfo::set_assault_match_star_count(::google::protobuf::int32 value) {
  set_has_assault_match_star_count();
  assault_match_star_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.AccountInfo.assault_match_star_count)
}

// repeated .b2.protocol.commondata.PresetNum character_presets = 30;
inline int AccountInfo::character_presets_size() const {
  return character_presets_.size();
}
inline void AccountInfo::clear_character_presets() {
  character_presets_.Clear();
}
inline const ::b2::protocol::commondata::PresetNum& AccountInfo::character_presets(int index) const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.AccountInfo.character_presets)
  return character_presets_.Get(index);
}
inline ::b2::protocol::commondata::PresetNum* AccountInfo::mutable_character_presets(int index) {
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.AccountInfo.character_presets)
  return character_presets_.Mutable(index);
}
inline ::b2::protocol::commondata::PresetNum* AccountInfo::add_character_presets() {
  // @@protoc_insertion_point(field_add:b2.protocol.commondata.AccountInfo.character_presets)
  return character_presets_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::PresetNum >&
AccountInfo::character_presets() const {
  // @@protoc_insertion_point(field_list:b2.protocol.commondata.AccountInfo.character_presets)
  return character_presets_;
}
inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::PresetNum >*
AccountInfo::mutable_character_presets() {
  // @@protoc_insertion_point(field_mutable_list:b2.protocol.commondata.AccountInfo.character_presets)
  return &character_presets_;
}

// required int64 account_id = 40;
inline bool AccountInfo::has_account_id() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void AccountInfo::set_has_account_id() {
  _has_bits_[0] |= 0x00020000u;
}
inline void AccountInfo::clear_has_account_id() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void AccountInfo::clear_account_id() {
  account_id_ = GOOGLE_LONGLONG(0);
  clear_has_account_id();
}
inline ::google::protobuf::int64 AccountInfo::account_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.AccountInfo.account_id)
  return account_id_;
}
inline void AccountInfo::set_account_id(::google::protobuf::int64 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.AccountInfo.account_id)
}

// required int64 guild_id = 50;
inline bool AccountInfo::has_guild_id() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void AccountInfo::set_has_guild_id() {
  _has_bits_[0] |= 0x00040000u;
}
inline void AccountInfo::clear_has_guild_id() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void AccountInfo::clear_guild_id() {
  guild_id_ = GOOGLE_LONGLONG(0);
  clear_has_guild_id();
}
inline ::google::protobuf::int64 AccountInfo::guild_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.AccountInfo.guild_id)
  return guild_id_;
}
inline void AccountInfo::set_guild_id(::google::protobuf::int64 value) {
  set_has_guild_id();
  guild_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.AccountInfo.guild_id)
}

// -------------------------------------------------------------------

// PresetNum

// required .b2.protocol.commondata.Character.TYPE character_type = 1;
inline bool PresetNum::has_character_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PresetNum::set_has_character_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PresetNum::clear_has_character_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PresetNum::clear_character_type() {
  character_type_ = 1;
  clear_has_character_type();
}
inline ::b2::protocol::commondata::Character_TYPE PresetNum::character_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.PresetNum.character_type)
  return static_cast< ::b2::protocol::commondata::Character_TYPE >(character_type_);
}
inline void PresetNum::set_character_type(::b2::protocol::commondata::Character_TYPE value) {
  assert(::b2::protocol::commondata::Character_TYPE_IsValid(value));
  set_has_character_type();
  character_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.PresetNum.character_type)
}

// optional int32 item_preset_num = 2;
inline bool PresetNum::has_item_preset_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PresetNum::set_has_item_preset_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PresetNum::clear_has_item_preset_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PresetNum::clear_item_preset_num() {
  item_preset_num_ = 0;
  clear_has_item_preset_num();
}
inline ::google::protobuf::int32 PresetNum::item_preset_num() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.PresetNum.item_preset_num)
  return item_preset_num_;
}
inline void PresetNum::set_item_preset_num(::google::protobuf::int32 value) {
  set_has_item_preset_num();
  item_preset_num_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.PresetNum.item_preset_num)
}

// optional int32 skill_preset_num = 3;
inline bool PresetNum::has_skill_preset_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PresetNum::set_has_skill_preset_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PresetNum::clear_has_skill_preset_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PresetNum::clear_skill_preset_num() {
  skill_preset_num_ = 0;
  clear_has_skill_preset_num();
}
inline ::google::protobuf::int32 PresetNum::skill_preset_num() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.PresetNum.skill_preset_num)
  return skill_preset_num_;
}
inline void PresetNum::set_skill_preset_num(::google::protobuf::int32 value) {
  set_has_skill_preset_num();
  skill_preset_num_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.PresetNum.skill_preset_num)
}

// -------------------------------------------------------------------

// Character

// required .b2.protocol.commondata.Character.TYPE character_type = 1;
inline bool Character::has_character_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Character::set_has_character_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Character::clear_has_character_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Character::clear_character_type() {
  character_type_ = 1;
  clear_has_character_type();
}
inline ::b2::protocol::commondata::Character_TYPE Character::character_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Character.character_type)
  return static_cast< ::b2::protocol::commondata::Character_TYPE >(character_type_);
}
inline void Character::set_character_type(::b2::protocol::commondata::Character_TYPE value) {
  assert(::b2::protocol::commondata::Character_TYPE_IsValid(value));
  set_has_character_type();
  character_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Character.character_type)
}

// optional int32 style_face = 2;
inline bool Character::has_style_face() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Character::set_has_style_face() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Character::clear_has_style_face() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Character::clear_style_face() {
  style_face_ = 0;
  clear_has_style_face();
}
inline ::google::protobuf::int32 Character::style_face() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Character.style_face)
  return style_face_;
}
inline void Character::set_style_face(::google::protobuf::int32 value) {
  set_has_style_face();
  style_face_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Character.style_face)
}

// optional int32 style_hair = 3;
inline bool Character::has_style_hair() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Character::set_has_style_hair() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Character::clear_has_style_hair() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Character::clear_style_hair() {
  style_hair_ = 0;
  clear_has_style_hair();
}
inline ::google::protobuf::int32 Character::style_hair() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Character.style_hair)
  return style_hair_;
}
inline void Character::set_style_hair(::google::protobuf::int32 value) {
  set_has_style_hair();
  style_hair_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Character.style_hair)
}

// optional int32 style_skin = 4;
inline bool Character::has_style_skin() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Character::set_has_style_skin() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Character::clear_has_style_skin() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Character::clear_style_skin() {
  style_skin_ = 0;
  clear_has_style_skin();
}
inline ::google::protobuf::int32 Character::style_skin() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Character.style_skin)
  return style_skin_;
}
inline void Character::set_style_skin(::google::protobuf::int32 value) {
  set_has_style_skin();
  style_skin_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Character.style_skin)
}

// optional int32 level = 5;
inline bool Character::has_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Character::set_has_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Character::clear_has_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Character::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 Character::level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Character.level)
  return level_;
}
inline void Character::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Character.level)
}

// optional int64 exp = 6;
inline bool Character::has_exp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Character::set_has_exp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Character::clear_has_exp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Character::clear_exp() {
  exp_ = GOOGLE_LONGLONG(0);
  clear_has_exp();
}
inline ::google::protobuf::int64 Character::exp() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Character.exp)
  return exp_;
}
inline void Character::set_exp(::google::protobuf::int64 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Character.exp)
}

// optional int64 exp_max = 7;
inline bool Character::has_exp_max() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Character::set_has_exp_max() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Character::clear_has_exp_max() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Character::clear_exp_max() {
  exp_max_ = GOOGLE_LONGLONG(0);
  clear_has_exp_max();
}
inline ::google::protobuf::int64 Character::exp_max() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Character.exp_max)
  return exp_max_;
}
inline void Character::set_exp_max(::google::protobuf::int64 value) {
  set_has_exp_max();
  exp_max_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Character.exp_max)
}

// optional int32 skill_point_buy_count = 9;
inline bool Character::has_skill_point_buy_count() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Character::set_has_skill_point_buy_count() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Character::clear_has_skill_point_buy_count() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Character::clear_skill_point_buy_count() {
  skill_point_buy_count_ = 0;
  clear_has_skill_point_buy_count();
}
inline ::google::protobuf::int32 Character::skill_point_buy_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Character.skill_point_buy_count)
  return skill_point_buy_count_;
}
inline void Character::set_skill_point_buy_count(::google::protobuf::int32 value) {
  set_has_skill_point_buy_count();
  skill_point_buy_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Character.skill_point_buy_count)
}

// optional int32 inventory_item_buy_count = 10;
inline bool Character::has_inventory_item_buy_count() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Character::set_has_inventory_item_buy_count() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Character::clear_has_inventory_item_buy_count() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Character::clear_inventory_item_buy_count() {
  inventory_item_buy_count_ = 0;
  clear_has_inventory_item_buy_count();
}
inline ::google::protobuf::int32 Character::inventory_item_buy_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Character.inventory_item_buy_count)
  return inventory_item_buy_count_;
}
inline void Character::set_inventory_item_buy_count(::google::protobuf::int32 value) {
  set_has_inventory_item_buy_count();
  inventory_item_buy_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Character.inventory_item_buy_count)
}

// optional int32 inventory_item_slot_count = 11;
inline bool Character::has_inventory_item_slot_count() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Character::set_has_inventory_item_slot_count() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Character::clear_has_inventory_item_slot_count() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Character::clear_inventory_item_slot_count() {
  inventory_item_slot_count_ = 0;
  clear_has_inventory_item_slot_count();
}
inline ::google::protobuf::int32 Character::inventory_item_slot_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Character.inventory_item_slot_count)
  return inventory_item_slot_count_;
}
inline void Character::set_inventory_item_slot_count(::google::protobuf::int32 value) {
  set_has_inventory_item_slot_count();
  inventory_item_slot_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Character.inventory_item_slot_count)
}

// optional int32 rank = 12;
inline bool Character::has_rank() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Character::set_has_rank() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Character::clear_has_rank() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Character::clear_rank() {
  rank_ = 0;
  clear_has_rank();
}
inline ::google::protobuf::int32 Character::rank() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Character.rank)
  return rank_;
}
inline void Character::set_rank(::google::protobuf::int32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Character.rank)
}

// optional string name = 13;
inline bool Character::has_name() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Character::set_has_name() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Character::clear_has_name() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Character::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& Character::name() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Character.name)
  return *name_;
}
inline void Character::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Character.name)
}
inline void Character::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:b2.protocol.commondata.Character.name)
}
inline void Character::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:b2.protocol.commondata.Character.name)
}
inline ::std::string* Character::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.Character.name)
  return name_;
}
inline ::std::string* Character::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Character::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.commondata.Character.name)
}

// optional int32 rank_node_index = 14;
inline bool Character::has_rank_node_index() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Character::set_has_rank_node_index() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Character::clear_has_rank_node_index() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Character::clear_rank_node_index() {
  rank_node_index_ = 0;
  clear_has_rank_node_index();
}
inline ::google::protobuf::int32 Character::rank_node_index() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Character.rank_node_index)
  return rank_node_index_;
}
inline void Character::set_rank_node_index(::google::protobuf::int32 value) {
  set_has_rank_node_index();
  rank_node_index_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Character.rank_node_index)
}

// optional bool rank_node_state = 15;
inline bool Character::has_rank_node_state() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Character::set_has_rank_node_state() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Character::clear_has_rank_node_state() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Character::clear_rank_node_state() {
  rank_node_state_ = false;
  clear_has_rank_node_state();
}
inline bool Character::rank_node_state() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Character.rank_node_state)
  return rank_node_state_;
}
inline void Character::set_rank_node_state(bool value) {
  set_has_rank_node_state();
  rank_node_state_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Character.rank_node_state)
}

// optional int32 wing_grade = 16;
inline bool Character::has_wing_grade() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void Character::set_has_wing_grade() {
  _has_bits_[0] |= 0x00004000u;
}
inline void Character::clear_has_wing_grade() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void Character::clear_wing_grade() {
  wing_grade_ = 0;
  clear_has_wing_grade();
}
inline ::google::protobuf::int32 Character::wing_grade() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Character.wing_grade)
  return wing_grade_;
}
inline void Character::set_wing_grade(::google::protobuf::int32 value) {
  set_has_wing_grade();
  wing_grade_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Character.wing_grade)
}

// optional int32 wing_Level = 17;
inline bool Character::has_wing_level() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void Character::set_has_wing_level() {
  _has_bits_[0] |= 0x00008000u;
}
inline void Character::clear_has_wing_level() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void Character::clear_wing_level() {
  wing_level_ = 0;
  clear_has_wing_level();
}
inline ::google::protobuf::int32 Character::wing_level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Character.wing_Level)
  return wing_level_;
}
inline void Character::set_wing_level(::google::protobuf::int32 value) {
  set_has_wing_level();
  wing_level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Character.wing_Level)
}

// optional bool wing_visible = 18;
inline bool Character::has_wing_visible() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void Character::set_has_wing_visible() {
  _has_bits_[0] |= 0x00010000u;
}
inline void Character::clear_has_wing_visible() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void Character::clear_wing_visible() {
  wing_visible_ = false;
  clear_has_wing_visible();
}
inline bool Character::wing_visible() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Character.wing_visible)
  return wing_visible_;
}
inline void Character::set_wing_visible(bool value) {
  set_has_wing_visible();
  wing_visible_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Character.wing_visible)
}

// optional bool helmet_visible = 19;
inline bool Character::has_helmet_visible() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void Character::set_has_helmet_visible() {
  _has_bits_[0] |= 0x00020000u;
}
inline void Character::clear_has_helmet_visible() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void Character::clear_helmet_visible() {
  helmet_visible_ = false;
  clear_has_helmet_visible();
}
inline bool Character::helmet_visible() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Character.helmet_visible)
  return helmet_visible_;
}
inline void Character::set_helmet_visible(bool value) {
  set_has_helmet_visible();
  helmet_visible_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Character.helmet_visible)
}

// optional int32 aether_offense_set_option_id = 20;
inline bool Character::has_aether_offense_set_option_id() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void Character::set_has_aether_offense_set_option_id() {
  _has_bits_[0] |= 0x00040000u;
}
inline void Character::clear_has_aether_offense_set_option_id() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void Character::clear_aether_offense_set_option_id() {
  aether_offense_set_option_id_ = 0;
  clear_has_aether_offense_set_option_id();
}
inline ::google::protobuf::int32 Character::aether_offense_set_option_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Character.aether_offense_set_option_id)
  return aether_offense_set_option_id_;
}
inline void Character::set_aether_offense_set_option_id(::google::protobuf::int32 value) {
  set_has_aether_offense_set_option_id();
  aether_offense_set_option_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Character.aether_offense_set_option_id)
}

// optional int32 aether_defense_set_option_id = 21;
inline bool Character::has_aether_defense_set_option_id() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void Character::set_has_aether_defense_set_option_id() {
  _has_bits_[0] |= 0x00080000u;
}
inline void Character::clear_has_aether_defense_set_option_id() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void Character::clear_aether_defense_set_option_id() {
  aether_defense_set_option_id_ = 0;
  clear_has_aether_defense_set_option_id();
}
inline ::google::protobuf::int32 Character::aether_defense_set_option_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Character.aether_defense_set_option_id)
  return aether_defense_set_option_id_;
}
inline void Character::set_aether_defense_set_option_id(::google::protobuf::int32 value) {
  set_has_aether_defense_set_option_id();
  aether_defense_set_option_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Character.aether_defense_set_option_id)
}

// optional int32 remain_skill_point = 24;
inline bool Character::has_remain_skill_point() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void Character::set_has_remain_skill_point() {
  _has_bits_[0] |= 0x00100000u;
}
inline void Character::clear_has_remain_skill_point() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void Character::clear_remain_skill_point() {
  remain_skill_point_ = 0;
  clear_has_remain_skill_point();
}
inline ::google::protobuf::int32 Character::remain_skill_point() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Character.remain_skill_point)
  return remain_skill_point_;
}
inline void Character::set_remain_skill_point(::google::protobuf::int32 value) {
  set_has_remain_skill_point();
  remain_skill_point_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Character.remain_skill_point)
}

// repeated .b2.protocol.commondata.SkillQuickSlot skill_quick_slots = 25;
inline int Character::skill_quick_slots_size() const {
  return skill_quick_slots_.size();
}
inline void Character::clear_skill_quick_slots() {
  skill_quick_slots_.Clear();
}
inline const ::b2::protocol::commondata::SkillQuickSlot& Character::skill_quick_slots(int index) const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Character.skill_quick_slots)
  return skill_quick_slots_.Get(index);
}
inline ::b2::protocol::commondata::SkillQuickSlot* Character::mutable_skill_quick_slots(int index) {
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.Character.skill_quick_slots)
  return skill_quick_slots_.Mutable(index);
}
inline ::b2::protocol::commondata::SkillQuickSlot* Character::add_skill_quick_slots() {
  // @@protoc_insertion_point(field_add:b2.protocol.commondata.Character.skill_quick_slots)
  return skill_quick_slots_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::SkillQuickSlot >&
Character::skill_quick_slots() const {
  // @@protoc_insertion_point(field_list:b2.protocol.commondata.Character.skill_quick_slots)
  return skill_quick_slots_;
}
inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::SkillQuickSlot >*
Character::mutable_skill_quick_slots() {
  // @@protoc_insertion_point(field_mutable_list:b2.protocol.commondata.Character.skill_quick_slots)
  return &skill_quick_slots_;
}

// repeated .b2.protocol.commondata.Skill skills = 26;
inline int Character::skills_size() const {
  return skills_.size();
}
inline void Character::clear_skills() {
  skills_.Clear();
}
inline const ::b2::protocol::commondata::Skill& Character::skills(int index) const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Character.skills)
  return skills_.Get(index);
}
inline ::b2::protocol::commondata::Skill* Character::mutable_skills(int index) {
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.Character.skills)
  return skills_.Mutable(index);
}
inline ::b2::protocol::commondata::Skill* Character::add_skills() {
  // @@protoc_insertion_point(field_add:b2.protocol.commondata.Character.skills)
  return skills_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Skill >&
Character::skills() const {
  // @@protoc_insertion_point(field_list:b2.protocol.commondata.Character.skills)
  return skills_;
}
inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Skill >*
Character::mutable_skills() {
  // @@protoc_insertion_point(field_mutable_list:b2.protocol.commondata.Character.skills)
  return &skills_;
}

// optional bool unity_skill = 27;
inline bool Character::has_unity_skill() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void Character::set_has_unity_skill() {
  _has_bits_[0] |= 0x00800000u;
}
inline void Character::clear_has_unity_skill() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void Character::clear_unity_skill() {
  unity_skill_ = false;
  clear_has_unity_skill();
}
inline bool Character::unity_skill() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Character.unity_skill)
  return unity_skill_;
}
inline void Character::set_unity_skill(bool value) {
  set_has_unity_skill();
  unity_skill_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Character.unity_skill)
}

// optional bool unity_skill_awaken = 28;
inline bool Character::has_unity_skill_awaken() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void Character::set_has_unity_skill_awaken() {
  _has_bits_[0] |= 0x01000000u;
}
inline void Character::clear_has_unity_skill_awaken() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void Character::clear_unity_skill_awaken() {
  unity_skill_awaken_ = false;
  clear_has_unity_skill_awaken();
}
inline bool Character::unity_skill_awaken() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Character.unity_skill_awaken)
  return unity_skill_awaken_;
}
inline void Character::set_unity_skill_awaken(bool value) {
  set_has_unity_skill_awaken();
  unity_skill_awaken_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Character.unity_skill_awaken)
}

// optional int32 total_power = 29;
inline bool Character::has_total_power() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void Character::set_has_total_power() {
  _has_bits_[0] |= 0x02000000u;
}
inline void Character::clear_has_total_power() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void Character::clear_total_power() {
  total_power_ = 0;
  clear_has_total_power();
}
inline ::google::protobuf::int32 Character::total_power() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Character.total_power)
  return total_power_;
}
inline void Character::set_total_power(::google::protobuf::int32 value) {
  set_has_total_power();
  total_power_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Character.total_power)
}

// optional bool costume_weapon_visible = 31;
inline bool Character::has_costume_weapon_visible() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void Character::set_has_costume_weapon_visible() {
  _has_bits_[0] |= 0x04000000u;
}
inline void Character::clear_has_costume_weapon_visible() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void Character::clear_costume_weapon_visible() {
  costume_weapon_visible_ = false;
  clear_has_costume_weapon_visible();
}
inline bool Character::costume_weapon_visible() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Character.costume_weapon_visible)
  return costume_weapon_visible_;
}
inline void Character::set_costume_weapon_visible(bool value) {
  set_has_costume_weapon_visible();
  costume_weapon_visible_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Character.costume_weapon_visible)
}

// optional bool costume_hat_visible = 32;
inline bool Character::has_costume_hat_visible() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void Character::set_has_costume_hat_visible() {
  _has_bits_[0] |= 0x08000000u;
}
inline void Character::clear_has_costume_hat_visible() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void Character::clear_costume_hat_visible() {
  costume_hat_visible_ = false;
  clear_has_costume_hat_visible();
}
inline bool Character::costume_hat_visible() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Character.costume_hat_visible)
  return costume_hat_visible_;
}
inline void Character::set_costume_hat_visible(bool value) {
  set_has_costume_hat_visible();
  costume_hat_visible_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Character.costume_hat_visible)
}

// optional bool costume_armor_visible = 33;
inline bool Character::has_costume_armor_visible() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void Character::set_has_costume_armor_visible() {
  _has_bits_[0] |= 0x10000000u;
}
inline void Character::clear_has_costume_armor_visible() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void Character::clear_costume_armor_visible() {
  costume_armor_visible_ = false;
  clear_has_costume_armor_visible();
}
inline bool Character::costume_armor_visible() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Character.costume_armor_visible)
  return costume_armor_visible_;
}
inline void Character::set_costume_armor_visible(bool value) {
  set_has_costume_armor_visible();
  costume_armor_visible_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Character.costume_armor_visible)
}

// -------------------------------------------------------------------

// LightCharacter

// required .b2.protocol.commondata.LightCharacter.TYPE character_type = 1;
inline bool LightCharacter::has_character_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LightCharacter::set_has_character_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LightCharacter::clear_has_character_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LightCharacter::clear_character_type() {
  character_type_ = 1;
  clear_has_character_type();
}
inline ::b2::protocol::commondata::LightCharacter_TYPE LightCharacter::character_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.LightCharacter.character_type)
  return static_cast< ::b2::protocol::commondata::LightCharacter_TYPE >(character_type_);
}
inline void LightCharacter::set_character_type(::b2::protocol::commondata::LightCharacter_TYPE value) {
  assert(::b2::protocol::commondata::LightCharacter_TYPE_IsValid(value));
  set_has_character_type();
  character_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.LightCharacter.character_type)
}

// optional int32 level = 2;
inline bool LightCharacter::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LightCharacter::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LightCharacter::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LightCharacter::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 LightCharacter::level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.LightCharacter.level)
  return level_;
}
inline void LightCharacter::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.LightCharacter.level)
}

// optional int64 exp = 3;
inline bool LightCharacter::has_exp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LightCharacter::set_has_exp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LightCharacter::clear_has_exp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LightCharacter::clear_exp() {
  exp_ = GOOGLE_LONGLONG(0);
  clear_has_exp();
}
inline ::google::protobuf::int64 LightCharacter::exp() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.LightCharacter.exp)
  return exp_;
}
inline void LightCharacter::set_exp(::google::protobuf::int64 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.LightCharacter.exp)
}

// optional int64 exp_max = 4;
inline bool LightCharacter::has_exp_max() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LightCharacter::set_has_exp_max() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LightCharacter::clear_has_exp_max() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LightCharacter::clear_exp_max() {
  exp_max_ = GOOGLE_LONGLONG(0);
  clear_has_exp_max();
}
inline ::google::protobuf::int64 LightCharacter::exp_max() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.LightCharacter.exp_max)
  return exp_max_;
}
inline void LightCharacter::set_exp_max(::google::protobuf::int64 value) {
  set_has_exp_max();
  exp_max_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.LightCharacter.exp_max)
}

// optional bool changed_level = 5;
inline bool LightCharacter::has_changed_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LightCharacter::set_has_changed_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LightCharacter::clear_has_changed_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LightCharacter::clear_changed_level() {
  changed_level_ = false;
  clear_has_changed_level();
}
inline bool LightCharacter::changed_level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.LightCharacter.changed_level)
  return changed_level_;
}
inline void LightCharacter::set_changed_level(bool value) {
  set_has_changed_level();
  changed_level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.LightCharacter.changed_level)
}

// optional int32 remain_skill_point = 6;
inline bool LightCharacter::has_remain_skill_point() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LightCharacter::set_has_remain_skill_point() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LightCharacter::clear_has_remain_skill_point() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LightCharacter::clear_remain_skill_point() {
  remain_skill_point_ = 0;
  clear_has_remain_skill_point();
}
inline ::google::protobuf::int32 LightCharacter::remain_skill_point() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.LightCharacter.remain_skill_point)
  return remain_skill_point_;
}
inline void LightCharacter::set_remain_skill_point(::google::protobuf::int32 value) {
  set_has_remain_skill_point();
  remain_skill_point_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.LightCharacter.remain_skill_point)
}

// -------------------------------------------------------------------

// CharacterSummary

// required int64 account_id = 1;
inline bool CharacterSummary::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterSummary::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterSummary::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterSummary::clear_account_id() {
  account_id_ = GOOGLE_LONGLONG(0);
  clear_has_account_id();
}
inline ::google::protobuf::int64 CharacterSummary::account_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.CharacterSummary.account_id)
  return account_id_;
}
inline void CharacterSummary::set_account_id(::google::protobuf::int64 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.CharacterSummary.account_id)
}

// required string account_name = 2;
inline bool CharacterSummary::has_account_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterSummary::set_has_account_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterSummary::clear_has_account_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterSummary::clear_account_name() {
  if (account_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_name_->clear();
  }
  clear_has_account_name();
}
inline const ::std::string& CharacterSummary::account_name() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.CharacterSummary.account_name)
  return *account_name_;
}
inline void CharacterSummary::set_account_name(const ::std::string& value) {
  set_has_account_name();
  if (account_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_name_ = new ::std::string;
  }
  account_name_->assign(value);
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.CharacterSummary.account_name)
}
inline void CharacterSummary::set_account_name(const char* value) {
  set_has_account_name();
  if (account_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_name_ = new ::std::string;
  }
  account_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:b2.protocol.commondata.CharacterSummary.account_name)
}
inline void CharacterSummary::set_account_name(const char* value, size_t size) {
  set_has_account_name();
  if (account_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_name_ = new ::std::string;
  }
  account_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:b2.protocol.commondata.CharacterSummary.account_name)
}
inline ::std::string* CharacterSummary::mutable_account_name() {
  set_has_account_name();
  if (account_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.CharacterSummary.account_name)
  return account_name_;
}
inline ::std::string* CharacterSummary::release_account_name() {
  clear_has_account_name();
  if (account_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = account_name_;
    account_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CharacterSummary::set_allocated_account_name(::std::string* account_name) {
  if (account_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete account_name_;
  }
  if (account_name) {
    set_has_account_name();
    account_name_ = account_name;
  } else {
    clear_has_account_name();
    account_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.commondata.CharacterSummary.account_name)
}

// required .b2.protocol.commondata.Character.TYPE character_type = 3;
inline bool CharacterSummary::has_character_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CharacterSummary::set_has_character_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CharacterSummary::clear_has_character_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CharacterSummary::clear_character_type() {
  character_type_ = 1;
  clear_has_character_type();
}
inline ::b2::protocol::commondata::Character_TYPE CharacterSummary::character_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.CharacterSummary.character_type)
  return static_cast< ::b2::protocol::commondata::Character_TYPE >(character_type_);
}
inline void CharacterSummary::set_character_type(::b2::protocol::commondata::Character_TYPE value) {
  assert(::b2::protocol::commondata::Character_TYPE_IsValid(value));
  set_has_character_type();
  character_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.CharacterSummary.character_type)
}

// required int32 character_level = 4;
inline bool CharacterSummary::has_character_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CharacterSummary::set_has_character_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CharacterSummary::clear_has_character_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CharacterSummary::clear_character_level() {
  character_level_ = 0;
  clear_has_character_level();
}
inline ::google::protobuf::int32 CharacterSummary::character_level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.CharacterSummary.character_level)
  return character_level_;
}
inline void CharacterSummary::set_character_level(::google::protobuf::int32 value) {
  set_has_character_level();
  character_level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.CharacterSummary.character_level)
}

// required int32 power = 5;
inline bool CharacterSummary::has_power() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CharacterSummary::set_has_power() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CharacterSummary::clear_has_power() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CharacterSummary::clear_power() {
  power_ = 0;
  clear_has_power();
}
inline ::google::protobuf::int32 CharacterSummary::power() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.CharacterSummary.power)
  return power_;
}
inline void CharacterSummary::set_power(::google::protobuf::int32 value) {
  set_has_power();
  power_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.CharacterSummary.power)
}

// optional bool is_online = 7;
inline bool CharacterSummary::has_is_online() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CharacterSummary::set_has_is_online() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CharacterSummary::clear_has_is_online() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CharacterSummary::clear_is_online() {
  is_online_ = false;
  clear_has_is_online();
}
inline bool CharacterSummary::is_online() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.CharacterSummary.is_online)
  return is_online_;
}
inline void CharacterSummary::set_is_online(bool value) {
  set_has_is_online();
  is_online_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.CharacterSummary.is_online)
}

// -------------------------------------------------------------------

// User

// required .b2.protocol.commondata.CharacterSummary character_summary = 1;
inline bool User::has_character_summary() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void User::set_has_character_summary() {
  _has_bits_[0] |= 0x00000001u;
}
inline void User::clear_has_character_summary() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void User::clear_character_summary() {
  if (character_summary_ != NULL) character_summary_->::b2::protocol::commondata::CharacterSummary::Clear();
  clear_has_character_summary();
}
inline const ::b2::protocol::commondata::CharacterSummary& User::character_summary() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.User.character_summary)
  return character_summary_ != NULL ? *character_summary_ : *default_instance_->character_summary_;
}
inline ::b2::protocol::commondata::CharacterSummary* User::mutable_character_summary() {
  set_has_character_summary();
  if (character_summary_ == NULL) character_summary_ = new ::b2::protocol::commondata::CharacterSummary;
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.User.character_summary)
  return character_summary_;
}
inline ::b2::protocol::commondata::CharacterSummary* User::release_character_summary() {
  clear_has_character_summary();
  ::b2::protocol::commondata::CharacterSummary* temp = character_summary_;
  character_summary_ = NULL;
  return temp;
}
inline void User::set_allocated_character_summary(::b2::protocol::commondata::CharacterSummary* character_summary) {
  delete character_summary_;
  character_summary_ = character_summary;
  if (character_summary) {
    set_has_character_summary();
  } else {
    clear_has_character_summary();
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.commondata.User.character_summary)
}

// required int64 last_logout_time = 2;
inline bool User::has_last_logout_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void User::set_has_last_logout_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void User::clear_has_last_logout_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void User::clear_last_logout_time() {
  last_logout_time_ = GOOGLE_LONGLONG(0);
  clear_has_last_logout_time();
}
inline ::google::protobuf::int64 User::last_logout_time() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.User.last_logout_time)
  return last_logout_time_;
}
inline void User::set_last_logout_time(::google::protobuf::int64 value) {
  set_has_last_logout_time();
  last_logout_time_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.User.last_logout_time)
}

// optional string guild_name = 11;
inline bool User::has_guild_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void User::set_has_guild_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void User::clear_has_guild_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void User::clear_guild_name() {
  if (guild_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guild_name_->clear();
  }
  clear_has_guild_name();
}
inline const ::std::string& User::guild_name() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.User.guild_name)
  return *guild_name_;
}
inline void User::set_guild_name(const ::std::string& value) {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guild_name_ = new ::std::string;
  }
  guild_name_->assign(value);
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.User.guild_name)
}
inline void User::set_guild_name(const char* value) {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guild_name_ = new ::std::string;
  }
  guild_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:b2.protocol.commondata.User.guild_name)
}
inline void User::set_guild_name(const char* value, size_t size) {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guild_name_ = new ::std::string;
  }
  guild_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:b2.protocol.commondata.User.guild_name)
}
inline ::std::string* User::mutable_guild_name() {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guild_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.User.guild_name)
  return guild_name_;
}
inline ::std::string* User::release_guild_name() {
  clear_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = guild_name_;
    guild_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void User::set_allocated_guild_name(::std::string* guild_name) {
  if (guild_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete guild_name_;
  }
  if (guild_name) {
    set_has_guild_name();
    guild_name_ = guild_name;
  } else {
    clear_has_guild_name();
    guild_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.commondata.User.guild_name)
}

// optional int32 mark_index = 12;
inline bool User::has_mark_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void User::set_has_mark_index() {
  _has_bits_[0] |= 0x00000008u;
}
inline void User::clear_has_mark_index() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void User::clear_mark_index() {
  mark_index_ = 0;
  clear_has_mark_index();
}
inline ::google::protobuf::int32 User::mark_index() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.User.mark_index)
  return mark_index_;
}
inline void User::set_mark_index(::google::protobuf::int32 value) {
  set_has_mark_index();
  mark_index_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.User.mark_index)
}

// optional int32 mark_color = 13;
inline bool User::has_mark_color() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void User::set_has_mark_color() {
  _has_bits_[0] |= 0x00000010u;
}
inline void User::clear_has_mark_color() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void User::clear_mark_color() {
  mark_color_ = 0;
  clear_has_mark_color();
}
inline ::google::protobuf::int32 User::mark_color() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.User.mark_color)
  return mark_color_;
}
inline void User::set_mark_color(::google::protobuf::int32 value) {
  set_has_mark_color();
  mark_color_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.User.mark_color)
}

// optional int32 mark_bg_index = 14;
inline bool User::has_mark_bg_index() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void User::set_has_mark_bg_index() {
  _has_bits_[0] |= 0x00000020u;
}
inline void User::clear_has_mark_bg_index() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void User::clear_mark_bg_index() {
  mark_bg_index_ = 0;
  clear_has_mark_bg_index();
}
inline ::google::protobuf::int32 User::mark_bg_index() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.User.mark_bg_index)
  return mark_bg_index_;
}
inline void User::set_mark_bg_index(::google::protobuf::int32 value) {
  set_has_mark_bg_index();
  mark_bg_index_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.User.mark_bg_index)
}

// optional int32 mark_bg_color = 15;
inline bool User::has_mark_bg_color() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void User::set_has_mark_bg_color() {
  _has_bits_[0] |= 0x00000040u;
}
inline void User::clear_has_mark_bg_color() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void User::clear_mark_bg_color() {
  mark_bg_color_ = 0;
  clear_has_mark_bg_color();
}
inline ::google::protobuf::int32 User::mark_bg_color() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.User.mark_bg_color)
  return mark_bg_color_;
}
inline void User::set_mark_bg_color(::google::protobuf::int32 value) {
  set_has_mark_bg_color();
  mark_bg_color_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.User.mark_bg_color)
}

// -------------------------------------------------------------------

// Friend

// required .b2.protocol.commondata.User user = 1;
inline bool Friend::has_user() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Friend::set_has_user() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Friend::clear_has_user() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Friend::clear_user() {
  if (user_ != NULL) user_->::b2::protocol::commondata::User::Clear();
  clear_has_user();
}
inline const ::b2::protocol::commondata::User& Friend::user() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Friend.user)
  return user_ != NULL ? *user_ : *default_instance_->user_;
}
inline ::b2::protocol::commondata::User* Friend::mutable_user() {
  set_has_user();
  if (user_ == NULL) user_ = new ::b2::protocol::commondata::User;
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.Friend.user)
  return user_;
}
inline ::b2::protocol::commondata::User* Friend::release_user() {
  clear_has_user();
  ::b2::protocol::commondata::User* temp = user_;
  user_ = NULL;
  return temp;
}
inline void Friend::set_allocated_user(::b2::protocol::commondata::User* user) {
  delete user_;
  user_ = user;
  if (user) {
    set_has_user();
  } else {
    clear_has_user();
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.commondata.Friend.user)
}

// required int64 last_social_point_send_time = 2;
inline bool Friend::has_last_social_point_send_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Friend::set_has_last_social_point_send_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Friend::clear_has_last_social_point_send_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Friend::clear_last_social_point_send_time() {
  last_social_point_send_time_ = GOOGLE_LONGLONG(0);
  clear_has_last_social_point_send_time();
}
inline ::google::protobuf::int64 Friend::last_social_point_send_time() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Friend.last_social_point_send_time)
  return last_social_point_send_time_;
}
inline void Friend::set_last_social_point_send_time(::google::protobuf::int64 value) {
  set_has_last_social_point_send_time();
  last_social_point_send_time_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Friend.last_social_point_send_time)
}

// optional bool is_new = 3;
inline bool Friend::has_is_new() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Friend::set_has_is_new() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Friend::clear_has_is_new() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Friend::clear_is_new() {
  is_new_ = false;
  clear_has_is_new();
}
inline bool Friend::is_new() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Friend.is_new)
  return is_new_;
}
inline void Friend::set_is_new(bool value) {
  set_has_is_new();
  is_new_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Friend.is_new)
}

// optional int64 raid_penalty_remove_time = 4;
inline bool Friend::has_raid_penalty_remove_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Friend::set_has_raid_penalty_remove_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Friend::clear_has_raid_penalty_remove_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Friend::clear_raid_penalty_remove_time() {
  raid_penalty_remove_time_ = GOOGLE_LONGLONG(0);
  clear_has_raid_penalty_remove_time();
}
inline ::google::protobuf::int64 Friend::raid_penalty_remove_time() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Friend.raid_penalty_remove_time)
  return raid_penalty_remove_time_;
}
inline void Friend::set_raid_penalty_remove_time(::google::protobuf::int64 value) {
  set_has_raid_penalty_remove_time();
  raid_penalty_remove_time_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Friend.raid_penalty_remove_time)
}

// -------------------------------------------------------------------

// FriendInviteRewardInfo

// required int32 platform_type = 1;
inline bool FriendInviteRewardInfo::has_platform_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FriendInviteRewardInfo::set_has_platform_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FriendInviteRewardInfo::clear_has_platform_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FriendInviteRewardInfo::clear_platform_type() {
  platform_type_ = 0;
  clear_has_platform_type();
}
inline ::google::protobuf::int32 FriendInviteRewardInfo::platform_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.FriendInviteRewardInfo.platform_type)
  return platform_type_;
}
inline void FriendInviteRewardInfo::set_platform_type(::google::protobuf::int32 value) {
  set_has_platform_type();
  platform_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.FriendInviteRewardInfo.platform_type)
}

// required int32 invite_count = 2;
inline bool FriendInviteRewardInfo::has_invite_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FriendInviteRewardInfo::set_has_invite_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FriendInviteRewardInfo::clear_has_invite_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FriendInviteRewardInfo::clear_invite_count() {
  invite_count_ = 0;
  clear_has_invite_count();
}
inline ::google::protobuf::int32 FriendInviteRewardInfo::invite_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.FriendInviteRewardInfo.invite_count)
  return invite_count_;
}
inline void FriendInviteRewardInfo::set_invite_count(::google::protobuf::int32 value) {
  set_has_invite_count();
  invite_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.FriendInviteRewardInfo.invite_count)
}

// required int32 joiner_count = 3;
inline bool FriendInviteRewardInfo::has_joiner_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FriendInviteRewardInfo::set_has_joiner_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FriendInviteRewardInfo::clear_has_joiner_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FriendInviteRewardInfo::clear_joiner_count() {
  joiner_count_ = 0;
  clear_has_joiner_count();
}
inline ::google::protobuf::int32 FriendInviteRewardInfo::joiner_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.FriendInviteRewardInfo.joiner_count)
  return joiner_count_;
}
inline void FriendInviteRewardInfo::set_joiner_count(::google::protobuf::int32 value) {
  set_has_joiner_count();
  joiner_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.FriendInviteRewardInfo.joiner_count)
}

// required int32 invite_reward_mask = 4;
inline bool FriendInviteRewardInfo::has_invite_reward_mask() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FriendInviteRewardInfo::set_has_invite_reward_mask() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FriendInviteRewardInfo::clear_has_invite_reward_mask() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FriendInviteRewardInfo::clear_invite_reward_mask() {
  invite_reward_mask_ = 0;
  clear_has_invite_reward_mask();
}
inline ::google::protobuf::int32 FriendInviteRewardInfo::invite_reward_mask() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.FriendInviteRewardInfo.invite_reward_mask)
  return invite_reward_mask_;
}
inline void FriendInviteRewardInfo::set_invite_reward_mask(::google::protobuf::int32 value) {
  set_has_invite_reward_mask();
  invite_reward_mask_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.FriendInviteRewardInfo.invite_reward_mask)
}

// required int32 joiner_reward_mask = 5;
inline bool FriendInviteRewardInfo::has_joiner_reward_mask() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FriendInviteRewardInfo::set_has_joiner_reward_mask() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FriendInviteRewardInfo::clear_has_joiner_reward_mask() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FriendInviteRewardInfo::clear_joiner_reward_mask() {
  joiner_reward_mask_ = 0;
  clear_has_joiner_reward_mask();
}
inline ::google::protobuf::int32 FriendInviteRewardInfo::joiner_reward_mask() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.FriendInviteRewardInfo.joiner_reward_mask)
  return joiner_reward_mask_;
}
inline void FriendInviteRewardInfo::set_joiner_reward_mask(::google::protobuf::int32 value) {
  set_has_joiner_reward_mask();
  joiner_reward_mask_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.FriendInviteRewardInfo.joiner_reward_mask)
}

// -------------------------------------------------------------------

// Item

// required int64 id = 1;
inline bool Item::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Item::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Item::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Item::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 Item::id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Item.id)
  return id_;
}
inline void Item::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Item.id)
}

// required int32 template_id = 2;
inline bool Item::has_template_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Item::set_has_template_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Item::clear_has_template_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Item::clear_template_id() {
  template_id_ = 0;
  clear_has_template_id();
}
inline ::google::protobuf::int32 Item::template_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Item.template_id)
  return template_id_;
}
inline void Item::set_template_id(::google::protobuf::int32 value) {
  set_has_template_id();
  template_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Item.template_id)
}

// required .b2.protocol.commondata.Item.CharacterType character_type = 3;
inline bool Item::has_character_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Item::set_has_character_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Item::clear_has_character_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Item::clear_character_type() {
  character_type_ = 0;
  clear_has_character_type();
}
inline ::b2::protocol::commondata::Item_CharacterType Item::character_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Item.character_type)
  return static_cast< ::b2::protocol::commondata::Item_CharacterType >(character_type_);
}
inline void Item::set_character_type(::b2::protocol::commondata::Item_CharacterType value) {
  assert(::b2::protocol::commondata::Item_CharacterType_IsValid(value));
  set_has_character_type();
  character_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Item.character_type)
}

// required .b2.protocol.commondata.Inventory.TYPE inventory_type = 4;
inline bool Item::has_inventory_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Item::set_has_inventory_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Item::clear_has_inventory_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Item::clear_inventory_type() {
  inventory_type_ = 2;
  clear_has_inventory_type();
}
inline ::b2::protocol::commondata::Inventory_TYPE Item::inventory_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Item.inventory_type)
  return static_cast< ::b2::protocol::commondata::Inventory_TYPE >(inventory_type_);
}
inline void Item::set_inventory_type(::b2::protocol::commondata::Inventory_TYPE value) {
  assert(::b2::protocol::commondata::Inventory_TYPE_IsValid(value));
  set_has_inventory_type();
  inventory_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Item.inventory_type)
}

// required .b2.protocol.commondata.EquipPosition equip_position = 5;
inline bool Item::has_equip_position() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Item::set_has_equip_position() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Item::clear_has_equip_position() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Item::clear_equip_position() {
  equip_position_ = 0;
  clear_has_equip_position();
}
inline ::b2::protocol::commondata::EquipPosition Item::equip_position() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Item.equip_position)
  return static_cast< ::b2::protocol::commondata::EquipPosition >(equip_position_);
}
inline void Item::set_equip_position(::b2::protocol::commondata::EquipPosition value) {
  assert(::b2::protocol::commondata::EquipPosition_IsValid(value));
  set_has_equip_position();
  equip_position_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Item.equip_position)
}

// required int32 amount = 6;
inline bool Item::has_amount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Item::set_has_amount() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Item::clear_has_amount() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Item::clear_amount() {
  amount_ = 0;
  clear_has_amount();
}
inline ::google::protobuf::int32 Item::amount() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Item.amount)
  return amount_;
}
inline void Item::set_amount(::google::protobuf::int32 value) {
  set_has_amount();
  amount_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Item.amount)
}

// required int32 grade = 7;
inline bool Item::has_grade() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Item::set_has_grade() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Item::clear_has_grade() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Item::clear_grade() {
  grade_ = 0;
  clear_has_grade();
}
inline ::google::protobuf::int32 Item::grade() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Item.grade)
  return grade_;
}
inline void Item::set_grade(::google::protobuf::int32 value) {
  set_has_grade();
  grade_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Item.grade)
}

// required .b2.protocol.commondata.ItemQuality quality = 8;
inline bool Item::has_quality() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Item::set_has_quality() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Item::clear_has_quality() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Item::clear_quality() {
  quality_ = 1;
  clear_has_quality();
}
inline ::b2::protocol::commondata::ItemQuality Item::quality() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Item.quality)
  return static_cast< ::b2::protocol::commondata::ItemQuality >(quality_);
}
inline void Item::set_quality(::b2::protocol::commondata::ItemQuality value) {
  assert(::b2::protocol::commondata::ItemQuality_IsValid(value));
  set_has_quality();
  quality_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Item.quality)
}

// required int32 random_option_id1 = 9;
inline bool Item::has_random_option_id1() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Item::set_has_random_option_id1() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Item::clear_has_random_option_id1() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Item::clear_random_option_id1() {
  random_option_id1_ = 0;
  clear_has_random_option_id1();
}
inline ::google::protobuf::int32 Item::random_option_id1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Item.random_option_id1)
  return random_option_id1_;
}
inline void Item::set_random_option_id1(::google::protobuf::int32 value) {
  set_has_random_option_id1();
  random_option_id1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Item.random_option_id1)
}

// required int32 random_option_id2 = 10;
inline bool Item::has_random_option_id2() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Item::set_has_random_option_id2() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Item::clear_has_random_option_id2() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Item::clear_random_option_id2() {
  random_option_id2_ = 0;
  clear_has_random_option_id2();
}
inline ::google::protobuf::int32 Item::random_option_id2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Item.random_option_id2)
  return random_option_id2_;
}
inline void Item::set_random_option_id2(::google::protobuf::int32 value) {
  set_has_random_option_id2();
  random_option_id2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Item.random_option_id2)
}

// required int32 random_option_id3 = 11;
inline bool Item::has_random_option_id3() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Item::set_has_random_option_id3() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Item::clear_has_random_option_id3() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Item::clear_random_option_id3() {
  random_option_id3_ = 0;
  clear_has_random_option_id3();
}
inline ::google::protobuf::int32 Item::random_option_id3() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Item.random_option_id3)
  return random_option_id3_;
}
inline void Item::set_random_option_id3(::google::protobuf::int32 value) {
  set_has_random_option_id3();
  random_option_id3_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Item.random_option_id3)
}

// required float random_option_value1 = 12;
inline bool Item::has_random_option_value1() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Item::set_has_random_option_value1() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Item::clear_has_random_option_value1() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Item::clear_random_option_value1() {
  random_option_value1_ = 0;
  clear_has_random_option_value1();
}
inline float Item::random_option_value1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Item.random_option_value1)
  return random_option_value1_;
}
inline void Item::set_random_option_value1(float value) {
  set_has_random_option_value1();
  random_option_value1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Item.random_option_value1)
}

// required float random_option_value2 = 13;
inline bool Item::has_random_option_value2() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Item::set_has_random_option_value2() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Item::clear_has_random_option_value2() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Item::clear_random_option_value2() {
  random_option_value2_ = 0;
  clear_has_random_option_value2();
}
inline float Item::random_option_value2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Item.random_option_value2)
  return random_option_value2_;
}
inline void Item::set_random_option_value2(float value) {
  set_has_random_option_value2();
  random_option_value2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Item.random_option_value2)
}

// required float random_option_value3 = 14;
inline bool Item::has_random_option_value3() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Item::set_has_random_option_value3() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Item::clear_has_random_option_value3() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Item::clear_random_option_value3() {
  random_option_value3_ = 0;
  clear_has_random_option_value3();
}
inline float Item::random_option_value3() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Item.random_option_value3)
  return random_option_value3_;
}
inline void Item::set_random_option_value3(float value) {
  set_has_random_option_value3();
  random_option_value3_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Item.random_option_value3)
}

// required int32 level = 15;
inline bool Item::has_level() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void Item::set_has_level() {
  _has_bits_[0] |= 0x00004000u;
}
inline void Item::clear_has_level() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void Item::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 Item::level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Item.level)
  return level_;
}
inline void Item::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Item.level)
}

// required float exp = 16;
inline bool Item::has_exp() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void Item::set_has_exp() {
  _has_bits_[0] |= 0x00008000u;
}
inline void Item::clear_has_exp() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void Item::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline float Item::exp() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Item.exp)
  return exp_;
}
inline void Item::set_exp(float value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Item.exp)
}

// required int32 enhance_level = 17;
inline bool Item::has_enhance_level() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void Item::set_has_enhance_level() {
  _has_bits_[0] |= 0x00010000u;
}
inline void Item::clear_has_enhance_level() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void Item::clear_enhance_level() {
  enhance_level_ = 0;
  clear_has_enhance_level();
}
inline ::google::protobuf::int32 Item::enhance_level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Item.enhance_level)
  return enhance_level_;
}
inline void Item::set_enhance_level(::google::protobuf::int32 value) {
  set_has_enhance_level();
  enhance_level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Item.enhance_level)
}

// required int32 surpass_count = 18;
inline bool Item::has_surpass_count() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void Item::set_has_surpass_count() {
  _has_bits_[0] |= 0x00020000u;
}
inline void Item::clear_has_surpass_count() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void Item::clear_surpass_count() {
  surpass_count_ = 0;
  clear_has_surpass_count();
}
inline ::google::protobuf::int32 Item::surpass_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Item.surpass_count)
  return surpass_count_;
}
inline void Item::set_surpass_count(::google::protobuf::int32 value) {
  set_has_surpass_count();
  surpass_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Item.surpass_count)
}

// required bool locked = 19;
inline bool Item::has_locked() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void Item::set_has_locked() {
  _has_bits_[0] |= 0x00040000u;
}
inline void Item::clear_has_locked() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void Item::clear_locked() {
  locked_ = false;
  clear_has_locked();
}
inline bool Item::locked() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Item.locked)
  return locked_;
}
inline void Item::set_locked(bool value) {
  set_has_locked();
  locked_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Item.locked)
}

// required float power = 20;
inline bool Item::has_power() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void Item::set_has_power() {
  _has_bits_[0] |= 0x00080000u;
}
inline void Item::clear_has_power() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void Item::clear_power() {
  power_ = 0;
  clear_has_power();
}
inline float Item::power() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Item.power)
  return power_;
}
inline void Item::set_power(float value) {
  set_has_power();
  power_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Item.power)
}

// required bool is_new = 21;
inline bool Item::has_is_new() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void Item::set_has_is_new() {
  _has_bits_[0] |= 0x00100000u;
}
inline void Item::clear_has_is_new() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void Item::clear_is_new() {
  is_new_ = false;
  clear_has_is_new();
}
inline bool Item::is_new() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Item.is_new)
  return is_new_;
}
inline void Item::set_is_new(bool value) {
  set_has_is_new();
  is_new_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Item.is_new)
}

// required float md_main_attribute_value = 22;
inline bool Item::has_md_main_attribute_value() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void Item::set_has_md_main_attribute_value() {
  _has_bits_[0] |= 0x00200000u;
}
inline void Item::clear_has_md_main_attribute_value() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void Item::clear_md_main_attribute_value() {
  md_main_attribute_value_ = 0;
  clear_has_md_main_attribute_value();
}
inline float Item::md_main_attribute_value() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Item.md_main_attribute_value)
  return md_main_attribute_value_;
}
inline void Item::set_md_main_attribute_value(float value) {
  set_has_md_main_attribute_value();
  md_main_attribute_value_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Item.md_main_attribute_value)
}

// required int32 open_seal_slot_count = 30;
inline bool Item::has_open_seal_slot_count() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void Item::set_has_open_seal_slot_count() {
  _has_bits_[0] |= 0x00400000u;
}
inline void Item::clear_has_open_seal_slot_count() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void Item::clear_open_seal_slot_count() {
  open_seal_slot_count_ = 0;
  clear_has_open_seal_slot_count();
}
inline ::google::protobuf::int32 Item::open_seal_slot_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Item.open_seal_slot_count)
  return open_seal_slot_count_;
}
inline void Item::set_open_seal_slot_count(::google::protobuf::int32 value) {
  set_has_open_seal_slot_count();
  open_seal_slot_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Item.open_seal_slot_count)
}

// repeated .b2.protocol.commondata.SealSlotState seal_slot_states = 31;
inline int Item::seal_slot_states_size() const {
  return seal_slot_states_.size();
}
inline void Item::clear_seal_slot_states() {
  seal_slot_states_.Clear();
}
inline const ::b2::protocol::commondata::SealSlotState& Item::seal_slot_states(int index) const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Item.seal_slot_states)
  return seal_slot_states_.Get(index);
}
inline ::b2::protocol::commondata::SealSlotState* Item::mutable_seal_slot_states(int index) {
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.Item.seal_slot_states)
  return seal_slot_states_.Mutable(index);
}
inline ::b2::protocol::commondata::SealSlotState* Item::add_seal_slot_states() {
  // @@protoc_insertion_point(field_add:b2.protocol.commondata.Item.seal_slot_states)
  return seal_slot_states_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::SealSlotState >&
Item::seal_slot_states() const {
  // @@protoc_insertion_point(field_list:b2.protocol.commondata.Item.seal_slot_states)
  return seal_slot_states_;
}
inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::SealSlotState >*
Item::mutable_seal_slot_states() {
  // @@protoc_insertion_point(field_mutable_list:b2.protocol.commondata.Item.seal_slot_states)
  return &seal_slot_states_;
}

// -------------------------------------------------------------------

// SealSlotState

// required int32 seal_slot = 1;
inline bool SealSlotState::has_seal_slot() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SealSlotState::set_has_seal_slot() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SealSlotState::clear_has_seal_slot() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SealSlotState::clear_seal_slot() {
  seal_slot_ = 0;
  clear_has_seal_slot();
}
inline ::google::protobuf::int32 SealSlotState::seal_slot() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.SealSlotState.seal_slot)
  return seal_slot_;
}
inline void SealSlotState::set_seal_slot(::google::protobuf::int32 value) {
  set_has_seal_slot();
  seal_slot_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.SealSlotState.seal_slot)
}

// required bool opened = 2;
inline bool SealSlotState::has_opened() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SealSlotState::set_has_opened() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SealSlotState::clear_has_opened() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SealSlotState::clear_opened() {
  opened_ = false;
  clear_has_opened();
}
inline bool SealSlotState::opened() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.SealSlotState.opened)
  return opened_;
}
inline void SealSlotState::set_opened(bool value) {
  set_has_opened();
  opened_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.SealSlotState.opened)
}

// required int32 option_id = 3;
inline bool SealSlotState::has_option_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SealSlotState::set_has_option_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SealSlotState::clear_has_option_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SealSlotState::clear_option_id() {
  option_id_ = 0;
  clear_has_option_id();
}
inline ::google::protobuf::int32 SealSlotState::option_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.SealSlotState.option_id)
  return option_id_;
}
inline void SealSlotState::set_option_id(::google::protobuf::int32 value) {
  set_has_option_id();
  option_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.SealSlotState.option_id)
}

// required float option_value = 4;
inline bool SealSlotState::has_option_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SealSlotState::set_has_option_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SealSlotState::clear_has_option_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SealSlotState::clear_option_value() {
  option_value_ = 0;
  clear_has_option_value();
}
inline float SealSlotState::option_value() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.SealSlotState.option_value)
  return option_value_;
}
inline void SealSlotState::set_option_value(float value) {
  set_has_option_value();
  option_value_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.SealSlotState.option_value)
}

// -------------------------------------------------------------------

// Costume

// required int64 id = 1;
inline bool Costume::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Costume::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Costume::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Costume::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 Costume::id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Costume.id)
  return id_;
}
inline void Costume::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Costume.id)
}

// required int32 template_id = 2;
inline bool Costume::has_template_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Costume::set_has_template_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Costume::clear_has_template_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Costume::clear_template_id() {
  template_id_ = 0;
  clear_has_template_id();
}
inline ::google::protobuf::int32 Costume::template_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Costume.template_id)
  return template_id_;
}
inline void Costume::set_template_id(::google::protobuf::int32 value) {
  set_has_template_id();
  template_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Costume.template_id)
}

// required .b2.protocol.commondata.Costume.CharacterType character_type = 3;
inline bool Costume::has_character_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Costume::set_has_character_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Costume::clear_has_character_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Costume::clear_character_type() {
  character_type_ = 1;
  clear_has_character_type();
}
inline ::b2::protocol::commondata::Costume_CharacterType Costume::character_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Costume.character_type)
  return static_cast< ::b2::protocol::commondata::Costume_CharacterType >(character_type_);
}
inline void Costume::set_character_type(::b2::protocol::commondata::Costume_CharacterType value) {
  assert(::b2::protocol::commondata::Costume_CharacterType_IsValid(value));
  set_has_character_type();
  character_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Costume.character_type)
}

// required .b2.protocol.commondata.Inventory.TYPE inventory_type = 4;
inline bool Costume::has_inventory_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Costume::set_has_inventory_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Costume::clear_has_inventory_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Costume::clear_inventory_type() {
  inventory_type_ = 2;
  clear_has_inventory_type();
}
inline ::b2::protocol::commondata::Inventory_TYPE Costume::inventory_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Costume.inventory_type)
  return static_cast< ::b2::protocol::commondata::Inventory_TYPE >(inventory_type_);
}
inline void Costume::set_inventory_type(::b2::protocol::commondata::Inventory_TYPE value) {
  assert(::b2::protocol::commondata::Inventory_TYPE_IsValid(value));
  set_has_inventory_type();
  inventory_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Costume.inventory_type)
}

// required .b2.protocol.commondata.EquipPosition equip_position = 5;
inline bool Costume::has_equip_position() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Costume::set_has_equip_position() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Costume::clear_has_equip_position() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Costume::clear_equip_position() {
  equip_position_ = 0;
  clear_has_equip_position();
}
inline ::b2::protocol::commondata::EquipPosition Costume::equip_position() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Costume.equip_position)
  return static_cast< ::b2::protocol::commondata::EquipPosition >(equip_position_);
}
inline void Costume::set_equip_position(::b2::protocol::commondata::EquipPosition value) {
  assert(::b2::protocol::commondata::EquipPosition_IsValid(value));
  set_has_equip_position();
  equip_position_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Costume.equip_position)
}

// required int32 amount = 6;
inline bool Costume::has_amount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Costume::set_has_amount() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Costume::clear_has_amount() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Costume::clear_amount() {
  amount_ = 0;
  clear_has_amount();
}
inline ::google::protobuf::int32 Costume::amount() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Costume.amount)
  return amount_;
}
inline void Costume::set_amount(::google::protobuf::int32 value) {
  set_has_amount();
  amount_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Costume.amount)
}

// required int32 grade = 7;
inline bool Costume::has_grade() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Costume::set_has_grade() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Costume::clear_has_grade() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Costume::clear_grade() {
  grade_ = 0;
  clear_has_grade();
}
inline ::google::protobuf::int32 Costume::grade() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Costume.grade)
  return grade_;
}
inline void Costume::set_grade(::google::protobuf::int32 value) {
  set_has_grade();
  grade_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Costume.grade)
}

// required .b2.protocol.commondata.ItemQuality quality = 8;
inline bool Costume::has_quality() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Costume::set_has_quality() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Costume::clear_has_quality() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Costume::clear_quality() {
  quality_ = 1;
  clear_has_quality();
}
inline ::b2::protocol::commondata::ItemQuality Costume::quality() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Costume.quality)
  return static_cast< ::b2::protocol::commondata::ItemQuality >(quality_);
}
inline void Costume::set_quality(::b2::protocol::commondata::ItemQuality value) {
  assert(::b2::protocol::commondata::ItemQuality_IsValid(value));
  set_has_quality();
  quality_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Costume.quality)
}

// required int32 random_option_id1 = 9;
inline bool Costume::has_random_option_id1() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Costume::set_has_random_option_id1() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Costume::clear_has_random_option_id1() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Costume::clear_random_option_id1() {
  random_option_id1_ = 0;
  clear_has_random_option_id1();
}
inline ::google::protobuf::int32 Costume::random_option_id1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Costume.random_option_id1)
  return random_option_id1_;
}
inline void Costume::set_random_option_id1(::google::protobuf::int32 value) {
  set_has_random_option_id1();
  random_option_id1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Costume.random_option_id1)
}

// required int32 random_option_id2 = 10;
inline bool Costume::has_random_option_id2() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Costume::set_has_random_option_id2() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Costume::clear_has_random_option_id2() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Costume::clear_random_option_id2() {
  random_option_id2_ = 0;
  clear_has_random_option_id2();
}
inline ::google::protobuf::int32 Costume::random_option_id2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Costume.random_option_id2)
  return random_option_id2_;
}
inline void Costume::set_random_option_id2(::google::protobuf::int32 value) {
  set_has_random_option_id2();
  random_option_id2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Costume.random_option_id2)
}

// required int32 random_option_id3 = 11;
inline bool Costume::has_random_option_id3() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Costume::set_has_random_option_id3() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Costume::clear_has_random_option_id3() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Costume::clear_random_option_id3() {
  random_option_id3_ = 0;
  clear_has_random_option_id3();
}
inline ::google::protobuf::int32 Costume::random_option_id3() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Costume.random_option_id3)
  return random_option_id3_;
}
inline void Costume::set_random_option_id3(::google::protobuf::int32 value) {
  set_has_random_option_id3();
  random_option_id3_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Costume.random_option_id3)
}

// required float random_option_value1 = 12;
inline bool Costume::has_random_option_value1() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Costume::set_has_random_option_value1() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Costume::clear_has_random_option_value1() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Costume::clear_random_option_value1() {
  random_option_value1_ = 0;
  clear_has_random_option_value1();
}
inline float Costume::random_option_value1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Costume.random_option_value1)
  return random_option_value1_;
}
inline void Costume::set_random_option_value1(float value) {
  set_has_random_option_value1();
  random_option_value1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Costume.random_option_value1)
}

// required float random_option_value2 = 13;
inline bool Costume::has_random_option_value2() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Costume::set_has_random_option_value2() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Costume::clear_has_random_option_value2() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Costume::clear_random_option_value2() {
  random_option_value2_ = 0;
  clear_has_random_option_value2();
}
inline float Costume::random_option_value2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Costume.random_option_value2)
  return random_option_value2_;
}
inline void Costume::set_random_option_value2(float value) {
  set_has_random_option_value2();
  random_option_value2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Costume.random_option_value2)
}

// required float random_option_value3 = 14;
inline bool Costume::has_random_option_value3() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Costume::set_has_random_option_value3() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Costume::clear_has_random_option_value3() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Costume::clear_random_option_value3() {
  random_option_value3_ = 0;
  clear_has_random_option_value3();
}
inline float Costume::random_option_value3() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Costume.random_option_value3)
  return random_option_value3_;
}
inline void Costume::set_random_option_value3(float value) {
  set_has_random_option_value3();
  random_option_value3_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Costume.random_option_value3)
}

// required int32 level = 15;
inline bool Costume::has_level() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void Costume::set_has_level() {
  _has_bits_[0] |= 0x00004000u;
}
inline void Costume::clear_has_level() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void Costume::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 Costume::level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Costume.level)
  return level_;
}
inline void Costume::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Costume.level)
}

// required float exp = 16;
inline bool Costume::has_exp() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void Costume::set_has_exp() {
  _has_bits_[0] |= 0x00008000u;
}
inline void Costume::clear_has_exp() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void Costume::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline float Costume::exp() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Costume.exp)
  return exp_;
}
inline void Costume::set_exp(float value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Costume.exp)
}

// required int32 enhance_level = 17;
inline bool Costume::has_enhance_level() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void Costume::set_has_enhance_level() {
  _has_bits_[0] |= 0x00010000u;
}
inline void Costume::clear_has_enhance_level() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void Costume::clear_enhance_level() {
  enhance_level_ = 0;
  clear_has_enhance_level();
}
inline ::google::protobuf::int32 Costume::enhance_level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Costume.enhance_level)
  return enhance_level_;
}
inline void Costume::set_enhance_level(::google::protobuf::int32 value) {
  set_has_enhance_level();
  enhance_level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Costume.enhance_level)
}

// required int32 surpass_count = 18;
inline bool Costume::has_surpass_count() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void Costume::set_has_surpass_count() {
  _has_bits_[0] |= 0x00020000u;
}
inline void Costume::clear_has_surpass_count() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void Costume::clear_surpass_count() {
  surpass_count_ = 0;
  clear_has_surpass_count();
}
inline ::google::protobuf::int32 Costume::surpass_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Costume.surpass_count)
  return surpass_count_;
}
inline void Costume::set_surpass_count(::google::protobuf::int32 value) {
  set_has_surpass_count();
  surpass_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Costume.surpass_count)
}

// required bool locked = 19;
inline bool Costume::has_locked() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void Costume::set_has_locked() {
  _has_bits_[0] |= 0x00040000u;
}
inline void Costume::clear_has_locked() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void Costume::clear_locked() {
  locked_ = false;
  clear_has_locked();
}
inline bool Costume::locked() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Costume.locked)
  return locked_;
}
inline void Costume::set_locked(bool value) {
  set_has_locked();
  locked_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Costume.locked)
}

// required float power = 20;
inline bool Costume::has_power() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void Costume::set_has_power() {
  _has_bits_[0] |= 0x00080000u;
}
inline void Costume::clear_has_power() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void Costume::clear_power() {
  power_ = 0;
  clear_has_power();
}
inline float Costume::power() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Costume.power)
  return power_;
}
inline void Costume::set_power(float value) {
  set_has_power();
  power_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Costume.power)
}

// required bool is_new = 21;
inline bool Costume::has_is_new() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void Costume::set_has_is_new() {
  _has_bits_[0] |= 0x00100000u;
}
inline void Costume::clear_has_is_new() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void Costume::clear_is_new() {
  is_new_ = false;
  clear_has_is_new();
}
inline bool Costume::is_new() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Costume.is_new)
  return is_new_;
}
inline void Costume::set_is_new(bool value) {
  set_has_is_new();
  is_new_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Costume.is_new)
}

// required float md_main_attribute_value = 22;
inline bool Costume::has_md_main_attribute_value() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void Costume::set_has_md_main_attribute_value() {
  _has_bits_[0] |= 0x00200000u;
}
inline void Costume::clear_has_md_main_attribute_value() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void Costume::clear_md_main_attribute_value() {
  md_main_attribute_value_ = 0;
  clear_has_md_main_attribute_value();
}
inline float Costume::md_main_attribute_value() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Costume.md_main_attribute_value)
  return md_main_attribute_value_;
}
inline void Costume::set_md_main_attribute_value(float value) {
  set_has_md_main_attribute_value();
  md_main_attribute_value_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Costume.md_main_attribute_value)
}

// -------------------------------------------------------------------

// Totem

// required int64 id = 1;
inline bool Totem::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Totem::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Totem::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Totem::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 Totem::id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Totem.id)
  return id_;
}
inline void Totem::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Totem.id)
}

// required int32 template_id = 2;
inline bool Totem::has_template_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Totem::set_has_template_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Totem::clear_has_template_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Totem::clear_template_id() {
  template_id_ = 0;
  clear_has_template_id();
}
inline ::google::protobuf::int32 Totem::template_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Totem.template_id)
  return template_id_;
}
inline void Totem::set_template_id(::google::protobuf::int32 value) {
  set_has_template_id();
  template_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Totem.template_id)
}

// required .b2.protocol.commondata.Totem.CharacterType character_type = 3;
inline bool Totem::has_character_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Totem::set_has_character_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Totem::clear_has_character_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Totem::clear_character_type() {
  character_type_ = 0;
  clear_has_character_type();
}
inline ::b2::protocol::commondata::Totem_CharacterType Totem::character_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Totem.character_type)
  return static_cast< ::b2::protocol::commondata::Totem_CharacterType >(character_type_);
}
inline void Totem::set_character_type(::b2::protocol::commondata::Totem_CharacterType value) {
  assert(::b2::protocol::commondata::Totem_CharacterType_IsValid(value));
  set_has_character_type();
  character_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Totem.character_type)
}

// required .b2.protocol.commondata.TotemEquipSlot equip_slot = 4;
inline bool Totem::has_equip_slot() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Totem::set_has_equip_slot() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Totem::clear_has_equip_slot() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Totem::clear_equip_slot() {
  equip_slot_ = 0;
  clear_has_equip_slot();
}
inline ::b2::protocol::commondata::TotemEquipSlot Totem::equip_slot() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Totem.equip_slot)
  return static_cast< ::b2::protocol::commondata::TotemEquipSlot >(equip_slot_);
}
inline void Totem::set_equip_slot(::b2::protocol::commondata::TotemEquipSlot value) {
  assert(::b2::protocol::commondata::TotemEquipSlot_IsValid(value));
  set_has_equip_slot();
  equip_slot_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Totem.equip_slot)
}

// required .b2.protocol.commondata.TotemGrade grade = 5;
inline bool Totem::has_grade() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Totem::set_has_grade() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Totem::clear_has_grade() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Totem::clear_grade() {
  grade_ = 1;
  clear_has_grade();
}
inline ::b2::protocol::commondata::TotemGrade Totem::grade() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Totem.grade)
  return static_cast< ::b2::protocol::commondata::TotemGrade >(grade_);
}
inline void Totem::set_grade(::b2::protocol::commondata::TotemGrade value) {
  assert(::b2::protocol::commondata::TotemGrade_IsValid(value));
  set_has_grade();
  grade_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Totem.grade)
}

// required int32 main_option_id = 6;
inline bool Totem::has_main_option_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Totem::set_has_main_option_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Totem::clear_has_main_option_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Totem::clear_main_option_id() {
  main_option_id_ = 0;
  clear_has_main_option_id();
}
inline ::google::protobuf::int32 Totem::main_option_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Totem.main_option_id)
  return main_option_id_;
}
inline void Totem::set_main_option_id(::google::protobuf::int32 value) {
  set_has_main_option_id();
  main_option_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Totem.main_option_id)
}

// required float main_option_value = 7;
inline bool Totem::has_main_option_value() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Totem::set_has_main_option_value() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Totem::clear_has_main_option_value() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Totem::clear_main_option_value() {
  main_option_value_ = 0;
  clear_has_main_option_value();
}
inline float Totem::main_option_value() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Totem.main_option_value)
  return main_option_value_;
}
inline void Totem::set_main_option_value(float value) {
  set_has_main_option_value();
  main_option_value_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Totem.main_option_value)
}

// repeated .b2.protocol.commondata.TotemSubOptionDetail sub_option_details = 8;
inline int Totem::sub_option_details_size() const {
  return sub_option_details_.size();
}
inline void Totem::clear_sub_option_details() {
  sub_option_details_.Clear();
}
inline const ::b2::protocol::commondata::TotemSubOptionDetail& Totem::sub_option_details(int index) const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Totem.sub_option_details)
  return sub_option_details_.Get(index);
}
inline ::b2::protocol::commondata::TotemSubOptionDetail* Totem::mutable_sub_option_details(int index) {
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.Totem.sub_option_details)
  return sub_option_details_.Mutable(index);
}
inline ::b2::protocol::commondata::TotemSubOptionDetail* Totem::add_sub_option_details() {
  // @@protoc_insertion_point(field_add:b2.protocol.commondata.Totem.sub_option_details)
  return sub_option_details_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::TotemSubOptionDetail >&
Totem::sub_option_details() const {
  // @@protoc_insertion_point(field_list:b2.protocol.commondata.Totem.sub_option_details)
  return sub_option_details_;
}
inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::TotemSubOptionDetail >*
Totem::mutable_sub_option_details() {
  // @@protoc_insertion_point(field_mutable_list:b2.protocol.commondata.Totem.sub_option_details)
  return &sub_option_details_;
}

// required int32 refine_level = 9;
inline bool Totem::has_refine_level() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Totem::set_has_refine_level() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Totem::clear_has_refine_level() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Totem::clear_refine_level() {
  refine_level_ = 0;
  clear_has_refine_level();
}
inline ::google::protobuf::int32 Totem::refine_level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Totem.refine_level)
  return refine_level_;
}
inline void Totem::set_refine_level(::google::protobuf::int32 value) {
  set_has_refine_level();
  refine_level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Totem.refine_level)
}

// required int32 refine_try_count = 10;
inline bool Totem::has_refine_try_count() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Totem::set_has_refine_try_count() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Totem::clear_has_refine_try_count() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Totem::clear_refine_try_count() {
  refine_try_count_ = 0;
  clear_has_refine_try_count();
}
inline ::google::protobuf::int32 Totem::refine_try_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Totem.refine_try_count)
  return refine_try_count_;
}
inline void Totem::set_refine_try_count(::google::protobuf::int32 value) {
  set_has_refine_try_count();
  refine_try_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Totem.refine_try_count)
}

// required int32 gold_success_rate = 11;
inline bool Totem::has_gold_success_rate() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Totem::set_has_gold_success_rate() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Totem::clear_has_gold_success_rate() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Totem::clear_gold_success_rate() {
  gold_success_rate_ = 0;
  clear_has_gold_success_rate();
}
inline ::google::protobuf::int32 Totem::gold_success_rate() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Totem.gold_success_rate)
  return gold_success_rate_;
}
inline void Totem::set_gold_success_rate(::google::protobuf::int32 value) {
  set_has_gold_success_rate();
  gold_success_rate_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Totem.gold_success_rate)
}

// required int32 piece_success_rate = 12;
inline bool Totem::has_piece_success_rate() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Totem::set_has_piece_success_rate() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Totem::clear_has_piece_success_rate() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Totem::clear_piece_success_rate() {
  piece_success_rate_ = 0;
  clear_has_piece_success_rate();
}
inline ::google::protobuf::int32 Totem::piece_success_rate() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Totem.piece_success_rate)
  return piece_success_rate_;
}
inline void Totem::set_piece_success_rate(::google::protobuf::int32 value) {
  set_has_piece_success_rate();
  piece_success_rate_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Totem.piece_success_rate)
}

// required bool locked = 13;
inline bool Totem::has_locked() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Totem::set_has_locked() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Totem::clear_has_locked() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Totem::clear_locked() {
  locked_ = false;
  clear_has_locked();
}
inline bool Totem::locked() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Totem.locked)
  return locked_;
}
inline void Totem::set_locked(bool value) {
  set_has_locked();
  locked_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Totem.locked)
}

// required float power = 14;
inline bool Totem::has_power() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Totem::set_has_power() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Totem::clear_has_power() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Totem::clear_power() {
  power_ = 0;
  clear_has_power();
}
inline float Totem::power() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Totem.power)
  return power_;
}
inline void Totem::set_power(float value) {
  set_has_power();
  power_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Totem.power)
}

// required bool is_new = 15;
inline bool Totem::has_is_new() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void Totem::set_has_is_new() {
  _has_bits_[0] |= 0x00004000u;
}
inline void Totem::clear_has_is_new() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void Totem::clear_is_new() {
  is_new_ = false;
  clear_has_is_new();
}
inline bool Totem::is_new() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Totem.is_new)
  return is_new_;
}
inline void Totem::set_is_new(bool value) {
  set_has_is_new();
  is_new_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Totem.is_new)
}

// -------------------------------------------------------------------

// TotemSubOptionDetail

// required int32 option_id = 1;
inline bool TotemSubOptionDetail::has_option_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TotemSubOptionDetail::set_has_option_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TotemSubOptionDetail::clear_has_option_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TotemSubOptionDetail::clear_option_id() {
  option_id_ = 0;
  clear_has_option_id();
}
inline ::google::protobuf::int32 TotemSubOptionDetail::option_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.TotemSubOptionDetail.option_id)
  return option_id_;
}
inline void TotemSubOptionDetail::set_option_id(::google::protobuf::int32 value) {
  set_has_option_id();
  option_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.TotemSubOptionDetail.option_id)
}

// required float option_value = 2;
inline bool TotemSubOptionDetail::has_option_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TotemSubOptionDetail::set_has_option_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TotemSubOptionDetail::clear_has_option_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TotemSubOptionDetail::clear_option_value() {
  option_value_ = 0;
  clear_has_option_value();
}
inline float TotemSubOptionDetail::option_value() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.TotemSubOptionDetail.option_value)
  return option_value_;
}
inline void TotemSubOptionDetail::set_option_value(float value) {
  set_has_option_value();
  option_value_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.TotemSubOptionDetail.option_value)
}

// required int32 refine_count = 3;
inline bool TotemSubOptionDetail::has_refine_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TotemSubOptionDetail::set_has_refine_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TotemSubOptionDetail::clear_has_refine_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TotemSubOptionDetail::clear_refine_count() {
  refine_count_ = 0;
  clear_has_refine_count();
}
inline ::google::protobuf::int32 TotemSubOptionDetail::refine_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.TotemSubOptionDetail.refine_count)
  return refine_count_;
}
inline void TotemSubOptionDetail::set_refine_count(::google::protobuf::int32 value) {
  set_has_refine_count();
  refine_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.TotemSubOptionDetail.refine_count)
}

// repeated .b2.protocol.commondata.TotemRefineState refine_states = 4;
inline int TotemSubOptionDetail::refine_states_size() const {
  return refine_states_.size();
}
inline void TotemSubOptionDetail::clear_refine_states() {
  refine_states_.Clear();
}
inline const ::b2::protocol::commondata::TotemRefineState& TotemSubOptionDetail::refine_states(int index) const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.TotemSubOptionDetail.refine_states)
  return refine_states_.Get(index);
}
inline ::b2::protocol::commondata::TotemRefineState* TotemSubOptionDetail::mutable_refine_states(int index) {
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.TotemSubOptionDetail.refine_states)
  return refine_states_.Mutable(index);
}
inline ::b2::protocol::commondata::TotemRefineState* TotemSubOptionDetail::add_refine_states() {
  // @@protoc_insertion_point(field_add:b2.protocol.commondata.TotemSubOptionDetail.refine_states)
  return refine_states_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::TotemRefineState >&
TotemSubOptionDetail::refine_states() const {
  // @@protoc_insertion_point(field_list:b2.protocol.commondata.TotemSubOptionDetail.refine_states)
  return refine_states_;
}
inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::TotemRefineState >*
TotemSubOptionDetail::mutable_refine_states() {
  // @@protoc_insertion_point(field_mutable_list:b2.protocol.commondata.TotemSubOptionDetail.refine_states)
  return &refine_states_;
}

// -------------------------------------------------------------------

// TotemRefineState

// required int32 index = 1;
inline bool TotemRefineState::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TotemRefineState::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TotemRefineState::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TotemRefineState::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 TotemRefineState::index() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.TotemRefineState.index)
  return index_;
}
inline void TotemRefineState::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.TotemRefineState.index)
}

// required .b2.protocol.commondata.TotemRefineState.Refinestatus status = 2;
inline bool TotemRefineState::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TotemRefineState::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TotemRefineState::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TotemRefineState::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::b2::protocol::commondata::TotemRefineState_Refinestatus TotemRefineState::status() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.TotemRefineState.status)
  return static_cast< ::b2::protocol::commondata::TotemRefineState_Refinestatus >(status_);
}
inline void TotemRefineState::set_status(::b2::protocol::commondata::TotemRefineState_Refinestatus value) {
  assert(::b2::protocol::commondata::TotemRefineState_Refinestatus_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.TotemRefineState.status)
}

// -------------------------------------------------------------------

// Inventory

// -------------------------------------------------------------------

// InventoryCountInfo

// required .b2.protocol.commondata.Character.TYPE character_type = 1;
inline bool InventoryCountInfo::has_character_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InventoryCountInfo::set_has_character_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InventoryCountInfo::clear_has_character_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InventoryCountInfo::clear_character_type() {
  character_type_ = 1;
  clear_has_character_type();
}
inline ::b2::protocol::commondata::Character_TYPE InventoryCountInfo::character_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.InventoryCountInfo.character_type)
  return static_cast< ::b2::protocol::commondata::Character_TYPE >(character_type_);
}
inline void InventoryCountInfo::set_character_type(::b2::protocol::commondata::Character_TYPE value) {
  assert(::b2::protocol::commondata::Character_TYPE_IsValid(value));
  set_has_character_type();
  character_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.InventoryCountInfo.character_type)
}

// required int32 count = 3;
inline bool InventoryCountInfo::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InventoryCountInfo::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InventoryCountInfo::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InventoryCountInfo::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 InventoryCountInfo::count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.InventoryCountInfo.count)
  return count_;
}
inline void InventoryCountInfo::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.InventoryCountInfo.count)
}

// required int32 max_count = 4;
inline bool InventoryCountInfo::has_max_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InventoryCountInfo::set_has_max_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void InventoryCountInfo::clear_has_max_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void InventoryCountInfo::clear_max_count() {
  max_count_ = 0;
  clear_has_max_count();
}
inline ::google::protobuf::int32 InventoryCountInfo::max_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.InventoryCountInfo.max_count)
  return max_count_;
}
inline void InventoryCountInfo::set_max_count(::google::protobuf::int32 value) {
  set_has_max_count();
  max_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.InventoryCountInfo.max_count)
}

// -------------------------------------------------------------------

// ItemPreset

// required int64 account_id = 1;
inline bool ItemPreset::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemPreset::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemPreset::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemPreset::clear_account_id() {
  account_id_ = GOOGLE_LONGLONG(0);
  clear_has_account_id();
}
inline ::google::protobuf::int64 ItemPreset::account_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ItemPreset.account_id)
  return account_id_;
}
inline void ItemPreset::set_account_id(::google::protobuf::int64 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ItemPreset.account_id)
}

// required .b2.protocol.commondata.Character.TYPE character_type = 2;
inline bool ItemPreset::has_character_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemPreset::set_has_character_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemPreset::clear_has_character_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemPreset::clear_character_type() {
  character_type_ = 1;
  clear_has_character_type();
}
inline ::b2::protocol::commondata::Character_TYPE ItemPreset::character_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ItemPreset.character_type)
  return static_cast< ::b2::protocol::commondata::Character_TYPE >(character_type_);
}
inline void ItemPreset::set_character_type(::b2::protocol::commondata::Character_TYPE value) {
  assert(::b2::protocol::commondata::Character_TYPE_IsValid(value));
  set_has_character_type();
  character_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ItemPreset.character_type)
}

// required int32 preset_id = 3;
inline bool ItemPreset::has_preset_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ItemPreset::set_has_preset_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ItemPreset::clear_has_preset_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ItemPreset::clear_preset_id() {
  preset_id_ = 0;
  clear_has_preset_id();
}
inline ::google::protobuf::int32 ItemPreset::preset_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ItemPreset.preset_id)
  return preset_id_;
}
inline void ItemPreset::set_preset_id(::google::protobuf::int32 value) {
  set_has_preset_id();
  preset_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ItemPreset.preset_id)
}

// required .b2.protocol.commondata.EquipPosition equip_position = 4;
inline bool ItemPreset::has_equip_position() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ItemPreset::set_has_equip_position() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ItemPreset::clear_has_equip_position() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ItemPreset::clear_equip_position() {
  equip_position_ = 0;
  clear_has_equip_position();
}
inline ::b2::protocol::commondata::EquipPosition ItemPreset::equip_position() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ItemPreset.equip_position)
  return static_cast< ::b2::protocol::commondata::EquipPosition >(equip_position_);
}
inline void ItemPreset::set_equip_position(::b2::protocol::commondata::EquipPosition value) {
  assert(::b2::protocol::commondata::EquipPosition_IsValid(value));
  set_has_equip_position();
  equip_position_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ItemPreset.equip_position)
}

// required int64 item_id = 5;
inline bool ItemPreset::has_item_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ItemPreset::set_has_item_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ItemPreset::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ItemPreset::clear_item_id() {
  item_id_ = GOOGLE_LONGLONG(0);
  clear_has_item_id();
}
inline ::google::protobuf::int64 ItemPreset::item_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ItemPreset.item_id)
  return item_id_;
}
inline void ItemPreset::set_item_id(::google::protobuf::int64 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ItemPreset.item_id)
}

// -------------------------------------------------------------------

// Aether

// required int64 id = 1;
inline bool Aether::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Aether::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Aether::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Aether::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 Aether::id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Aether.id)
  return id_;
}
inline void Aether::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Aether.id)
}

// required .b2.protocol.commondata.Aether.TYPE type = 2;
inline bool Aether::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Aether::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Aether::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Aether::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::b2::protocol::commondata::Aether_TYPE Aether::type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Aether.type)
  return static_cast< ::b2::protocol::commondata::Aether_TYPE >(type_);
}
inline void Aether::set_type(::b2::protocol::commondata::Aether_TYPE value) {
  assert(::b2::protocol::commondata::Aether_TYPE_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Aether.type)
}

// required int32 slot = 3;
inline bool Aether::has_slot() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Aether::set_has_slot() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Aether::clear_has_slot() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Aether::clear_slot() {
  slot_ = 0;
  clear_has_slot();
}
inline ::google::protobuf::int32 Aether::slot() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Aether.slot)
  return slot_;
}
inline void Aether::set_slot(::google::protobuf::int32 value) {
  set_has_slot();
  slot_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Aether.slot)
}

// required .b2.protocol.commondata.Aether.CharacterType character_type = 4;
inline bool Aether::has_character_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Aether::set_has_character_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Aether::clear_has_character_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Aether::clear_character_type() {
  character_type_ = 0;
  clear_has_character_type();
}
inline ::b2::protocol::commondata::Aether_CharacterType Aether::character_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Aether.character_type)
  return static_cast< ::b2::protocol::commondata::Aether_CharacterType >(character_type_);
}
inline void Aether::set_character_type(::b2::protocol::commondata::Aether_CharacterType value) {
  assert(::b2::protocol::commondata::Aether_CharacterType_IsValid(value));
  set_has_character_type();
  character_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Aether.character_type)
}

// required int32 level = 5;
inline bool Aether::has_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Aether::set_has_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Aether::clear_has_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Aether::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 Aether::level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Aether.level)
  return level_;
}
inline void Aether::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Aether.level)
}

// required int32 grade = 6;
inline bool Aether::has_grade() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Aether::set_has_grade() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Aether::clear_has_grade() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Aether::clear_grade() {
  grade_ = 0;
  clear_has_grade();
}
inline ::google::protobuf::int32 Aether::grade() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Aether.grade)
  return grade_;
}
inline void Aether::set_grade(::google::protobuf::int32 value) {
  set_has_grade();
  grade_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Aether.grade)
}

// required .b2.protocol.commondata.Aether.TIER tier = 7;
inline bool Aether::has_tier() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Aether::set_has_tier() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Aether::clear_has_tier() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Aether::clear_tier() {
  tier_ = 1;
  clear_has_tier();
}
inline ::b2::protocol::commondata::Aether_TIER Aether::tier() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Aether.tier)
  return static_cast< ::b2::protocol::commondata::Aether_TIER >(tier_);
}
inline void Aether::set_tier(::b2::protocol::commondata::Aether_TIER value) {
  assert(::b2::protocol::commondata::Aether_TIER_IsValid(value));
  set_has_tier();
  tier_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Aether.tier)
}

// required int32 main_option_id = 8;
inline bool Aether::has_main_option_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Aether::set_has_main_option_id() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Aether::clear_has_main_option_id() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Aether::clear_main_option_id() {
  main_option_id_ = 0;
  clear_has_main_option_id();
}
inline ::google::protobuf::int32 Aether::main_option_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Aether.main_option_id)
  return main_option_id_;
}
inline void Aether::set_main_option_id(::google::protobuf::int32 value) {
  set_has_main_option_id();
  main_option_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Aether.main_option_id)
}

// required float main_option_value = 9;
inline bool Aether::has_main_option_value() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Aether::set_has_main_option_value() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Aether::clear_has_main_option_value() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Aether::clear_main_option_value() {
  main_option_value_ = 0;
  clear_has_main_option_value();
}
inline float Aether::main_option_value() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Aether.main_option_value)
  return main_option_value_;
}
inline void Aether::set_main_option_value(float value) {
  set_has_main_option_value();
  main_option_value_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Aether.main_option_value)
}

// required int32 sub_option_id1 = 10;
inline bool Aether::has_sub_option_id1() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Aether::set_has_sub_option_id1() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Aether::clear_has_sub_option_id1() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Aether::clear_sub_option_id1() {
  sub_option_id1_ = 0;
  clear_has_sub_option_id1();
}
inline ::google::protobuf::int32 Aether::sub_option_id1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Aether.sub_option_id1)
  return sub_option_id1_;
}
inline void Aether::set_sub_option_id1(::google::protobuf::int32 value) {
  set_has_sub_option_id1();
  sub_option_id1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Aether.sub_option_id1)
}

// required int32 sub_option_id2 = 11;
inline bool Aether::has_sub_option_id2() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Aether::set_has_sub_option_id2() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Aether::clear_has_sub_option_id2() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Aether::clear_sub_option_id2() {
  sub_option_id2_ = 0;
  clear_has_sub_option_id2();
}
inline ::google::protobuf::int32 Aether::sub_option_id2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Aether.sub_option_id2)
  return sub_option_id2_;
}
inline void Aether::set_sub_option_id2(::google::protobuf::int32 value) {
  set_has_sub_option_id2();
  sub_option_id2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Aether.sub_option_id2)
}

// required int32 sub_option_id3 = 12;
inline bool Aether::has_sub_option_id3() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Aether::set_has_sub_option_id3() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Aether::clear_has_sub_option_id3() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Aether::clear_sub_option_id3() {
  sub_option_id3_ = 0;
  clear_has_sub_option_id3();
}
inline ::google::protobuf::int32 Aether::sub_option_id3() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Aether.sub_option_id3)
  return sub_option_id3_;
}
inline void Aether::set_sub_option_id3(::google::protobuf::int32 value) {
  set_has_sub_option_id3();
  sub_option_id3_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Aether.sub_option_id3)
}

// required float sub_option_value1 = 13;
inline bool Aether::has_sub_option_value1() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Aether::set_has_sub_option_value1() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Aether::clear_has_sub_option_value1() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Aether::clear_sub_option_value1() {
  sub_option_value1_ = 0;
  clear_has_sub_option_value1();
}
inline float Aether::sub_option_value1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Aether.sub_option_value1)
  return sub_option_value1_;
}
inline void Aether::set_sub_option_value1(float value) {
  set_has_sub_option_value1();
  sub_option_value1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Aether.sub_option_value1)
}

// required float sub_option_value2 = 14;
inline bool Aether::has_sub_option_value2() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Aether::set_has_sub_option_value2() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Aether::clear_has_sub_option_value2() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Aether::clear_sub_option_value2() {
  sub_option_value2_ = 0;
  clear_has_sub_option_value2();
}
inline float Aether::sub_option_value2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Aether.sub_option_value2)
  return sub_option_value2_;
}
inline void Aether::set_sub_option_value2(float value) {
  set_has_sub_option_value2();
  sub_option_value2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Aether.sub_option_value2)
}

// required float sub_option_value3 = 15;
inline bool Aether::has_sub_option_value3() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void Aether::set_has_sub_option_value3() {
  _has_bits_[0] |= 0x00004000u;
}
inline void Aether::clear_has_sub_option_value3() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void Aether::clear_sub_option_value3() {
  sub_option_value3_ = 0;
  clear_has_sub_option_value3();
}
inline float Aether::sub_option_value3() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Aether.sub_option_value3)
  return sub_option_value3_;
}
inline void Aether::set_sub_option_value3(float value) {
  set_has_sub_option_value3();
  sub_option_value3_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Aether.sub_option_value3)
}

// required int32 sub_option_enhance_count1 = 16;
inline bool Aether::has_sub_option_enhance_count1() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void Aether::set_has_sub_option_enhance_count1() {
  _has_bits_[0] |= 0x00008000u;
}
inline void Aether::clear_has_sub_option_enhance_count1() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void Aether::clear_sub_option_enhance_count1() {
  sub_option_enhance_count1_ = 0;
  clear_has_sub_option_enhance_count1();
}
inline ::google::protobuf::int32 Aether::sub_option_enhance_count1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Aether.sub_option_enhance_count1)
  return sub_option_enhance_count1_;
}
inline void Aether::set_sub_option_enhance_count1(::google::protobuf::int32 value) {
  set_has_sub_option_enhance_count1();
  sub_option_enhance_count1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Aether.sub_option_enhance_count1)
}

// required int32 sub_option_enhance_count2 = 17;
inline bool Aether::has_sub_option_enhance_count2() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void Aether::set_has_sub_option_enhance_count2() {
  _has_bits_[0] |= 0x00010000u;
}
inline void Aether::clear_has_sub_option_enhance_count2() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void Aether::clear_sub_option_enhance_count2() {
  sub_option_enhance_count2_ = 0;
  clear_has_sub_option_enhance_count2();
}
inline ::google::protobuf::int32 Aether::sub_option_enhance_count2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Aether.sub_option_enhance_count2)
  return sub_option_enhance_count2_;
}
inline void Aether::set_sub_option_enhance_count2(::google::protobuf::int32 value) {
  set_has_sub_option_enhance_count2();
  sub_option_enhance_count2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Aether.sub_option_enhance_count2)
}

// required int32 sub_option_enhance_count3 = 18;
inline bool Aether::has_sub_option_enhance_count3() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void Aether::set_has_sub_option_enhance_count3() {
  _has_bits_[0] |= 0x00020000u;
}
inline void Aether::clear_has_sub_option_enhance_count3() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void Aether::clear_sub_option_enhance_count3() {
  sub_option_enhance_count3_ = 0;
  clear_has_sub_option_enhance_count3();
}
inline ::google::protobuf::int32 Aether::sub_option_enhance_count3() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Aether.sub_option_enhance_count3)
  return sub_option_enhance_count3_;
}
inline void Aether::set_sub_option_enhance_count3(::google::protobuf::int32 value) {
  set_has_sub_option_enhance_count3();
  sub_option_enhance_count3_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Aether.sub_option_enhance_count3)
}

// required bool locked = 20;
inline bool Aether::has_locked() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void Aether::set_has_locked() {
  _has_bits_[0] |= 0x00040000u;
}
inline void Aether::clear_has_locked() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void Aether::clear_locked() {
  locked_ = false;
  clear_has_locked();
}
inline bool Aether::locked() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Aether.locked)
  return locked_;
}
inline void Aether::set_locked(bool value) {
  set_has_locked();
  locked_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Aether.locked)
}

// required bool is_new = 21;
inline bool Aether::has_is_new() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void Aether::set_has_is_new() {
  _has_bits_[0] |= 0x00080000u;
}
inline void Aether::clear_has_is_new() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void Aether::clear_is_new() {
  is_new_ = false;
  clear_has_is_new();
}
inline bool Aether::is_new() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Aether.is_new)
  return is_new_;
}
inline void Aether::set_is_new(bool value) {
  set_has_is_new();
  is_new_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Aether.is_new)
}

// required float calc_main_option_value = 30;
inline bool Aether::has_calc_main_option_value() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void Aether::set_has_calc_main_option_value() {
  _has_bits_[0] |= 0x00100000u;
}
inline void Aether::clear_has_calc_main_option_value() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void Aether::clear_calc_main_option_value() {
  calc_main_option_value_ = 0;
  clear_has_calc_main_option_value();
}
inline float Aether::calc_main_option_value() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Aether.calc_main_option_value)
  return calc_main_option_value_;
}
inline void Aether::set_calc_main_option_value(float value) {
  set_has_calc_main_option_value();
  calc_main_option_value_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Aether.calc_main_option_value)
}

// required float calc_sub_option_value1 = 31;
inline bool Aether::has_calc_sub_option_value1() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void Aether::set_has_calc_sub_option_value1() {
  _has_bits_[0] |= 0x00200000u;
}
inline void Aether::clear_has_calc_sub_option_value1() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void Aether::clear_calc_sub_option_value1() {
  calc_sub_option_value1_ = 0;
  clear_has_calc_sub_option_value1();
}
inline float Aether::calc_sub_option_value1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Aether.calc_sub_option_value1)
  return calc_sub_option_value1_;
}
inline void Aether::set_calc_sub_option_value1(float value) {
  set_has_calc_sub_option_value1();
  calc_sub_option_value1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Aether.calc_sub_option_value1)
}

// required float calc_sub_option_value2 = 32;
inline bool Aether::has_calc_sub_option_value2() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void Aether::set_has_calc_sub_option_value2() {
  _has_bits_[0] |= 0x00400000u;
}
inline void Aether::clear_has_calc_sub_option_value2() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void Aether::clear_calc_sub_option_value2() {
  calc_sub_option_value2_ = 0;
  clear_has_calc_sub_option_value2();
}
inline float Aether::calc_sub_option_value2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Aether.calc_sub_option_value2)
  return calc_sub_option_value2_;
}
inline void Aether::set_calc_sub_option_value2(float value) {
  set_has_calc_sub_option_value2();
  calc_sub_option_value2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Aether.calc_sub_option_value2)
}

// required float calc_sub_option_value3 = 33;
inline bool Aether::has_calc_sub_option_value3() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void Aether::set_has_calc_sub_option_value3() {
  _has_bits_[0] |= 0x00800000u;
}
inline void Aether::clear_has_calc_sub_option_value3() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void Aether::clear_calc_sub_option_value3() {
  calc_sub_option_value3_ = 0;
  clear_has_calc_sub_option_value3();
}
inline float Aether::calc_sub_option_value3() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Aether.calc_sub_option_value3)
  return calc_sub_option_value3_;
}
inline void Aether::set_calc_sub_option_value3(float value) {
  set_has_calc_sub_option_value3();
  calc_sub_option_value3_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Aether.calc_sub_option_value3)
}

// required .b2.protocol.commondata.Aether.TIER calc_tier = 34;
inline bool Aether::has_calc_tier() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void Aether::set_has_calc_tier() {
  _has_bits_[0] |= 0x01000000u;
}
inline void Aether::clear_has_calc_tier() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void Aether::clear_calc_tier() {
  calc_tier_ = 1;
  clear_has_calc_tier();
}
inline ::b2::protocol::commondata::Aether_TIER Aether::calc_tier() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Aether.calc_tier)
  return static_cast< ::b2::protocol::commondata::Aether_TIER >(calc_tier_);
}
inline void Aether::set_calc_tier(::b2::protocol::commondata::Aether_TIER value) {
  assert(::b2::protocol::commondata::Aether_TIER_IsValid(value));
  set_has_calc_tier();
  calc_tier_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Aether.calc_tier)
}

// -------------------------------------------------------------------

// CharacterSetOptionInfo

// optional int32 selected_offense_set_option_id = 1;
inline bool CharacterSetOptionInfo::has_selected_offense_set_option_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterSetOptionInfo::set_has_selected_offense_set_option_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterSetOptionInfo::clear_has_selected_offense_set_option_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterSetOptionInfo::clear_selected_offense_set_option_id() {
  selected_offense_set_option_id_ = 0;
  clear_has_selected_offense_set_option_id();
}
inline ::google::protobuf::int32 CharacterSetOptionInfo::selected_offense_set_option_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.CharacterSetOptionInfo.selected_offense_set_option_id)
  return selected_offense_set_option_id_;
}
inline void CharacterSetOptionInfo::set_selected_offense_set_option_id(::google::protobuf::int32 value) {
  set_has_selected_offense_set_option_id();
  selected_offense_set_option_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.CharacterSetOptionInfo.selected_offense_set_option_id)
}

// optional int32 selected_defense_set_option_id = 2;
inline bool CharacterSetOptionInfo::has_selected_defense_set_option_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterSetOptionInfo::set_has_selected_defense_set_option_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterSetOptionInfo::clear_has_selected_defense_set_option_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterSetOptionInfo::clear_selected_defense_set_option_id() {
  selected_defense_set_option_id_ = 0;
  clear_has_selected_defense_set_option_id();
}
inline ::google::protobuf::int32 CharacterSetOptionInfo::selected_defense_set_option_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.CharacterSetOptionInfo.selected_defense_set_option_id)
  return selected_defense_set_option_id_;
}
inline void CharacterSetOptionInfo::set_selected_defense_set_option_id(::google::protobuf::int32 value) {
  set_has_selected_defense_set_option_id();
  selected_defense_set_option_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.CharacterSetOptionInfo.selected_defense_set_option_id)
}

// repeated int32 defense_set_option_ids = 3;
inline int CharacterSetOptionInfo::defense_set_option_ids_size() const {
  return defense_set_option_ids_.size();
}
inline void CharacterSetOptionInfo::clear_defense_set_option_ids() {
  defense_set_option_ids_.Clear();
}
inline ::google::protobuf::int32 CharacterSetOptionInfo::defense_set_option_ids(int index) const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.CharacterSetOptionInfo.defense_set_option_ids)
  return defense_set_option_ids_.Get(index);
}
inline void CharacterSetOptionInfo::set_defense_set_option_ids(int index, ::google::protobuf::int32 value) {
  defense_set_option_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.CharacterSetOptionInfo.defense_set_option_ids)
}
inline void CharacterSetOptionInfo::add_defense_set_option_ids(::google::protobuf::int32 value) {
  defense_set_option_ids_.Add(value);
  // @@protoc_insertion_point(field_add:b2.protocol.commondata.CharacterSetOptionInfo.defense_set_option_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CharacterSetOptionInfo::defense_set_option_ids() const {
  // @@protoc_insertion_point(field_list:b2.protocol.commondata.CharacterSetOptionInfo.defense_set_option_ids)
  return defense_set_option_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CharacterSetOptionInfo::mutable_defense_set_option_ids() {
  // @@protoc_insertion_point(field_mutable_list:b2.protocol.commondata.CharacterSetOptionInfo.defense_set_option_ids)
  return &defense_set_option_ids_;
}

// -------------------------------------------------------------------

// SkillQuickSlot

// required int32 slot = 1;
inline bool SkillQuickSlot::has_slot() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SkillQuickSlot::set_has_slot() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SkillQuickSlot::clear_has_slot() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SkillQuickSlot::clear_slot() {
  slot_ = 0;
  clear_has_slot();
}
inline ::google::protobuf::int32 SkillQuickSlot::slot() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.SkillQuickSlot.slot)
  return slot_;
}
inline void SkillQuickSlot::set_slot(::google::protobuf::int32 value) {
  set_has_slot();
  slot_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.SkillQuickSlot.slot)
}

// required int32 left_skill_point = 2;
inline bool SkillQuickSlot::has_left_skill_point() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SkillQuickSlot::set_has_left_skill_point() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SkillQuickSlot::clear_has_left_skill_point() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SkillQuickSlot::clear_left_skill_point() {
  left_skill_point_ = 0;
  clear_has_left_skill_point();
}
inline ::google::protobuf::int32 SkillQuickSlot::left_skill_point() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.SkillQuickSlot.left_skill_point)
  return left_skill_point_;
}
inline void SkillQuickSlot::set_left_skill_point(::google::protobuf::int32 value) {
  set_has_left_skill_point();
  left_skill_point_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.SkillQuickSlot.left_skill_point)
}

// required float skill_total_power = 3;
inline bool SkillQuickSlot::has_skill_total_power() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SkillQuickSlot::set_has_skill_total_power() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SkillQuickSlot::clear_has_skill_total_power() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SkillQuickSlot::clear_skill_total_power() {
  skill_total_power_ = 0;
  clear_has_skill_total_power();
}
inline float SkillQuickSlot::skill_total_power() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.SkillQuickSlot.skill_total_power)
  return skill_total_power_;
}
inline void SkillQuickSlot::set_skill_total_power(float value) {
  set_has_skill_total_power();
  skill_total_power_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.SkillQuickSlot.skill_total_power)
}

// required int32 using_skill_id_1 = 10;
inline bool SkillQuickSlot::has_using_skill_id_1() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SkillQuickSlot::set_has_using_skill_id_1() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SkillQuickSlot::clear_has_using_skill_id_1() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SkillQuickSlot::clear_using_skill_id_1() {
  using_skill_id_1_ = 0;
  clear_has_using_skill_id_1();
}
inline ::google::protobuf::int32 SkillQuickSlot::using_skill_id_1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.SkillQuickSlot.using_skill_id_1)
  return using_skill_id_1_;
}
inline void SkillQuickSlot::set_using_skill_id_1(::google::protobuf::int32 value) {
  set_has_using_skill_id_1();
  using_skill_id_1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.SkillQuickSlot.using_skill_id_1)
}

// required int32 using_skill_id_2 = 11;
inline bool SkillQuickSlot::has_using_skill_id_2() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SkillQuickSlot::set_has_using_skill_id_2() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SkillQuickSlot::clear_has_using_skill_id_2() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SkillQuickSlot::clear_using_skill_id_2() {
  using_skill_id_2_ = 0;
  clear_has_using_skill_id_2();
}
inline ::google::protobuf::int32 SkillQuickSlot::using_skill_id_2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.SkillQuickSlot.using_skill_id_2)
  return using_skill_id_2_;
}
inline void SkillQuickSlot::set_using_skill_id_2(::google::protobuf::int32 value) {
  set_has_using_skill_id_2();
  using_skill_id_2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.SkillQuickSlot.using_skill_id_2)
}

// required int32 using_skill_id_3 = 12;
inline bool SkillQuickSlot::has_using_skill_id_3() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SkillQuickSlot::set_has_using_skill_id_3() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SkillQuickSlot::clear_has_using_skill_id_3() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SkillQuickSlot::clear_using_skill_id_3() {
  using_skill_id_3_ = 0;
  clear_has_using_skill_id_3();
}
inline ::google::protobuf::int32 SkillQuickSlot::using_skill_id_3() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.SkillQuickSlot.using_skill_id_3)
  return using_skill_id_3_;
}
inline void SkillQuickSlot::set_using_skill_id_3(::google::protobuf::int32 value) {
  set_has_using_skill_id_3();
  using_skill_id_3_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.SkillQuickSlot.using_skill_id_3)
}

// -------------------------------------------------------------------

// Skill

// required int32 skill_id = 1;
inline bool Skill::has_skill_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Skill::set_has_skill_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Skill::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Skill::clear_skill_id() {
  skill_id_ = 0;
  clear_has_skill_id();
}
inline ::google::protobuf::int32 Skill::skill_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Skill.skill_id)
  return skill_id_;
}
inline void Skill::set_skill_id(::google::protobuf::int32 value) {
  set_has_skill_id();
  skill_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Skill.skill_id)
}

// required int32 skill_level = 2;
inline bool Skill::has_skill_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Skill::set_has_skill_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Skill::clear_has_skill_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Skill::clear_skill_level() {
  skill_level_ = 0;
  clear_has_skill_level();
}
inline ::google::protobuf::int32 Skill::skill_level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Skill.skill_level)
  return skill_level_;
}
inline void Skill::set_skill_level(::google::protobuf::int32 value) {
  set_has_skill_level();
  skill_level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Skill.skill_level)
}

// -------------------------------------------------------------------

// RawReward

// required int32 id = 1;
inline bool RawReward::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RawReward::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RawReward::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RawReward::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 RawReward::id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.RawReward.id)
  return id_;
}
inline void RawReward::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.RawReward.id)
}

// required int32 count = 2;
inline bool RawReward::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RawReward::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RawReward::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RawReward::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 RawReward::count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.RawReward.count)
  return count_;
}
inline void RawReward::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.RawReward.count)
}

// -------------------------------------------------------------------

// Reward

// required .b2.protocol.commondata.RawReward raw_reward = 1;
inline bool Reward::has_raw_reward() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Reward::set_has_raw_reward() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Reward::clear_has_raw_reward() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Reward::clear_raw_reward() {
  if (raw_reward_ != NULL) raw_reward_->::b2::protocol::commondata::RawReward::Clear();
  clear_has_raw_reward();
}
inline const ::b2::protocol::commondata::RawReward& Reward::raw_reward() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Reward.raw_reward)
  return raw_reward_ != NULL ? *raw_reward_ : *default_instance_->raw_reward_;
}
inline ::b2::protocol::commondata::RawReward* Reward::mutable_raw_reward() {
  set_has_raw_reward();
  if (raw_reward_ == NULL) raw_reward_ = new ::b2::protocol::commondata::RawReward;
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.Reward.raw_reward)
  return raw_reward_;
}
inline ::b2::protocol::commondata::RawReward* Reward::release_raw_reward() {
  clear_has_raw_reward();
  ::b2::protocol::commondata::RawReward* temp = raw_reward_;
  raw_reward_ = NULL;
  return temp;
}
inline void Reward::set_allocated_raw_reward(::b2::protocol::commondata::RawReward* raw_reward) {
  delete raw_reward_;
  raw_reward_ = raw_reward;
  if (raw_reward) {
    set_has_raw_reward();
  } else {
    clear_has_raw_reward();
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.commondata.Reward.raw_reward)
}

// optional .b2.protocol.commondata.Item item = 5;
inline bool Reward::has_item() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Reward::set_has_item() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Reward::clear_has_item() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Reward::clear_item() {
  if (item_ != NULL) item_->::b2::protocol::commondata::Item::Clear();
  clear_has_item();
}
inline const ::b2::protocol::commondata::Item& Reward::item() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Reward.item)
  return item_ != NULL ? *item_ : *default_instance_->item_;
}
inline ::b2::protocol::commondata::Item* Reward::mutable_item() {
  set_has_item();
  if (item_ == NULL) item_ = new ::b2::protocol::commondata::Item;
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.Reward.item)
  return item_;
}
inline ::b2::protocol::commondata::Item* Reward::release_item() {
  clear_has_item();
  ::b2::protocol::commondata::Item* temp = item_;
  item_ = NULL;
  return temp;
}
inline void Reward::set_allocated_item(::b2::protocol::commondata::Item* item) {
  delete item_;
  item_ = item;
  if (item) {
    set_has_item();
  } else {
    clear_has_item();
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.commondata.Reward.item)
}

// optional .b2.protocol.commondata.Costume costume = 6;
inline bool Reward::has_costume() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Reward::set_has_costume() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Reward::clear_has_costume() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Reward::clear_costume() {
  if (costume_ != NULL) costume_->::b2::protocol::commondata::Costume::Clear();
  clear_has_costume();
}
inline const ::b2::protocol::commondata::Costume& Reward::costume() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Reward.costume)
  return costume_ != NULL ? *costume_ : *default_instance_->costume_;
}
inline ::b2::protocol::commondata::Costume* Reward::mutable_costume() {
  set_has_costume();
  if (costume_ == NULL) costume_ = new ::b2::protocol::commondata::Costume;
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.Reward.costume)
  return costume_;
}
inline ::b2::protocol::commondata::Costume* Reward::release_costume() {
  clear_has_costume();
  ::b2::protocol::commondata::Costume* temp = costume_;
  costume_ = NULL;
  return temp;
}
inline void Reward::set_allocated_costume(::b2::protocol::commondata::Costume* costume) {
  delete costume_;
  costume_ = costume;
  if (costume) {
    set_has_costume();
  } else {
    clear_has_costume();
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.commondata.Reward.costume)
}

// optional .b2.protocol.commondata.Totem totem = 7;
inline bool Reward::has_totem() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Reward::set_has_totem() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Reward::clear_has_totem() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Reward::clear_totem() {
  if (totem_ != NULL) totem_->::b2::protocol::commondata::Totem::Clear();
  clear_has_totem();
}
inline const ::b2::protocol::commondata::Totem& Reward::totem() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Reward.totem)
  return totem_ != NULL ? *totem_ : *default_instance_->totem_;
}
inline ::b2::protocol::commondata::Totem* Reward::mutable_totem() {
  set_has_totem();
  if (totem_ == NULL) totem_ = new ::b2::protocol::commondata::Totem;
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.Reward.totem)
  return totem_;
}
inline ::b2::protocol::commondata::Totem* Reward::release_totem() {
  clear_has_totem();
  ::b2::protocol::commondata::Totem* temp = totem_;
  totem_ = NULL;
  return temp;
}
inline void Reward::set_allocated_totem(::b2::protocol::commondata::Totem* totem) {
  delete totem_;
  totem_ = totem;
  if (totem) {
    set_has_totem();
  } else {
    clear_has_totem();
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.commondata.Reward.totem)
}

// optional .b2.protocol.commondata.Aether aether = 8;
inline bool Reward::has_aether() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Reward::set_has_aether() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Reward::clear_has_aether() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Reward::clear_aether() {
  if (aether_ != NULL) aether_->::b2::protocol::commondata::Aether::Clear();
  clear_has_aether();
}
inline const ::b2::protocol::commondata::Aether& Reward::aether() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Reward.aether)
  return aether_ != NULL ? *aether_ : *default_instance_->aether_;
}
inline ::b2::protocol::commondata::Aether* Reward::mutable_aether() {
  set_has_aether();
  if (aether_ == NULL) aether_ = new ::b2::protocol::commondata::Aether;
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.Reward.aether)
  return aether_;
}
inline ::b2::protocol::commondata::Aether* Reward::release_aether() {
  clear_has_aether();
  ::b2::protocol::commondata::Aether* temp = aether_;
  aether_ = NULL;
  return temp;
}
inline void Reward::set_allocated_aether(::b2::protocol::commondata::Aether* aether) {
  delete aether_;
  aether_ = aether;
  if (aether) {
    set_has_aether();
  } else {
    clear_has_aether();
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.commondata.Reward.aether)
}

// optional .b2.protocol.commondata.LightAccount light_account = 9;
inline bool Reward::has_light_account() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Reward::set_has_light_account() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Reward::clear_has_light_account() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Reward::clear_light_account() {
  if (light_account_ != NULL) light_account_->::b2::protocol::commondata::LightAccount::Clear();
  clear_has_light_account();
}
inline const ::b2::protocol::commondata::LightAccount& Reward::light_account() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Reward.light_account)
  return light_account_ != NULL ? *light_account_ : *default_instance_->light_account_;
}
inline ::b2::protocol::commondata::LightAccount* Reward::mutable_light_account() {
  set_has_light_account();
  if (light_account_ == NULL) light_account_ = new ::b2::protocol::commondata::LightAccount;
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.Reward.light_account)
  return light_account_;
}
inline ::b2::protocol::commondata::LightAccount* Reward::release_light_account() {
  clear_has_light_account();
  ::b2::protocol::commondata::LightAccount* temp = light_account_;
  light_account_ = NULL;
  return temp;
}
inline void Reward::set_allocated_light_account(::b2::protocol::commondata::LightAccount* light_account) {
  delete light_account_;
  light_account_ = light_account;
  if (light_account) {
    set_has_light_account();
  } else {
    clear_has_light_account();
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.commondata.Reward.light_account)
}

// repeated .b2.protocol.commondata.LightCharacter light_characters = 10;
inline int Reward::light_characters_size() const {
  return light_characters_.size();
}
inline void Reward::clear_light_characters() {
  light_characters_.Clear();
}
inline const ::b2::protocol::commondata::LightCharacter& Reward::light_characters(int index) const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Reward.light_characters)
  return light_characters_.Get(index);
}
inline ::b2::protocol::commondata::LightCharacter* Reward::mutable_light_characters(int index) {
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.Reward.light_characters)
  return light_characters_.Mutable(index);
}
inline ::b2::protocol::commondata::LightCharacter* Reward::add_light_characters() {
  // @@protoc_insertion_point(field_add:b2.protocol.commondata.Reward.light_characters)
  return light_characters_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::LightCharacter >&
Reward::light_characters() const {
  // @@protoc_insertion_point(field_list:b2.protocol.commondata.Reward.light_characters)
  return light_characters_;
}
inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::LightCharacter >*
Reward::mutable_light_characters() {
  // @@protoc_insertion_point(field_mutable_list:b2.protocol.commondata.Reward.light_characters)
  return &light_characters_;
}

// -------------------------------------------------------------------

// RewardRandomCount

// required int32 id = 1;
inline bool RewardRandomCount::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RewardRandomCount::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RewardRandomCount::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RewardRandomCount::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 RewardRandomCount::id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.RewardRandomCount.id)
  return id_;
}
inline void RewardRandomCount::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.RewardRandomCount.id)
}

// required int32 min_count = 2;
inline bool RewardRandomCount::has_min_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RewardRandomCount::set_has_min_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RewardRandomCount::clear_has_min_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RewardRandomCount::clear_min_count() {
  min_count_ = 0;
  clear_has_min_count();
}
inline ::google::protobuf::int32 RewardRandomCount::min_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.RewardRandomCount.min_count)
  return min_count_;
}
inline void RewardRandomCount::set_min_count(::google::protobuf::int32 value) {
  set_has_min_count();
  min_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.RewardRandomCount.min_count)
}

// required int32 max_count = 3;
inline bool RewardRandomCount::has_max_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RewardRandomCount::set_has_max_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RewardRandomCount::clear_has_max_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RewardRandomCount::clear_max_count() {
  max_count_ = 0;
  clear_has_max_count();
}
inline ::google::protobuf::int32 RewardRandomCount::max_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.RewardRandomCount.max_count)
  return max_count_;
}
inline void RewardRandomCount::set_max_count(::google::protobuf::int32 value) {
  set_has_max_count();
  max_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.RewardRandomCount.max_count)
}

// -------------------------------------------------------------------

// QuestInfo

// required .b2.protocol.commondata.QuestInfo.QuestSlotType slot = 1;
inline bool QuestInfo::has_slot() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QuestInfo::set_has_slot() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QuestInfo::clear_has_slot() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QuestInfo::clear_slot() {
  slot_ = 1;
  clear_has_slot();
}
inline ::b2::protocol::commondata::QuestInfo_QuestSlotType QuestInfo::slot() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.QuestInfo.slot)
  return static_cast< ::b2::protocol::commondata::QuestInfo_QuestSlotType >(slot_);
}
inline void QuestInfo::set_slot(::b2::protocol::commondata::QuestInfo_QuestSlotType value) {
  assert(::b2::protocol::commondata::QuestInfo_QuestSlotType_IsValid(value));
  set_has_slot();
  slot_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.QuestInfo.slot)
}

// required .b2.protocol.commondata.QuestType type = 2;
inline bool QuestInfo::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QuestInfo::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QuestInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QuestInfo::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::b2::protocol::commondata::QuestType QuestInfo::type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.QuestInfo.type)
  return static_cast< ::b2::protocol::commondata::QuestType >(type_);
}
inline void QuestInfo::set_type(::b2::protocol::commondata::QuestType value) {
  assert(::b2::protocol::commondata::QuestType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.QuestInfo.type)
}

// required int32 quest_id = 3;
inline bool QuestInfo::has_quest_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QuestInfo::set_has_quest_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QuestInfo::clear_has_quest_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QuestInfo::clear_quest_id() {
  quest_id_ = 0;
  clear_has_quest_id();
}
inline ::google::protobuf::int32 QuestInfo::quest_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.QuestInfo.quest_id)
  return quest_id_;
}
inline void QuestInfo::set_quest_id(::google::protobuf::int32 value) {
  set_has_quest_id();
  quest_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.QuestInfo.quest_id)
}

// required int32 progress_count = 4;
inline bool QuestInfo::has_progress_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QuestInfo::set_has_progress_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QuestInfo::clear_has_progress_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QuestInfo::clear_progress_count() {
  progress_count_ = 0;
  clear_has_progress_count();
}
inline ::google::protobuf::int32 QuestInfo::progress_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.QuestInfo.progress_count)
  return progress_count_;
}
inline void QuestInfo::set_progress_count(::google::protobuf::int32 value) {
  set_has_progress_count();
  progress_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.QuestInfo.progress_count)
}

// required int32 state = 5;
inline bool QuestInfo::has_state() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void QuestInfo::set_has_state() {
  _has_bits_[0] |= 0x00000010u;
}
inline void QuestInfo::clear_has_state() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void QuestInfo::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 QuestInfo::state() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.QuestInfo.state)
  return state_;
}
inline void QuestInfo::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.QuestInfo.state)
}

// -------------------------------------------------------------------

// MissionInfo

// required .b2.protocol.commondata.MissionInfo.MissionType mission_type = 1;
inline bool MissionInfo::has_mission_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MissionInfo::set_has_mission_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MissionInfo::clear_has_mission_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MissionInfo::clear_mission_type() {
  mission_type_ = 1;
  clear_has_mission_type();
}
inline ::b2::protocol::commondata::MissionInfo_MissionType MissionInfo::mission_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.MissionInfo.mission_type)
  return static_cast< ::b2::protocol::commondata::MissionInfo_MissionType >(mission_type_);
}
inline void MissionInfo::set_mission_type(::b2::protocol::commondata::MissionInfo_MissionType value) {
  assert(::b2::protocol::commondata::MissionInfo_MissionType_IsValid(value));
  set_has_mission_type();
  mission_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.MissionInfo.mission_type)
}

// required .b2.protocol.commondata.MissionInfo.MissionStateType mission_state_type = 2;
inline bool MissionInfo::has_mission_state_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MissionInfo::set_has_mission_state_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MissionInfo::clear_has_mission_state_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MissionInfo::clear_mission_state_type() {
  mission_state_type_ = 1;
  clear_has_mission_state_type();
}
inline ::b2::protocol::commondata::MissionInfo_MissionStateType MissionInfo::mission_state_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.MissionInfo.mission_state_type)
  return static_cast< ::b2::protocol::commondata::MissionInfo_MissionStateType >(mission_state_type_);
}
inline void MissionInfo::set_mission_state_type(::b2::protocol::commondata::MissionInfo_MissionStateType value) {
  assert(::b2::protocol::commondata::MissionInfo_MissionStateType_IsValid(value));
  set_has_mission_state_type();
  mission_state_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.MissionInfo.mission_state_type)
}

// required int32 mission_id = 3;
inline bool MissionInfo::has_mission_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MissionInfo::set_has_mission_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MissionInfo::clear_has_mission_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MissionInfo::clear_mission_id() {
  mission_id_ = 0;
  clear_has_mission_id();
}
inline ::google::protobuf::int32 MissionInfo::mission_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.MissionInfo.mission_id)
  return mission_id_;
}
inline void MissionInfo::set_mission_id(::google::protobuf::int32 value) {
  set_has_mission_id();
  mission_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.MissionInfo.mission_id)
}

// required int64 progress_count = 4;
inline bool MissionInfo::has_progress_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MissionInfo::set_has_progress_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MissionInfo::clear_has_progress_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MissionInfo::clear_progress_count() {
  progress_count_ = GOOGLE_LONGLONG(0);
  clear_has_progress_count();
}
inline ::google::protobuf::int64 MissionInfo::progress_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.MissionInfo.progress_count)
  return progress_count_;
}
inline void MissionInfo::set_progress_count(::google::protobuf::int64 value) {
  set_has_progress_count();
  progress_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.MissionInfo.progress_count)
}

// optional int32 completed_step = 5;
inline bool MissionInfo::has_completed_step() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MissionInfo::set_has_completed_step() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MissionInfo::clear_has_completed_step() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MissionInfo::clear_completed_step() {
  completed_step_ = 0;
  clear_has_completed_step();
}
inline ::google::protobuf::int32 MissionInfo::completed_step() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.MissionInfo.completed_step)
  return completed_step_;
}
inline void MissionInfo::set_completed_step(::google::protobuf::int32 value) {
  set_has_completed_step();
  completed_step_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.MissionInfo.completed_step)
}

// optional int32 rewarded_step = 6;
inline bool MissionInfo::has_rewarded_step() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MissionInfo::set_has_rewarded_step() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MissionInfo::clear_has_rewarded_step() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MissionInfo::clear_rewarded_step() {
  rewarded_step_ = 0;
  clear_has_rewarded_step();
}
inline ::google::protobuf::int32 MissionInfo::rewarded_step() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.MissionInfo.rewarded_step)
  return rewarded_step_;
}
inline void MissionInfo::set_rewarded_step(::google::protobuf::int32 value) {
  set_has_rewarded_step();
  rewarded_step_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.MissionInfo.rewarded_step)
}

// -------------------------------------------------------------------

// MissionCompletePointInfo

// required .b2.protocol.commondata.MissionInfo.MissionType mission_type = 1;
inline bool MissionCompletePointInfo::has_mission_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MissionCompletePointInfo::set_has_mission_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MissionCompletePointInfo::clear_has_mission_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MissionCompletePointInfo::clear_mission_type() {
  mission_type_ = 1;
  clear_has_mission_type();
}
inline ::b2::protocol::commondata::MissionInfo_MissionType MissionCompletePointInfo::mission_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.MissionCompletePointInfo.mission_type)
  return static_cast< ::b2::protocol::commondata::MissionInfo_MissionType >(mission_type_);
}
inline void MissionCompletePointInfo::set_mission_type(::b2::protocol::commondata::MissionInfo_MissionType value) {
  assert(::b2::protocol::commondata::MissionInfo_MissionType_IsValid(value));
  set_has_mission_type();
  mission_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.MissionCompletePointInfo.mission_type)
}

// required int32 completePoint = 2;
inline bool MissionCompletePointInfo::has_completepoint() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MissionCompletePointInfo::set_has_completepoint() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MissionCompletePointInfo::clear_has_completepoint() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MissionCompletePointInfo::clear_completepoint() {
  completepoint_ = 0;
  clear_has_completepoint();
}
inline ::google::protobuf::int32 MissionCompletePointInfo::completepoint() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.MissionCompletePointInfo.completePoint)
  return completepoint_;
}
inline void MissionCompletePointInfo::set_completepoint(::google::protobuf::int32 value) {
  set_has_completepoint();
  completepoint_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.MissionCompletePointInfo.completePoint)
}

// repeated int32 reward_indexs = 3;
inline int MissionCompletePointInfo::reward_indexs_size() const {
  return reward_indexs_.size();
}
inline void MissionCompletePointInfo::clear_reward_indexs() {
  reward_indexs_.Clear();
}
inline ::google::protobuf::int32 MissionCompletePointInfo::reward_indexs(int index) const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.MissionCompletePointInfo.reward_indexs)
  return reward_indexs_.Get(index);
}
inline void MissionCompletePointInfo::set_reward_indexs(int index, ::google::protobuf::int32 value) {
  reward_indexs_.Set(index, value);
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.MissionCompletePointInfo.reward_indexs)
}
inline void MissionCompletePointInfo::add_reward_indexs(::google::protobuf::int32 value) {
  reward_indexs_.Add(value);
  // @@protoc_insertion_point(field_add:b2.protocol.commondata.MissionCompletePointInfo.reward_indexs)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MissionCompletePointInfo::reward_indexs() const {
  // @@protoc_insertion_point(field_list:b2.protocol.commondata.MissionCompletePointInfo.reward_indexs)
  return reward_indexs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MissionCompletePointInfo::mutable_reward_indexs() {
  // @@protoc_insertion_point(field_mutable_list:b2.protocol.commondata.MissionCompletePointInfo.reward_indexs)
  return &reward_indexs_;
}

// -------------------------------------------------------------------

// Guild

// required int64 guild_id = 1;
inline bool Guild::has_guild_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Guild::set_has_guild_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Guild::clear_has_guild_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Guild::clear_guild_id() {
  guild_id_ = GOOGLE_LONGLONG(0);
  clear_has_guild_id();
}
inline ::google::protobuf::int64 Guild::guild_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Guild.guild_id)
  return guild_id_;
}
inline void Guild::set_guild_id(::google::protobuf::int64 value) {
  set_has_guild_id();
  guild_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Guild.guild_id)
}

// required string guild_name = 2;
inline bool Guild::has_guild_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Guild::set_has_guild_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Guild::clear_has_guild_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Guild::clear_guild_name() {
  if (guild_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guild_name_->clear();
  }
  clear_has_guild_name();
}
inline const ::std::string& Guild::guild_name() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Guild.guild_name)
  return *guild_name_;
}
inline void Guild::set_guild_name(const ::std::string& value) {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guild_name_ = new ::std::string;
  }
  guild_name_->assign(value);
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Guild.guild_name)
}
inline void Guild::set_guild_name(const char* value) {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guild_name_ = new ::std::string;
  }
  guild_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:b2.protocol.commondata.Guild.guild_name)
}
inline void Guild::set_guild_name(const char* value, size_t size) {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guild_name_ = new ::std::string;
  }
  guild_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:b2.protocol.commondata.Guild.guild_name)
}
inline ::std::string* Guild::mutable_guild_name() {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guild_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.Guild.guild_name)
  return guild_name_;
}
inline ::std::string* Guild::release_guild_name() {
  clear_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = guild_name_;
    guild_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Guild::set_allocated_guild_name(::std::string* guild_name) {
  if (guild_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete guild_name_;
  }
  if (guild_name) {
    set_has_guild_name();
    guild_name_ = guild_name;
  } else {
    clear_has_guild_name();
    guild_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.commondata.Guild.guild_name)
}

// required int64 master_account_id = 3;
inline bool Guild::has_master_account_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Guild::set_has_master_account_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Guild::clear_has_master_account_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Guild::clear_master_account_id() {
  master_account_id_ = GOOGLE_LONGLONG(0);
  clear_has_master_account_id();
}
inline ::google::protobuf::int64 Guild::master_account_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Guild.master_account_id)
  return master_account_id_;
}
inline void Guild::set_master_account_id(::google::protobuf::int64 value) {
  set_has_master_account_id();
  master_account_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Guild.master_account_id)
}

// required string master_name = 4;
inline bool Guild::has_master_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Guild::set_has_master_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Guild::clear_has_master_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Guild::clear_master_name() {
  if (master_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    master_name_->clear();
  }
  clear_has_master_name();
}
inline const ::std::string& Guild::master_name() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Guild.master_name)
  return *master_name_;
}
inline void Guild::set_master_name(const ::std::string& value) {
  set_has_master_name();
  if (master_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    master_name_ = new ::std::string;
  }
  master_name_->assign(value);
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Guild.master_name)
}
inline void Guild::set_master_name(const char* value) {
  set_has_master_name();
  if (master_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    master_name_ = new ::std::string;
  }
  master_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:b2.protocol.commondata.Guild.master_name)
}
inline void Guild::set_master_name(const char* value, size_t size) {
  set_has_master_name();
  if (master_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    master_name_ = new ::std::string;
  }
  master_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:b2.protocol.commondata.Guild.master_name)
}
inline ::std::string* Guild::mutable_master_name() {
  set_has_master_name();
  if (master_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    master_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.Guild.master_name)
  return master_name_;
}
inline ::std::string* Guild::release_master_name() {
  clear_has_master_name();
  if (master_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = master_name_;
    master_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Guild::set_allocated_master_name(::std::string* master_name) {
  if (master_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete master_name_;
  }
  if (master_name) {
    set_has_master_name();
    master_name_ = master_name;
  } else {
    clear_has_master_name();
    master_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.commondata.Guild.master_name)
}

// required int32 max_member_count = 5;
inline bool Guild::has_max_member_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Guild::set_has_max_member_count() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Guild::clear_has_max_member_count() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Guild::clear_max_member_count() {
  max_member_count_ = 0;
  clear_has_max_member_count();
}
inline ::google::protobuf::int32 Guild::max_member_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Guild.max_member_count)
  return max_member_count_;
}
inline void Guild::set_max_member_count(::google::protobuf::int32 value) {
  set_has_max_member_count();
  max_member_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Guild.max_member_count)
}

// required string notice = 6;
inline bool Guild::has_notice() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Guild::set_has_notice() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Guild::clear_has_notice() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Guild::clear_notice() {
  if (notice_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    notice_->clear();
  }
  clear_has_notice();
}
inline const ::std::string& Guild::notice() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Guild.notice)
  return *notice_;
}
inline void Guild::set_notice(const ::std::string& value) {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    notice_ = new ::std::string;
  }
  notice_->assign(value);
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Guild.notice)
}
inline void Guild::set_notice(const char* value) {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    notice_ = new ::std::string;
  }
  notice_->assign(value);
  // @@protoc_insertion_point(field_set_char:b2.protocol.commondata.Guild.notice)
}
inline void Guild::set_notice(const char* value, size_t size) {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    notice_ = new ::std::string;
  }
  notice_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:b2.protocol.commondata.Guild.notice)
}
inline ::std::string* Guild::mutable_notice() {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    notice_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.Guild.notice)
  return notice_;
}
inline ::std::string* Guild::release_notice() {
  clear_has_notice();
  if (notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = notice_;
    notice_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Guild::set_allocated_notice(::std::string* notice) {
  if (notice_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete notice_;
  }
  if (notice) {
    set_has_notice();
    notice_ = notice;
  } else {
    clear_has_notice();
    notice_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.commondata.Guild.notice)
}

// required int32 level = 7;
inline bool Guild::has_level() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Guild::set_has_level() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Guild::clear_has_level() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Guild::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 Guild::level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Guild.level)
  return level_;
}
inline void Guild::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Guild.level)
}

// required int32 exp = 8;
inline bool Guild::has_exp() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Guild::set_has_exp() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Guild::clear_has_exp() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Guild::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 Guild::exp() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Guild.exp)
  return exp_;
}
inline void Guild::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Guild.exp)
}

// required .b2.protocol.commondata.Guild.JoinOption join_option = 10;
inline bool Guild::has_join_option() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Guild::set_has_join_option() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Guild::clear_has_join_option() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Guild::clear_join_option() {
  join_option_ = 1;
  clear_has_join_option();
}
inline ::b2::protocol::commondata::Guild_JoinOption Guild::join_option() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Guild.join_option)
  return static_cast< ::b2::protocol::commondata::Guild_JoinOption >(join_option_);
}
inline void Guild::set_join_option(::b2::protocol::commondata::Guild_JoinOption value) {
  assert(::b2::protocol::commondata::Guild_JoinOption_IsValid(value));
  set_has_join_option();
  join_option_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Guild.join_option)
}

// required int32 mark_index = 11;
inline bool Guild::has_mark_index() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Guild::set_has_mark_index() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Guild::clear_has_mark_index() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Guild::clear_mark_index() {
  mark_index_ = 0;
  clear_has_mark_index();
}
inline ::google::protobuf::int32 Guild::mark_index() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Guild.mark_index)
  return mark_index_;
}
inline void Guild::set_mark_index(::google::protobuf::int32 value) {
  set_has_mark_index();
  mark_index_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Guild.mark_index)
}

// required int32 mark_color = 12;
inline bool Guild::has_mark_color() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Guild::set_has_mark_color() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Guild::clear_has_mark_color() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Guild::clear_mark_color() {
  mark_color_ = 0;
  clear_has_mark_color();
}
inline ::google::protobuf::int32 Guild::mark_color() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Guild.mark_color)
  return mark_color_;
}
inline void Guild::set_mark_color(::google::protobuf::int32 value) {
  set_has_mark_color();
  mark_color_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Guild.mark_color)
}

// required int32 mark_bg_index = 13;
inline bool Guild::has_mark_bg_index() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Guild::set_has_mark_bg_index() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Guild::clear_has_mark_bg_index() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Guild::clear_mark_bg_index() {
  mark_bg_index_ = 0;
  clear_has_mark_bg_index();
}
inline ::google::protobuf::int32 Guild::mark_bg_index() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Guild.mark_bg_index)
  return mark_bg_index_;
}
inline void Guild::set_mark_bg_index(::google::protobuf::int32 value) {
  set_has_mark_bg_index();
  mark_bg_index_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Guild.mark_bg_index)
}

// required int32 mark_bg_color = 14;
inline bool Guild::has_mark_bg_color() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Guild::set_has_mark_bg_color() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Guild::clear_has_mark_bg_color() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Guild::clear_mark_bg_color() {
  mark_bg_color_ = 0;
  clear_has_mark_bg_color();
}
inline ::google::protobuf::int32 Guild::mark_bg_color() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Guild.mark_bg_color)
  return mark_bg_color_;
}
inline void Guild::set_mark_bg_color(::google::protobuf::int32 value) {
  set_has_mark_bg_color();
  mark_bg_color_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Guild.mark_bg_color)
}

// required int32 cur_member_count = 15;
inline bool Guild::has_cur_member_count() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Guild::set_has_cur_member_count() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Guild::clear_has_cur_member_count() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Guild::clear_cur_member_count() {
  cur_member_count_ = 0;
  clear_has_cur_member_count();
}
inline ::google::protobuf::int32 Guild::cur_member_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Guild.cur_member_count)
  return cur_member_count_;
}
inline void Guild::set_cur_member_count(::google::protobuf::int32 value) {
  set_has_cur_member_count();
  cur_member_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Guild.cur_member_count)
}

// required int64 create_time = 16;
inline bool Guild::has_create_time() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void Guild::set_has_create_time() {
  _has_bits_[0] |= 0x00004000u;
}
inline void Guild::clear_has_create_time() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void Guild::clear_create_time() {
  create_time_ = GOOGLE_LONGLONG(0);
  clear_has_create_time();
}
inline ::google::protobuf::int64 Guild::create_time() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Guild.create_time)
  return create_time_;
}
inline void Guild::set_create_time(::google::protobuf::int64 value) {
  set_has_create_time();
  create_time_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Guild.create_time)
}

// optional int64 master_elected_time = 17;
inline bool Guild::has_master_elected_time() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void Guild::set_has_master_elected_time() {
  _has_bits_[0] |= 0x00008000u;
}
inline void Guild::clear_has_master_elected_time() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void Guild::clear_master_elected_time() {
  master_elected_time_ = GOOGLE_LONGLONG(0);
  clear_has_master_elected_time();
}
inline ::google::protobuf::int64 Guild::master_elected_time() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Guild.master_elected_time)
  return master_elected_time_;
}
inline void Guild::set_master_elected_time(::google::protobuf::int64 value) {
  set_has_master_elected_time();
  master_elected_time_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Guild.master_elected_time)
}

// required int32 season_obtain_medal = 20;
inline bool Guild::has_season_obtain_medal() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void Guild::set_has_season_obtain_medal() {
  _has_bits_[0] |= 0x00010000u;
}
inline void Guild::clear_has_season_obtain_medal() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void Guild::clear_season_obtain_medal() {
  season_obtain_medal_ = 0;
  clear_has_season_obtain_medal();
}
inline ::google::protobuf::int32 Guild::season_obtain_medal() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Guild.season_obtain_medal)
  return season_obtain_medal_;
}
inline void Guild::set_season_obtain_medal(::google::protobuf::int32 value) {
  set_has_season_obtain_medal();
  season_obtain_medal_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Guild.season_obtain_medal)
}

// required int32 season_ranking = 21;
inline bool Guild::has_season_ranking() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void Guild::set_has_season_ranking() {
  _has_bits_[0] |= 0x00020000u;
}
inline void Guild::clear_has_season_ranking() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void Guild::clear_season_ranking() {
  season_ranking_ = 0;
  clear_has_season_ranking();
}
inline ::google::protobuf::int32 Guild::season_ranking() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Guild.season_ranking)
  return season_ranking_;
}
inline void Guild::set_season_ranking(::google::protobuf::int32 value) {
  set_has_season_ranking();
  season_ranking_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Guild.season_ranking)
}

// required int32 season_ranking_total = 22;
inline bool Guild::has_season_ranking_total() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void Guild::set_has_season_ranking_total() {
  _has_bits_[0] |= 0x00040000u;
}
inline void Guild::clear_has_season_ranking_total() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void Guild::clear_season_ranking_total() {
  season_ranking_total_ = 0;
  clear_has_season_ranking_total();
}
inline ::google::protobuf::int32 Guild::season_ranking_total() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Guild.season_ranking_total)
  return season_ranking_total_;
}
inline void Guild::set_season_ranking_total(::google::protobuf::int32 value) {
  set_has_season_ranking_total();
  season_ranking_total_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Guild.season_ranking_total)
}

// required int32 members_avg_power = 23;
inline bool Guild::has_members_avg_power() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void Guild::set_has_members_avg_power() {
  _has_bits_[0] |= 0x00080000u;
}
inline void Guild::clear_has_members_avg_power() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void Guild::clear_members_avg_power() {
  members_avg_power_ = 0;
  clear_has_members_avg_power();
}
inline ::google::protobuf::int32 Guild::members_avg_power() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Guild.members_avg_power)
  return members_avg_power_;
}
inline void Guild::set_members_avg_power(::google::protobuf::int32 value) {
  set_has_members_avg_power();
  members_avg_power_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Guild.members_avg_power)
}

// required int32 total_result = 24;
inline bool Guild::has_total_result() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void Guild::set_has_total_result() {
  _has_bits_[0] |= 0x00100000u;
}
inline void Guild::clear_has_total_result() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void Guild::clear_total_result() {
  total_result_ = 0;
  clear_has_total_result();
}
inline ::google::protobuf::int32 Guild::total_result() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Guild.total_result)
  return total_result_;
}
inline void Guild::set_total_result(::google::protobuf::int32 value) {
  set_has_total_result();
  total_result_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Guild.total_result)
}

// optional bool join_guild_battle = 30;
inline bool Guild::has_join_guild_battle() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void Guild::set_has_join_guild_battle() {
  _has_bits_[0] |= 0x00200000u;
}
inline void Guild::clear_has_join_guild_battle() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void Guild::clear_join_guild_battle() {
  join_guild_battle_ = false;
  clear_has_join_guild_battle();
}
inline bool Guild::join_guild_battle() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Guild.join_guild_battle)
  return join_guild_battle_;
}
inline void Guild::set_join_guild_battle(bool value) {
  set_has_join_guild_battle();
  join_guild_battle_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Guild.join_guild_battle)
}

// optional int32 turn_obtain_medal = 31;
inline bool Guild::has_turn_obtain_medal() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void Guild::set_has_turn_obtain_medal() {
  _has_bits_[0] |= 0x00400000u;
}
inline void Guild::clear_has_turn_obtain_medal() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void Guild::clear_turn_obtain_medal() {
  turn_obtain_medal_ = 0;
  clear_has_turn_obtain_medal();
}
inline ::google::protobuf::int32 Guild::turn_obtain_medal() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Guild.turn_obtain_medal)
  return turn_obtain_medal_;
}
inline void Guild::set_turn_obtain_medal(::google::protobuf::int32 value) {
  set_has_turn_obtain_medal();
  turn_obtain_medal_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Guild.turn_obtain_medal)
}

// -------------------------------------------------------------------

// GuildRanking

// required int32 ranking = 1;
inline bool GuildRanking::has_ranking() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildRanking::set_has_ranking() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildRanking::clear_has_ranking() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildRanking::clear_ranking() {
  ranking_ = 0;
  clear_has_ranking();
}
inline ::google::protobuf::int32 GuildRanking::ranking() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildRanking.ranking)
  return ranking_;
}
inline void GuildRanking::set_ranking(::google::protobuf::int32 value) {
  set_has_ranking();
  ranking_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildRanking.ranking)
}

// required int64 guild_id = 2;
inline bool GuildRanking::has_guild_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildRanking::set_has_guild_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildRanking::clear_has_guild_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildRanking::clear_guild_id() {
  guild_id_ = GOOGLE_LONGLONG(0);
  clear_has_guild_id();
}
inline ::google::protobuf::int64 GuildRanking::guild_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildRanking.guild_id)
  return guild_id_;
}
inline void GuildRanking::set_guild_id(::google::protobuf::int64 value) {
  set_has_guild_id();
  guild_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildRanking.guild_id)
}

// required string guild_name = 3;
inline bool GuildRanking::has_guild_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildRanking::set_has_guild_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildRanking::clear_has_guild_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildRanking::clear_guild_name() {
  if (guild_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guild_name_->clear();
  }
  clear_has_guild_name();
}
inline const ::std::string& GuildRanking::guild_name() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildRanking.guild_name)
  return *guild_name_;
}
inline void GuildRanking::set_guild_name(const ::std::string& value) {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guild_name_ = new ::std::string;
  }
  guild_name_->assign(value);
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildRanking.guild_name)
}
inline void GuildRanking::set_guild_name(const char* value) {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guild_name_ = new ::std::string;
  }
  guild_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:b2.protocol.commondata.GuildRanking.guild_name)
}
inline void GuildRanking::set_guild_name(const char* value, size_t size) {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guild_name_ = new ::std::string;
  }
  guild_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:b2.protocol.commondata.GuildRanking.guild_name)
}
inline ::std::string* GuildRanking::mutable_guild_name() {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guild_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.GuildRanking.guild_name)
  return guild_name_;
}
inline ::std::string* GuildRanking::release_guild_name() {
  clear_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = guild_name_;
    guild_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GuildRanking::set_allocated_guild_name(::std::string* guild_name) {
  if (guild_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete guild_name_;
  }
  if (guild_name) {
    set_has_guild_name();
    guild_name_ = guild_name;
  } else {
    clear_has_guild_name();
    guild_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.commondata.GuildRanking.guild_name)
}

// required int32 total_obtain_medal = 4;
inline bool GuildRanking::has_total_obtain_medal() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildRanking::set_has_total_obtain_medal() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildRanking::clear_has_total_obtain_medal() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildRanking::clear_total_obtain_medal() {
  total_obtain_medal_ = 0;
  clear_has_total_obtain_medal();
}
inline ::google::protobuf::int32 GuildRanking::total_obtain_medal() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildRanking.total_obtain_medal)
  return total_obtain_medal_;
}
inline void GuildRanking::set_total_obtain_medal(::google::protobuf::int32 value) {
  set_has_total_obtain_medal();
  total_obtain_medal_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildRanking.total_obtain_medal)
}

// required int32 total_result = 5;
inline bool GuildRanking::has_total_result() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuildRanking::set_has_total_result() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuildRanking::clear_has_total_result() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuildRanking::clear_total_result() {
  total_result_ = 0;
  clear_has_total_result();
}
inline ::google::protobuf::int32 GuildRanking::total_result() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildRanking.total_result)
  return total_result_;
}
inline void GuildRanking::set_total_result(::google::protobuf::int32 value) {
  set_has_total_result();
  total_result_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildRanking.total_result)
}

// required int32 members_avg_power = 6;
inline bool GuildRanking::has_members_avg_power() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GuildRanking::set_has_members_avg_power() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GuildRanking::clear_has_members_avg_power() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GuildRanking::clear_members_avg_power() {
  members_avg_power_ = 0;
  clear_has_members_avg_power();
}
inline ::google::protobuf::int32 GuildRanking::members_avg_power() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildRanking.members_avg_power)
  return members_avg_power_;
}
inline void GuildRanking::set_members_avg_power(::google::protobuf::int32 value) {
  set_has_members_avg_power();
  members_avg_power_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildRanking.members_avg_power)
}

// required int64 create_time = 7;
inline bool GuildRanking::has_create_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GuildRanking::set_has_create_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GuildRanking::clear_has_create_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GuildRanking::clear_create_time() {
  create_time_ = GOOGLE_LONGLONG(0);
  clear_has_create_time();
}
inline ::google::protobuf::int64 GuildRanking::create_time() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildRanking.create_time)
  return create_time_;
}
inline void GuildRanking::set_create_time(::google::protobuf::int64 value) {
  set_has_create_time();
  create_time_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildRanking.create_time)
}

// required int32 mark = 10;
inline bool GuildRanking::has_mark() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GuildRanking::set_has_mark() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GuildRanking::clear_has_mark() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GuildRanking::clear_mark() {
  mark_ = 0;
  clear_has_mark();
}
inline ::google::protobuf::int32 GuildRanking::mark() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildRanking.mark)
  return mark_;
}
inline void GuildRanking::set_mark(::google::protobuf::int32 value) {
  set_has_mark();
  mark_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildRanking.mark)
}

// required int32 mark_color = 11;
inline bool GuildRanking::has_mark_color() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GuildRanking::set_has_mark_color() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GuildRanking::clear_has_mark_color() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GuildRanking::clear_mark_color() {
  mark_color_ = 0;
  clear_has_mark_color();
}
inline ::google::protobuf::int32 GuildRanking::mark_color() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildRanking.mark_color)
  return mark_color_;
}
inline void GuildRanking::set_mark_color(::google::protobuf::int32 value) {
  set_has_mark_color();
  mark_color_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildRanking.mark_color)
}

// required int32 mark_bg = 12;
inline bool GuildRanking::has_mark_bg() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GuildRanking::set_has_mark_bg() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GuildRanking::clear_has_mark_bg() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GuildRanking::clear_mark_bg() {
  mark_bg_ = 0;
  clear_has_mark_bg();
}
inline ::google::protobuf::int32 GuildRanking::mark_bg() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildRanking.mark_bg)
  return mark_bg_;
}
inline void GuildRanking::set_mark_bg(::google::protobuf::int32 value) {
  set_has_mark_bg();
  mark_bg_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildRanking.mark_bg)
}

// required int32 mark_bg_color = 13;
inline bool GuildRanking::has_mark_bg_color() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GuildRanking::set_has_mark_bg_color() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GuildRanking::clear_has_mark_bg_color() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GuildRanking::clear_mark_bg_color() {
  mark_bg_color_ = 0;
  clear_has_mark_bg_color();
}
inline ::google::protobuf::int32 GuildRanking::mark_bg_color() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildRanking.mark_bg_color)
  return mark_bg_color_;
}
inline void GuildRanking::set_mark_bg_color(::google::protobuf::int32 value) {
  set_has_mark_bg_color();
  mark_bg_color_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildRanking.mark_bg_color)
}

// required string gm_nickname = 14;
inline bool GuildRanking::has_gm_nickname() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void GuildRanking::set_has_gm_nickname() {
  _has_bits_[0] |= 0x00000800u;
}
inline void GuildRanking::clear_has_gm_nickname() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void GuildRanking::clear_gm_nickname() {
  if (gm_nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gm_nickname_->clear();
  }
  clear_has_gm_nickname();
}
inline const ::std::string& GuildRanking::gm_nickname() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildRanking.gm_nickname)
  return *gm_nickname_;
}
inline void GuildRanking::set_gm_nickname(const ::std::string& value) {
  set_has_gm_nickname();
  if (gm_nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gm_nickname_ = new ::std::string;
  }
  gm_nickname_->assign(value);
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildRanking.gm_nickname)
}
inline void GuildRanking::set_gm_nickname(const char* value) {
  set_has_gm_nickname();
  if (gm_nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gm_nickname_ = new ::std::string;
  }
  gm_nickname_->assign(value);
  // @@protoc_insertion_point(field_set_char:b2.protocol.commondata.GuildRanking.gm_nickname)
}
inline void GuildRanking::set_gm_nickname(const char* value, size_t size) {
  set_has_gm_nickname();
  if (gm_nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gm_nickname_ = new ::std::string;
  }
  gm_nickname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:b2.protocol.commondata.GuildRanking.gm_nickname)
}
inline ::std::string* GuildRanking::mutable_gm_nickname() {
  set_has_gm_nickname();
  if (gm_nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gm_nickname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.GuildRanking.gm_nickname)
  return gm_nickname_;
}
inline ::std::string* GuildRanking::release_gm_nickname() {
  clear_has_gm_nickname();
  if (gm_nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = gm_nickname_;
    gm_nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GuildRanking::set_allocated_gm_nickname(::std::string* gm_nickname) {
  if (gm_nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gm_nickname_;
  }
  if (gm_nickname) {
    set_has_gm_nickname();
    gm_nickname_ = gm_nickname;
  } else {
    clear_has_gm_nickname();
    gm_nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.commondata.GuildRanking.gm_nickname)
}

// required int32 max_member_count = 15;
inline bool GuildRanking::has_max_member_count() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void GuildRanking::set_has_max_member_count() {
  _has_bits_[0] |= 0x00001000u;
}
inline void GuildRanking::clear_has_max_member_count() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void GuildRanking::clear_max_member_count() {
  max_member_count_ = 0;
  clear_has_max_member_count();
}
inline ::google::protobuf::int32 GuildRanking::max_member_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildRanking.max_member_count)
  return max_member_count_;
}
inline void GuildRanking::set_max_member_count(::google::protobuf::int32 value) {
  set_has_max_member_count();
  max_member_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildRanking.max_member_count)
}

// required int32 cur_member_count = 16;
inline bool GuildRanking::has_cur_member_count() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void GuildRanking::set_has_cur_member_count() {
  _has_bits_[0] |= 0x00002000u;
}
inline void GuildRanking::clear_has_cur_member_count() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void GuildRanking::clear_cur_member_count() {
  cur_member_count_ = 0;
  clear_has_cur_member_count();
}
inline ::google::protobuf::int32 GuildRanking::cur_member_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildRanking.cur_member_count)
  return cur_member_count_;
}
inline void GuildRanking::set_cur_member_count(::google::protobuf::int32 value) {
  set_has_cur_member_count();
  cur_member_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildRanking.cur_member_count)
}

// required int32 level = 17;
inline bool GuildRanking::has_level() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void GuildRanking::set_has_level() {
  _has_bits_[0] |= 0x00004000u;
}
inline void GuildRanking::clear_has_level() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void GuildRanking::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 GuildRanking::level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildRanking.level)
  return level_;
}
inline void GuildRanking::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildRanking.level)
}

// required int32 exp = 18;
inline bool GuildRanking::has_exp() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void GuildRanking::set_has_exp() {
  _has_bits_[0] |= 0x00008000u;
}
inline void GuildRanking::clear_has_exp() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void GuildRanking::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 GuildRanking::exp() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildRanking.exp)
  return exp_;
}
inline void GuildRanking::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildRanking.exp)
}

// -------------------------------------------------------------------

// GuildMember

// required int64 guild_id = 1;
inline bool GuildMember::has_guild_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMember::set_has_guild_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMember::clear_has_guild_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMember::clear_guild_id() {
  guild_id_ = GOOGLE_LONGLONG(0);
  clear_has_guild_id();
}
inline ::google::protobuf::int64 GuildMember::guild_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildMember.guild_id)
  return guild_id_;
}
inline void GuildMember::set_guild_id(::google::protobuf::int64 value) {
  set_has_guild_id();
  guild_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildMember.guild_id)
}

// required int32 contribution = 2;
inline bool GuildMember::has_contribution() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildMember::set_has_contribution() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildMember::clear_has_contribution() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildMember::clear_contribution() {
  contribution_ = 0;
  clear_has_contribution();
}
inline ::google::protobuf::int32 GuildMember::contribution() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildMember.contribution)
  return contribution_;
}
inline void GuildMember::set_contribution(::google::protobuf::int32 value) {
  set_has_contribution();
  contribution_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildMember.contribution)
}

// required .b2.protocol.commondata.GuildMember.Rank rank = 3;
inline bool GuildMember::has_rank() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildMember::set_has_rank() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildMember::clear_has_rank() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildMember::clear_rank() {
  rank_ = 1;
  clear_has_rank();
}
inline ::b2::protocol::commondata::GuildMember_Rank GuildMember::rank() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildMember.rank)
  return static_cast< ::b2::protocol::commondata::GuildMember_Rank >(rank_);
}
inline void GuildMember::set_rank(::b2::protocol::commondata::GuildMember_Rank value) {
  assert(::b2::protocol::commondata::GuildMember_Rank_IsValid(value));
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildMember.rank)
}

// required .b2.protocol.commondata.CharacterSummary character_summary = 4;
inline bool GuildMember::has_character_summary() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildMember::set_has_character_summary() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildMember::clear_has_character_summary() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildMember::clear_character_summary() {
  if (character_summary_ != NULL) character_summary_->::b2::protocol::commondata::CharacterSummary::Clear();
  clear_has_character_summary();
}
inline const ::b2::protocol::commondata::CharacterSummary& GuildMember::character_summary() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildMember.character_summary)
  return character_summary_ != NULL ? *character_summary_ : *default_instance_->character_summary_;
}
inline ::b2::protocol::commondata::CharacterSummary* GuildMember::mutable_character_summary() {
  set_has_character_summary();
  if (character_summary_ == NULL) character_summary_ = new ::b2::protocol::commondata::CharacterSummary;
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.GuildMember.character_summary)
  return character_summary_;
}
inline ::b2::protocol::commondata::CharacterSummary* GuildMember::release_character_summary() {
  clear_has_character_summary();
  ::b2::protocol::commondata::CharacterSummary* temp = character_summary_;
  character_summary_ = NULL;
  return temp;
}
inline void GuildMember::set_allocated_character_summary(::b2::protocol::commondata::CharacterSummary* character_summary) {
  delete character_summary_;
  character_summary_ = character_summary;
  if (character_summary) {
    set_has_character_summary();
  } else {
    clear_has_character_summary();
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.commondata.GuildMember.character_summary)
}

// required int64 last_logout_time = 5;
inline bool GuildMember::has_last_logout_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuildMember::set_has_last_logout_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuildMember::clear_has_last_logout_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuildMember::clear_last_logout_time() {
  last_logout_time_ = GOOGLE_LONGLONG(0);
  clear_has_last_logout_time();
}
inline ::google::protobuf::int64 GuildMember::last_logout_time() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildMember.last_logout_time)
  return last_logout_time_;
}
inline void GuildMember::set_last_logout_time(::google::protobuf::int64 value) {
  set_has_last_logout_time();
  last_logout_time_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildMember.last_logout_time)
}

// required int32 total_support_count = 10;
inline bool GuildMember::has_total_support_count() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GuildMember::set_has_total_support_count() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GuildMember::clear_has_total_support_count() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GuildMember::clear_total_support_count() {
  total_support_count_ = 0;
  clear_has_total_support_count();
}
inline ::google::protobuf::int32 GuildMember::total_support_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildMember.total_support_count)
  return total_support_count_;
}
inline void GuildMember::set_total_support_count(::google::protobuf::int32 value) {
  set_has_total_support_count();
  total_support_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildMember.total_support_count)
}

// required int32 today_support_count = 11;
inline bool GuildMember::has_today_support_count() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GuildMember::set_has_today_support_count() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GuildMember::clear_has_today_support_count() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GuildMember::clear_today_support_count() {
  today_support_count_ = 0;
  clear_has_today_support_count();
}
inline ::google::protobuf::int32 GuildMember::today_support_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildMember.today_support_count)
  return today_support_count_;
}
inline void GuildMember::set_today_support_count(::google::protobuf::int32 value) {
  set_has_today_support_count();
  today_support_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildMember.today_support_count)
}

// required int32 total_donation_count = 12;
inline bool GuildMember::has_total_donation_count() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GuildMember::set_has_total_donation_count() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GuildMember::clear_has_total_donation_count() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GuildMember::clear_total_donation_count() {
  total_donation_count_ = 0;
  clear_has_total_donation_count();
}
inline ::google::protobuf::int32 GuildMember::total_donation_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildMember.total_donation_count)
  return total_donation_count_;
}
inline void GuildMember::set_total_donation_count(::google::protobuf::int32 value) {
  set_has_total_donation_count();
  total_donation_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildMember.total_donation_count)
}

// required int32 today_donation_count = 13;
inline bool GuildMember::has_today_donation_count() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GuildMember::set_has_today_donation_count() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GuildMember::clear_has_today_donation_count() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GuildMember::clear_today_donation_count() {
  today_donation_count_ = 0;
  clear_has_today_donation_count();
}
inline ::google::protobuf::int32 GuildMember::today_donation_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildMember.today_donation_count)
  return today_donation_count_;
}
inline void GuildMember::set_today_donation_count(::google::protobuf::int32 value) {
  set_has_today_donation_count();
  today_donation_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildMember.today_donation_count)
}

// required int64 raid_penalty_remove_time = 14;
inline bool GuildMember::has_raid_penalty_remove_time() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GuildMember::set_has_raid_penalty_remove_time() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GuildMember::clear_has_raid_penalty_remove_time() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GuildMember::clear_raid_penalty_remove_time() {
  raid_penalty_remove_time_ = GOOGLE_LONGLONG(0);
  clear_has_raid_penalty_remove_time();
}
inline ::google::protobuf::int64 GuildMember::raid_penalty_remove_time() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildMember.raid_penalty_remove_time)
  return raid_penalty_remove_time_;
}
inline void GuildMember::set_raid_penalty_remove_time(::google::protobuf::int64 value) {
  set_has_raid_penalty_remove_time();
  raid_penalty_remove_time_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildMember.raid_penalty_remove_time)
}

// -------------------------------------------------------------------

// GuildMemberCandidate

// required int64 account_id = 1;
inline bool GuildMemberCandidate::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMemberCandidate::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMemberCandidate::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMemberCandidate::clear_account_id() {
  account_id_ = GOOGLE_LONGLONG(0);
  clear_has_account_id();
}
inline ::google::protobuf::int64 GuildMemberCandidate::account_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildMemberCandidate.account_id)
  return account_id_;
}
inline void GuildMemberCandidate::set_account_id(::google::protobuf::int64 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildMemberCandidate.account_id)
}

// required .b2.protocol.commondata.Guild.InviteState invite_state = 2;
inline bool GuildMemberCandidate::has_invite_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildMemberCandidate::set_has_invite_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildMemberCandidate::clear_has_invite_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildMemberCandidate::clear_invite_state() {
  invite_state_ = 0;
  clear_has_invite_state();
}
inline ::b2::protocol::commondata::Guild_InviteState GuildMemberCandidate::invite_state() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildMemberCandidate.invite_state)
  return static_cast< ::b2::protocol::commondata::Guild_InviteState >(invite_state_);
}
inline void GuildMemberCandidate::set_invite_state(::b2::protocol::commondata::Guild_InviteState value) {
  assert(::b2::protocol::commondata::Guild_InviteState_IsValid(value));
  set_has_invite_state();
  invite_state_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildMemberCandidate.invite_state)
}

// -------------------------------------------------------------------

// BattleFormation

// required .b2.protocol.commondata.BattleFormation.TYPE formation_type = 1;
inline bool BattleFormation::has_formation_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BattleFormation::set_has_formation_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BattleFormation::clear_has_formation_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BattleFormation::clear_formation_type() {
  formation_type_ = 1;
  clear_has_formation_type();
}
inline ::b2::protocol::commondata::BattleFormation_TYPE BattleFormation::formation_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.BattleFormation.formation_type)
  return static_cast< ::b2::protocol::commondata::BattleFormation_TYPE >(formation_type_);
}
inline void BattleFormation::set_formation_type(::b2::protocol::commondata::BattleFormation_TYPE value) {
  assert(::b2::protocol::commondata::BattleFormation_TYPE_IsValid(value));
  set_has_formation_type();
  formation_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.BattleFormation.formation_type)
}

// required int32 formation_level = 2;
inline bool BattleFormation::has_formation_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BattleFormation::set_has_formation_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BattleFormation::clear_has_formation_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BattleFormation::clear_formation_level() {
  formation_level_ = 0;
  clear_has_formation_level();
}
inline ::google::protobuf::int32 BattleFormation::formation_level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.BattleFormation.formation_level)
  return formation_level_;
}
inline void BattleFormation::set_formation_level(::google::protobuf::int32 value) {
  set_has_formation_level();
  formation_level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.BattleFormation.formation_level)
}

// -------------------------------------------------------------------

// BattleFormationBuff

// required int32 id = 1;
inline bool BattleFormationBuff::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BattleFormationBuff::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BattleFormationBuff::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BattleFormationBuff::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 BattleFormationBuff::id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.BattleFormationBuff.id)
  return id_;
}
inline void BattleFormationBuff::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.BattleFormationBuff.id)
}

// required .b2.protocol.commondata.BattleFormation.BuffType buff_type1 = 10;
inline bool BattleFormationBuff::has_buff_type1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BattleFormationBuff::set_has_buff_type1() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BattleFormationBuff::clear_has_buff_type1() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BattleFormationBuff::clear_buff_type1() {
  buff_type1_ = 0;
  clear_has_buff_type1();
}
inline ::b2::protocol::commondata::BattleFormation_BuffType BattleFormationBuff::buff_type1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.BattleFormationBuff.buff_type1)
  return static_cast< ::b2::protocol::commondata::BattleFormation_BuffType >(buff_type1_);
}
inline void BattleFormationBuff::set_buff_type1(::b2::protocol::commondata::BattleFormation_BuffType value) {
  assert(::b2::protocol::commondata::BattleFormation_BuffType_IsValid(value));
  set_has_buff_type1();
  buff_type1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.BattleFormationBuff.buff_type1)
}

// required float buff_value1 = 11;
inline bool BattleFormationBuff::has_buff_value1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BattleFormationBuff::set_has_buff_value1() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BattleFormationBuff::clear_has_buff_value1() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BattleFormationBuff::clear_buff_value1() {
  buff_value1_ = 0;
  clear_has_buff_value1();
}
inline float BattleFormationBuff::buff_value1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.BattleFormationBuff.buff_value1)
  return buff_value1_;
}
inline void BattleFormationBuff::set_buff_value1(float value) {
  set_has_buff_value1();
  buff_value1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.BattleFormationBuff.buff_value1)
}

// required .b2.protocol.commondata.BattleFormation.BuffType buff_type2 = 12;
inline bool BattleFormationBuff::has_buff_type2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BattleFormationBuff::set_has_buff_type2() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BattleFormationBuff::clear_has_buff_type2() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BattleFormationBuff::clear_buff_type2() {
  buff_type2_ = 0;
  clear_has_buff_type2();
}
inline ::b2::protocol::commondata::BattleFormation_BuffType BattleFormationBuff::buff_type2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.BattleFormationBuff.buff_type2)
  return static_cast< ::b2::protocol::commondata::BattleFormation_BuffType >(buff_type2_);
}
inline void BattleFormationBuff::set_buff_type2(::b2::protocol::commondata::BattleFormation_BuffType value) {
  assert(::b2::protocol::commondata::BattleFormation_BuffType_IsValid(value));
  set_has_buff_type2();
  buff_type2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.BattleFormationBuff.buff_type2)
}

// required float buff_value2 = 13;
inline bool BattleFormationBuff::has_buff_value2() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BattleFormationBuff::set_has_buff_value2() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BattleFormationBuff::clear_has_buff_value2() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BattleFormationBuff::clear_buff_value2() {
  buff_value2_ = 0;
  clear_has_buff_value2();
}
inline float BattleFormationBuff::buff_value2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.BattleFormationBuff.buff_value2)
  return buff_value2_;
}
inline void BattleFormationBuff::set_buff_value2(float value) {
  set_has_buff_value2();
  buff_value2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.BattleFormationBuff.buff_value2)
}

// -------------------------------------------------------------------

// GuildBattleEntry_SlotData

// required int32 slot_num = 1;
inline bool GuildBattleEntry_SlotData::has_slot_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildBattleEntry_SlotData::set_has_slot_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildBattleEntry_SlotData::clear_has_slot_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildBattleEntry_SlotData::clear_slot_num() {
  slot_num_ = 0;
  clear_has_slot_num();
}
inline ::google::protobuf::int32 GuildBattleEntry_SlotData::slot_num() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildBattleEntry.SlotData.slot_num)
  return slot_num_;
}
inline void GuildBattleEntry_SlotData::set_slot_num(::google::protobuf::int32 value) {
  set_has_slot_num();
  slot_num_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildBattleEntry.SlotData.slot_num)
}

// required int32 entry_code = 2;
inline bool GuildBattleEntry_SlotData::has_entry_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildBattleEntry_SlotData::set_has_entry_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildBattleEntry_SlotData::clear_has_entry_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildBattleEntry_SlotData::clear_entry_code() {
  entry_code_ = 0;
  clear_has_entry_code();
}
inline ::google::protobuf::int32 GuildBattleEntry_SlotData::entry_code() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildBattleEntry.SlotData.entry_code)
  return entry_code_;
}
inline void GuildBattleEntry_SlotData::set_entry_code(::google::protobuf::int32 value) {
  set_has_entry_code();
  entry_code_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildBattleEntry.SlotData.entry_code)
}

// optional .b2.protocol.commondata.GuildBattleEntry.TYPE entry_type = 10;
inline bool GuildBattleEntry_SlotData::has_entry_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildBattleEntry_SlotData::set_has_entry_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildBattleEntry_SlotData::clear_has_entry_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildBattleEntry_SlotData::clear_entry_type() {
  entry_type_ = 1;
  clear_has_entry_type();
}
inline ::b2::protocol::commondata::GuildBattleEntry_TYPE GuildBattleEntry_SlotData::entry_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildBattleEntry.SlotData.entry_type)
  return static_cast< ::b2::protocol::commondata::GuildBattleEntry_TYPE >(entry_type_);
}
inline void GuildBattleEntry_SlotData::set_entry_type(::b2::protocol::commondata::GuildBattleEntry_TYPE value) {
  assert(::b2::protocol::commondata::GuildBattleEntry_TYPE_IsValid(value));
  set_has_entry_type();
  entry_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildBattleEntry.SlotData.entry_type)
}

// optional int32 level = 11;
inline bool GuildBattleEntry_SlotData::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildBattleEntry_SlotData::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildBattleEntry_SlotData::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildBattleEntry_SlotData::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 GuildBattleEntry_SlotData::level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildBattleEntry.SlotData.level)
  return level_;
}
inline void GuildBattleEntry_SlotData::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildBattleEntry.SlotData.level)
}

// -------------------------------------------------------------------

// GuildBattleEntry

// repeated .b2.protocol.commondata.GuildBattleEntry.SlotData slots = 3;
inline int GuildBattleEntry::slots_size() const {
  return slots_.size();
}
inline void GuildBattleEntry::clear_slots() {
  slots_.Clear();
}
inline const ::b2::protocol::commondata::GuildBattleEntry_SlotData& GuildBattleEntry::slots(int index) const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildBattleEntry.slots)
  return slots_.Get(index);
}
inline ::b2::protocol::commondata::GuildBattleEntry_SlotData* GuildBattleEntry::mutable_slots(int index) {
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.GuildBattleEntry.slots)
  return slots_.Mutable(index);
}
inline ::b2::protocol::commondata::GuildBattleEntry_SlotData* GuildBattleEntry::add_slots() {
  // @@protoc_insertion_point(field_add:b2.protocol.commondata.GuildBattleEntry.slots)
  return slots_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::GuildBattleEntry_SlotData >&
GuildBattleEntry::slots() const {
  // @@protoc_insertion_point(field_list:b2.protocol.commondata.GuildBattleEntry.slots)
  return slots_;
}
inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::GuildBattleEntry_SlotData >*
GuildBattleEntry::mutable_slots() {
  // @@protoc_insertion_point(field_mutable_list:b2.protocol.commondata.GuildBattleEntry.slots)
  return &slots_;
}

// -------------------------------------------------------------------

// GuildBattleResult

// -------------------------------------------------------------------

// GuildBattleState

// required int32 season_id = 1;
inline bool GuildBattleState::has_season_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildBattleState::set_has_season_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildBattleState::clear_has_season_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildBattleState::clear_season_id() {
  season_id_ = 0;
  clear_has_season_id();
}
inline ::google::protobuf::int32 GuildBattleState::season_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildBattleState.season_id)
  return season_id_;
}
inline void GuildBattleState::set_season_id(::google::protobuf::int32 value) {
  set_has_season_id();
  season_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildBattleState.season_id)
}

// required int32 turn = 2;
inline bool GuildBattleState::has_turn() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildBattleState::set_has_turn() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildBattleState::clear_has_turn() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildBattleState::clear_turn() {
  turn_ = 0;
  clear_has_turn();
}
inline ::google::protobuf::int32 GuildBattleState::turn() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildBattleState.turn)
  return turn_;
}
inline void GuildBattleState::set_turn(::google::protobuf::int32 value) {
  set_has_turn();
  turn_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildBattleState.turn)
}

// required .b2.protocol.commondata.GuildBattleState.TYPE current_state = 3;
inline bool GuildBattleState::has_current_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildBattleState::set_has_current_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildBattleState::clear_has_current_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildBattleState::clear_current_state() {
  current_state_ = 0;
  clear_has_current_state();
}
inline ::b2::protocol::commondata::GuildBattleState_TYPE GuildBattleState::current_state() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildBattleState.current_state)
  return static_cast< ::b2::protocol::commondata::GuildBattleState_TYPE >(current_state_);
}
inline void GuildBattleState::set_current_state(::b2::protocol::commondata::GuildBattleState_TYPE value) {
  assert(::b2::protocol::commondata::GuildBattleState_TYPE_IsValid(value));
  set_has_current_state();
  current_state_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildBattleState.current_state)
}

// required int64 begin_time = 4;
inline bool GuildBattleState::has_begin_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildBattleState::set_has_begin_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildBattleState::clear_has_begin_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildBattleState::clear_begin_time() {
  begin_time_ = GOOGLE_LONGLONG(0);
  clear_has_begin_time();
}
inline ::google::protobuf::int64 GuildBattleState::begin_time() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildBattleState.begin_time)
  return begin_time_;
}
inline void GuildBattleState::set_begin_time(::google::protobuf::int64 value) {
  set_has_begin_time();
  begin_time_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildBattleState.begin_time)
}

// required int64 end_time = 5;
inline bool GuildBattleState::has_end_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuildBattleState::set_has_end_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuildBattleState::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuildBattleState::clear_end_time() {
  end_time_ = GOOGLE_LONGLONG(0);
  clear_has_end_time();
}
inline ::google::protobuf::int64 GuildBattleState::end_time() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildBattleState.end_time)
  return end_time_;
}
inline void GuildBattleState::set_end_time(::google::protobuf::int64 value) {
  set_has_end_time();
  end_time_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildBattleState.end_time)
}

// -------------------------------------------------------------------

// GuildBattleHistory

// required int32 obtain_medal = 1;
inline bool GuildBattleHistory::has_obtain_medal() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildBattleHistory::set_has_obtain_medal() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildBattleHistory::clear_has_obtain_medal() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildBattleHistory::clear_obtain_medal() {
  obtain_medal_ = 0;
  clear_has_obtain_medal();
}
inline ::google::protobuf::int32 GuildBattleHistory::obtain_medal() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildBattleHistory.obtain_medal)
  return obtain_medal_;
}
inline void GuildBattleHistory::set_obtain_medal(::google::protobuf::int32 value) {
  set_has_obtain_medal();
  obtain_medal_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildBattleHistory.obtain_medal)
}

// required int32 medal_total_count = 2;
inline bool GuildBattleHistory::has_medal_total_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildBattleHistory::set_has_medal_total_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildBattleHistory::clear_has_medal_total_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildBattleHistory::clear_medal_total_count() {
  medal_total_count_ = 0;
  clear_has_medal_total_count();
}
inline ::google::protobuf::int32 GuildBattleHistory::medal_total_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildBattleHistory.medal_total_count)
  return medal_total_count_;
}
inline void GuildBattleHistory::set_medal_total_count(::google::protobuf::int32 value) {
  set_has_medal_total_count();
  medal_total_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildBattleHistory.medal_total_count)
}

// required .b2.protocol.commondata.GuildBattleResult.TYPE result = 3;
inline bool GuildBattleHistory::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildBattleHistory::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildBattleHistory::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildBattleHistory::clear_result() {
  result_ = 1;
  clear_has_result();
}
inline ::b2::protocol::commondata::GuildBattleResult_TYPE GuildBattleHistory::result() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildBattleHistory.result)
  return static_cast< ::b2::protocol::commondata::GuildBattleResult_TYPE >(result_);
}
inline void GuildBattleHistory::set_result(::b2::protocol::commondata::GuildBattleResult_TYPE value) {
  assert(::b2::protocol::commondata::GuildBattleResult_TYPE_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildBattleHistory.result)
}

// required int64 battle_end_time = 4;
inline bool GuildBattleHistory::has_battle_end_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildBattleHistory::set_has_battle_end_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildBattleHistory::clear_has_battle_end_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildBattleHistory::clear_battle_end_time() {
  battle_end_time_ = GOOGLE_LONGLONG(0);
  clear_has_battle_end_time();
}
inline ::google::protobuf::int64 GuildBattleHistory::battle_end_time() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildBattleHistory.battle_end_time)
  return battle_end_time_;
}
inline void GuildBattleHistory::set_battle_end_time(::google::protobuf::int64 value) {
  set_has_battle_end_time();
  battle_end_time_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildBattleHistory.battle_end_time)
}

// required int32 member_count = 5;
inline bool GuildBattleHistory::has_member_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuildBattleHistory::set_has_member_count() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuildBattleHistory::clear_has_member_count() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuildBattleHistory::clear_member_count() {
  member_count_ = 0;
  clear_has_member_count();
}
inline ::google::protobuf::int32 GuildBattleHistory::member_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildBattleHistory.member_count)
  return member_count_;
}
inline void GuildBattleHistory::set_member_count(::google::protobuf::int32 value) {
  set_has_member_count();
  member_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildBattleHistory.member_count)
}

// required int32 attack_count = 6;
inline bool GuildBattleHistory::has_attack_count() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GuildBattleHistory::set_has_attack_count() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GuildBattleHistory::clear_has_attack_count() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GuildBattleHistory::clear_attack_count() {
  attack_count_ = 0;
  clear_has_attack_count();
}
inline ::google::protobuf::int32 GuildBattleHistory::attack_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildBattleHistory.attack_count)
  return attack_count_;
}
inline void GuildBattleHistory::set_attack_count(::google::protobuf::int32 value) {
  set_has_attack_count();
  attack_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildBattleHistory.attack_count)
}

// required int64 target_guild_id = 11;
inline bool GuildBattleHistory::has_target_guild_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GuildBattleHistory::set_has_target_guild_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GuildBattleHistory::clear_has_target_guild_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GuildBattleHistory::clear_target_guild_id() {
  target_guild_id_ = GOOGLE_LONGLONG(0);
  clear_has_target_guild_id();
}
inline ::google::protobuf::int64 GuildBattleHistory::target_guild_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildBattleHistory.target_guild_id)
  return target_guild_id_;
}
inline void GuildBattleHistory::set_target_guild_id(::google::protobuf::int64 value) {
  set_has_target_guild_id();
  target_guild_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildBattleHistory.target_guild_id)
}

// required string target_guild_name = 12;
inline bool GuildBattleHistory::has_target_guild_name() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GuildBattleHistory::set_has_target_guild_name() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GuildBattleHistory::clear_has_target_guild_name() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GuildBattleHistory::clear_target_guild_name() {
  if (target_guild_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    target_guild_name_->clear();
  }
  clear_has_target_guild_name();
}
inline const ::std::string& GuildBattleHistory::target_guild_name() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildBattleHistory.target_guild_name)
  return *target_guild_name_;
}
inline void GuildBattleHistory::set_target_guild_name(const ::std::string& value) {
  set_has_target_guild_name();
  if (target_guild_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    target_guild_name_ = new ::std::string;
  }
  target_guild_name_->assign(value);
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildBattleHistory.target_guild_name)
}
inline void GuildBattleHistory::set_target_guild_name(const char* value) {
  set_has_target_guild_name();
  if (target_guild_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    target_guild_name_ = new ::std::string;
  }
  target_guild_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:b2.protocol.commondata.GuildBattleHistory.target_guild_name)
}
inline void GuildBattleHistory::set_target_guild_name(const char* value, size_t size) {
  set_has_target_guild_name();
  if (target_guild_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    target_guild_name_ = new ::std::string;
  }
  target_guild_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:b2.protocol.commondata.GuildBattleHistory.target_guild_name)
}
inline ::std::string* GuildBattleHistory::mutable_target_guild_name() {
  set_has_target_guild_name();
  if (target_guild_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    target_guild_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.GuildBattleHistory.target_guild_name)
  return target_guild_name_;
}
inline ::std::string* GuildBattleHistory::release_target_guild_name() {
  clear_has_target_guild_name();
  if (target_guild_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = target_guild_name_;
    target_guild_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GuildBattleHistory::set_allocated_target_guild_name(::std::string* target_guild_name) {
  if (target_guild_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete target_guild_name_;
  }
  if (target_guild_name) {
    set_has_target_guild_name();
    target_guild_name_ = target_guild_name;
  } else {
    clear_has_target_guild_name();
    target_guild_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.commondata.GuildBattleHistory.target_guild_name)
}

// required int32 target_obtain_medal = 13;
inline bool GuildBattleHistory::has_target_obtain_medal() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GuildBattleHistory::set_has_target_obtain_medal() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GuildBattleHistory::clear_has_target_obtain_medal() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GuildBattleHistory::clear_target_obtain_medal() {
  target_obtain_medal_ = 0;
  clear_has_target_obtain_medal();
}
inline ::google::protobuf::int32 GuildBattleHistory::target_obtain_medal() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildBattleHistory.target_obtain_medal)
  return target_obtain_medal_;
}
inline void GuildBattleHistory::set_target_obtain_medal(::google::protobuf::int32 value) {
  set_has_target_obtain_medal();
  target_obtain_medal_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildBattleHistory.target_obtain_medal)
}

// required int32 target_mark = 14;
inline bool GuildBattleHistory::has_target_mark() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GuildBattleHistory::set_has_target_mark() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GuildBattleHistory::clear_has_target_mark() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GuildBattleHistory::clear_target_mark() {
  target_mark_ = 0;
  clear_has_target_mark();
}
inline ::google::protobuf::int32 GuildBattleHistory::target_mark() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildBattleHistory.target_mark)
  return target_mark_;
}
inline void GuildBattleHistory::set_target_mark(::google::protobuf::int32 value) {
  set_has_target_mark();
  target_mark_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildBattleHistory.target_mark)
}

// required int32 target_mark_color = 15;
inline bool GuildBattleHistory::has_target_mark_color() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GuildBattleHistory::set_has_target_mark_color() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GuildBattleHistory::clear_has_target_mark_color() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GuildBattleHistory::clear_target_mark_color() {
  target_mark_color_ = 0;
  clear_has_target_mark_color();
}
inline ::google::protobuf::int32 GuildBattleHistory::target_mark_color() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildBattleHistory.target_mark_color)
  return target_mark_color_;
}
inline void GuildBattleHistory::set_target_mark_color(::google::protobuf::int32 value) {
  set_has_target_mark_color();
  target_mark_color_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildBattleHistory.target_mark_color)
}

// required int32 target_mark_bg = 16;
inline bool GuildBattleHistory::has_target_mark_bg() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void GuildBattleHistory::set_has_target_mark_bg() {
  _has_bits_[0] |= 0x00000800u;
}
inline void GuildBattleHistory::clear_has_target_mark_bg() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void GuildBattleHistory::clear_target_mark_bg() {
  target_mark_bg_ = 0;
  clear_has_target_mark_bg();
}
inline ::google::protobuf::int32 GuildBattleHistory::target_mark_bg() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildBattleHistory.target_mark_bg)
  return target_mark_bg_;
}
inline void GuildBattleHistory::set_target_mark_bg(::google::protobuf::int32 value) {
  set_has_target_mark_bg();
  target_mark_bg_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildBattleHistory.target_mark_bg)
}

// required int32 target_mark_bg_color = 17;
inline bool GuildBattleHistory::has_target_mark_bg_color() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void GuildBattleHistory::set_has_target_mark_bg_color() {
  _has_bits_[0] |= 0x00001000u;
}
inline void GuildBattleHistory::clear_has_target_mark_bg_color() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void GuildBattleHistory::clear_target_mark_bg_color() {
  target_mark_bg_color_ = 0;
  clear_has_target_mark_bg_color();
}
inline ::google::protobuf::int32 GuildBattleHistory::target_mark_bg_color() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildBattleHistory.target_mark_bg_color)
  return target_mark_bg_color_;
}
inline void GuildBattleHistory::set_target_mark_bg_color(::google::protobuf::int32 value) {
  set_has_target_mark_bg_color();
  target_mark_bg_color_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildBattleHistory.target_mark_bg_color)
}

// required int32 target_medal_total_count = 18;
inline bool GuildBattleHistory::has_target_medal_total_count() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void GuildBattleHistory::set_has_target_medal_total_count() {
  _has_bits_[0] |= 0x00002000u;
}
inline void GuildBattleHistory::clear_has_target_medal_total_count() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void GuildBattleHistory::clear_target_medal_total_count() {
  target_medal_total_count_ = 0;
  clear_has_target_medal_total_count();
}
inline ::google::protobuf::int32 GuildBattleHistory::target_medal_total_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildBattleHistory.target_medal_total_count)
  return target_medal_total_count_;
}
inline void GuildBattleHistory::set_target_medal_total_count(::google::protobuf::int32 value) {
  set_has_target_medal_total_count();
  target_medal_total_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildBattleHistory.target_medal_total_count)
}

// required int32 target_member_count = 19;
inline bool GuildBattleHistory::has_target_member_count() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void GuildBattleHistory::set_has_target_member_count() {
  _has_bits_[0] |= 0x00004000u;
}
inline void GuildBattleHistory::clear_has_target_member_count() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void GuildBattleHistory::clear_target_member_count() {
  target_member_count_ = 0;
  clear_has_target_member_count();
}
inline ::google::protobuf::int32 GuildBattleHistory::target_member_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildBattleHistory.target_member_count)
  return target_member_count_;
}
inline void GuildBattleHistory::set_target_member_count(::google::protobuf::int32 value) {
  set_has_target_member_count();
  target_member_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildBattleHistory.target_member_count)
}

// required int32 target_attack_count = 20;
inline bool GuildBattleHistory::has_target_attack_count() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void GuildBattleHistory::set_has_target_attack_count() {
  _has_bits_[0] |= 0x00008000u;
}
inline void GuildBattleHistory::clear_has_target_attack_count() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void GuildBattleHistory::clear_target_attack_count() {
  target_attack_count_ = 0;
  clear_has_target_attack_count();
}
inline ::google::protobuf::int32 GuildBattleHistory::target_attack_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildBattleHistory.target_attack_count)
  return target_attack_count_;
}
inline void GuildBattleHistory::set_target_attack_count(::google::protobuf::int32 value) {
  set_has_target_attack_count();
  target_attack_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildBattleHistory.target_attack_count)
}

// -------------------------------------------------------------------

// GuildBattleRecord

// required int32 win_count = 1;
inline bool GuildBattleRecord::has_win_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildBattleRecord::set_has_win_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildBattleRecord::clear_has_win_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildBattleRecord::clear_win_count() {
  win_count_ = 0;
  clear_has_win_count();
}
inline ::google::protobuf::int32 GuildBattleRecord::win_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildBattleRecord.win_count)
  return win_count_;
}
inline void GuildBattleRecord::set_win_count(::google::protobuf::int32 value) {
  set_has_win_count();
  win_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildBattleRecord.win_count)
}

// required int32 draw_count = 2;
inline bool GuildBattleRecord::has_draw_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildBattleRecord::set_has_draw_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildBattleRecord::clear_has_draw_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildBattleRecord::clear_draw_count() {
  draw_count_ = 0;
  clear_has_draw_count();
}
inline ::google::protobuf::int32 GuildBattleRecord::draw_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildBattleRecord.draw_count)
  return draw_count_;
}
inline void GuildBattleRecord::set_draw_count(::google::protobuf::int32 value) {
  set_has_draw_count();
  draw_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildBattleRecord.draw_count)
}

// required int32 lose_count = 3;
inline bool GuildBattleRecord::has_lose_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildBattleRecord::set_has_lose_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildBattleRecord::clear_has_lose_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildBattleRecord::clear_lose_count() {
  lose_count_ = 0;
  clear_has_lose_count();
}
inline ::google::protobuf::int32 GuildBattleRecord::lose_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildBattleRecord.lose_count)
  return lose_count_;
}
inline void GuildBattleRecord::set_lose_count(::google::protobuf::int32 value) {
  set_has_lose_count();
  lose_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildBattleRecord.lose_count)
}

// required int32 total_obtain_medal = 11;
inline bool GuildBattleRecord::has_total_obtain_medal() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildBattleRecord::set_has_total_obtain_medal() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildBattleRecord::clear_has_total_obtain_medal() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildBattleRecord::clear_total_obtain_medal() {
  total_obtain_medal_ = 0;
  clear_has_total_obtain_medal();
}
inline ::google::protobuf::int32 GuildBattleRecord::total_obtain_medal() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildBattleRecord.total_obtain_medal)
  return total_obtain_medal_;
}
inline void GuildBattleRecord::set_total_obtain_medal(::google::protobuf::int32 value) {
  set_has_total_obtain_medal();
  total_obtain_medal_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildBattleRecord.total_obtain_medal)
}

// required int32 ranking = 12;
inline bool GuildBattleRecord::has_ranking() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuildBattleRecord::set_has_ranking() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuildBattleRecord::clear_has_ranking() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuildBattleRecord::clear_ranking() {
  ranking_ = 0;
  clear_has_ranking();
}
inline ::google::protobuf::int32 GuildBattleRecord::ranking() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildBattleRecord.ranking)
  return ranking_;
}
inline void GuildBattleRecord::set_ranking(::google::protobuf::int32 value) {
  set_has_ranking();
  ranking_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildBattleRecord.ranking)
}

// required int32 ranking_total_count = 13;
inline bool GuildBattleRecord::has_ranking_total_count() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GuildBattleRecord::set_has_ranking_total_count() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GuildBattleRecord::clear_has_ranking_total_count() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GuildBattleRecord::clear_ranking_total_count() {
  ranking_total_count_ = 0;
  clear_has_ranking_total_count();
}
inline ::google::protobuf::int32 GuildBattleRecord::ranking_total_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildBattleRecord.ranking_total_count)
  return ranking_total_count_;
}
inline void GuildBattleRecord::set_ranking_total_count(::google::protobuf::int32 value) {
  set_has_ranking_total_count();
  ranking_total_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildBattleRecord.ranking_total_count)
}

// required int32 season_id = 21;
inline bool GuildBattleRecord::has_season_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GuildBattleRecord::set_has_season_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GuildBattleRecord::clear_has_season_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GuildBattleRecord::clear_season_id() {
  season_id_ = 0;
  clear_has_season_id();
}
inline ::google::protobuf::int32 GuildBattleRecord::season_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildBattleRecord.season_id)
  return season_id_;
}
inline void GuildBattleRecord::set_season_id(::google::protobuf::int32 value) {
  set_has_season_id();
  season_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildBattleRecord.season_id)
}

// -------------------------------------------------------------------

// GuildSkill

// required int32 id = 1;
inline bool GuildSkill::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildSkill::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildSkill::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildSkill::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GuildSkill::id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildSkill.id)
  return id_;
}
inline void GuildSkill::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildSkill.id)
}

// required int32 level = 2;
inline bool GuildSkill::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildSkill::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildSkill::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildSkill::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 GuildSkill::level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildSkill.level)
  return level_;
}
inline void GuildSkill::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildSkill.level)
}

// required bool enabled = 3;
inline bool GuildSkill::has_enabled() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildSkill::set_has_enabled() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildSkill::clear_has_enabled() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildSkill::clear_enabled() {
  enabled_ = false;
  clear_has_enabled();
}
inline bool GuildSkill::enabled() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildSkill.enabled)
  return enabled_;
}
inline void GuildSkill::set_enabled(bool value) {
  set_has_enabled();
  enabled_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildSkill.enabled)
}

// optional int64 buff_end_time = 10;
inline bool GuildSkill::has_buff_end_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildSkill::set_has_buff_end_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildSkill::clear_has_buff_end_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildSkill::clear_buff_end_time() {
  buff_end_time_ = GOOGLE_LONGLONG(0);
  clear_has_buff_end_time();
}
inline ::google::protobuf::int64 GuildSkill::buff_end_time() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildSkill.buff_end_time)
  return buff_end_time_;
}
inline void GuildSkill::set_buff_end_time(::google::protobuf::int64 value) {
  set_has_buff_end_time();
  buff_end_time_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildSkill.buff_end_time)
}

// -------------------------------------------------------------------

// GuildInfo

// optional int64 guild_id = 1;
inline bool GuildInfo::has_guild_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildInfo::set_has_guild_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildInfo::clear_has_guild_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildInfo::clear_guild_id() {
  guild_id_ = GOOGLE_LONGLONG(0);
  clear_has_guild_id();
}
inline ::google::protobuf::int64 GuildInfo::guild_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildInfo.guild_id)
  return guild_id_;
}
inline void GuildInfo::set_guild_id(::google::protobuf::int64 value) {
  set_has_guild_id();
  guild_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildInfo.guild_id)
}

// required string guild_name = 2;
inline bool GuildInfo::has_guild_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildInfo::set_has_guild_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildInfo::clear_has_guild_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildInfo::clear_guild_name() {
  if (guild_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guild_name_->clear();
  }
  clear_has_guild_name();
}
inline const ::std::string& GuildInfo::guild_name() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildInfo.guild_name)
  return *guild_name_;
}
inline void GuildInfo::set_guild_name(const ::std::string& value) {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guild_name_ = new ::std::string;
  }
  guild_name_->assign(value);
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildInfo.guild_name)
}
inline void GuildInfo::set_guild_name(const char* value) {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guild_name_ = new ::std::string;
  }
  guild_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:b2.protocol.commondata.GuildInfo.guild_name)
}
inline void GuildInfo::set_guild_name(const char* value, size_t size) {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guild_name_ = new ::std::string;
  }
  guild_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:b2.protocol.commondata.GuildInfo.guild_name)
}
inline ::std::string* GuildInfo::mutable_guild_name() {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guild_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.GuildInfo.guild_name)
  return guild_name_;
}
inline ::std::string* GuildInfo::release_guild_name() {
  clear_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = guild_name_;
    guild_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GuildInfo::set_allocated_guild_name(::std::string* guild_name) {
  if (guild_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete guild_name_;
  }
  if (guild_name) {
    set_has_guild_name();
    guild_name_ = guild_name;
  } else {
    clear_has_guild_name();
    guild_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.commondata.GuildInfo.guild_name)
}

// required int32 mark_index = 3;
inline bool GuildInfo::has_mark_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildInfo::set_has_mark_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildInfo::clear_has_mark_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildInfo::clear_mark_index() {
  mark_index_ = 0;
  clear_has_mark_index();
}
inline ::google::protobuf::int32 GuildInfo::mark_index() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildInfo.mark_index)
  return mark_index_;
}
inline void GuildInfo::set_mark_index(::google::protobuf::int32 value) {
  set_has_mark_index();
  mark_index_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildInfo.mark_index)
}

// required int32 mark_color = 4;
inline bool GuildInfo::has_mark_color() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildInfo::set_has_mark_color() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildInfo::clear_has_mark_color() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildInfo::clear_mark_color() {
  mark_color_ = 0;
  clear_has_mark_color();
}
inline ::google::protobuf::int32 GuildInfo::mark_color() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildInfo.mark_color)
  return mark_color_;
}
inline void GuildInfo::set_mark_color(::google::protobuf::int32 value) {
  set_has_mark_color();
  mark_color_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildInfo.mark_color)
}

// required int32 mark_bg_index = 5;
inline bool GuildInfo::has_mark_bg_index() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuildInfo::set_has_mark_bg_index() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuildInfo::clear_has_mark_bg_index() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuildInfo::clear_mark_bg_index() {
  mark_bg_index_ = 0;
  clear_has_mark_bg_index();
}
inline ::google::protobuf::int32 GuildInfo::mark_bg_index() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildInfo.mark_bg_index)
  return mark_bg_index_;
}
inline void GuildInfo::set_mark_bg_index(::google::protobuf::int32 value) {
  set_has_mark_bg_index();
  mark_bg_index_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildInfo.mark_bg_index)
}

// required int32 mark_bg_color = 6;
inline bool GuildInfo::has_mark_bg_color() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GuildInfo::set_has_mark_bg_color() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GuildInfo::clear_has_mark_bg_color() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GuildInfo::clear_mark_bg_color() {
  mark_bg_color_ = 0;
  clear_has_mark_bg_color();
}
inline ::google::protobuf::int32 GuildInfo::mark_bg_color() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildInfo.mark_bg_color)
  return mark_bg_color_;
}
inline void GuildInfo::set_mark_bg_color(::google::protobuf::int32 value) {
  set_has_mark_bg_color();
  mark_bg_color_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildInfo.mark_bg_color)
}

// -------------------------------------------------------------------

// GuildMercenary

// required int32 id = 1;
inline bool GuildMercenary::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMercenary::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMercenary::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMercenary::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GuildMercenary::id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildMercenary.id)
  return id_;
}
inline void GuildMercenary::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildMercenary.id)
}

// required int32 level = 2;
inline bool GuildMercenary::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildMercenary::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildMercenary::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildMercenary::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 GuildMercenary::level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildMercenary.level)
  return level_;
}
inline void GuildMercenary::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildMercenary.level)
}

// required int32 exp = 3;
inline bool GuildMercenary::has_exp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildMercenary::set_has_exp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildMercenary::clear_has_exp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildMercenary::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 GuildMercenary::exp() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GuildMercenary.exp)
  return exp_;
}
inline void GuildMercenary::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GuildMercenary.exp)
}

// -------------------------------------------------------------------

// MatchMaking

// -------------------------------------------------------------------

// Invitation

// -------------------------------------------------------------------

// MatchInfo

// required string match_token = 1;
inline bool MatchInfo::has_match_token() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MatchInfo::set_has_match_token() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MatchInfo::clear_has_match_token() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MatchInfo::clear_match_token() {
  if (match_token_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    match_token_->clear();
  }
  clear_has_match_token();
}
inline const ::std::string& MatchInfo::match_token() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.MatchInfo.match_token)
  return *match_token_;
}
inline void MatchInfo::set_match_token(const ::std::string& value) {
  set_has_match_token();
  if (match_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    match_token_ = new ::std::string;
  }
  match_token_->assign(value);
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.MatchInfo.match_token)
}
inline void MatchInfo::set_match_token(const char* value) {
  set_has_match_token();
  if (match_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    match_token_ = new ::std::string;
  }
  match_token_->assign(value);
  // @@protoc_insertion_point(field_set_char:b2.protocol.commondata.MatchInfo.match_token)
}
inline void MatchInfo::set_match_token(const char* value, size_t size) {
  set_has_match_token();
  if (match_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    match_token_ = new ::std::string;
  }
  match_token_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:b2.protocol.commondata.MatchInfo.match_token)
}
inline ::std::string* MatchInfo::mutable_match_token() {
  set_has_match_token();
  if (match_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    match_token_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.MatchInfo.match_token)
  return match_token_;
}
inline ::std::string* MatchInfo::release_match_token() {
  clear_has_match_token();
  if (match_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = match_token_;
    match_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MatchInfo::set_allocated_match_token(::std::string* match_token) {
  if (match_token_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete match_token_;
  }
  if (match_token) {
    set_has_match_token();
    match_token_ = match_token;
  } else {
    clear_has_match_token();
    match_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.commondata.MatchInfo.match_token)
}

// required .b2.protocol.commondata.MatchInfo.TYPE opponent_type = 2;
inline bool MatchInfo::has_opponent_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MatchInfo::set_has_opponent_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MatchInfo::clear_has_opponent_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MatchInfo::clear_opponent_type() {
  opponent_type_ = 1;
  clear_has_opponent_type();
}
inline ::b2::protocol::commondata::MatchInfo_TYPE MatchInfo::opponent_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.MatchInfo.opponent_type)
  return static_cast< ::b2::protocol::commondata::MatchInfo_TYPE >(opponent_type_);
}
inline void MatchInfo::set_opponent_type(::b2::protocol::commondata::MatchInfo_TYPE value) {
  assert(::b2::protocol::commondata::MatchInfo_TYPE_IsValid(value));
  set_has_opponent_type();
  opponent_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.MatchInfo.opponent_type)
}

// -------------------------------------------------------------------

// MatchStatus

// optional int32 battle_grade = 1;
inline bool MatchStatus::has_battle_grade() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MatchStatus::set_has_battle_grade() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MatchStatus::clear_has_battle_grade() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MatchStatus::clear_battle_grade() {
  battle_grade_ = 0;
  clear_has_battle_grade();
}
inline ::google::protobuf::int32 MatchStatus::battle_grade() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.MatchStatus.battle_grade)
  return battle_grade_;
}
inline void MatchStatus::set_battle_grade(::google::protobuf::int32 value) {
  set_has_battle_grade();
  battle_grade_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.MatchStatus.battle_grade)
}

// optional int32 battle_star_count = 2;
inline bool MatchStatus::has_battle_star_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MatchStatus::set_has_battle_star_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MatchStatus::clear_has_battle_star_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MatchStatus::clear_battle_star_count() {
  battle_star_count_ = 0;
  clear_has_battle_star_count();
}
inline ::google::protobuf::int32 MatchStatus::battle_star_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.MatchStatus.battle_star_count)
  return battle_star_count_;
}
inline void MatchStatus::set_battle_star_count(::google::protobuf::int32 value) {
  set_has_battle_star_count();
  battle_star_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.MatchStatus.battle_star_count)
}

// optional int32 continue_win = 3;
inline bool MatchStatus::has_continue_win() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MatchStatus::set_has_continue_win() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MatchStatus::clear_has_continue_win() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MatchStatus::clear_continue_win() {
  continue_win_ = 0;
  clear_has_continue_win();
}
inline ::google::protobuf::int32 MatchStatus::continue_win() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.MatchStatus.continue_win)
  return continue_win_;
}
inline void MatchStatus::set_continue_win(::google::protobuf::int32 value) {
  set_has_continue_win();
  continue_win_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.MatchStatus.continue_win)
}

// optional int32 continue_win_max = 4;
inline bool MatchStatus::has_continue_win_max() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MatchStatus::set_has_continue_win_max() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MatchStatus::clear_has_continue_win_max() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MatchStatus::clear_continue_win_max() {
  continue_win_max_ = 0;
  clear_has_continue_win_max();
}
inline ::google::protobuf::int32 MatchStatus::continue_win_max() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.MatchStatus.continue_win_max)
  return continue_win_max_;
}
inline void MatchStatus::set_continue_win_max(::google::protobuf::int32 value) {
  set_has_continue_win_max();
  continue_win_max_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.MatchStatus.continue_win_max)
}

// -------------------------------------------------------------------

// Ranking

// required int64 account_id = 1;
inline bool Ranking::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Ranking::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Ranking::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Ranking::clear_account_id() {
  account_id_ = GOOGLE_LONGLONG(0);
  clear_has_account_id();
}
inline ::google::protobuf::int64 Ranking::account_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Ranking.account_id)
  return account_id_;
}
inline void Ranking::set_account_id(::google::protobuf::int64 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Ranking.account_id)
}

// required int32 ranking = 11;
inline bool Ranking::has_ranking() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Ranking::set_has_ranking() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Ranking::clear_has_ranking() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Ranking::clear_ranking() {
  ranking_ = 0;
  clear_has_ranking();
}
inline ::google::protobuf::int32 Ranking::ranking() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Ranking.ranking)
  return ranking_;
}
inline void Ranking::set_ranking(::google::protobuf::int32 value) {
  set_has_ranking();
  ranking_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Ranking.ranking)
}

// required int32 total_ranker_count = 12;
inline bool Ranking::has_total_ranker_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Ranking::set_has_total_ranker_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Ranking::clear_has_total_ranker_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Ranking::clear_total_ranker_count() {
  total_ranker_count_ = 0;
  clear_has_total_ranker_count();
}
inline ::google::protobuf::int32 Ranking::total_ranker_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Ranking.total_ranker_count)
  return total_ranker_count_;
}
inline void Ranking::set_total_ranker_count(::google::protobuf::int32 value) {
  set_has_total_ranker_count();
  total_ranker_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Ranking.total_ranker_count)
}

// optional string pvp_replay_url = 20;
inline bool Ranking::has_pvp_replay_url() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Ranking::set_has_pvp_replay_url() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Ranking::clear_has_pvp_replay_url() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Ranking::clear_pvp_replay_url() {
  if (pvp_replay_url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pvp_replay_url_->clear();
  }
  clear_has_pvp_replay_url();
}
inline const ::std::string& Ranking::pvp_replay_url() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Ranking.pvp_replay_url)
  return *pvp_replay_url_;
}
inline void Ranking::set_pvp_replay_url(const ::std::string& value) {
  set_has_pvp_replay_url();
  if (pvp_replay_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pvp_replay_url_ = new ::std::string;
  }
  pvp_replay_url_->assign(value);
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Ranking.pvp_replay_url)
}
inline void Ranking::set_pvp_replay_url(const char* value) {
  set_has_pvp_replay_url();
  if (pvp_replay_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pvp_replay_url_ = new ::std::string;
  }
  pvp_replay_url_->assign(value);
  // @@protoc_insertion_point(field_set_char:b2.protocol.commondata.Ranking.pvp_replay_url)
}
inline void Ranking::set_pvp_replay_url(const char* value, size_t size) {
  set_has_pvp_replay_url();
  if (pvp_replay_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pvp_replay_url_ = new ::std::string;
  }
  pvp_replay_url_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:b2.protocol.commondata.Ranking.pvp_replay_url)
}
inline ::std::string* Ranking::mutable_pvp_replay_url() {
  set_has_pvp_replay_url();
  if (pvp_replay_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pvp_replay_url_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.Ranking.pvp_replay_url)
  return pvp_replay_url_;
}
inline ::std::string* Ranking::release_pvp_replay_url() {
  clear_has_pvp_replay_url();
  if (pvp_replay_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = pvp_replay_url_;
    pvp_replay_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Ranking::set_allocated_pvp_replay_url(::std::string* pvp_replay_url) {
  if (pvp_replay_url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete pvp_replay_url_;
  }
  if (pvp_replay_url) {
    set_has_pvp_replay_url();
    pvp_replay_url_ = pvp_replay_url;
  } else {
    clear_has_pvp_replay_url();
    pvp_replay_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.commondata.Ranking.pvp_replay_url)
}

// optional int32 replay_size_compressed = 21;
inline bool Ranking::has_replay_size_compressed() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Ranking::set_has_replay_size_compressed() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Ranking::clear_has_replay_size_compressed() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Ranking::clear_replay_size_compressed() {
  replay_size_compressed_ = 0;
  clear_has_replay_size_compressed();
}
inline ::google::protobuf::int32 Ranking::replay_size_compressed() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Ranking.replay_size_compressed)
  return replay_size_compressed_;
}
inline void Ranking::set_replay_size_compressed(::google::protobuf::int32 value) {
  set_has_replay_size_compressed();
  replay_size_compressed_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Ranking.replay_size_compressed)
}

// optional int32 replay_size_uncompressed = 22;
inline bool Ranking::has_replay_size_uncompressed() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Ranking::set_has_replay_size_uncompressed() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Ranking::clear_has_replay_size_uncompressed() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Ranking::clear_replay_size_uncompressed() {
  replay_size_uncompressed_ = 0;
  clear_has_replay_size_uncompressed();
}
inline ::google::protobuf::int32 Ranking::replay_size_uncompressed() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Ranking.replay_size_uncompressed)
  return replay_size_uncompressed_;
}
inline void Ranking::set_replay_size_uncompressed(::google::protobuf::int32 value) {
  set_has_replay_size_uncompressed();
  replay_size_uncompressed_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Ranking.replay_size_uncompressed)
}

// -------------------------------------------------------------------

// MatchRanker_Entry

// required .b2.protocol.commondata.Character.TYPE character_type = 1;
inline bool MatchRanker_Entry::has_character_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MatchRanker_Entry::set_has_character_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MatchRanker_Entry::clear_has_character_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MatchRanker_Entry::clear_character_type() {
  character_type_ = 1;
  clear_has_character_type();
}
inline ::b2::protocol::commondata::Character_TYPE MatchRanker_Entry::character_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.MatchRanker.Entry.character_type)
  return static_cast< ::b2::protocol::commondata::Character_TYPE >(character_type_);
}
inline void MatchRanker_Entry::set_character_type(::b2::protocol::commondata::Character_TYPE value) {
  assert(::b2::protocol::commondata::Character_TYPE_IsValid(value));
  set_has_character_type();
  character_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.MatchRanker.Entry.character_type)
}

// required int32 level = 2;
inline bool MatchRanker_Entry::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MatchRanker_Entry::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MatchRanker_Entry::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MatchRanker_Entry::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 MatchRanker_Entry::level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.MatchRanker.Entry.level)
  return level_;
}
inline void MatchRanker_Entry::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.MatchRanker.Entry.level)
}

// -------------------------------------------------------------------

// MatchRanker

// required int64 account_id = 1;
inline bool MatchRanker::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MatchRanker::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MatchRanker::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MatchRanker::clear_account_id() {
  account_id_ = GOOGLE_LONGLONG(0);
  clear_has_account_id();
}
inline ::google::protobuf::int64 MatchRanker::account_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.MatchRanker.account_id)
  return account_id_;
}
inline void MatchRanker::set_account_id(::google::protobuf::int64 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.MatchRanker.account_id)
}

// required string nickname = 2;
inline bool MatchRanker::has_nickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MatchRanker::set_has_nickname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MatchRanker::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MatchRanker::clear_nickname() {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_->clear();
  }
  clear_has_nickname();
}
inline const ::std::string& MatchRanker::nickname() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.MatchRanker.nickname)
  return *nickname_;
}
inline void MatchRanker::set_nickname(const ::std::string& value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.MatchRanker.nickname)
}
inline void MatchRanker::set_nickname(const char* value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set_char:b2.protocol.commondata.MatchRanker.nickname)
}
inline void MatchRanker::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:b2.protocol.commondata.MatchRanker.nickname)
}
inline ::std::string* MatchRanker::mutable_nickname() {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.MatchRanker.nickname)
  return nickname_;
}
inline ::std::string* MatchRanker::release_nickname() {
  clear_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = nickname_;
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MatchRanker::set_allocated_nickname(::std::string* nickname) {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nickname_;
  }
  if (nickname) {
    set_has_nickname();
    nickname_ = nickname;
  } else {
    clear_has_nickname();
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.commondata.MatchRanker.nickname)
}

// optional int32 battle_grade = 3;
inline bool MatchRanker::has_battle_grade() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MatchRanker::set_has_battle_grade() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MatchRanker::clear_has_battle_grade() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MatchRanker::clear_battle_grade() {
  battle_grade_ = 0;
  clear_has_battle_grade();
}
inline ::google::protobuf::int32 MatchRanker::battle_grade() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.MatchRanker.battle_grade)
  return battle_grade_;
}
inline void MatchRanker::set_battle_grade(::google::protobuf::int32 value) {
  set_has_battle_grade();
  battle_grade_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.MatchRanker.battle_grade)
}

// optional int32 battle_star_count = 4;
inline bool MatchRanker::has_battle_star_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MatchRanker::set_has_battle_star_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MatchRanker::clear_has_battle_star_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MatchRanker::clear_battle_star_count() {
  battle_star_count_ = 0;
  clear_has_battle_star_count();
}
inline ::google::protobuf::int32 MatchRanker::battle_star_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.MatchRanker.battle_star_count)
  return battle_star_count_;
}
inline void MatchRanker::set_battle_star_count(::google::protobuf::int32 value) {
  set_has_battle_star_count();
  battle_star_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.MatchRanker.battle_star_count)
}

// optional int32 best_floor = 5;
inline bool MatchRanker::has_best_floor() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MatchRanker::set_has_best_floor() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MatchRanker::clear_has_best_floor() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MatchRanker::clear_best_floor() {
  best_floor_ = 0;
  clear_has_best_floor();
}
inline ::google::protobuf::int32 MatchRanker::best_floor() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.MatchRanker.best_floor)
  return best_floor_;
}
inline void MatchRanker::set_best_floor(::google::protobuf::int32 value) {
  set_has_best_floor();
  best_floor_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.MatchRanker.best_floor)
}

// optional int32 clear_time = 6;
inline bool MatchRanker::has_clear_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MatchRanker::set_has_clear_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MatchRanker::clear_has_clear_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MatchRanker::clear_clear_time() {
  clear_time_ = 0;
  clear_has_clear_time();
}
inline ::google::protobuf::int32 MatchRanker::clear_time() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.MatchRanker.clear_time)
  return clear_time_;
}
inline void MatchRanker::set_clear_time(::google::protobuf::int32 value) {
  set_has_clear_time();
  clear_time_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.MatchRanker.clear_time)
}

// required int32 total_power = 7;
inline bool MatchRanker::has_total_power() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MatchRanker::set_has_total_power() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MatchRanker::clear_has_total_power() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MatchRanker::clear_total_power() {
  total_power_ = 0;
  clear_has_total_power();
}
inline ::google::protobuf::int32 MatchRanker::total_power() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.MatchRanker.total_power)
  return total_power_;
}
inline void MatchRanker::set_total_power(::google::protobuf::int32 value) {
  set_has_total_power();
  total_power_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.MatchRanker.total_power)
}

// optional int32 point = 8;
inline bool MatchRanker::has_point() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MatchRanker::set_has_point() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MatchRanker::clear_has_point() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MatchRanker::clear_point() {
  point_ = 0;
  clear_has_point();
}
inline ::google::protobuf::int32 MatchRanker::point() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.MatchRanker.point)
  return point_;
}
inline void MatchRanker::set_point(::google::protobuf::int32 value) {
  set_has_point();
  point_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.MatchRanker.point)
}

// repeated .b2.protocol.commondata.MatchRanker.Entry entries = 9;
inline int MatchRanker::entries_size() const {
  return entries_.size();
}
inline void MatchRanker::clear_entries() {
  entries_.Clear();
}
inline const ::b2::protocol::commondata::MatchRanker_Entry& MatchRanker::entries(int index) const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.MatchRanker.entries)
  return entries_.Get(index);
}
inline ::b2::protocol::commondata::MatchRanker_Entry* MatchRanker::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.MatchRanker.entries)
  return entries_.Mutable(index);
}
inline ::b2::protocol::commondata::MatchRanker_Entry* MatchRanker::add_entries() {
  // @@protoc_insertion_point(field_add:b2.protocol.commondata.MatchRanker.entries)
  return entries_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::MatchRanker_Entry >&
MatchRanker::entries() const {
  // @@protoc_insertion_point(field_list:b2.protocol.commondata.MatchRanker.entries)
  return entries_;
}
inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::MatchRanker_Entry >*
MatchRanker::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:b2.protocol.commondata.MatchRanker.entries)
  return &entries_;
}

// optional string pvp_replay_url = 10;
inline bool MatchRanker::has_pvp_replay_url() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void MatchRanker::set_has_pvp_replay_url() {
  _has_bits_[0] |= 0x00000200u;
}
inline void MatchRanker::clear_has_pvp_replay_url() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void MatchRanker::clear_pvp_replay_url() {
  if (pvp_replay_url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pvp_replay_url_->clear();
  }
  clear_has_pvp_replay_url();
}
inline const ::std::string& MatchRanker::pvp_replay_url() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.MatchRanker.pvp_replay_url)
  return *pvp_replay_url_;
}
inline void MatchRanker::set_pvp_replay_url(const ::std::string& value) {
  set_has_pvp_replay_url();
  if (pvp_replay_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pvp_replay_url_ = new ::std::string;
  }
  pvp_replay_url_->assign(value);
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.MatchRanker.pvp_replay_url)
}
inline void MatchRanker::set_pvp_replay_url(const char* value) {
  set_has_pvp_replay_url();
  if (pvp_replay_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pvp_replay_url_ = new ::std::string;
  }
  pvp_replay_url_->assign(value);
  // @@protoc_insertion_point(field_set_char:b2.protocol.commondata.MatchRanker.pvp_replay_url)
}
inline void MatchRanker::set_pvp_replay_url(const char* value, size_t size) {
  set_has_pvp_replay_url();
  if (pvp_replay_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pvp_replay_url_ = new ::std::string;
  }
  pvp_replay_url_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:b2.protocol.commondata.MatchRanker.pvp_replay_url)
}
inline ::std::string* MatchRanker::mutable_pvp_replay_url() {
  set_has_pvp_replay_url();
  if (pvp_replay_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pvp_replay_url_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.MatchRanker.pvp_replay_url)
  return pvp_replay_url_;
}
inline ::std::string* MatchRanker::release_pvp_replay_url() {
  clear_has_pvp_replay_url();
  if (pvp_replay_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = pvp_replay_url_;
    pvp_replay_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MatchRanker::set_allocated_pvp_replay_url(::std::string* pvp_replay_url) {
  if (pvp_replay_url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete pvp_replay_url_;
  }
  if (pvp_replay_url) {
    set_has_pvp_replay_url();
    pvp_replay_url_ = pvp_replay_url;
  } else {
    clear_has_pvp_replay_url();
    pvp_replay_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.commondata.MatchRanker.pvp_replay_url)
}

// optional int32 replay_size_compressed = 11;
inline bool MatchRanker::has_replay_size_compressed() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void MatchRanker::set_has_replay_size_compressed() {
  _has_bits_[0] |= 0x00000400u;
}
inline void MatchRanker::clear_has_replay_size_compressed() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void MatchRanker::clear_replay_size_compressed() {
  replay_size_compressed_ = 0;
  clear_has_replay_size_compressed();
}
inline ::google::protobuf::int32 MatchRanker::replay_size_compressed() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.MatchRanker.replay_size_compressed)
  return replay_size_compressed_;
}
inline void MatchRanker::set_replay_size_compressed(::google::protobuf::int32 value) {
  set_has_replay_size_compressed();
  replay_size_compressed_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.MatchRanker.replay_size_compressed)
}

// optional int32 replay_size_uncompressed = 12;
inline bool MatchRanker::has_replay_size_uncompressed() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void MatchRanker::set_has_replay_size_uncompressed() {
  _has_bits_[0] |= 0x00000800u;
}
inline void MatchRanker::clear_has_replay_size_uncompressed() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void MatchRanker::clear_replay_size_uncompressed() {
  replay_size_uncompressed_ = 0;
  clear_has_replay_size_uncompressed();
}
inline ::google::protobuf::int32 MatchRanker::replay_size_uncompressed() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.MatchRanker.replay_size_uncompressed)
  return replay_size_uncompressed_;
}
inline void MatchRanker::set_replay_size_uncompressed(::google::protobuf::int32 value) {
  set_has_replay_size_uncompressed();
  replay_size_uncompressed_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.MatchRanker.replay_size_uncompressed)
}

// -------------------------------------------------------------------

// RankingReward

// required int32 grade = 1;
inline bool RankingReward::has_grade() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RankingReward::set_has_grade() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RankingReward::clear_has_grade() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RankingReward::clear_grade() {
  grade_ = 0;
  clear_has_grade();
}
inline ::google::protobuf::int32 RankingReward::grade() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.RankingReward.grade)
  return grade_;
}
inline void RankingReward::set_grade(::google::protobuf::int32 value) {
  set_has_grade();
  grade_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.RankingReward.grade)
}

// required int32 star_count = 2;
inline bool RankingReward::has_star_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RankingReward::set_has_star_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RankingReward::clear_has_star_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RankingReward::clear_star_count() {
  star_count_ = 0;
  clear_has_star_count();
}
inline ::google::protobuf::int32 RankingReward::star_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.RankingReward.star_count)
  return star_count_;
}
inline void RankingReward::set_star_count(::google::protobuf::int32 value) {
  set_has_star_count();
  star_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.RankingReward.star_count)
}

// required int32 ranking = 3;
inline bool RankingReward::has_ranking() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RankingReward::set_has_ranking() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RankingReward::clear_has_ranking() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RankingReward::clear_ranking() {
  ranking_ = 0;
  clear_has_ranking();
}
inline ::google::protobuf::int32 RankingReward::ranking() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.RankingReward.ranking)
  return ranking_;
}
inline void RankingReward::set_ranking(::google::protobuf::int32 value) {
  set_has_ranking();
  ranking_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.RankingReward.ranking)
}

// required int32 ranker_count = 4;
inline bool RankingReward::has_ranker_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RankingReward::set_has_ranker_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RankingReward::clear_has_ranker_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RankingReward::clear_ranker_count() {
  ranker_count_ = 0;
  clear_has_ranker_count();
}
inline ::google::protobuf::int32 RankingReward::ranker_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.RankingReward.ranker_count)
  return ranker_count_;
}
inline void RankingReward::set_ranker_count(::google::protobuf::int32 value) {
  set_has_ranker_count();
  ranker_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.RankingReward.ranker_count)
}

// required int32 initial_grade = 5;
inline bool RankingReward::has_initial_grade() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RankingReward::set_has_initial_grade() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RankingReward::clear_has_initial_grade() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RankingReward::clear_initial_grade() {
  initial_grade_ = 0;
  clear_has_initial_grade();
}
inline ::google::protobuf::int32 RankingReward::initial_grade() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.RankingReward.initial_grade)
  return initial_grade_;
}
inline void RankingReward::set_initial_grade(::google::protobuf::int32 value) {
  set_has_initial_grade();
  initial_grade_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.RankingReward.initial_grade)
}

// repeated .b2.protocol.commondata.Reward rewards = 10;
inline int RankingReward::rewards_size() const {
  return rewards_.size();
}
inline void RankingReward::clear_rewards() {
  rewards_.Clear();
}
inline const ::b2::protocol::commondata::Reward& RankingReward::rewards(int index) const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.RankingReward.rewards)
  return rewards_.Get(index);
}
inline ::b2::protocol::commondata::Reward* RankingReward::mutable_rewards(int index) {
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.RankingReward.rewards)
  return rewards_.Mutable(index);
}
inline ::b2::protocol::commondata::Reward* RankingReward::add_rewards() {
  // @@protoc_insertion_point(field_add:b2.protocol.commondata.RankingReward.rewards)
  return rewards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward >&
RankingReward::rewards() const {
  // @@protoc_insertion_point(field_list:b2.protocol.commondata.RankingReward.rewards)
  return rewards_;
}
inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward >*
RankingReward::mutable_rewards() {
  // @@protoc_insertion_point(field_mutable_list:b2.protocol.commondata.RankingReward.rewards)
  return &rewards_;
}

// -------------------------------------------------------------------

// DimensionRankingReward

// required int32 best_difficulty_level = 1;
inline bool DimensionRankingReward::has_best_difficulty_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DimensionRankingReward::set_has_best_difficulty_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DimensionRankingReward::clear_has_best_difficulty_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DimensionRankingReward::clear_best_difficulty_level() {
  best_difficulty_level_ = 0;
  clear_has_best_difficulty_level();
}
inline ::google::protobuf::int32 DimensionRankingReward::best_difficulty_level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.DimensionRankingReward.best_difficulty_level)
  return best_difficulty_level_;
}
inline void DimensionRankingReward::set_best_difficulty_level(::google::protobuf::int32 value) {
  set_has_best_difficulty_level();
  best_difficulty_level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.DimensionRankingReward.best_difficulty_level)
}

// required int32 best_clear_time_millis = 2;
inline bool DimensionRankingReward::has_best_clear_time_millis() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DimensionRankingReward::set_has_best_clear_time_millis() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DimensionRankingReward::clear_has_best_clear_time_millis() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DimensionRankingReward::clear_best_clear_time_millis() {
  best_clear_time_millis_ = 0;
  clear_has_best_clear_time_millis();
}
inline ::google::protobuf::int32 DimensionRankingReward::best_clear_time_millis() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.DimensionRankingReward.best_clear_time_millis)
  return best_clear_time_millis_;
}
inline void DimensionRankingReward::set_best_clear_time_millis(::google::protobuf::int32 value) {
  set_has_best_clear_time_millis();
  best_clear_time_millis_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.DimensionRankingReward.best_clear_time_millis)
}

// required int32 ranking = 3;
inline bool DimensionRankingReward::has_ranking() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DimensionRankingReward::set_has_ranking() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DimensionRankingReward::clear_has_ranking() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DimensionRankingReward::clear_ranking() {
  ranking_ = 0;
  clear_has_ranking();
}
inline ::google::protobuf::int32 DimensionRankingReward::ranking() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.DimensionRankingReward.ranking)
  return ranking_;
}
inline void DimensionRankingReward::set_ranking(::google::protobuf::int32 value) {
  set_has_ranking();
  ranking_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.DimensionRankingReward.ranking)
}

// required int32 ranker_count = 4;
inline bool DimensionRankingReward::has_ranker_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DimensionRankingReward::set_has_ranker_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DimensionRankingReward::clear_has_ranker_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DimensionRankingReward::clear_ranker_count() {
  ranker_count_ = 0;
  clear_has_ranker_count();
}
inline ::google::protobuf::int32 DimensionRankingReward::ranker_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.DimensionRankingReward.ranker_count)
  return ranker_count_;
}
inline void DimensionRankingReward::set_ranker_count(::google::protobuf::int32 value) {
  set_has_ranker_count();
  ranker_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.DimensionRankingReward.ranker_count)
}

// repeated .b2.protocol.commondata.Reward rewards = 10;
inline int DimensionRankingReward::rewards_size() const {
  return rewards_.size();
}
inline void DimensionRankingReward::clear_rewards() {
  rewards_.Clear();
}
inline const ::b2::protocol::commondata::Reward& DimensionRankingReward::rewards(int index) const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.DimensionRankingReward.rewards)
  return rewards_.Get(index);
}
inline ::b2::protocol::commondata::Reward* DimensionRankingReward::mutable_rewards(int index) {
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.DimensionRankingReward.rewards)
  return rewards_.Mutable(index);
}
inline ::b2::protocol::commondata::Reward* DimensionRankingReward::add_rewards() {
  // @@protoc_insertion_point(field_add:b2.protocol.commondata.DimensionRankingReward.rewards)
  return rewards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward >&
DimensionRankingReward::rewards() const {
  // @@protoc_insertion_point(field_list:b2.protocol.commondata.DimensionRankingReward.rewards)
  return rewards_;
}
inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward >*
DimensionRankingReward::mutable_rewards() {
  // @@protoc_insertion_point(field_mutable_list:b2.protocol.commondata.DimensionRankingReward.rewards)
  return &rewards_;
}

// -------------------------------------------------------------------

// DimensionStatus

// required int32 best_difficulty_level = 1;
inline bool DimensionStatus::has_best_difficulty_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DimensionStatus::set_has_best_difficulty_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DimensionStatus::clear_has_best_difficulty_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DimensionStatus::clear_best_difficulty_level() {
  best_difficulty_level_ = 0;
  clear_has_best_difficulty_level();
}
inline ::google::protobuf::int32 DimensionStatus::best_difficulty_level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.DimensionStatus.best_difficulty_level)
  return best_difficulty_level_;
}
inline void DimensionStatus::set_best_difficulty_level(::google::protobuf::int32 value) {
  set_has_best_difficulty_level();
  best_difficulty_level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.DimensionStatus.best_difficulty_level)
}

// optional int32 best_clear_time_millis = 2;
inline bool DimensionStatus::has_best_clear_time_millis() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DimensionStatus::set_has_best_clear_time_millis() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DimensionStatus::clear_has_best_clear_time_millis() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DimensionStatus::clear_best_clear_time_millis() {
  best_clear_time_millis_ = 0;
  clear_has_best_clear_time_millis();
}
inline ::google::protobuf::int32 DimensionStatus::best_clear_time_millis() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.DimensionStatus.best_clear_time_millis)
  return best_clear_time_millis_;
}
inline void DimensionStatus::set_best_clear_time_millis(::google::protobuf::int32 value) {
  set_has_best_clear_time_millis();
  best_clear_time_millis_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.DimensionStatus.best_clear_time_millis)
}

// optional .b2.protocol.commondata.Character.TYPE best_character_type = 3;
inline bool DimensionStatus::has_best_character_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DimensionStatus::set_has_best_character_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DimensionStatus::clear_has_best_character_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DimensionStatus::clear_best_character_type() {
  best_character_type_ = 1;
  clear_has_best_character_type();
}
inline ::b2::protocol::commondata::Character_TYPE DimensionStatus::best_character_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.DimensionStatus.best_character_type)
  return static_cast< ::b2::protocol::commondata::Character_TYPE >(best_character_type_);
}
inline void DimensionStatus::set_best_character_type(::b2::protocol::commondata::Character_TYPE value) {
  assert(::b2::protocol::commondata::Character_TYPE_IsValid(value));
  set_has_best_character_type();
  best_character_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.DimensionStatus.best_character_type)
}

// optional int32 best_character_level = 4;
inline bool DimensionStatus::has_best_character_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DimensionStatus::set_has_best_character_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DimensionStatus::clear_has_best_character_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DimensionStatus::clear_best_character_level() {
  best_character_level_ = 0;
  clear_has_best_character_level();
}
inline ::google::protobuf::int32 DimensionStatus::best_character_level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.DimensionStatus.best_character_level)
  return best_character_level_;
}
inline void DimensionStatus::set_best_character_level(::google::protobuf::int32 value) {
  set_has_best_character_level();
  best_character_level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.DimensionStatus.best_character_level)
}

// optional int32 best_total_power = 5;
inline bool DimensionStatus::has_best_total_power() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DimensionStatus::set_has_best_total_power() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DimensionStatus::clear_has_best_total_power() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DimensionStatus::clear_best_total_power() {
  best_total_power_ = 0;
  clear_has_best_total_power();
}
inline ::google::protobuf::int32 DimensionStatus::best_total_power() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.DimensionStatus.best_total_power)
  return best_total_power_;
}
inline void DimensionStatus::set_best_total_power(::google::protobuf::int32 value) {
  set_has_best_total_power();
  best_total_power_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.DimensionStatus.best_total_power)
}

// optional int64 best_record_time = 6;
inline bool DimensionStatus::has_best_record_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DimensionStatus::set_has_best_record_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DimensionStatus::clear_has_best_record_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DimensionStatus::clear_best_record_time() {
  best_record_time_ = GOOGLE_LONGLONG(0);
  clear_has_best_record_time();
}
inline ::google::protobuf::int64 DimensionStatus::best_record_time() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.DimensionStatus.best_record_time)
  return best_record_time_;
}
inline void DimensionStatus::set_best_record_time(::google::protobuf::int64 value) {
  set_has_best_record_time();
  best_record_time_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.DimensionStatus.best_record_time)
}

// required int32 top_difficulty_level = 7;
inline bool DimensionStatus::has_top_difficulty_level() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DimensionStatus::set_has_top_difficulty_level() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DimensionStatus::clear_has_top_difficulty_level() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DimensionStatus::clear_top_difficulty_level() {
  top_difficulty_level_ = 0;
  clear_has_top_difficulty_level();
}
inline ::google::protobuf::int32 DimensionStatus::top_difficulty_level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.DimensionStatus.top_difficulty_level)
  return top_difficulty_level_;
}
inline void DimensionStatus::set_top_difficulty_level(::google::protobuf::int32 value) {
  set_has_top_difficulty_level();
  top_difficulty_level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.DimensionStatus.top_difficulty_level)
}

// optional int32 last_difficulty_level = 8;
inline bool DimensionStatus::has_last_difficulty_level() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DimensionStatus::set_has_last_difficulty_level() {
  _has_bits_[0] |= 0x00000080u;
}
inline void DimensionStatus::clear_has_last_difficulty_level() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void DimensionStatus::clear_last_difficulty_level() {
  last_difficulty_level_ = 0;
  clear_has_last_difficulty_level();
}
inline ::google::protobuf::int32 DimensionStatus::last_difficulty_level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.DimensionStatus.last_difficulty_level)
  return last_difficulty_level_;
}
inline void DimensionStatus::set_last_difficulty_level(::google::protobuf::int32 value) {
  set_has_last_difficulty_level();
  last_difficulty_level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.DimensionStatus.last_difficulty_level)
}

// optional .b2.protocol.commondata.Character.TYPE last_character_type = 9;
inline bool DimensionStatus::has_last_character_type() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void DimensionStatus::set_has_last_character_type() {
  _has_bits_[0] |= 0x00000100u;
}
inline void DimensionStatus::clear_has_last_character_type() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void DimensionStatus::clear_last_character_type() {
  last_character_type_ = 1;
  clear_has_last_character_type();
}
inline ::b2::protocol::commondata::Character_TYPE DimensionStatus::last_character_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.DimensionStatus.last_character_type)
  return static_cast< ::b2::protocol::commondata::Character_TYPE >(last_character_type_);
}
inline void DimensionStatus::set_last_character_type(::b2::protocol::commondata::Character_TYPE value) {
  assert(::b2::protocol::commondata::Character_TYPE_IsValid(value));
  set_has_last_character_type();
  last_character_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.DimensionStatus.last_character_type)
}

// required int32 daily_clear_count = 10;
inline bool DimensionStatus::has_daily_clear_count() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void DimensionStatus::set_has_daily_clear_count() {
  _has_bits_[0] |= 0x00000200u;
}
inline void DimensionStatus::clear_has_daily_clear_count() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void DimensionStatus::clear_daily_clear_count() {
  daily_clear_count_ = 0;
  clear_has_daily_clear_count();
}
inline ::google::protobuf::int32 DimensionStatus::daily_clear_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.DimensionStatus.daily_clear_count)
  return daily_clear_count_;
}
inline void DimensionStatus::set_daily_clear_count(::google::protobuf::int32 value) {
  set_has_daily_clear_count();
  daily_clear_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.DimensionStatus.daily_clear_count)
}

// required int32 daily_clear_count_max = 11;
inline bool DimensionStatus::has_daily_clear_count_max() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void DimensionStatus::set_has_daily_clear_count_max() {
  _has_bits_[0] |= 0x00000400u;
}
inline void DimensionStatus::clear_has_daily_clear_count_max() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void DimensionStatus::clear_daily_clear_count_max() {
  daily_clear_count_max_ = 0;
  clear_has_daily_clear_count_max();
}
inline ::google::protobuf::int32 DimensionStatus::daily_clear_count_max() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.DimensionStatus.daily_clear_count_max)
  return daily_clear_count_max_;
}
inline void DimensionStatus::set_daily_clear_count_max(::google::protobuf::int32 value) {
  set_has_daily_clear_count_max();
  daily_clear_count_max_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.DimensionStatus.daily_clear_count_max)
}

// required int64 daily_count_init_time = 12;
inline bool DimensionStatus::has_daily_count_init_time() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void DimensionStatus::set_has_daily_count_init_time() {
  _has_bits_[0] |= 0x00000800u;
}
inline void DimensionStatus::clear_has_daily_count_init_time() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void DimensionStatus::clear_daily_count_init_time() {
  daily_count_init_time_ = GOOGLE_LONGLONG(0);
  clear_has_daily_count_init_time();
}
inline ::google::protobuf::int64 DimensionStatus::daily_count_init_time() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.DimensionStatus.daily_count_init_time)
  return daily_count_init_time_;
}
inline void DimensionStatus::set_daily_count_init_time(::google::protobuf::int64 value) {
  set_has_daily_count_init_time();
  daily_count_init_time_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.DimensionStatus.daily_count_init_time)
}

// -------------------------------------------------------------------

// Room

// -------------------------------------------------------------------

// RoomLocation

// required .b2.protocol.commondata.Endpoint channel_endpoint = 1;
inline bool RoomLocation::has_channel_endpoint() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoomLocation::set_has_channel_endpoint() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoomLocation::clear_has_channel_endpoint() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoomLocation::clear_channel_endpoint() {
  if (channel_endpoint_ != NULL) channel_endpoint_->::b2::protocol::commondata::Endpoint::Clear();
  clear_has_channel_endpoint();
}
inline const ::b2::protocol::commondata::Endpoint& RoomLocation::channel_endpoint() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.RoomLocation.channel_endpoint)
  return channel_endpoint_ != NULL ? *channel_endpoint_ : *default_instance_->channel_endpoint_;
}
inline ::b2::protocol::commondata::Endpoint* RoomLocation::mutable_channel_endpoint() {
  set_has_channel_endpoint();
  if (channel_endpoint_ == NULL) channel_endpoint_ = new ::b2::protocol::commondata::Endpoint;
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.RoomLocation.channel_endpoint)
  return channel_endpoint_;
}
inline ::b2::protocol::commondata::Endpoint* RoomLocation::release_channel_endpoint() {
  clear_has_channel_endpoint();
  ::b2::protocol::commondata::Endpoint* temp = channel_endpoint_;
  channel_endpoint_ = NULL;
  return temp;
}
inline void RoomLocation::set_allocated_channel_endpoint(::b2::protocol::commondata::Endpoint* channel_endpoint) {
  delete channel_endpoint_;
  channel_endpoint_ = channel_endpoint;
  if (channel_endpoint) {
    set_has_channel_endpoint();
  } else {
    clear_has_channel_endpoint();
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.commondata.RoomLocation.channel_endpoint)
}

// required string room_id = 2;
inline bool RoomLocation::has_room_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoomLocation::set_has_room_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoomLocation::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoomLocation::clear_room_id() {
  if (room_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    room_id_->clear();
  }
  clear_has_room_id();
}
inline const ::std::string& RoomLocation::room_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.RoomLocation.room_id)
  return *room_id_;
}
inline void RoomLocation::set_room_id(const ::std::string& value) {
  set_has_room_id();
  if (room_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    room_id_ = new ::std::string;
  }
  room_id_->assign(value);
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.RoomLocation.room_id)
}
inline void RoomLocation::set_room_id(const char* value) {
  set_has_room_id();
  if (room_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    room_id_ = new ::std::string;
  }
  room_id_->assign(value);
  // @@protoc_insertion_point(field_set_char:b2.protocol.commondata.RoomLocation.room_id)
}
inline void RoomLocation::set_room_id(const char* value, size_t size) {
  set_has_room_id();
  if (room_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    room_id_ = new ::std::string;
  }
  room_id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:b2.protocol.commondata.RoomLocation.room_id)
}
inline ::std::string* RoomLocation::mutable_room_id() {
  set_has_room_id();
  if (room_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    room_id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.RoomLocation.room_id)
  return room_id_;
}
inline ::std::string* RoomLocation::release_room_id() {
  clear_has_room_id();
  if (room_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = room_id_;
    room_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RoomLocation::set_allocated_room_id(::std::string* room_id) {
  if (room_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete room_id_;
  }
  if (room_id) {
    set_has_room_id();
    room_id_ = room_id;
  } else {
    clear_has_room_id();
    room_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.commondata.RoomLocation.room_id)
}

// -------------------------------------------------------------------

// TeamBattleEntry

// required .b2.protocol.commondata.BattleFormation.TYPE formation_type = 1;
inline bool TeamBattleEntry::has_formation_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamBattleEntry::set_has_formation_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamBattleEntry::clear_has_formation_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamBattleEntry::clear_formation_type() {
  formation_type_ = 1;
  clear_has_formation_type();
}
inline ::b2::protocol::commondata::BattleFormation_TYPE TeamBattleEntry::formation_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.TeamBattleEntry.formation_type)
  return static_cast< ::b2::protocol::commondata::BattleFormation_TYPE >(formation_type_);
}
inline void TeamBattleEntry::set_formation_type(::b2::protocol::commondata::BattleFormation_TYPE value) {
  assert(::b2::protocol::commondata::BattleFormation_TYPE_IsValid(value));
  set_has_formation_type();
  formation_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.TeamBattleEntry.formation_type)
}

// required .b2.protocol.commondata.Character.TYPE character_slot_1 = 10;
inline bool TeamBattleEntry::has_character_slot_1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamBattleEntry::set_has_character_slot_1() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamBattleEntry::clear_has_character_slot_1() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamBattleEntry::clear_character_slot_1() {
  character_slot_1_ = 1;
  clear_has_character_slot_1();
}
inline ::b2::protocol::commondata::Character_TYPE TeamBattleEntry::character_slot_1() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.TeamBattleEntry.character_slot_1)
  return static_cast< ::b2::protocol::commondata::Character_TYPE >(character_slot_1_);
}
inline void TeamBattleEntry::set_character_slot_1(::b2::protocol::commondata::Character_TYPE value) {
  assert(::b2::protocol::commondata::Character_TYPE_IsValid(value));
  set_has_character_slot_1();
  character_slot_1_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.TeamBattleEntry.character_slot_1)
}

// required .b2.protocol.commondata.Character.TYPE character_slot_2 = 11;
inline bool TeamBattleEntry::has_character_slot_2() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TeamBattleEntry::set_has_character_slot_2() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TeamBattleEntry::clear_has_character_slot_2() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TeamBattleEntry::clear_character_slot_2() {
  character_slot_2_ = 1;
  clear_has_character_slot_2();
}
inline ::b2::protocol::commondata::Character_TYPE TeamBattleEntry::character_slot_2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.TeamBattleEntry.character_slot_2)
  return static_cast< ::b2::protocol::commondata::Character_TYPE >(character_slot_2_);
}
inline void TeamBattleEntry::set_character_slot_2(::b2::protocol::commondata::Character_TYPE value) {
  assert(::b2::protocol::commondata::Character_TYPE_IsValid(value));
  set_has_character_slot_2();
  character_slot_2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.TeamBattleEntry.character_slot_2)
}

// required .b2.protocol.commondata.Character.TYPE character_slot_3 = 12;
inline bool TeamBattleEntry::has_character_slot_3() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TeamBattleEntry::set_has_character_slot_3() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TeamBattleEntry::clear_has_character_slot_3() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TeamBattleEntry::clear_character_slot_3() {
  character_slot_3_ = 1;
  clear_has_character_slot_3();
}
inline ::b2::protocol::commondata::Character_TYPE TeamBattleEntry::character_slot_3() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.TeamBattleEntry.character_slot_3)
  return static_cast< ::b2::protocol::commondata::Character_TYPE >(character_slot_3_);
}
inline void TeamBattleEntry::set_character_slot_3(::b2::protocol::commondata::Character_TYPE value) {
  assert(::b2::protocol::commondata::Character_TYPE_IsValid(value));
  set_has_character_slot_3();
  character_slot_3_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.TeamBattleEntry.character_slot_3)
}

// -------------------------------------------------------------------

// MatchOpenPeriodInfo

// required int32 day_of_week = 1;
inline bool MatchOpenPeriodInfo::has_day_of_week() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MatchOpenPeriodInfo::set_has_day_of_week() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MatchOpenPeriodInfo::clear_has_day_of_week() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MatchOpenPeriodInfo::clear_day_of_week() {
  day_of_week_ = 0;
  clear_has_day_of_week();
}
inline ::google::protobuf::int32 MatchOpenPeriodInfo::day_of_week() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.MatchOpenPeriodInfo.day_of_week)
  return day_of_week_;
}
inline void MatchOpenPeriodInfo::set_day_of_week(::google::protobuf::int32 value) {
  set_has_day_of_week();
  day_of_week_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.MatchOpenPeriodInfo.day_of_week)
}

// required int32 begin_hour = 2;
inline bool MatchOpenPeriodInfo::has_begin_hour() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MatchOpenPeriodInfo::set_has_begin_hour() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MatchOpenPeriodInfo::clear_has_begin_hour() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MatchOpenPeriodInfo::clear_begin_hour() {
  begin_hour_ = 0;
  clear_has_begin_hour();
}
inline ::google::protobuf::int32 MatchOpenPeriodInfo::begin_hour() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.MatchOpenPeriodInfo.begin_hour)
  return begin_hour_;
}
inline void MatchOpenPeriodInfo::set_begin_hour(::google::protobuf::int32 value) {
  set_has_begin_hour();
  begin_hour_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.MatchOpenPeriodInfo.begin_hour)
}

// required int32 begin_min = 3;
inline bool MatchOpenPeriodInfo::has_begin_min() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MatchOpenPeriodInfo::set_has_begin_min() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MatchOpenPeriodInfo::clear_has_begin_min() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MatchOpenPeriodInfo::clear_begin_min() {
  begin_min_ = 0;
  clear_has_begin_min();
}
inline ::google::protobuf::int32 MatchOpenPeriodInfo::begin_min() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.MatchOpenPeriodInfo.begin_min)
  return begin_min_;
}
inline void MatchOpenPeriodInfo::set_begin_min(::google::protobuf::int32 value) {
  set_has_begin_min();
  begin_min_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.MatchOpenPeriodInfo.begin_min)
}

// required int32 end_hour = 4;
inline bool MatchOpenPeriodInfo::has_end_hour() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MatchOpenPeriodInfo::set_has_end_hour() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MatchOpenPeriodInfo::clear_has_end_hour() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MatchOpenPeriodInfo::clear_end_hour() {
  end_hour_ = 0;
  clear_has_end_hour();
}
inline ::google::protobuf::int32 MatchOpenPeriodInfo::end_hour() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.MatchOpenPeriodInfo.end_hour)
  return end_hour_;
}
inline void MatchOpenPeriodInfo::set_end_hour(::google::protobuf::int32 value) {
  set_has_end_hour();
  end_hour_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.MatchOpenPeriodInfo.end_hour)
}

// required int32 end_min = 5;
inline bool MatchOpenPeriodInfo::has_end_min() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MatchOpenPeriodInfo::set_has_end_min() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MatchOpenPeriodInfo::clear_has_end_min() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MatchOpenPeriodInfo::clear_end_min() {
  end_min_ = 0;
  clear_has_end_min();
}
inline ::google::protobuf::int32 MatchOpenPeriodInfo::end_min() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.MatchOpenPeriodInfo.end_min)
  return end_min_;
}
inline void MatchOpenPeriodInfo::set_end_min(::google::protobuf::int32 value) {
  set_has_end_min();
  end_min_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.MatchOpenPeriodInfo.end_min)
}

// optional int32 raid_type = 6;
inline bool MatchOpenPeriodInfo::has_raid_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MatchOpenPeriodInfo::set_has_raid_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MatchOpenPeriodInfo::clear_has_raid_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MatchOpenPeriodInfo::clear_raid_type() {
  raid_type_ = 0;
  clear_has_raid_type();
}
inline ::google::protobuf::int32 MatchOpenPeriodInfo::raid_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.MatchOpenPeriodInfo.raid_type)
  return raid_type_;
}
inline void MatchOpenPeriodInfo::set_raid_type(::google::protobuf::int32 value) {
  set_has_raid_type();
  raid_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.MatchOpenPeriodInfo.raid_type)
}

// optional int32 assault_type = 7;
inline bool MatchOpenPeriodInfo::has_assault_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MatchOpenPeriodInfo::set_has_assault_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MatchOpenPeriodInfo::clear_has_assault_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MatchOpenPeriodInfo::clear_assault_type() {
  assault_type_ = 0;
  clear_has_assault_type();
}
inline ::google::protobuf::int32 MatchOpenPeriodInfo::assault_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.MatchOpenPeriodInfo.assault_type)
  return assault_type_;
}
inline void MatchOpenPeriodInfo::set_assault_type(::google::protobuf::int32 value) {
  set_has_assault_type();
  assault_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.MatchOpenPeriodInfo.assault_type)
}

// -------------------------------------------------------------------

// KillMonsterInfo

// required int32 monster_id = 1;
inline bool KillMonsterInfo::has_monster_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KillMonsterInfo::set_has_monster_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KillMonsterInfo::clear_has_monster_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KillMonsterInfo::clear_monster_id() {
  monster_id_ = 0;
  clear_has_monster_id();
}
inline ::google::protobuf::int32 KillMonsterInfo::monster_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.KillMonsterInfo.monster_id)
  return monster_id_;
}
inline void KillMonsterInfo::set_monster_id(::google::protobuf::int32 value) {
  set_has_monster_id();
  monster_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.KillMonsterInfo.monster_id)
}

// required int32 monster_grade = 2;
inline bool KillMonsterInfo::has_monster_grade() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void KillMonsterInfo::set_has_monster_grade() {
  _has_bits_[0] |= 0x00000002u;
}
inline void KillMonsterInfo::clear_has_monster_grade() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void KillMonsterInfo::clear_monster_grade() {
  monster_grade_ = 0;
  clear_has_monster_grade();
}
inline ::google::protobuf::int32 KillMonsterInfo::monster_grade() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.KillMonsterInfo.monster_grade)
  return monster_grade_;
}
inline void KillMonsterInfo::set_monster_grade(::google::protobuf::int32 value) {
  set_has_monster_grade();
  monster_grade_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.KillMonsterInfo.monster_grade)
}

// required int32 kill_count = 3;
inline bool KillMonsterInfo::has_kill_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void KillMonsterInfo::set_has_kill_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void KillMonsterInfo::clear_has_kill_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void KillMonsterInfo::clear_kill_count() {
  kill_count_ = 0;
  clear_has_kill_count();
}
inline ::google::protobuf::int32 KillMonsterInfo::kill_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.KillMonsterInfo.kill_count)
  return kill_count_;
}
inline void KillMonsterInfo::set_kill_count(::google::protobuf::int32 value) {
  set_has_kill_count();
  kill_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.KillMonsterInfo.kill_count)
}

// -------------------------------------------------------------------

// DropData

// required int32 template_id = 1;
inline bool DropData::has_template_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DropData::set_has_template_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DropData::clear_has_template_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DropData::clear_template_id() {
  template_id_ = 0;
  clear_has_template_id();
}
inline ::google::protobuf::int32 DropData::template_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.DropData.template_id)
  return template_id_;
}
inline void DropData::set_template_id(::google::protobuf::int32 value) {
  set_has_template_id();
  template_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.DropData.template_id)
}

// required int32 count = 2;
inline bool DropData::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DropData::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DropData::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DropData::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 DropData::count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.DropData.count)
  return count_;
}
inline void DropData::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.DropData.count)
}

// -------------------------------------------------------------------

// MailItemInfo

// required int32 item_template_id = 1;
inline bool MailItemInfo::has_item_template_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MailItemInfo::set_has_item_template_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MailItemInfo::clear_has_item_template_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MailItemInfo::clear_item_template_id() {
  item_template_id_ = 0;
  clear_has_item_template_id();
}
inline ::google::protobuf::int32 MailItemInfo::item_template_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.MailItemInfo.item_template_id)
  return item_template_id_;
}
inline void MailItemInfo::set_item_template_id(::google::protobuf::int32 value) {
  set_has_item_template_id();
  item_template_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.MailItemInfo.item_template_id)
}

// required int32 item_amount = 2;
inline bool MailItemInfo::has_item_amount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MailItemInfo::set_has_item_amount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MailItemInfo::clear_has_item_amount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MailItemInfo::clear_item_amount() {
  item_amount_ = 0;
  clear_has_item_amount();
}
inline ::google::protobuf::int32 MailItemInfo::item_amount() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.MailItemInfo.item_amount)
  return item_amount_;
}
inline void MailItemInfo::set_item_amount(::google::protobuf::int32 value) {
  set_has_item_amount();
  item_amount_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.MailItemInfo.item_amount)
}

// optional .b2.protocol.commondata.Item.CharacterType character_type = 3;
inline bool MailItemInfo::has_character_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MailItemInfo::set_has_character_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MailItemInfo::clear_has_character_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MailItemInfo::clear_character_type() {
  character_type_ = 0;
  clear_has_character_type();
}
inline ::b2::protocol::commondata::Item_CharacterType MailItemInfo::character_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.MailItemInfo.character_type)
  return static_cast< ::b2::protocol::commondata::Item_CharacterType >(character_type_);
}
inline void MailItemInfo::set_character_type(::b2::protocol::commondata::Item_CharacterType value) {
  assert(::b2::protocol::commondata::Item_CharacterType_IsValid(value));
  set_has_character_type();
  character_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.MailItemInfo.character_type)
}

// optional .b2.protocol.commondata.Item item = 4;
inline bool MailItemInfo::has_item() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MailItemInfo::set_has_item() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MailItemInfo::clear_has_item() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MailItemInfo::clear_item() {
  if (item_ != NULL) item_->::b2::protocol::commondata::Item::Clear();
  clear_has_item();
}
inline const ::b2::protocol::commondata::Item& MailItemInfo::item() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.MailItemInfo.item)
  return item_ != NULL ? *item_ : *default_instance_->item_;
}
inline ::b2::protocol::commondata::Item* MailItemInfo::mutable_item() {
  set_has_item();
  if (item_ == NULL) item_ = new ::b2::protocol::commondata::Item;
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.MailItemInfo.item)
  return item_;
}
inline ::b2::protocol::commondata::Item* MailItemInfo::release_item() {
  clear_has_item();
  ::b2::protocol::commondata::Item* temp = item_;
  item_ = NULL;
  return temp;
}
inline void MailItemInfo::set_allocated_item(::b2::protocol::commondata::Item* item) {
  delete item_;
  item_ = item;
  if (item) {
    set_has_item();
  } else {
    clear_has_item();
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.commondata.MailItemInfo.item)
}

// optional .b2.protocol.commondata.Costume costume = 5;
inline bool MailItemInfo::has_costume() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MailItemInfo::set_has_costume() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MailItemInfo::clear_has_costume() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MailItemInfo::clear_costume() {
  if (costume_ != NULL) costume_->::b2::protocol::commondata::Costume::Clear();
  clear_has_costume();
}
inline const ::b2::protocol::commondata::Costume& MailItemInfo::costume() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.MailItemInfo.costume)
  return costume_ != NULL ? *costume_ : *default_instance_->costume_;
}
inline ::b2::protocol::commondata::Costume* MailItemInfo::mutable_costume() {
  set_has_costume();
  if (costume_ == NULL) costume_ = new ::b2::protocol::commondata::Costume;
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.MailItemInfo.costume)
  return costume_;
}
inline ::b2::protocol::commondata::Costume* MailItemInfo::release_costume() {
  clear_has_costume();
  ::b2::protocol::commondata::Costume* temp = costume_;
  costume_ = NULL;
  return temp;
}
inline void MailItemInfo::set_allocated_costume(::b2::protocol::commondata::Costume* costume) {
  delete costume_;
  costume_ = costume;
  if (costume) {
    set_has_costume();
  } else {
    clear_has_costume();
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.commondata.MailItemInfo.costume)
}

// optional .b2.protocol.commondata.Totem totem = 6;
inline bool MailItemInfo::has_totem() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MailItemInfo::set_has_totem() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MailItemInfo::clear_has_totem() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MailItemInfo::clear_totem() {
  if (totem_ != NULL) totem_->::b2::protocol::commondata::Totem::Clear();
  clear_has_totem();
}
inline const ::b2::protocol::commondata::Totem& MailItemInfo::totem() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.MailItemInfo.totem)
  return totem_ != NULL ? *totem_ : *default_instance_->totem_;
}
inline ::b2::protocol::commondata::Totem* MailItemInfo::mutable_totem() {
  set_has_totem();
  if (totem_ == NULL) totem_ = new ::b2::protocol::commondata::Totem;
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.MailItemInfo.totem)
  return totem_;
}
inline ::b2::protocol::commondata::Totem* MailItemInfo::release_totem() {
  clear_has_totem();
  ::b2::protocol::commondata::Totem* temp = totem_;
  totem_ = NULL;
  return temp;
}
inline void MailItemInfo::set_allocated_totem(::b2::protocol::commondata::Totem* totem) {
  delete totem_;
  totem_ = totem;
  if (totem) {
    set_has_totem();
  } else {
    clear_has_totem();
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.commondata.MailItemInfo.totem)
}

// -------------------------------------------------------------------

// WingOption

// required .b2.protocol.commondata.Character.TYPE character_type = 1;
inline bool WingOption::has_character_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WingOption::set_has_character_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WingOption::clear_has_character_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WingOption::clear_character_type() {
  character_type_ = 1;
  clear_has_character_type();
}
inline ::b2::protocol::commondata::Character_TYPE WingOption::character_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.WingOption.character_type)
  return static_cast< ::b2::protocol::commondata::Character_TYPE >(character_type_);
}
inline void WingOption::set_character_type(::b2::protocol::commondata::Character_TYPE value) {
  assert(::b2::protocol::commondata::Character_TYPE_IsValid(value));
  set_has_character_type();
  character_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.WingOption.character_type)
}

// required int32 option_index = 2;
inline bool WingOption::has_option_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WingOption::set_has_option_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WingOption::clear_has_option_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WingOption::clear_option_index() {
  option_index_ = 0;
  clear_has_option_index();
}
inline ::google::protobuf::int32 WingOption::option_index() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.WingOption.option_index)
  return option_index_;
}
inline void WingOption::set_option_index(::google::protobuf::int32 value) {
  set_has_option_index();
  option_index_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.WingOption.option_index)
}

// required int32 level = 3;
inline bool WingOption::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WingOption::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WingOption::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WingOption::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 WingOption::level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.WingOption.level)
  return level_;
}
inline void WingOption::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.WingOption.level)
}

// -------------------------------------------------------------------

// FairyStatus

// required .b2.protocol.commondata.FairyType fairy_type = 1;
inline bool FairyStatus::has_fairy_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FairyStatus::set_has_fairy_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FairyStatus::clear_has_fairy_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FairyStatus::clear_fairy_type() {
  fairy_type_ = 1;
  clear_has_fairy_type();
}
inline ::b2::protocol::commondata::FairyType FairyStatus::fairy_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.FairyStatus.fairy_type)
  return static_cast< ::b2::protocol::commondata::FairyType >(fairy_type_);
}
inline void FairyStatus::set_fairy_type(::b2::protocol::commondata::FairyType value) {
  assert(::b2::protocol::commondata::FairyType_IsValid(value));
  set_has_fairy_type();
  fairy_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.FairyStatus.fairy_type)
}

// required int32 level = 2;
inline bool FairyStatus::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FairyStatus::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FairyStatus::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FairyStatus::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 FairyStatus::level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.FairyStatus.level)
  return level_;
}
inline void FairyStatus::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.FairyStatus.level)
}

// required int32 enhance_point = 3;
inline bool FairyStatus::has_enhance_point() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FairyStatus::set_has_enhance_point() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FairyStatus::clear_has_enhance_point() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FairyStatus::clear_enhance_point() {
  enhance_point_ = 0;
  clear_has_enhance_point();
}
inline ::google::protobuf::int32 FairyStatus::enhance_point() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.FairyStatus.enhance_point)
  return enhance_point_;
}
inline void FairyStatus::set_enhance_point(::google::protobuf::int32 value) {
  set_has_enhance_point();
  enhance_point_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.FairyStatus.enhance_point)
}

// required int32 activated_bless_option_id = 5;
inline bool FairyStatus::has_activated_bless_option_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FairyStatus::set_has_activated_bless_option_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FairyStatus::clear_has_activated_bless_option_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FairyStatus::clear_activated_bless_option_id() {
  activated_bless_option_id_ = 0;
  clear_has_activated_bless_option_id();
}
inline ::google::protobuf::int32 FairyStatus::activated_bless_option_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.FairyStatus.activated_bless_option_id)
  return activated_bless_option_id_;
}
inline void FairyStatus::set_activated_bless_option_id(::google::protobuf::int32 value) {
  set_has_activated_bless_option_id();
  activated_bless_option_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.FairyStatus.activated_bless_option_id)
}

// required int32 bless_level = 6;
inline bool FairyStatus::has_bless_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FairyStatus::set_has_bless_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FairyStatus::clear_has_bless_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FairyStatus::clear_bless_level() {
  bless_level_ = 0;
  clear_has_bless_level();
}
inline ::google::protobuf::int32 FairyStatus::bless_level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.FairyStatus.bless_level)
  return bless_level_;
}
inline void FairyStatus::set_bless_level(::google::protobuf::int32 value) {
  set_has_bless_level();
  bless_level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.FairyStatus.bless_level)
}

// required float option_value = 7;
inline bool FairyStatus::has_option_value() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FairyStatus::set_has_option_value() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FairyStatus::clear_has_option_value() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FairyStatus::clear_option_value() {
  option_value_ = 0;
  clear_has_option_value();
}
inline float FairyStatus::option_value() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.FairyStatus.option_value)
  return option_value_;
}
inline void FairyStatus::set_option_value(float value) {
  set_has_option_value();
  option_value_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.FairyStatus.option_value)
}

// -------------------------------------------------------------------

// Relic

// required .b2.protocol.commondata.Character.TYPE character_type = 1;
inline bool Relic::has_character_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Relic::set_has_character_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Relic::clear_has_character_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Relic::clear_character_type() {
  character_type_ = 1;
  clear_has_character_type();
}
inline ::b2::protocol::commondata::Character_TYPE Relic::character_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Relic.character_type)
  return static_cast< ::b2::protocol::commondata::Character_TYPE >(character_type_);
}
inline void Relic::set_character_type(::b2::protocol::commondata::Character_TYPE value) {
  assert(::b2::protocol::commondata::Character_TYPE_IsValid(value));
  set_has_character_type();
  character_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Relic.character_type)
}

// required int32 relic_id = 2;
inline bool Relic::has_relic_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Relic::set_has_relic_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Relic::clear_has_relic_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Relic::clear_relic_id() {
  relic_id_ = 0;
  clear_has_relic_id();
}
inline ::google::protobuf::int32 Relic::relic_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Relic.relic_id)
  return relic_id_;
}
inline void Relic::set_relic_id(::google::protobuf::int32 value) {
  set_has_relic_id();
  relic_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Relic.relic_id)
}

// required int32 grade = 3;
inline bool Relic::has_grade() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Relic::set_has_grade() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Relic::clear_has_grade() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Relic::clear_grade() {
  grade_ = 0;
  clear_has_grade();
}
inline ::google::protobuf::int32 Relic::grade() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Relic.grade)
  return grade_;
}
inline void Relic::set_grade(::google::protobuf::int32 value) {
  set_has_grade();
  grade_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Relic.grade)
}

// required int32 enhance_level = 4;
inline bool Relic::has_enhance_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Relic::set_has_enhance_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Relic::clear_has_enhance_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Relic::clear_enhance_level() {
  enhance_level_ = 0;
  clear_has_enhance_level();
}
inline ::google::protobuf::int32 Relic::enhance_level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Relic.enhance_level)
  return enhance_level_;
}
inline void Relic::set_enhance_level(::google::protobuf::int32 value) {
  set_has_enhance_level();
  enhance_level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Relic.enhance_level)
}

// -------------------------------------------------------------------

// RollingBanner

// required int32 id = 1;
inline bool RollingBanner::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RollingBanner::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RollingBanner::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RollingBanner::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 RollingBanner::id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.RollingBanner.id)
  return id_;
}
inline void RollingBanner::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.RollingBanner.id)
}

// required int32 type = 2;
inline bool RollingBanner::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RollingBanner::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RollingBanner::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RollingBanner::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 RollingBanner::type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.RollingBanner.type)
  return type_;
}
inline void RollingBanner::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.RollingBanner.type)
}

// required int32 sub_type = 3;
inline bool RollingBanner::has_sub_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RollingBanner::set_has_sub_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RollingBanner::clear_has_sub_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RollingBanner::clear_sub_type() {
  sub_type_ = 0;
  clear_has_sub_type();
}
inline ::google::protobuf::int32 RollingBanner::sub_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.RollingBanner.sub_type)
  return sub_type_;
}
inline void RollingBanner::set_sub_type(::google::protobuf::int32 value) {
  set_has_sub_type();
  sub_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.RollingBanner.sub_type)
}

// required string banner_img_url = 4;
inline bool RollingBanner::has_banner_img_url() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RollingBanner::set_has_banner_img_url() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RollingBanner::clear_has_banner_img_url() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RollingBanner::clear_banner_img_url() {
  if (banner_img_url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    banner_img_url_->clear();
  }
  clear_has_banner_img_url();
}
inline const ::std::string& RollingBanner::banner_img_url() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.RollingBanner.banner_img_url)
  return *banner_img_url_;
}
inline void RollingBanner::set_banner_img_url(const ::std::string& value) {
  set_has_banner_img_url();
  if (banner_img_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    banner_img_url_ = new ::std::string;
  }
  banner_img_url_->assign(value);
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.RollingBanner.banner_img_url)
}
inline void RollingBanner::set_banner_img_url(const char* value) {
  set_has_banner_img_url();
  if (banner_img_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    banner_img_url_ = new ::std::string;
  }
  banner_img_url_->assign(value);
  // @@protoc_insertion_point(field_set_char:b2.protocol.commondata.RollingBanner.banner_img_url)
}
inline void RollingBanner::set_banner_img_url(const char* value, size_t size) {
  set_has_banner_img_url();
  if (banner_img_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    banner_img_url_ = new ::std::string;
  }
  banner_img_url_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:b2.protocol.commondata.RollingBanner.banner_img_url)
}
inline ::std::string* RollingBanner::mutable_banner_img_url() {
  set_has_banner_img_url();
  if (banner_img_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    banner_img_url_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.RollingBanner.banner_img_url)
  return banner_img_url_;
}
inline ::std::string* RollingBanner::release_banner_img_url() {
  clear_has_banner_img_url();
  if (banner_img_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = banner_img_url_;
    banner_img_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RollingBanner::set_allocated_banner_img_url(::std::string* banner_img_url) {
  if (banner_img_url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete banner_img_url_;
  }
  if (banner_img_url) {
    set_has_banner_img_url();
    banner_img_url_ = banner_img_url;
  } else {
    clear_has_banner_img_url();
    banner_img_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.commondata.RollingBanner.banner_img_url)
}

// required int64 start_time = 5;
inline bool RollingBanner::has_start_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RollingBanner::set_has_start_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RollingBanner::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RollingBanner::clear_start_time() {
  start_time_ = GOOGLE_LONGLONG(0);
  clear_has_start_time();
}
inline ::google::protobuf::int64 RollingBanner::start_time() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.RollingBanner.start_time)
  return start_time_;
}
inline void RollingBanner::set_start_time(::google::protobuf::int64 value) {
  set_has_start_time();
  start_time_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.RollingBanner.start_time)
}

// required int64 end_time = 6;
inline bool RollingBanner::has_end_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RollingBanner::set_has_end_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RollingBanner::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RollingBanner::clear_end_time() {
  end_time_ = GOOGLE_LONGLONG(0);
  clear_has_end_time();
}
inline ::google::protobuf::int64 RollingBanner::end_time() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.RollingBanner.end_time)
  return end_time_;
}
inline void RollingBanner::set_end_time(::google::protobuf::int64 value) {
  set_has_end_time();
  end_time_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.RollingBanner.end_time)
}

// required int32 banner_duration = 7;
inline bool RollingBanner::has_banner_duration() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RollingBanner::set_has_banner_duration() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RollingBanner::clear_has_banner_duration() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RollingBanner::clear_banner_duration() {
  banner_duration_ = 0;
  clear_has_banner_duration();
}
inline ::google::protobuf::int32 RollingBanner::banner_duration() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.RollingBanner.banner_duration)
  return banner_duration_;
}
inline void RollingBanner::set_banner_duration(::google::protobuf::int32 value) {
  set_has_banner_duration();
  banner_duration_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.RollingBanner.banner_duration)
}

// required string web_url = 8;
inline bool RollingBanner::has_web_url() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RollingBanner::set_has_web_url() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RollingBanner::clear_has_web_url() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RollingBanner::clear_web_url() {
  if (web_url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    web_url_->clear();
  }
  clear_has_web_url();
}
inline const ::std::string& RollingBanner::web_url() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.RollingBanner.web_url)
  return *web_url_;
}
inline void RollingBanner::set_web_url(const ::std::string& value) {
  set_has_web_url();
  if (web_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    web_url_ = new ::std::string;
  }
  web_url_->assign(value);
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.RollingBanner.web_url)
}
inline void RollingBanner::set_web_url(const char* value) {
  set_has_web_url();
  if (web_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    web_url_ = new ::std::string;
  }
  web_url_->assign(value);
  // @@protoc_insertion_point(field_set_char:b2.protocol.commondata.RollingBanner.web_url)
}
inline void RollingBanner::set_web_url(const char* value, size_t size) {
  set_has_web_url();
  if (web_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    web_url_ = new ::std::string;
  }
  web_url_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:b2.protocol.commondata.RollingBanner.web_url)
}
inline ::std::string* RollingBanner::mutable_web_url() {
  set_has_web_url();
  if (web_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    web_url_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.RollingBanner.web_url)
  return web_url_;
}
inline ::std::string* RollingBanner::release_web_url() {
  clear_has_web_url();
  if (web_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = web_url_;
    web_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RollingBanner::set_allocated_web_url(::std::string* web_url) {
  if (web_url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete web_url_;
  }
  if (web_url) {
    set_has_web_url();
    web_url_ = web_url;
  } else {
    clear_has_web_url();
    web_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.commondata.RollingBanner.web_url)
}

// -------------------------------------------------------------------

// ConfigData

// optional int32 skill_point_buy_price_gem = 1;
inline bool ConfigData::has_skill_point_buy_price_gem() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConfigData::set_has_skill_point_buy_price_gem() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConfigData::clear_has_skill_point_buy_price_gem() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConfigData::clear_skill_point_buy_price_gem() {
  skill_point_buy_price_gem_ = 0;
  clear_has_skill_point_buy_price_gem();
}
inline ::google::protobuf::int32 ConfigData::skill_point_buy_price_gem() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ConfigData.skill_point_buy_price_gem)
  return skill_point_buy_price_gem_;
}
inline void ConfigData::set_skill_point_buy_price_gem(::google::protobuf::int32 value) {
  set_has_skill_point_buy_price_gem();
  skill_point_buy_price_gem_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ConfigData.skill_point_buy_price_gem)
}

// optional int32 max_skill_point_buy_count = 2;
inline bool ConfigData::has_max_skill_point_buy_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConfigData::set_has_max_skill_point_buy_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConfigData::clear_has_max_skill_point_buy_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConfigData::clear_max_skill_point_buy_count() {
  max_skill_point_buy_count_ = 0;
  clear_has_max_skill_point_buy_count();
}
inline ::google::protobuf::int32 ConfigData::max_skill_point_buy_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ConfigData.max_skill_point_buy_count)
  return max_skill_point_buy_count_;
}
inline void ConfigData::set_max_skill_point_buy_count(::google::protobuf::int32 value) {
  set_has_max_skill_point_buy_count();
  max_skill_point_buy_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ConfigData.max_skill_point_buy_count)
}

// optional int32 skill_point_reset_price_gem = 3;
inline bool ConfigData::has_skill_point_reset_price_gem() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ConfigData::set_has_skill_point_reset_price_gem() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ConfigData::clear_has_skill_point_reset_price_gem() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ConfigData::clear_skill_point_reset_price_gem() {
  skill_point_reset_price_gem_ = 0;
  clear_has_skill_point_reset_price_gem();
}
inline ::google::protobuf::int32 ConfigData::skill_point_reset_price_gem() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ConfigData.skill_point_reset_price_gem)
  return skill_point_reset_price_gem_;
}
inline void ConfigData::set_skill_point_reset_price_gem(::google::protobuf::int32 value) {
  set_has_skill_point_reset_price_gem();
  skill_point_reset_price_gem_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ConfigData.skill_point_reset_price_gem)
}

// optional int32 need_cash_for_extend_inventory = 4;
inline bool ConfigData::has_need_cash_for_extend_inventory() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ConfigData::set_has_need_cash_for_extend_inventory() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ConfigData::clear_has_need_cash_for_extend_inventory() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ConfigData::clear_need_cash_for_extend_inventory() {
  need_cash_for_extend_inventory_ = 0;
  clear_has_need_cash_for_extend_inventory();
}
inline ::google::protobuf::int32 ConfigData::need_cash_for_extend_inventory() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ConfigData.need_cash_for_extend_inventory)
  return need_cash_for_extend_inventory_;
}
inline void ConfigData::set_need_cash_for_extend_inventory(::google::protobuf::int32 value) {
  set_has_need_cash_for_extend_inventory();
  need_cash_for_extend_inventory_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ConfigData.need_cash_for_extend_inventory)
}

// optional int32 increase_inventory_slot_per_buy_count = 5;
inline bool ConfigData::has_increase_inventory_slot_per_buy_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ConfigData::set_has_increase_inventory_slot_per_buy_count() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ConfigData::clear_has_increase_inventory_slot_per_buy_count() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ConfigData::clear_increase_inventory_slot_per_buy_count() {
  increase_inventory_slot_per_buy_count_ = 0;
  clear_has_increase_inventory_slot_per_buy_count();
}
inline ::google::protobuf::int32 ConfigData::increase_inventory_slot_per_buy_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ConfigData.increase_inventory_slot_per_buy_count)
  return increase_inventory_slot_per_buy_count_;
}
inline void ConfigData::set_increase_inventory_slot_per_buy_count(::google::protobuf::int32 value) {
  set_has_increase_inventory_slot_per_buy_count();
  increase_inventory_slot_per_buy_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ConfigData.increase_inventory_slot_per_buy_count)
}

// optional int32 max_inventory_slot_count = 6;
inline bool ConfigData::has_max_inventory_slot_count() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ConfigData::set_has_max_inventory_slot_count() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ConfigData::clear_has_max_inventory_slot_count() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ConfigData::clear_max_inventory_slot_count() {
  max_inventory_slot_count_ = 0;
  clear_has_max_inventory_slot_count();
}
inline ::google::protobuf::int32 ConfigData::max_inventory_slot_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ConfigData.max_inventory_slot_count)
  return max_inventory_slot_count_;
}
inline void ConfigData::set_max_inventory_slot_count(::google::protobuf::int32 value) {
  set_has_max_inventory_slot_count();
  max_inventory_slot_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ConfigData.max_inventory_slot_count)
}

// optional int32 max_friend_count = 7;
inline bool ConfigData::has_max_friend_count() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ConfigData::set_has_max_friend_count() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ConfigData::clear_has_max_friend_count() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ConfigData::clear_max_friend_count() {
  max_friend_count_ = 0;
  clear_has_max_friend_count();
}
inline ::google::protobuf::int32 ConfigData::max_friend_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ConfigData.max_friend_count)
  return max_friend_count_;
}
inline void ConfigData::set_max_friend_count(::google::protobuf::int32 value) {
  set_has_max_friend_count();
  max_friend_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ConfigData.max_friend_count)
}

// optional int32 max_send_ask_friend = 8;
inline bool ConfigData::has_max_send_ask_friend() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ConfigData::set_has_max_send_ask_friend() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ConfigData::clear_has_max_send_ask_friend() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ConfigData::clear_max_send_ask_friend() {
  max_send_ask_friend_ = 0;
  clear_has_max_send_ask_friend();
}
inline ::google::protobuf::int32 ConfigData::max_send_ask_friend() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ConfigData.max_send_ask_friend)
  return max_send_ask_friend_;
}
inline void ConfigData::set_max_send_ask_friend(::google::protobuf::int32 value) {
  set_has_max_send_ask_friend();
  max_send_ask_friend_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ConfigData.max_send_ask_friend)
}

// optional int32 max_receive_ask_friend = 9;
inline bool ConfigData::has_max_receive_ask_friend() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ConfigData::set_has_max_receive_ask_friend() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ConfigData::clear_has_max_receive_ask_friend() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ConfigData::clear_max_receive_ask_friend() {
  max_receive_ask_friend_ = 0;
  clear_has_max_receive_ask_friend();
}
inline ::google::protobuf::int32 ConfigData::max_receive_ask_friend() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ConfigData.max_receive_ask_friend)
  return max_receive_ask_friend_;
}
inline void ConfigData::set_max_receive_ask_friend(::google::protobuf::int32 value) {
  set_has_max_receive_ask_friend();
  max_receive_ask_friend_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ConfigData.max_receive_ask_friend)
}

// optional int32 cooltime_for_send_social_point = 10;
inline bool ConfigData::has_cooltime_for_send_social_point() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ConfigData::set_has_cooltime_for_send_social_point() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ConfigData::clear_has_cooltime_for_send_social_point() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ConfigData::clear_cooltime_for_send_social_point() {
  cooltime_for_send_social_point_ = 0;
  clear_has_cooltime_for_send_social_point();
}
inline ::google::protobuf::int32 ConfigData::cooltime_for_send_social_point() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ConfigData.cooltime_for_send_social_point)
  return cooltime_for_send_social_point_;
}
inline void ConfigData::set_cooltime_for_send_social_point(::google::protobuf::int32 value) {
  set_has_cooltime_for_send_social_point();
  cooltime_for_send_social_point_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ConfigData.cooltime_for_send_social_point)
}

// optional int32 max_delete_friend_count_for_day = 11;
inline bool ConfigData::has_max_delete_friend_count_for_day() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ConfigData::set_has_max_delete_friend_count_for_day() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ConfigData::clear_has_max_delete_friend_count_for_day() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ConfigData::clear_max_delete_friend_count_for_day() {
  max_delete_friend_count_for_day_ = 0;
  clear_has_max_delete_friend_count_for_day();
}
inline ::google::protobuf::int32 ConfigData::max_delete_friend_count_for_day() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ConfigData.max_delete_friend_count_for_day)
  return max_delete_friend_count_for_day_;
}
inline void ConfigData::set_max_delete_friend_count_for_day(::google::protobuf::int32 value) {
  set_has_max_delete_friend_count_for_day();
  max_delete_friend_count_for_day_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ConfigData.max_delete_friend_count_for_day)
}

// optional int32 max_social_point_value = 12;
inline bool ConfigData::has_max_social_point_value() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ConfigData::set_has_max_social_point_value() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ConfigData::clear_has_max_social_point_value() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ConfigData::clear_max_social_point_value() {
  max_social_point_value_ = 0;
  clear_has_max_social_point_value();
}
inline ::google::protobuf::int32 ConfigData::max_social_point_value() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ConfigData.max_social_point_value)
  return max_social_point_value_;
}
inline void ConfigData::set_max_social_point_value(::google::protobuf::int32 value) {
  set_has_max_social_point_value();
  max_social_point_value_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ConfigData.max_social_point_value)
}

// optional int32 add_social_point_for_send_to_friend = 13;
inline bool ConfigData::has_add_social_point_for_send_to_friend() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ConfigData::set_has_add_social_point_for_send_to_friend() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ConfigData::clear_has_add_social_point_for_send_to_friend() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ConfigData::clear_add_social_point_for_send_to_friend() {
  add_social_point_for_send_to_friend_ = 0;
  clear_has_add_social_point_for_send_to_friend();
}
inline ::google::protobuf::int32 ConfigData::add_social_point_for_send_to_friend() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ConfigData.add_social_point_for_send_to_friend)
  return add_social_point_for_send_to_friend_;
}
inline void ConfigData::set_add_social_point_for_send_to_friend(::google::protobuf::int32 value) {
  set_has_add_social_point_for_send_to_friend();
  add_social_point_for_send_to_friend_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ConfigData.add_social_point_for_send_to_friend)
}

// optional int32 add_social_point_for_receive_from_friend = 14;
inline bool ConfigData::has_add_social_point_for_receive_from_friend() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void ConfigData::set_has_add_social_point_for_receive_from_friend() {
  _has_bits_[0] |= 0x00002000u;
}
inline void ConfigData::clear_has_add_social_point_for_receive_from_friend() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void ConfigData::clear_add_social_point_for_receive_from_friend() {
  add_social_point_for_receive_from_friend_ = 0;
  clear_has_add_social_point_for_receive_from_friend();
}
inline ::google::protobuf::int32 ConfigData::add_social_point_for_receive_from_friend() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ConfigData.add_social_point_for_receive_from_friend)
  return add_social_point_for_receive_from_friend_;
}
inline void ConfigData::set_add_social_point_for_receive_from_friend(::google::protobuf::int32 value) {
  set_has_add_social_point_for_receive_from_friend();
  add_social_point_for_receive_from_friend_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ConfigData.add_social_point_for_receive_from_friend)
}

// optional float stage_buff_rate_for_increase_exp = 15;
inline bool ConfigData::has_stage_buff_rate_for_increase_exp() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void ConfigData::set_has_stage_buff_rate_for_increase_exp() {
  _has_bits_[0] |= 0x00004000u;
}
inline void ConfigData::clear_has_stage_buff_rate_for_increase_exp() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void ConfigData::clear_stage_buff_rate_for_increase_exp() {
  stage_buff_rate_for_increase_exp_ = 0;
  clear_has_stage_buff_rate_for_increase_exp();
}
inline float ConfigData::stage_buff_rate_for_increase_exp() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ConfigData.stage_buff_rate_for_increase_exp)
  return stage_buff_rate_for_increase_exp_;
}
inline void ConfigData::set_stage_buff_rate_for_increase_exp(float value) {
  set_has_stage_buff_rate_for_increase_exp();
  stage_buff_rate_for_increase_exp_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ConfigData.stage_buff_rate_for_increase_exp)
}

// optional float stage_buff_rate_for_increase_gold = 16;
inline bool ConfigData::has_stage_buff_rate_for_increase_gold() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void ConfigData::set_has_stage_buff_rate_for_increase_gold() {
  _has_bits_[0] |= 0x00008000u;
}
inline void ConfigData::clear_has_stage_buff_rate_for_increase_gold() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void ConfigData::clear_stage_buff_rate_for_increase_gold() {
  stage_buff_rate_for_increase_gold_ = 0;
  clear_has_stage_buff_rate_for_increase_gold();
}
inline float ConfigData::stage_buff_rate_for_increase_gold() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ConfigData.stage_buff_rate_for_increase_gold)
  return stage_buff_rate_for_increase_gold_;
}
inline void ConfigData::set_stage_buff_rate_for_increase_gold(float value) {
  set_has_stage_buff_rate_for_increase_gold();
  stage_buff_rate_for_increase_gold_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ConfigData.stage_buff_rate_for_increase_gold)
}

// optional float stage_buff_rate_for_boost_game_speed = 17;
inline bool ConfigData::has_stage_buff_rate_for_boost_game_speed() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void ConfigData::set_has_stage_buff_rate_for_boost_game_speed() {
  _has_bits_[0] |= 0x00010000u;
}
inline void ConfigData::clear_has_stage_buff_rate_for_boost_game_speed() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void ConfigData::clear_stage_buff_rate_for_boost_game_speed() {
  stage_buff_rate_for_boost_game_speed_ = 0;
  clear_has_stage_buff_rate_for_boost_game_speed();
}
inline float ConfigData::stage_buff_rate_for_boost_game_speed() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ConfigData.stage_buff_rate_for_boost_game_speed)
  return stage_buff_rate_for_boost_game_speed_;
}
inline void ConfigData::set_stage_buff_rate_for_boost_game_speed(float value) {
  set_has_stage_buff_rate_for_boost_game_speed();
  stage_buff_rate_for_boost_game_speed_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ConfigData.stage_buff_rate_for_boost_game_speed)
}

// optional int32 guild_set_up_gold_cost = 18;
inline bool ConfigData::has_guild_set_up_gold_cost() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void ConfigData::set_has_guild_set_up_gold_cost() {
  _has_bits_[0] |= 0x00020000u;
}
inline void ConfigData::clear_has_guild_set_up_gold_cost() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void ConfigData::clear_guild_set_up_gold_cost() {
  guild_set_up_gold_cost_ = 0;
  clear_has_guild_set_up_gold_cost();
}
inline ::google::protobuf::int32 ConfigData::guild_set_up_gold_cost() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ConfigData.guild_set_up_gold_cost)
  return guild_set_up_gold_cost_;
}
inline void ConfigData::set_guild_set_up_gold_cost(::google::protobuf::int32 value) {
  set_has_guild_set_up_gold_cost();
  guild_set_up_gold_cost_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ConfigData.guild_set_up_gold_cost)
}

// optional int32 default_max_guild_member_count = 19;
inline bool ConfigData::has_default_max_guild_member_count() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void ConfigData::set_has_default_max_guild_member_count() {
  _has_bits_[0] |= 0x00040000u;
}
inline void ConfigData::clear_has_default_max_guild_member_count() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void ConfigData::clear_default_max_guild_member_count() {
  default_max_guild_member_count_ = 0;
  clear_has_default_max_guild_member_count();
}
inline ::google::protobuf::int32 ConfigData::default_max_guild_member_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ConfigData.default_max_guild_member_count)
  return default_max_guild_member_count_;
}
inline void ConfigData::set_default_max_guild_member_count(::google::protobuf::int32 value) {
  set_has_default_max_guild_member_count();
  default_max_guild_member_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ConfigData.default_max_guild_member_count)
}

// optional int32 max_invite_guild_count_for_account = 20;
inline bool ConfigData::has_max_invite_guild_count_for_account() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void ConfigData::set_has_max_invite_guild_count_for_account() {
  _has_bits_[0] |= 0x00080000u;
}
inline void ConfigData::clear_has_max_invite_guild_count_for_account() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void ConfigData::clear_max_invite_guild_count_for_account() {
  max_invite_guild_count_for_account_ = 0;
  clear_has_max_invite_guild_count_for_account();
}
inline ::google::protobuf::int32 ConfigData::max_invite_guild_count_for_account() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ConfigData.max_invite_guild_count_for_account)
  return max_invite_guild_count_for_account_;
}
inline void ConfigData::set_max_invite_guild_count_for_account(::google::protobuf::int32 value) {
  set_has_max_invite_guild_count_for_account();
  max_invite_guild_count_for_account_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ConfigData.max_invite_guild_count_for_account)
}

// optional int32 invite_guild_expire_period_by_day = 21;
inline bool ConfigData::has_invite_guild_expire_period_by_day() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void ConfigData::set_has_invite_guild_expire_period_by_day() {
  _has_bits_[0] |= 0x00100000u;
}
inline void ConfigData::clear_has_invite_guild_expire_period_by_day() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void ConfigData::clear_invite_guild_expire_period_by_day() {
  invite_guild_expire_period_by_day_ = 0;
  clear_has_invite_guild_expire_period_by_day();
}
inline ::google::protobuf::int32 ConfigData::invite_guild_expire_period_by_day() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ConfigData.invite_guild_expire_period_by_day)
  return invite_guild_expire_period_by_day_;
}
inline void ConfigData::set_invite_guild_expire_period_by_day(::google::protobuf::int32 value) {
  set_has_invite_guild_expire_period_by_day();
  invite_guild_expire_period_by_day_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ConfigData.invite_guild_expire_period_by_day)
}

// optional int32 max_raid_count_per_day = 22;
inline bool ConfigData::has_max_raid_count_per_day() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void ConfigData::set_has_max_raid_count_per_day() {
  _has_bits_[0] |= 0x00200000u;
}
inline void ConfigData::clear_has_max_raid_count_per_day() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void ConfigData::clear_max_raid_count_per_day() {
  max_raid_count_per_day_ = 0;
  clear_has_max_raid_count_per_day();
}
inline ::google::protobuf::int32 ConfigData::max_raid_count_per_day() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ConfigData.max_raid_count_per_day)
  return max_raid_count_per_day_;
}
inline void ConfigData::set_max_raid_count_per_day(::google::protobuf::int32 value) {
  set_has_max_raid_count_per_day();
  max_raid_count_per_day_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ConfigData.max_raid_count_per_day)
}

// optional int32 update_guild_gold_cost = 23;
inline bool ConfigData::has_update_guild_gold_cost() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void ConfigData::set_has_update_guild_gold_cost() {
  _has_bits_[0] |= 0x00400000u;
}
inline void ConfigData::clear_has_update_guild_gold_cost() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void ConfigData::clear_update_guild_gold_cost() {
  update_guild_gold_cost_ = 0;
  clear_has_update_guild_gold_cost();
}
inline ::google::protobuf::int32 ConfigData::update_guild_gold_cost() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ConfigData.update_guild_gold_cost)
  return update_guild_gold_cost_;
}
inline void ConfigData::set_update_guild_gold_cost(::google::protobuf::int32 value) {
  set_has_update_guild_gold_cost();
  update_guild_gold_cost_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ConfigData.update_guild_gold_cost)
}

// optional int32 guild_master_logout_limit_period_day = 24;
inline bool ConfigData::has_guild_master_logout_limit_period_day() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void ConfigData::set_has_guild_master_logout_limit_period_day() {
  _has_bits_[0] |= 0x00800000u;
}
inline void ConfigData::clear_has_guild_master_logout_limit_period_day() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void ConfigData::clear_guild_master_logout_limit_period_day() {
  guild_master_logout_limit_period_day_ = 0;
  clear_has_guild_master_logout_limit_period_day();
}
inline ::google::protobuf::int32 ConfigData::guild_master_logout_limit_period_day() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ConfigData.guild_master_logout_limit_period_day)
  return guild_master_logout_limit_period_day_;
}
inline void ConfigData::set_guild_master_logout_limit_period_day(::google::protobuf::int32 value) {
  set_has_guild_master_logout_limit_period_day();
  guild_master_logout_limit_period_day_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ConfigData.guild_master_logout_limit_period_day)
}

// optional int32 guild_battle_time_limit_sec_client = 25;
inline bool ConfigData::has_guild_battle_time_limit_sec_client() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void ConfigData::set_has_guild_battle_time_limit_sec_client() {
  _has_bits_[0] |= 0x01000000u;
}
inline void ConfigData::clear_has_guild_battle_time_limit_sec_client() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void ConfigData::clear_guild_battle_time_limit_sec_client() {
  guild_battle_time_limit_sec_client_ = 0;
  clear_has_guild_battle_time_limit_sec_client();
}
inline ::google::protobuf::int32 ConfigData::guild_battle_time_limit_sec_client() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ConfigData.guild_battle_time_limit_sec_client)
  return guild_battle_time_limit_sec_client_;
}
inline void ConfigData::set_guild_battle_time_limit_sec_client(::google::protobuf::int32 value) {
  set_has_guild_battle_time_limit_sec_client();
  guild_battle_time_limit_sec_client_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ConfigData.guild_battle_time_limit_sec_client)
}

// optional int32 hero_tower_sweep_reward_count_per_floor = 26;
inline bool ConfigData::has_hero_tower_sweep_reward_count_per_floor() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void ConfigData::set_has_hero_tower_sweep_reward_count_per_floor() {
  _has_bits_[0] |= 0x02000000u;
}
inline void ConfigData::clear_has_hero_tower_sweep_reward_count_per_floor() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void ConfigData::clear_hero_tower_sweep_reward_count_per_floor() {
  hero_tower_sweep_reward_count_per_floor_ = 0;
  clear_has_hero_tower_sweep_reward_count_per_floor();
}
inline ::google::protobuf::int32 ConfigData::hero_tower_sweep_reward_count_per_floor() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ConfigData.hero_tower_sweep_reward_count_per_floor)
  return hero_tower_sweep_reward_count_per_floor_;
}
inline void ConfigData::set_hero_tower_sweep_reward_count_per_floor(::google::protobuf::int32 value) {
  set_has_hero_tower_sweep_reward_count_per_floor();
  hero_tower_sweep_reward_count_per_floor_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ConfigData.hero_tower_sweep_reward_count_per_floor)
}

// optional int32 assault_resurrection_max_count = 27;
inline bool ConfigData::has_assault_resurrection_max_count() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void ConfigData::set_has_assault_resurrection_max_count() {
  _has_bits_[0] |= 0x04000000u;
}
inline void ConfigData::clear_has_assault_resurrection_max_count() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void ConfigData::clear_assault_resurrection_max_count() {
  assault_resurrection_max_count_ = 0;
  clear_has_assault_resurrection_max_count();
}
inline ::google::protobuf::int32 ConfigData::assault_resurrection_max_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ConfigData.assault_resurrection_max_count)
  return assault_resurrection_max_count_;
}
inline void ConfigData::set_assault_resurrection_max_count(::google::protobuf::int32 value) {
  set_has_assault_resurrection_max_count();
  assault_resurrection_max_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ConfigData.assault_resurrection_max_count)
}

// optional int32 pvp_match_point_max = 29;
inline bool ConfigData::has_pvp_match_point_max() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void ConfigData::set_has_pvp_match_point_max() {
  _has_bits_[0] |= 0x08000000u;
}
inline void ConfigData::clear_has_pvp_match_point_max() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void ConfigData::clear_pvp_match_point_max() {
  pvp_match_point_max_ = 0;
  clear_has_pvp_match_point_max();
}
inline ::google::protobuf::int32 ConfigData::pvp_match_point_max() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ConfigData.pvp_match_point_max)
  return pvp_match_point_max_;
}
inline void ConfigData::set_pvp_match_point_max(::google::protobuf::int32 value) {
  set_has_pvp_match_point_max();
  pvp_match_point_max_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ConfigData.pvp_match_point_max)
}

// optional int32 pvp_match_point_charge_period_second = 30;
inline bool ConfigData::has_pvp_match_point_charge_period_second() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void ConfigData::set_has_pvp_match_point_charge_period_second() {
  _has_bits_[0] |= 0x10000000u;
}
inline void ConfigData::clear_has_pvp_match_point_charge_period_second() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void ConfigData::clear_pvp_match_point_charge_period_second() {
  pvp_match_point_charge_period_second_ = 0;
  clear_has_pvp_match_point_charge_period_second();
}
inline ::google::protobuf::int32 ConfigData::pvp_match_point_charge_period_second() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ConfigData.pvp_match_point_charge_period_second)
  return pvp_match_point_charge_period_second_;
}
inline void ConfigData::set_pvp_match_point_charge_period_second(::google::protobuf::int32 value) {
  set_has_pvp_match_point_charge_period_second();
  pvp_match_point_charge_period_second_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ConfigData.pvp_match_point_charge_period_second)
}

// optional int32 team_match_point_max = 31;
inline bool ConfigData::has_team_match_point_max() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void ConfigData::set_has_team_match_point_max() {
  _has_bits_[0] |= 0x20000000u;
}
inline void ConfigData::clear_has_team_match_point_max() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void ConfigData::clear_team_match_point_max() {
  team_match_point_max_ = 0;
  clear_has_team_match_point_max();
}
inline ::google::protobuf::int32 ConfigData::team_match_point_max() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ConfigData.team_match_point_max)
  return team_match_point_max_;
}
inline void ConfigData::set_team_match_point_max(::google::protobuf::int32 value) {
  set_has_team_match_point_max();
  team_match_point_max_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ConfigData.team_match_point_max)
}

// optional int32 team_match_point_charge_period_second = 32;
inline bool ConfigData::has_team_match_point_charge_period_second() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void ConfigData::set_has_team_match_point_charge_period_second() {
  _has_bits_[0] |= 0x40000000u;
}
inline void ConfigData::clear_has_team_match_point_charge_period_second() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void ConfigData::clear_team_match_point_charge_period_second() {
  team_match_point_charge_period_second_ = 0;
  clear_has_team_match_point_charge_period_second();
}
inline ::google::protobuf::int32 ConfigData::team_match_point_charge_period_second() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ConfigData.team_match_point_charge_period_second)
  return team_match_point_charge_period_second_;
}
inline void ConfigData::set_team_match_point_charge_period_second(::google::protobuf::int32 value) {
  set_has_team_match_point_charge_period_second();
  team_match_point_charge_period_second_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ConfigData.team_match_point_charge_period_second)
}

// optional int32 item_random_option_change_cost_dark_crystal = 33;
inline bool ConfigData::has_item_random_option_change_cost_dark_crystal() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void ConfigData::set_has_item_random_option_change_cost_dark_crystal() {
  _has_bits_[0] |= 0x80000000u;
}
inline void ConfigData::clear_has_item_random_option_change_cost_dark_crystal() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void ConfigData::clear_item_random_option_change_cost_dark_crystal() {
  item_random_option_change_cost_dark_crystal_ = 0;
  clear_has_item_random_option_change_cost_dark_crystal();
}
inline ::google::protobuf::int32 ConfigData::item_random_option_change_cost_dark_crystal() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ConfigData.item_random_option_change_cost_dark_crystal)
  return item_random_option_change_cost_dark_crystal_;
}
inline void ConfigData::set_item_random_option_change_cost_dark_crystal(::google::protobuf::int32 value) {
  set_has_item_random_option_change_cost_dark_crystal();
  item_random_option_change_cost_dark_crystal_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ConfigData.item_random_option_change_cost_dark_crystal)
}

// optional int32 item_preset_max_count = 34;
inline bool ConfigData::has_item_preset_max_count() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void ConfigData::set_has_item_preset_max_count() {
  _has_bits_[1] |= 0x00000001u;
}
inline void ConfigData::clear_has_item_preset_max_count() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void ConfigData::clear_item_preset_max_count() {
  item_preset_max_count_ = 0;
  clear_has_item_preset_max_count();
}
inline ::google::protobuf::int32 ConfigData::item_preset_max_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ConfigData.item_preset_max_count)
  return item_preset_max_count_;
}
inline void ConfigData::set_item_preset_max_count(::google::protobuf::int32 value) {
  set_has_item_preset_max_count();
  item_preset_max_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ConfigData.item_preset_max_count)
}

// optional int32 skill_quick_slot_max_count = 35;
inline bool ConfigData::has_skill_quick_slot_max_count() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void ConfigData::set_has_skill_quick_slot_max_count() {
  _has_bits_[1] |= 0x00000002u;
}
inline void ConfigData::clear_has_skill_quick_slot_max_count() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void ConfigData::clear_skill_quick_slot_max_count() {
  skill_quick_slot_max_count_ = 0;
  clear_has_skill_quick_slot_max_count();
}
inline ::google::protobuf::int32 ConfigData::skill_quick_slot_max_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ConfigData.skill_quick_slot_max_count)
  return skill_quick_slot_max_count_;
}
inline void ConfigData::set_skill_quick_slot_max_count(::google::protobuf::int32 value) {
  set_has_skill_quick_slot_max_count();
  skill_quick_slot_max_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ConfigData.skill_quick_slot_max_count)
}

// optional int32 assault_mvp_point_to_open_reward = 36;
inline bool ConfigData::has_assault_mvp_point_to_open_reward() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void ConfigData::set_has_assault_mvp_point_to_open_reward() {
  _has_bits_[1] |= 0x00000004u;
}
inline void ConfigData::clear_has_assault_mvp_point_to_open_reward() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void ConfigData::clear_assault_mvp_point_to_open_reward() {
  assault_mvp_point_to_open_reward_ = 0;
  clear_has_assault_mvp_point_to_open_reward();
}
inline ::google::protobuf::int32 ConfigData::assault_mvp_point_to_open_reward() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ConfigData.assault_mvp_point_to_open_reward)
  return assault_mvp_point_to_open_reward_;
}
inline void ConfigData::set_assault_mvp_point_to_open_reward(::google::protobuf::int32 value) {
  set_has_assault_mvp_point_to_open_reward();
  assault_mvp_point_to_open_reward_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ConfigData.assault_mvp_point_to_open_reward)
}

// optional int32 duel_reward_challenge_max_count = 37;
inline bool ConfigData::has_duel_reward_challenge_max_count() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void ConfigData::set_has_duel_reward_challenge_max_count() {
  _has_bits_[1] |= 0x00000008u;
}
inline void ConfigData::clear_has_duel_reward_challenge_max_count() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void ConfigData::clear_duel_reward_challenge_max_count() {
  duel_reward_challenge_max_count_ = 0;
  clear_has_duel_reward_challenge_max_count();
}
inline ::google::protobuf::int32 ConfigData::duel_reward_challenge_max_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ConfigData.duel_reward_challenge_max_count)
  return duel_reward_challenge_max_count_;
}
inline void ConfigData::set_duel_reward_challenge_max_count(::google::protobuf::int32 value) {
  set_has_duel_reward_challenge_max_count();
  duel_reward_challenge_max_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ConfigData.duel_reward_challenge_max_count)
}

// optional int32 guild_support_cool_time_hour = 38;
inline bool ConfigData::has_guild_support_cool_time_hour() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void ConfigData::set_has_guild_support_cool_time_hour() {
  _has_bits_[1] |= 0x00000010u;
}
inline void ConfigData::clear_has_guild_support_cool_time_hour() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void ConfigData::clear_guild_support_cool_time_hour() {
  guild_support_cool_time_hour_ = 0;
  clear_has_guild_support_cool_time_hour();
}
inline ::google::protobuf::int32 ConfigData::guild_support_cool_time_hour() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ConfigData.guild_support_cool_time_hour)
  return guild_support_cool_time_hour_;
}
inline void ConfigData::set_guild_support_cool_time_hour(::google::protobuf::int32 value) {
  set_has_guild_support_cool_time_hour();
  guild_support_cool_time_hour_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ConfigData.guild_support_cool_time_hour)
}

// optional int32 guild_support_max_count_for_day = 39;
inline bool ConfigData::has_guild_support_max_count_for_day() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void ConfigData::set_has_guild_support_max_count_for_day() {
  _has_bits_[1] |= 0x00000020u;
}
inline void ConfigData::clear_has_guild_support_max_count_for_day() {
  _has_bits_[1] &= ~0x00000020u;
}
inline void ConfigData::clear_guild_support_max_count_for_day() {
  guild_support_max_count_for_day_ = 0;
  clear_has_guild_support_max_count_for_day();
}
inline ::google::protobuf::int32 ConfigData::guild_support_max_count_for_day() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ConfigData.guild_support_max_count_for_day)
  return guild_support_max_count_for_day_;
}
inline void ConfigData::set_guild_support_max_count_for_day(::google::protobuf::int32 value) {
  set_has_guild_support_max_count_for_day();
  guild_support_max_count_for_day_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ConfigData.guild_support_max_count_for_day)
}

// optional int32 rest_max_time_second = 40;
inline bool ConfigData::has_rest_max_time_second() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
inline void ConfigData::set_has_rest_max_time_second() {
  _has_bits_[1] |= 0x00000040u;
}
inline void ConfigData::clear_has_rest_max_time_second() {
  _has_bits_[1] &= ~0x00000040u;
}
inline void ConfigData::clear_rest_max_time_second() {
  rest_max_time_second_ = 0;
  clear_has_rest_max_time_second();
}
inline ::google::protobuf::int32 ConfigData::rest_max_time_second() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ConfigData.rest_max_time_second)
  return rest_max_time_second_;
}
inline void ConfigData::set_rest_max_time_second(::google::protobuf::int32 value) {
  set_has_rest_max_time_second();
  rest_max_time_second_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ConfigData.rest_max_time_second)
}

// optional int32 rest_time_second_per_one_point = 41;
inline bool ConfigData::has_rest_time_second_per_one_point() const {
  return (_has_bits_[1] & 0x00000080u) != 0;
}
inline void ConfigData::set_has_rest_time_second_per_one_point() {
  _has_bits_[1] |= 0x00000080u;
}
inline void ConfigData::clear_has_rest_time_second_per_one_point() {
  _has_bits_[1] &= ~0x00000080u;
}
inline void ConfigData::clear_rest_time_second_per_one_point() {
  rest_time_second_per_one_point_ = 0;
  clear_has_rest_time_second_per_one_point();
}
inline ::google::protobuf::int32 ConfigData::rest_time_second_per_one_point() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ConfigData.rest_time_second_per_one_point)
  return rest_time_second_per_one_point_;
}
inline void ConfigData::set_rest_time_second_per_one_point(::google::protobuf::int32 value) {
  set_has_rest_time_second_per_one_point();
  rest_time_second_per_one_point_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ConfigData.rest_time_second_per_one_point)
}

// optional int32 guild_mercenary_donation_max_count_for_day = 42;
inline bool ConfigData::has_guild_mercenary_donation_max_count_for_day() const {
  return (_has_bits_[1] & 0x00000100u) != 0;
}
inline void ConfigData::set_has_guild_mercenary_donation_max_count_for_day() {
  _has_bits_[1] |= 0x00000100u;
}
inline void ConfigData::clear_has_guild_mercenary_donation_max_count_for_day() {
  _has_bits_[1] &= ~0x00000100u;
}
inline void ConfigData::clear_guild_mercenary_donation_max_count_for_day() {
  guild_mercenary_donation_max_count_for_day_ = 0;
  clear_has_guild_mercenary_donation_max_count_for_day();
}
inline ::google::protobuf::int32 ConfigData::guild_mercenary_donation_max_count_for_day() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ConfigData.guild_mercenary_donation_max_count_for_day)
  return guild_mercenary_donation_max_count_for_day_;
}
inline void ConfigData::set_guild_mercenary_donation_max_count_for_day(::google::protobuf::int32 value) {
  set_has_guild_mercenary_donation_max_count_for_day();
  guild_mercenary_donation_max_count_for_day_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ConfigData.guild_mercenary_donation_max_count_for_day)
}

// optional int32 guild_rejoin_wait_time_min = 43;
inline bool ConfigData::has_guild_rejoin_wait_time_min() const {
  return (_has_bits_[1] & 0x00000200u) != 0;
}
inline void ConfigData::set_has_guild_rejoin_wait_time_min() {
  _has_bits_[1] |= 0x00000200u;
}
inline void ConfigData::clear_has_guild_rejoin_wait_time_min() {
  _has_bits_[1] &= ~0x00000200u;
}
inline void ConfigData::clear_guild_rejoin_wait_time_min() {
  guild_rejoin_wait_time_min_ = 0;
  clear_has_guild_rejoin_wait_time_min();
}
inline ::google::protobuf::int32 ConfigData::guild_rejoin_wait_time_min() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ConfigData.guild_rejoin_wait_time_min)
  return guild_rejoin_wait_time_min_;
}
inline void ConfigData::set_guild_rejoin_wait_time_min(::google::protobuf::int32 value) {
  set_has_guild_rejoin_wait_time_min();
  guild_rejoin_wait_time_min_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ConfigData.guild_rejoin_wait_time_min)
}

// optional int32 character_level_max = 44;
inline bool ConfigData::has_character_level_max() const {
  return (_has_bits_[1] & 0x00000400u) != 0;
}
inline void ConfigData::set_has_character_level_max() {
  _has_bits_[1] |= 0x00000400u;
}
inline void ConfigData::clear_has_character_level_max() {
  _has_bits_[1] &= ~0x00000400u;
}
inline void ConfigData::clear_character_level_max() {
  character_level_max_ = 0;
  clear_has_character_level_max();
}
inline ::google::protobuf::int32 ConfigData::character_level_max() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ConfigData.character_level_max)
  return character_level_max_;
}
inline void ConfigData::set_character_level_max(::google::protobuf::int32 value) {
  set_has_character_level_max();
  character_level_max_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ConfigData.character_level_max)
}

// optional int32 match_continuous_win_count_for_bonus = 45;
inline bool ConfigData::has_match_continuous_win_count_for_bonus() const {
  return (_has_bits_[1] & 0x00000800u) != 0;
}
inline void ConfigData::set_has_match_continuous_win_count_for_bonus() {
  _has_bits_[1] |= 0x00000800u;
}
inline void ConfigData::clear_has_match_continuous_win_count_for_bonus() {
  _has_bits_[1] &= ~0x00000800u;
}
inline void ConfigData::clear_match_continuous_win_count_for_bonus() {
  match_continuous_win_count_for_bonus_ = 0;
  clear_has_match_continuous_win_count_for_bonus();
}
inline ::google::protobuf::int32 ConfigData::match_continuous_win_count_for_bonus() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ConfigData.match_continuous_win_count_for_bonus)
  return match_continuous_win_count_for_bonus_;
}
inline void ConfigData::set_match_continuous_win_count_for_bonus(::google::protobuf::int32 value) {
  set_has_match_continuous_win_count_for_bonus();
  match_continuous_win_count_for_bonus_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ConfigData.match_continuous_win_count_for_bonus)
}

// optional int32 hero_tower_free_ticket_count_max = 46;
inline bool ConfigData::has_hero_tower_free_ticket_count_max() const {
  return (_has_bits_[1] & 0x00001000u) != 0;
}
inline void ConfigData::set_has_hero_tower_free_ticket_count_max() {
  _has_bits_[1] |= 0x00001000u;
}
inline void ConfigData::clear_has_hero_tower_free_ticket_count_max() {
  _has_bits_[1] &= ~0x00001000u;
}
inline void ConfigData::clear_hero_tower_free_ticket_count_max() {
  hero_tower_free_ticket_count_max_ = 0;
  clear_has_hero_tower_free_ticket_count_max();
}
inline ::google::protobuf::int32 ConfigData::hero_tower_free_ticket_count_max() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ConfigData.hero_tower_free_ticket_count_max)
  return hero_tower_free_ticket_count_max_;
}
inline void ConfigData::set_hero_tower_free_ticket_count_max(::google::protobuf::int32 value) {
  set_has_hero_tower_free_ticket_count_max();
  hero_tower_free_ticket_count_max_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ConfigData.hero_tower_free_ticket_count_max)
}

// optional int32 counter_dungeon_daily_enter_count_max = 47;
inline bool ConfigData::has_counter_dungeon_daily_enter_count_max() const {
  return (_has_bits_[1] & 0x00002000u) != 0;
}
inline void ConfigData::set_has_counter_dungeon_daily_enter_count_max() {
  _has_bits_[1] |= 0x00002000u;
}
inline void ConfigData::clear_has_counter_dungeon_daily_enter_count_max() {
  _has_bits_[1] &= ~0x00002000u;
}
inline void ConfigData::clear_counter_dungeon_daily_enter_count_max() {
  counter_dungeon_daily_enter_count_max_ = 0;
  clear_has_counter_dungeon_daily_enter_count_max();
}
inline ::google::protobuf::int32 ConfigData::counter_dungeon_daily_enter_count_max() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ConfigData.counter_dungeon_daily_enter_count_max)
  return counter_dungeon_daily_enter_count_max_;
}
inline void ConfigData::set_counter_dungeon_daily_enter_count_max(::google::protobuf::int32 value) {
  set_has_counter_dungeon_daily_enter_count_max();
  counter_dungeon_daily_enter_count_max_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ConfigData.counter_dungeon_daily_enter_count_max)
}

// optional int32 max_chat_block_count = 48;
inline bool ConfigData::has_max_chat_block_count() const {
  return (_has_bits_[1] & 0x00004000u) != 0;
}
inline void ConfigData::set_has_max_chat_block_count() {
  _has_bits_[1] |= 0x00004000u;
}
inline void ConfigData::clear_has_max_chat_block_count() {
  _has_bits_[1] &= ~0x00004000u;
}
inline void ConfigData::clear_max_chat_block_count() {
  max_chat_block_count_ = 0;
  clear_has_max_chat_block_count();
}
inline ::google::protobuf::int32 ConfigData::max_chat_block_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ConfigData.max_chat_block_count)
  return max_chat_block_count_;
}
inline void ConfigData::set_max_chat_block_count(::google::protobuf::int32 value) {
  set_has_max_chat_block_count();
  max_chat_block_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ConfigData.max_chat_block_count)
}

// optional int32 min_floor_for_hero_tower_ranking = 49;
inline bool ConfigData::has_min_floor_for_hero_tower_ranking() const {
  return (_has_bits_[1] & 0x00008000u) != 0;
}
inline void ConfigData::set_has_min_floor_for_hero_tower_ranking() {
  _has_bits_[1] |= 0x00008000u;
}
inline void ConfigData::clear_has_min_floor_for_hero_tower_ranking() {
  _has_bits_[1] &= ~0x00008000u;
}
inline void ConfigData::clear_min_floor_for_hero_tower_ranking() {
  min_floor_for_hero_tower_ranking_ = 0;
  clear_has_min_floor_for_hero_tower_ranking();
}
inline ::google::protobuf::int32 ConfigData::min_floor_for_hero_tower_ranking() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ConfigData.min_floor_for_hero_tower_ranking)
  return min_floor_for_hero_tower_ranking_;
}
inline void ConfigData::set_min_floor_for_hero_tower_ranking(::google::protobuf::int32 value) {
  set_has_min_floor_for_hero_tower_ranking();
  min_floor_for_hero_tower_ranking_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ConfigData.min_floor_for_hero_tower_ranking)
}

// optional int32 raid_guild_bonus_count_member_2 = 50;
inline bool ConfigData::has_raid_guild_bonus_count_member_2() const {
  return (_has_bits_[1] & 0x00010000u) != 0;
}
inline void ConfigData::set_has_raid_guild_bonus_count_member_2() {
  _has_bits_[1] |= 0x00010000u;
}
inline void ConfigData::clear_has_raid_guild_bonus_count_member_2() {
  _has_bits_[1] &= ~0x00010000u;
}
inline void ConfigData::clear_raid_guild_bonus_count_member_2() {
  raid_guild_bonus_count_member_2_ = 0;
  clear_has_raid_guild_bonus_count_member_2();
}
inline ::google::protobuf::int32 ConfigData::raid_guild_bonus_count_member_2() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ConfigData.raid_guild_bonus_count_member_2)
  return raid_guild_bonus_count_member_2_;
}
inline void ConfigData::set_raid_guild_bonus_count_member_2(::google::protobuf::int32 value) {
  set_has_raid_guild_bonus_count_member_2();
  raid_guild_bonus_count_member_2_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ConfigData.raid_guild_bonus_count_member_2)
}

// optional int32 raid_guild_bonus_count_member_3 = 51;
inline bool ConfigData::has_raid_guild_bonus_count_member_3() const {
  return (_has_bits_[1] & 0x00020000u) != 0;
}
inline void ConfigData::set_has_raid_guild_bonus_count_member_3() {
  _has_bits_[1] |= 0x00020000u;
}
inline void ConfigData::clear_has_raid_guild_bonus_count_member_3() {
  _has_bits_[1] &= ~0x00020000u;
}
inline void ConfigData::clear_raid_guild_bonus_count_member_3() {
  raid_guild_bonus_count_member_3_ = 0;
  clear_has_raid_guild_bonus_count_member_3();
}
inline ::google::protobuf::int32 ConfigData::raid_guild_bonus_count_member_3() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ConfigData.raid_guild_bonus_count_member_3)
  return raid_guild_bonus_count_member_3_;
}
inline void ConfigData::set_raid_guild_bonus_count_member_3(::google::protobuf::int32 value) {
  set_has_raid_guild_bonus_count_member_3();
  raid_guild_bonus_count_member_3_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ConfigData.raid_guild_bonus_count_member_3)
}

// optional int32 raid_guild_bonus_count_member_4 = 52;
inline bool ConfigData::has_raid_guild_bonus_count_member_4() const {
  return (_has_bits_[1] & 0x00040000u) != 0;
}
inline void ConfigData::set_has_raid_guild_bonus_count_member_4() {
  _has_bits_[1] |= 0x00040000u;
}
inline void ConfigData::clear_has_raid_guild_bonus_count_member_4() {
  _has_bits_[1] &= ~0x00040000u;
}
inline void ConfigData::clear_raid_guild_bonus_count_member_4() {
  raid_guild_bonus_count_member_4_ = 0;
  clear_has_raid_guild_bonus_count_member_4();
}
inline ::google::protobuf::int32 ConfigData::raid_guild_bonus_count_member_4() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ConfigData.raid_guild_bonus_count_member_4)
  return raid_guild_bonus_count_member_4_;
}
inline void ConfigData::set_raid_guild_bonus_count_member_4(::google::protobuf::int32 value) {
  set_has_raid_guild_bonus_count_member_4();
  raid_guild_bonus_count_member_4_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ConfigData.raid_guild_bonus_count_member_4)
}

// optional int32 show_review_inducement_popup = 53;
inline bool ConfigData::has_show_review_inducement_popup() const {
  return (_has_bits_[1] & 0x00080000u) != 0;
}
inline void ConfigData::set_has_show_review_inducement_popup() {
  _has_bits_[1] |= 0x00080000u;
}
inline void ConfigData::clear_has_show_review_inducement_popup() {
  _has_bits_[1] &= ~0x00080000u;
}
inline void ConfigData::clear_show_review_inducement_popup() {
  show_review_inducement_popup_ = 0;
  clear_has_show_review_inducement_popup();
}
inline ::google::protobuf::int32 ConfigData::show_review_inducement_popup() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ConfigData.show_review_inducement_popup)
  return show_review_inducement_popup_;
}
inline void ConfigData::set_show_review_inducement_popup(::google::protobuf::int32 value) {
  set_has_show_review_inducement_popup();
  show_review_inducement_popup_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ConfigData.show_review_inducement_popup)
}

// optional int32 max_open_stage_difficulty = 54;
inline bool ConfigData::has_max_open_stage_difficulty() const {
  return (_has_bits_[1] & 0x00100000u) != 0;
}
inline void ConfigData::set_has_max_open_stage_difficulty() {
  _has_bits_[1] |= 0x00100000u;
}
inline void ConfigData::clear_has_max_open_stage_difficulty() {
  _has_bits_[1] &= ~0x00100000u;
}
inline void ConfigData::clear_max_open_stage_difficulty() {
  max_open_stage_difficulty_ = 0;
  clear_has_max_open_stage_difficulty();
}
inline ::google::protobuf::int32 ConfigData::max_open_stage_difficulty() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ConfigData.max_open_stage_difficulty)
  return max_open_stage_difficulty_;
}
inline void ConfigData::set_max_open_stage_difficulty(::google::protobuf::int32 value) {
  set_has_max_open_stage_difficulty();
  max_open_stage_difficulty_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ConfigData.max_open_stage_difficulty)
}

// optional int32 item_random_option_change_cost_cash = 55;
inline bool ConfigData::has_item_random_option_change_cost_cash() const {
  return (_has_bits_[1] & 0x00200000u) != 0;
}
inline void ConfigData::set_has_item_random_option_change_cost_cash() {
  _has_bits_[1] |= 0x00200000u;
}
inline void ConfigData::clear_has_item_random_option_change_cost_cash() {
  _has_bits_[1] &= ~0x00200000u;
}
inline void ConfigData::clear_item_random_option_change_cost_cash() {
  item_random_option_change_cost_cash_ = 0;
  clear_has_item_random_option_change_cost_cash();
}
inline ::google::protobuf::int32 ConfigData::item_random_option_change_cost_cash() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ConfigData.item_random_option_change_cost_cash)
  return item_random_option_change_cost_cash_;
}
inline void ConfigData::set_item_random_option_change_cost_cash(::google::protobuf::int32 value) {
  set_has_item_random_option_change_cost_cash();
  item_random_option_change_cost_cash_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ConfigData.item_random_option_change_cost_cash)
}

// optional int32 event_dice_free_count = 56;
inline bool ConfigData::has_event_dice_free_count() const {
  return (_has_bits_[1] & 0x00400000u) != 0;
}
inline void ConfigData::set_has_event_dice_free_count() {
  _has_bits_[1] |= 0x00400000u;
}
inline void ConfigData::clear_has_event_dice_free_count() {
  _has_bits_[1] &= ~0x00400000u;
}
inline void ConfigData::clear_event_dice_free_count() {
  event_dice_free_count_ = 0;
  clear_has_event_dice_free_count();
}
inline ::google::protobuf::int32 ConfigData::event_dice_free_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ConfigData.event_dice_free_count)
  return event_dice_free_count_;
}
inline void ConfigData::set_event_dice_free_count(::google::protobuf::int32 value) {
  set_has_event_dice_free_count();
  event_dice_free_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ConfigData.event_dice_free_count)
}

// optional int32 event_dice_point_per_one_dice = 57;
inline bool ConfigData::has_event_dice_point_per_one_dice() const {
  return (_has_bits_[1] & 0x00800000u) != 0;
}
inline void ConfigData::set_has_event_dice_point_per_one_dice() {
  _has_bits_[1] |= 0x00800000u;
}
inline void ConfigData::clear_has_event_dice_point_per_one_dice() {
  _has_bits_[1] &= ~0x00800000u;
}
inline void ConfigData::clear_event_dice_point_per_one_dice() {
  event_dice_point_per_one_dice_ = 0;
  clear_has_event_dice_point_per_one_dice();
}
inline ::google::protobuf::int32 ConfigData::event_dice_point_per_one_dice() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ConfigData.event_dice_point_per_one_dice)
  return event_dice_point_per_one_dice_;
}
inline void ConfigData::set_event_dice_point_per_one_dice(::google::protobuf::int32 value) {
  set_has_event_dice_point_per_one_dice();
  event_dice_point_per_one_dice_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ConfigData.event_dice_point_per_one_dice)
}

// optional int32 max_costume_inventory_slot_count = 58;
inline bool ConfigData::has_max_costume_inventory_slot_count() const {
  return (_has_bits_[1] & 0x01000000u) != 0;
}
inline void ConfigData::set_has_max_costume_inventory_slot_count() {
  _has_bits_[1] |= 0x01000000u;
}
inline void ConfigData::clear_has_max_costume_inventory_slot_count() {
  _has_bits_[1] &= ~0x01000000u;
}
inline void ConfigData::clear_max_costume_inventory_slot_count() {
  max_costume_inventory_slot_count_ = 0;
  clear_has_max_costume_inventory_slot_count();
}
inline ::google::protobuf::int32 ConfigData::max_costume_inventory_slot_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ConfigData.max_costume_inventory_slot_count)
  return max_costume_inventory_slot_count_;
}
inline void ConfigData::set_max_costume_inventory_slot_count(::google::protobuf::int32 value) {
  set_has_max_costume_inventory_slot_count();
  max_costume_inventory_slot_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ConfigData.max_costume_inventory_slot_count)
}

// optional int32 guild_master_change_period_day = 59;
inline bool ConfigData::has_guild_master_change_period_day() const {
  return (_has_bits_[1] & 0x02000000u) != 0;
}
inline void ConfigData::set_has_guild_master_change_period_day() {
  _has_bits_[1] |= 0x02000000u;
}
inline void ConfigData::clear_has_guild_master_change_period_day() {
  _has_bits_[1] &= ~0x02000000u;
}
inline void ConfigData::clear_guild_master_change_period_day() {
  guild_master_change_period_day_ = 0;
  clear_has_guild_master_change_period_day();
}
inline ::google::protobuf::int32 ConfigData::guild_master_change_period_day() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ConfigData.guild_master_change_period_day)
  return guild_master_change_period_day_;
}
inline void ConfigData::set_guild_master_change_period_day(::google::protobuf::int32 value) {
  set_has_guild_master_change_period_day();
  guild_master_change_period_day_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ConfigData.guild_master_change_period_day)
}

// optional int32 exchange_item_count_gold = 60;
inline bool ConfigData::has_exchange_item_count_gold() const {
  return (_has_bits_[1] & 0x04000000u) != 0;
}
inline void ConfigData::set_has_exchange_item_count_gold() {
  _has_bits_[1] |= 0x04000000u;
}
inline void ConfigData::clear_has_exchange_item_count_gold() {
  _has_bits_[1] &= ~0x04000000u;
}
inline void ConfigData::clear_exchange_item_count_gold() {
  exchange_item_count_gold_ = 0;
  clear_has_exchange_item_count_gold();
}
inline ::google::protobuf::int32 ConfigData::exchange_item_count_gold() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ConfigData.exchange_item_count_gold)
  return exchange_item_count_gold_;
}
inline void ConfigData::set_exchange_item_count_gold(::google::protobuf::int32 value) {
  set_has_exchange_item_count_gold();
  exchange_item_count_gold_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ConfigData.exchange_item_count_gold)
}

// optional int32 exchange_item_count_gem = 61;
inline bool ConfigData::has_exchange_item_count_gem() const {
  return (_has_bits_[1] & 0x08000000u) != 0;
}
inline void ConfigData::set_has_exchange_item_count_gem() {
  _has_bits_[1] |= 0x08000000u;
}
inline void ConfigData::clear_has_exchange_item_count_gem() {
  _has_bits_[1] &= ~0x08000000u;
}
inline void ConfigData::clear_exchange_item_count_gem() {
  exchange_item_count_gem_ = 0;
  clear_has_exchange_item_count_gem();
}
inline ::google::protobuf::int32 ConfigData::exchange_item_count_gem() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ConfigData.exchange_item_count_gem)
  return exchange_item_count_gem_;
}
inline void ConfigData::set_exchange_item_count_gem(::google::protobuf::int32 value) {
  set_has_exchange_item_count_gem();
  exchange_item_count_gem_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ConfigData.exchange_item_count_gem)
}

// optional int32 lobby_style = 62;
inline bool ConfigData::has_lobby_style() const {
  return (_has_bits_[1] & 0x10000000u) != 0;
}
inline void ConfigData::set_has_lobby_style() {
  _has_bits_[1] |= 0x10000000u;
}
inline void ConfigData::clear_has_lobby_style() {
  _has_bits_[1] &= ~0x10000000u;
}
inline void ConfigData::clear_lobby_style() {
  lobby_style_ = 0;
  clear_has_lobby_style();
}
inline ::google::protobuf::int32 ConfigData::lobby_style() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ConfigData.lobby_style)
  return lobby_style_;
}
inline void ConfigData::set_lobby_style(::google::protobuf::int32 value) {
  set_has_lobby_style();
  lobby_style_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ConfigData.lobby_style)
}

// optional int32 advanced_rank_level = 63;
inline bool ConfigData::has_advanced_rank_level() const {
  return (_has_bits_[1] & 0x20000000u) != 0;
}
inline void ConfigData::set_has_advanced_rank_level() {
  _has_bits_[1] |= 0x20000000u;
}
inline void ConfigData::clear_has_advanced_rank_level() {
  _has_bits_[1] &= ~0x20000000u;
}
inline void ConfigData::clear_advanced_rank_level() {
  advanced_rank_level_ = 0;
  clear_has_advanced_rank_level();
}
inline ::google::protobuf::int32 ConfigData::advanced_rank_level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ConfigData.advanced_rank_level)
  return advanced_rank_level_;
}
inline void ConfigData::set_advanced_rank_level(::google::protobuf::int32 value) {
  set_has_advanced_rank_level();
  advanced_rank_level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ConfigData.advanced_rank_level)
}

// -------------------------------------------------------------------

// Shop_PeriodicPackageState

// required int32 package_id = 1;
inline bool Shop_PeriodicPackageState::has_package_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Shop_PeriodicPackageState::set_has_package_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Shop_PeriodicPackageState::clear_has_package_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Shop_PeriodicPackageState::clear_package_id() {
  package_id_ = 0;
  clear_has_package_id();
}
inline ::google::protobuf::int32 Shop_PeriodicPackageState::package_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Shop.PeriodicPackageState.package_id)
  return package_id_;
}
inline void Shop_PeriodicPackageState::set_package_id(::google::protobuf::int32 value) {
  set_has_package_id();
  package_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Shop.PeriodicPackageState.package_id)
}

// required int64 end_pay_time = 2;
inline bool Shop_PeriodicPackageState::has_end_pay_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Shop_PeriodicPackageState::set_has_end_pay_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Shop_PeriodicPackageState::clear_has_end_pay_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Shop_PeriodicPackageState::clear_end_pay_time() {
  end_pay_time_ = GOOGLE_LONGLONG(0);
  clear_has_end_pay_time();
}
inline ::google::protobuf::int64 Shop_PeriodicPackageState::end_pay_time() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Shop.PeriodicPackageState.end_pay_time)
  return end_pay_time_;
}
inline void Shop_PeriodicPackageState::set_end_pay_time(::google::protobuf::int64 value) {
  set_has_end_pay_time();
  end_pay_time_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Shop.PeriodicPackageState.end_pay_time)
}

// -------------------------------------------------------------------

// Shop_FlatRatePackageBonusState

// required int32 current_index = 1;
inline bool Shop_FlatRatePackageBonusState::has_current_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Shop_FlatRatePackageBonusState::set_has_current_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Shop_FlatRatePackageBonusState::clear_has_current_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Shop_FlatRatePackageBonusState::clear_current_index() {
  current_index_ = 0;
  clear_has_current_index();
}
inline ::google::protobuf::int32 Shop_FlatRatePackageBonusState::current_index() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Shop.FlatRatePackageBonusState.current_index)
  return current_index_;
}
inline void Shop_FlatRatePackageBonusState::set_current_index(::google::protobuf::int32 value) {
  set_has_current_index();
  current_index_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Shop.FlatRatePackageBonusState.current_index)
}

// required bool weekly_state = 2;
inline bool Shop_FlatRatePackageBonusState::has_weekly_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Shop_FlatRatePackageBonusState::set_has_weekly_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Shop_FlatRatePackageBonusState::clear_has_weekly_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Shop_FlatRatePackageBonusState::clear_weekly_state() {
  weekly_state_ = false;
  clear_has_weekly_state();
}
inline bool Shop_FlatRatePackageBonusState::weekly_state() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Shop.FlatRatePackageBonusState.weekly_state)
  return weekly_state_;
}
inline void Shop_FlatRatePackageBonusState::set_weekly_state(bool value) {
  set_has_weekly_state();
  weekly_state_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Shop.FlatRatePackageBonusState.weekly_state)
}

// required bool monthly_state = 3;
inline bool Shop_FlatRatePackageBonusState::has_monthly_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Shop_FlatRatePackageBonusState::set_has_monthly_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Shop_FlatRatePackageBonusState::clear_has_monthly_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Shop_FlatRatePackageBonusState::clear_monthly_state() {
  monthly_state_ = false;
  clear_has_monthly_state();
}
inline bool Shop_FlatRatePackageBonusState::monthly_state() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Shop.FlatRatePackageBonusState.monthly_state)
  return monthly_state_;
}
inline void Shop_FlatRatePackageBonusState::set_monthly_state(bool value) {
  set_has_monthly_state();
  monthly_state_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Shop.FlatRatePackageBonusState.monthly_state)
}

// required bool reward_state = 4;
inline bool Shop_FlatRatePackageBonusState::has_reward_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Shop_FlatRatePackageBonusState::set_has_reward_state() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Shop_FlatRatePackageBonusState::clear_has_reward_state() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Shop_FlatRatePackageBonusState::clear_reward_state() {
  reward_state_ = false;
  clear_has_reward_state();
}
inline bool Shop_FlatRatePackageBonusState::reward_state() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Shop.FlatRatePackageBonusState.reward_state)
  return reward_state_;
}
inline void Shop_FlatRatePackageBonusState::set_reward_state(bool value) {
  set_has_reward_state();
  reward_state_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Shop.FlatRatePackageBonusState.reward_state)
}

// -------------------------------------------------------------------

// Shop_LevelUpPackageMission

// required int32 package_id = 1;
inline bool Shop_LevelUpPackageMission::has_package_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Shop_LevelUpPackageMission::set_has_package_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Shop_LevelUpPackageMission::clear_has_package_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Shop_LevelUpPackageMission::clear_package_id() {
  package_id_ = 0;
  clear_has_package_id();
}
inline ::google::protobuf::int32 Shop_LevelUpPackageMission::package_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Shop.LevelUpPackageMission.package_id)
  return package_id_;
}
inline void Shop_LevelUpPackageMission::set_package_id(::google::protobuf::int32 value) {
  set_has_package_id();
  package_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Shop.LevelUpPackageMission.package_id)
}

// required .b2.protocol.commondata.Character.TYPE character_type = 2;
inline bool Shop_LevelUpPackageMission::has_character_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Shop_LevelUpPackageMission::set_has_character_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Shop_LevelUpPackageMission::clear_has_character_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Shop_LevelUpPackageMission::clear_character_type() {
  character_type_ = 1;
  clear_has_character_type();
}
inline ::b2::protocol::commondata::Character_TYPE Shop_LevelUpPackageMission::character_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Shop.LevelUpPackageMission.character_type)
  return static_cast< ::b2::protocol::commondata::Character_TYPE >(character_type_);
}
inline void Shop_LevelUpPackageMission::set_character_type(::b2::protocol::commondata::Character_TYPE value) {
  assert(::b2::protocol::commondata::Character_TYPE_IsValid(value));
  set_has_character_type();
  character_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Shop.LevelUpPackageMission.character_type)
}

// required int32 level = 3;
inline bool Shop_LevelUpPackageMission::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Shop_LevelUpPackageMission::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Shop_LevelUpPackageMission::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Shop_LevelUpPackageMission::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 Shop_LevelUpPackageMission::level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Shop.LevelUpPackageMission.level)
  return level_;
}
inline void Shop_LevelUpPackageMission::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Shop.LevelUpPackageMission.level)
}

// required int32 state = 4;
inline bool Shop_LevelUpPackageMission::has_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Shop_LevelUpPackageMission::set_has_state() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Shop_LevelUpPackageMission::clear_has_state() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Shop_LevelUpPackageMission::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 Shop_LevelUpPackageMission::state() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Shop.LevelUpPackageMission.state)
  return state_;
}
inline void Shop_LevelUpPackageMission::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Shop.LevelUpPackageMission.state)
}

// -------------------------------------------------------------------

// Shop_ReachLevelPackageMission

// required int32 package_id = 1;
inline bool Shop_ReachLevelPackageMission::has_package_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Shop_ReachLevelPackageMission::set_has_package_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Shop_ReachLevelPackageMission::clear_has_package_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Shop_ReachLevelPackageMission::clear_package_id() {
  package_id_ = 0;
  clear_has_package_id();
}
inline ::google::protobuf::int32 Shop_ReachLevelPackageMission::package_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Shop.ReachLevelPackageMission.package_id)
  return package_id_;
}
inline void Shop_ReachLevelPackageMission::set_package_id(::google::protobuf::int32 value) {
  set_has_package_id();
  package_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Shop.ReachLevelPackageMission.package_id)
}

// required .b2.protocol.commondata.Character.TYPE character_type = 2;
inline bool Shop_ReachLevelPackageMission::has_character_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Shop_ReachLevelPackageMission::set_has_character_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Shop_ReachLevelPackageMission::clear_has_character_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Shop_ReachLevelPackageMission::clear_character_type() {
  character_type_ = 1;
  clear_has_character_type();
}
inline ::b2::protocol::commondata::Character_TYPE Shop_ReachLevelPackageMission::character_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Shop.ReachLevelPackageMission.character_type)
  return static_cast< ::b2::protocol::commondata::Character_TYPE >(character_type_);
}
inline void Shop_ReachLevelPackageMission::set_character_type(::b2::protocol::commondata::Character_TYPE value) {
  assert(::b2::protocol::commondata::Character_TYPE_IsValid(value));
  set_has_character_type();
  character_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Shop.ReachLevelPackageMission.character_type)
}

// required int32 level = 3;
inline bool Shop_ReachLevelPackageMission::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Shop_ReachLevelPackageMission::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Shop_ReachLevelPackageMission::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Shop_ReachLevelPackageMission::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 Shop_ReachLevelPackageMission::level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Shop.ReachLevelPackageMission.level)
  return level_;
}
inline void Shop_ReachLevelPackageMission::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Shop.ReachLevelPackageMission.level)
}

// required int32 state = 4;
inline bool Shop_ReachLevelPackageMission::has_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Shop_ReachLevelPackageMission::set_has_state() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Shop_ReachLevelPackageMission::clear_has_state() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Shop_ReachLevelPackageMission::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 Shop_ReachLevelPackageMission::state() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Shop.ReachLevelPackageMission.state)
  return state_;
}
inline void Shop_ReachLevelPackageMission::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Shop.ReachLevelPackageMission.state)
}

// required int64 expire_time = 5;
inline bool Shop_ReachLevelPackageMission::has_expire_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Shop_ReachLevelPackageMission::set_has_expire_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Shop_ReachLevelPackageMission::clear_has_expire_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Shop_ReachLevelPackageMission::clear_expire_time() {
  expire_time_ = GOOGLE_LONGLONG(0);
  clear_has_expire_time();
}
inline ::google::protobuf::int64 Shop_ReachLevelPackageMission::expire_time() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Shop.ReachLevelPackageMission.expire_time)
  return expire_time_;
}
inline void Shop_ReachLevelPackageMission::set_expire_time(::google::protobuf::int64 value) {
  set_has_expire_time();
  expire_time_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Shop.ReachLevelPackageMission.expire_time)
}

// -------------------------------------------------------------------

// Shop_BuyResultInfo

// repeated .b2.protocol.commondata.ShopProduct add_products = 1;
inline int Shop_BuyResultInfo::add_products_size() const {
  return add_products_.size();
}
inline void Shop_BuyResultInfo::clear_add_products() {
  add_products_.Clear();
}
inline const ::b2::protocol::commondata::ShopProduct& Shop_BuyResultInfo::add_products(int index) const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Shop.BuyResultInfo.add_products)
  return add_products_.Get(index);
}
inline ::b2::protocol::commondata::ShopProduct* Shop_BuyResultInfo::mutable_add_products(int index) {
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.Shop.BuyResultInfo.add_products)
  return add_products_.Mutable(index);
}
inline ::b2::protocol::commondata::ShopProduct* Shop_BuyResultInfo::add_add_products() {
  // @@protoc_insertion_point(field_add:b2.protocol.commondata.Shop.BuyResultInfo.add_products)
  return add_products_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::ShopProduct >&
Shop_BuyResultInfo::add_products() const {
  // @@protoc_insertion_point(field_list:b2.protocol.commondata.Shop.BuyResultInfo.add_products)
  return add_products_;
}
inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::ShopProduct >*
Shop_BuyResultInfo::mutable_add_products() {
  // @@protoc_insertion_point(field_mutable_list:b2.protocol.commondata.Shop.BuyResultInfo.add_products)
  return &add_products_;
}

// repeated .b2.protocol.commondata.ShopBuyManage shop_buy_manages = 2;
inline int Shop_BuyResultInfo::shop_buy_manages_size() const {
  return shop_buy_manages_.size();
}
inline void Shop_BuyResultInfo::clear_shop_buy_manages() {
  shop_buy_manages_.Clear();
}
inline const ::b2::protocol::commondata::ShopBuyManage& Shop_BuyResultInfo::shop_buy_manages(int index) const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Shop.BuyResultInfo.shop_buy_manages)
  return shop_buy_manages_.Get(index);
}
inline ::b2::protocol::commondata::ShopBuyManage* Shop_BuyResultInfo::mutable_shop_buy_manages(int index) {
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.Shop.BuyResultInfo.shop_buy_manages)
  return shop_buy_manages_.Mutable(index);
}
inline ::b2::protocol::commondata::ShopBuyManage* Shop_BuyResultInfo::add_shop_buy_manages() {
  // @@protoc_insertion_point(field_add:b2.protocol.commondata.Shop.BuyResultInfo.shop_buy_manages)
  return shop_buy_manages_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::ShopBuyManage >&
Shop_BuyResultInfo::shop_buy_manages() const {
  // @@protoc_insertion_point(field_list:b2.protocol.commondata.Shop.BuyResultInfo.shop_buy_manages)
  return shop_buy_manages_;
}
inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::ShopBuyManage >*
Shop_BuyResultInfo::mutable_shop_buy_manages() {
  // @@protoc_insertion_point(field_mutable_list:b2.protocol.commondata.Shop.BuyResultInfo.shop_buy_manages)
  return &shop_buy_manages_;
}

// optional .b2.protocol.commondata.Shop.ProductType buy_product_type = 3;
inline bool Shop_BuyResultInfo::has_buy_product_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Shop_BuyResultInfo::set_has_buy_product_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Shop_BuyResultInfo::clear_has_buy_product_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Shop_BuyResultInfo::clear_buy_product_type() {
  buy_product_type_ = 0;
  clear_has_buy_product_type();
}
inline ::b2::protocol::commondata::Shop_ProductType Shop_BuyResultInfo::buy_product_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Shop.BuyResultInfo.buy_product_type)
  return static_cast< ::b2::protocol::commondata::Shop_ProductType >(buy_product_type_);
}
inline void Shop_BuyResultInfo::set_buy_product_type(::b2::protocol::commondata::Shop_ProductType value) {
  assert(::b2::protocol::commondata::Shop_ProductType_IsValid(value));
  set_has_buy_product_type();
  buy_product_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Shop.BuyResultInfo.buy_product_type)
}

// optional .b2.protocol.commondata.Shop.PeriodicPackageState periodic_package_state = 4;
inline bool Shop_BuyResultInfo::has_periodic_package_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Shop_BuyResultInfo::set_has_periodic_package_state() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Shop_BuyResultInfo::clear_has_periodic_package_state() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Shop_BuyResultInfo::clear_periodic_package_state() {
  if (periodic_package_state_ != NULL) periodic_package_state_->::b2::protocol::commondata::Shop_PeriodicPackageState::Clear();
  clear_has_periodic_package_state();
}
inline const ::b2::protocol::commondata::Shop_PeriodicPackageState& Shop_BuyResultInfo::periodic_package_state() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Shop.BuyResultInfo.periodic_package_state)
  return periodic_package_state_ != NULL ? *periodic_package_state_ : *default_instance_->periodic_package_state_;
}
inline ::b2::protocol::commondata::Shop_PeriodicPackageState* Shop_BuyResultInfo::mutable_periodic_package_state() {
  set_has_periodic_package_state();
  if (periodic_package_state_ == NULL) periodic_package_state_ = new ::b2::protocol::commondata::Shop_PeriodicPackageState;
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.Shop.BuyResultInfo.periodic_package_state)
  return periodic_package_state_;
}
inline ::b2::protocol::commondata::Shop_PeriodicPackageState* Shop_BuyResultInfo::release_periodic_package_state() {
  clear_has_periodic_package_state();
  ::b2::protocol::commondata::Shop_PeriodicPackageState* temp = periodic_package_state_;
  periodic_package_state_ = NULL;
  return temp;
}
inline void Shop_BuyResultInfo::set_allocated_periodic_package_state(::b2::protocol::commondata::Shop_PeriodicPackageState* periodic_package_state) {
  delete periodic_package_state_;
  periodic_package_state_ = periodic_package_state;
  if (periodic_package_state) {
    set_has_periodic_package_state();
  } else {
    clear_has_periodic_package_state();
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.commondata.Shop.BuyResultInfo.periodic_package_state)
}

// optional .b2.protocol.commondata.Shop.FlatRatePackageBonusState flat_rate_package_bonus_state = 5;
inline bool Shop_BuyResultInfo::has_flat_rate_package_bonus_state() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Shop_BuyResultInfo::set_has_flat_rate_package_bonus_state() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Shop_BuyResultInfo::clear_has_flat_rate_package_bonus_state() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Shop_BuyResultInfo::clear_flat_rate_package_bonus_state() {
  if (flat_rate_package_bonus_state_ != NULL) flat_rate_package_bonus_state_->::b2::protocol::commondata::Shop_FlatRatePackageBonusState::Clear();
  clear_has_flat_rate_package_bonus_state();
}
inline const ::b2::protocol::commondata::Shop_FlatRatePackageBonusState& Shop_BuyResultInfo::flat_rate_package_bonus_state() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Shop.BuyResultInfo.flat_rate_package_bonus_state)
  return flat_rate_package_bonus_state_ != NULL ? *flat_rate_package_bonus_state_ : *default_instance_->flat_rate_package_bonus_state_;
}
inline ::b2::protocol::commondata::Shop_FlatRatePackageBonusState* Shop_BuyResultInfo::mutable_flat_rate_package_bonus_state() {
  set_has_flat_rate_package_bonus_state();
  if (flat_rate_package_bonus_state_ == NULL) flat_rate_package_bonus_state_ = new ::b2::protocol::commondata::Shop_FlatRatePackageBonusState;
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.Shop.BuyResultInfo.flat_rate_package_bonus_state)
  return flat_rate_package_bonus_state_;
}
inline ::b2::protocol::commondata::Shop_FlatRatePackageBonusState* Shop_BuyResultInfo::release_flat_rate_package_bonus_state() {
  clear_has_flat_rate_package_bonus_state();
  ::b2::protocol::commondata::Shop_FlatRatePackageBonusState* temp = flat_rate_package_bonus_state_;
  flat_rate_package_bonus_state_ = NULL;
  return temp;
}
inline void Shop_BuyResultInfo::set_allocated_flat_rate_package_bonus_state(::b2::protocol::commondata::Shop_FlatRatePackageBonusState* flat_rate_package_bonus_state) {
  delete flat_rate_package_bonus_state_;
  flat_rate_package_bonus_state_ = flat_rate_package_bonus_state;
  if (flat_rate_package_bonus_state) {
    set_has_flat_rate_package_bonus_state();
  } else {
    clear_has_flat_rate_package_bonus_state();
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.commondata.Shop.BuyResultInfo.flat_rate_package_bonus_state)
}

// repeated .b2.protocol.commondata.Shop.LevelUpPackageMission level_up_package_missions = 6;
inline int Shop_BuyResultInfo::level_up_package_missions_size() const {
  return level_up_package_missions_.size();
}
inline void Shop_BuyResultInfo::clear_level_up_package_missions() {
  level_up_package_missions_.Clear();
}
inline const ::b2::protocol::commondata::Shop_LevelUpPackageMission& Shop_BuyResultInfo::level_up_package_missions(int index) const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Shop.BuyResultInfo.level_up_package_missions)
  return level_up_package_missions_.Get(index);
}
inline ::b2::protocol::commondata::Shop_LevelUpPackageMission* Shop_BuyResultInfo::mutable_level_up_package_missions(int index) {
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.Shop.BuyResultInfo.level_up_package_missions)
  return level_up_package_missions_.Mutable(index);
}
inline ::b2::protocol::commondata::Shop_LevelUpPackageMission* Shop_BuyResultInfo::add_level_up_package_missions() {
  // @@protoc_insertion_point(field_add:b2.protocol.commondata.Shop.BuyResultInfo.level_up_package_missions)
  return level_up_package_missions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Shop_LevelUpPackageMission >&
Shop_BuyResultInfo::level_up_package_missions() const {
  // @@protoc_insertion_point(field_list:b2.protocol.commondata.Shop.BuyResultInfo.level_up_package_missions)
  return level_up_package_missions_;
}
inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Shop_LevelUpPackageMission >*
Shop_BuyResultInfo::mutable_level_up_package_missions() {
  // @@protoc_insertion_point(field_mutable_list:b2.protocol.commondata.Shop.BuyResultInfo.level_up_package_missions)
  return &level_up_package_missions_;
}

// optional .b2.protocol.commondata.Shop.ReachLevelPackageMission reach_level_package_mission = 7;
inline bool Shop_BuyResultInfo::has_reach_level_package_mission() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Shop_BuyResultInfo::set_has_reach_level_package_mission() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Shop_BuyResultInfo::clear_has_reach_level_package_mission() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Shop_BuyResultInfo::clear_reach_level_package_mission() {
  if (reach_level_package_mission_ != NULL) reach_level_package_mission_->::b2::protocol::commondata::Shop_ReachLevelPackageMission::Clear();
  clear_has_reach_level_package_mission();
}
inline const ::b2::protocol::commondata::Shop_ReachLevelPackageMission& Shop_BuyResultInfo::reach_level_package_mission() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Shop.BuyResultInfo.reach_level_package_mission)
  return reach_level_package_mission_ != NULL ? *reach_level_package_mission_ : *default_instance_->reach_level_package_mission_;
}
inline ::b2::protocol::commondata::Shop_ReachLevelPackageMission* Shop_BuyResultInfo::mutable_reach_level_package_mission() {
  set_has_reach_level_package_mission();
  if (reach_level_package_mission_ == NULL) reach_level_package_mission_ = new ::b2::protocol::commondata::Shop_ReachLevelPackageMission;
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.Shop.BuyResultInfo.reach_level_package_mission)
  return reach_level_package_mission_;
}
inline ::b2::protocol::commondata::Shop_ReachLevelPackageMission* Shop_BuyResultInfo::release_reach_level_package_mission() {
  clear_has_reach_level_package_mission();
  ::b2::protocol::commondata::Shop_ReachLevelPackageMission* temp = reach_level_package_mission_;
  reach_level_package_mission_ = NULL;
  return temp;
}
inline void Shop_BuyResultInfo::set_allocated_reach_level_package_mission(::b2::protocol::commondata::Shop_ReachLevelPackageMission* reach_level_package_mission) {
  delete reach_level_package_mission_;
  reach_level_package_mission_ = reach_level_package_mission;
  if (reach_level_package_mission) {
    set_has_reach_level_package_mission();
  } else {
    clear_has_reach_level_package_mission();
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.commondata.Shop.BuyResultInfo.reach_level_package_mission)
}

// optional .b2.protocol.commondata.Shop.MileageType mileage_type = 12;
inline bool Shop_BuyResultInfo::has_mileage_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Shop_BuyResultInfo::set_has_mileage_type() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Shop_BuyResultInfo::clear_has_mileage_type() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Shop_BuyResultInfo::clear_mileage_type() {
  mileage_type_ = 1;
  clear_has_mileage_type();
}
inline ::b2::protocol::commondata::Shop_MileageType Shop_BuyResultInfo::mileage_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Shop.BuyResultInfo.mileage_type)
  return static_cast< ::b2::protocol::commondata::Shop_MileageType >(mileage_type_);
}
inline void Shop_BuyResultInfo::set_mileage_type(::b2::protocol::commondata::Shop_MileageType value) {
  assert(::b2::protocol::commondata::Shop_MileageType_IsValid(value));
  set_has_mileage_type();
  mileage_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Shop.BuyResultInfo.mileage_type)
}

// optional int32 current_mileage = 13;
inline bool Shop_BuyResultInfo::has_current_mileage() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Shop_BuyResultInfo::set_has_current_mileage() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Shop_BuyResultInfo::clear_has_current_mileage() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Shop_BuyResultInfo::clear_current_mileage() {
  current_mileage_ = 0;
  clear_has_current_mileage();
}
inline ::google::protobuf::int32 Shop_BuyResultInfo::current_mileage() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Shop.BuyResultInfo.current_mileage)
  return current_mileage_;
}
inline void Shop_BuyResultInfo::set_current_mileage(::google::protobuf::int32 value) {
  set_has_current_mileage();
  current_mileage_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.Shop.BuyResultInfo.current_mileage)
}

// repeated .b2.protocol.commondata.Costume costumes = 20;
inline int Shop_BuyResultInfo::costumes_size() const {
  return costumes_.size();
}
inline void Shop_BuyResultInfo::clear_costumes() {
  costumes_.Clear();
}
inline const ::b2::protocol::commondata::Costume& Shop_BuyResultInfo::costumes(int index) const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Shop.BuyResultInfo.costumes)
  return costumes_.Get(index);
}
inline ::b2::protocol::commondata::Costume* Shop_BuyResultInfo::mutable_costumes(int index) {
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.Shop.BuyResultInfo.costumes)
  return costumes_.Mutable(index);
}
inline ::b2::protocol::commondata::Costume* Shop_BuyResultInfo::add_costumes() {
  // @@protoc_insertion_point(field_add:b2.protocol.commondata.Shop.BuyResultInfo.costumes)
  return costumes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Costume >&
Shop_BuyResultInfo::costumes() const {
  // @@protoc_insertion_point(field_list:b2.protocol.commondata.Shop.BuyResultInfo.costumes)
  return costumes_;
}
inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Costume >*
Shop_BuyResultInfo::mutable_costumes() {
  // @@protoc_insertion_point(field_mutable_list:b2.protocol.commondata.Shop.BuyResultInfo.costumes)
  return &costumes_;
}

// repeated .b2.protocol.commondata.Totem totems = 30;
inline int Shop_BuyResultInfo::totems_size() const {
  return totems_.size();
}
inline void Shop_BuyResultInfo::clear_totems() {
  totems_.Clear();
}
inline const ::b2::protocol::commondata::Totem& Shop_BuyResultInfo::totems(int index) const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.Shop.BuyResultInfo.totems)
  return totems_.Get(index);
}
inline ::b2::protocol::commondata::Totem* Shop_BuyResultInfo::mutable_totems(int index) {
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.Shop.BuyResultInfo.totems)
  return totems_.Mutable(index);
}
inline ::b2::protocol::commondata::Totem* Shop_BuyResultInfo::add_totems() {
  // @@protoc_insertion_point(field_add:b2.protocol.commondata.Shop.BuyResultInfo.totems)
  return totems_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Totem >&
Shop_BuyResultInfo::totems() const {
  // @@protoc_insertion_point(field_list:b2.protocol.commondata.Shop.BuyResultInfo.totems)
  return totems_;
}
inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Totem >*
Shop_BuyResultInfo::mutable_totems() {
  // @@protoc_insertion_point(field_mutable_list:b2.protocol.commondata.Shop.BuyResultInfo.totems)
  return &totems_;
}

// -------------------------------------------------------------------

// Shop

// -------------------------------------------------------------------

// MagicShop

// required int32 id = 1;
inline bool MagicShop::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MagicShop::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MagicShop::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MagicShop::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 MagicShop::id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.MagicShop.id)
  return id_;
}
inline void MagicShop::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.MagicShop.id)
}

// required bool is_purchased = 4;
inline bool MagicShop::has_is_purchased() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MagicShop::set_has_is_purchased() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MagicShop::clear_has_is_purchased() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MagicShop::clear_is_purchased() {
  is_purchased_ = false;
  clear_has_is_purchased();
}
inline bool MagicShop::is_purchased() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.MagicShop.is_purchased)
  return is_purchased_;
}
inline void MagicShop::set_is_purchased(bool value) {
  set_has_is_purchased();
  is_purchased_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.MagicShop.is_purchased)
}

// -------------------------------------------------------------------

// ShopLottery

// required .b2.protocol.commondata.Shop.DrawPriceType draw_price_type = 1;
inline bool ShopLottery::has_draw_price_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShopLottery::set_has_draw_price_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShopLottery::clear_has_draw_price_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShopLottery::clear_draw_price_type() {
  draw_price_type_ = 1;
  clear_has_draw_price_type();
}
inline ::b2::protocol::commondata::Shop_DrawPriceType ShopLottery::draw_price_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ShopLottery.draw_price_type)
  return static_cast< ::b2::protocol::commondata::Shop_DrawPriceType >(draw_price_type_);
}
inline void ShopLottery::set_draw_price_type(::b2::protocol::commondata::Shop_DrawPriceType value) {
  assert(::b2::protocol::commondata::Shop_DrawPriceType_IsValid(value));
  set_has_draw_price_type();
  draw_price_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ShopLottery.draw_price_type)
}

// required bool is_continuous = 2;
inline bool ShopLottery::has_is_continuous() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShopLottery::set_has_is_continuous() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShopLottery::clear_has_is_continuous() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShopLottery::clear_is_continuous() {
  is_continuous_ = false;
  clear_has_is_continuous();
}
inline bool ShopLottery::is_continuous() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ShopLottery.is_continuous)
  return is_continuous_;
}
inline void ShopLottery::set_is_continuous(bool value) {
  set_has_is_continuous();
  is_continuous_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ShopLottery.is_continuous)
}

// required int64 next_free_time = 3;
inline bool ShopLottery::has_next_free_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ShopLottery::set_has_next_free_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ShopLottery::clear_has_next_free_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ShopLottery::clear_next_free_time() {
  next_free_time_ = GOOGLE_LONGLONG(0);
  clear_has_next_free_time();
}
inline ::google::protobuf::int64 ShopLottery::next_free_time() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ShopLottery.next_free_time)
  return next_free_time_;
}
inline void ShopLottery::set_next_free_time(::google::protobuf::int64 value) {
  set_has_next_free_time();
  next_free_time_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ShopLottery.next_free_time)
}

// required int32 lottery_count = 4;
inline bool ShopLottery::has_lottery_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ShopLottery::set_has_lottery_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ShopLottery::clear_has_lottery_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ShopLottery::clear_lottery_count() {
  lottery_count_ = 0;
  clear_has_lottery_count();
}
inline ::google::protobuf::int32 ShopLottery::lottery_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ShopLottery.lottery_count)
  return lottery_count_;
}
inline void ShopLottery::set_lottery_count(::google::protobuf::int32 value) {
  set_has_lottery_count();
  lottery_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ShopLottery.lottery_count)
}

// -------------------------------------------------------------------

// ShopProduct

// required .b2.protocol.commondata.Shop.ProductType product_type = 1;
inline bool ShopProduct::has_product_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShopProduct::set_has_product_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShopProduct::clear_has_product_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShopProduct::clear_product_type() {
  product_type_ = 0;
  clear_has_product_type();
}
inline ::b2::protocol::commondata::Shop_ProductType ShopProduct::product_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ShopProduct.product_type)
  return static_cast< ::b2::protocol::commondata::Shop_ProductType >(product_type_);
}
inline void ShopProduct::set_product_type(::b2::protocol::commondata::Shop_ProductType value) {
  assert(::b2::protocol::commondata::Shop_ProductType_IsValid(value));
  set_has_product_type();
  product_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ShopProduct.product_type)
}

// required int32 product_id = 2;
inline bool ShopProduct::has_product_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShopProduct::set_has_product_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShopProduct::clear_has_product_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShopProduct::clear_product_id() {
  product_id_ = 0;
  clear_has_product_id();
}
inline ::google::protobuf::int32 ShopProduct::product_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ShopProduct.product_id)
  return product_id_;
}
inline void ShopProduct::set_product_id(::google::protobuf::int32 value) {
  set_has_product_id();
  product_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ShopProduct.product_id)
}

// required int32 product_count = 3;
inline bool ShopProduct::has_product_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ShopProduct::set_has_product_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ShopProduct::clear_has_product_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ShopProduct::clear_product_count() {
  product_count_ = 0;
  clear_has_product_count();
}
inline ::google::protobuf::int32 ShopProduct::product_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ShopProduct.product_count)
  return product_count_;
}
inline void ShopProduct::set_product_count(::google::protobuf::int32 value) {
  set_has_product_count();
  product_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ShopProduct.product_count)
}

// -------------------------------------------------------------------

// ShopMileage

// required .b2.protocol.commondata.Shop.MileageType shop_mileage_type = 1;
inline bool ShopMileage::has_shop_mileage_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShopMileage::set_has_shop_mileage_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShopMileage::clear_has_shop_mileage_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShopMileage::clear_shop_mileage_type() {
  shop_mileage_type_ = 1;
  clear_has_shop_mileage_type();
}
inline ::b2::protocol::commondata::Shop_MileageType ShopMileage::shop_mileage_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ShopMileage.shop_mileage_type)
  return static_cast< ::b2::protocol::commondata::Shop_MileageType >(shop_mileage_type_);
}
inline void ShopMileage::set_shop_mileage_type(::b2::protocol::commondata::Shop_MileageType value) {
  assert(::b2::protocol::commondata::Shop_MileageType_IsValid(value));
  set_has_shop_mileage_type();
  shop_mileage_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ShopMileage.shop_mileage_type)
}

// required int32 mileage = 2;
inline bool ShopMileage::has_mileage() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShopMileage::set_has_mileage() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShopMileage::clear_has_mileage() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShopMileage::clear_mileage() {
  mileage_ = 0;
  clear_has_mileage();
}
inline ::google::protobuf::int32 ShopMileage::mileage() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ShopMileage.mileage)
  return mileage_;
}
inline void ShopMileage::set_mileage(::google::protobuf::int32 value) {
  set_has_mileage();
  mileage_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ShopMileage.mileage)
}

// required int32 reward_index = 3;
inline bool ShopMileage::has_reward_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ShopMileage::set_has_reward_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ShopMileage::clear_has_reward_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ShopMileage::clear_reward_index() {
  reward_index_ = 0;
  clear_has_reward_index();
}
inline ::google::protobuf::int32 ShopMileage::reward_index() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ShopMileage.reward_index)
  return reward_index_;
}
inline void ShopMileage::set_reward_index(::google::protobuf::int32 value) {
  set_has_reward_index();
  reward_index_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ShopMileage.reward_index)
}

// -------------------------------------------------------------------

// ShopBuyManage

// required int32 product_id = 1;
inline bool ShopBuyManage::has_product_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShopBuyManage::set_has_product_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShopBuyManage::clear_has_product_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShopBuyManage::clear_product_id() {
  product_id_ = 0;
  clear_has_product_id();
}
inline ::google::protobuf::int32 ShopBuyManage::product_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ShopBuyManage.product_id)
  return product_id_;
}
inline void ShopBuyManage::set_product_id(::google::protobuf::int32 value) {
  set_has_product_id();
  product_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ShopBuyManage.product_id)
}

// required int32 buy_count = 2;
inline bool ShopBuyManage::has_buy_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShopBuyManage::set_has_buy_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShopBuyManage::clear_has_buy_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShopBuyManage::clear_buy_count() {
  buy_count_ = 0;
  clear_has_buy_count();
}
inline ::google::protobuf::int32 ShopBuyManage::buy_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ShopBuyManage.buy_count)
  return buy_count_;
}
inline void ShopBuyManage::set_buy_count(::google::protobuf::int32 value) {
  set_has_buy_count();
  buy_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ShopBuyManage.buy_count)
}

// required int64 updated_time = 3;
inline bool ShopBuyManage::has_updated_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ShopBuyManage::set_has_updated_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ShopBuyManage::clear_has_updated_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ShopBuyManage::clear_updated_time() {
  updated_time_ = GOOGLE_LONGLONG(0);
  clear_has_updated_time();
}
inline ::google::protobuf::int64 ShopBuyManage::updated_time() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ShopBuyManage.updated_time)
  return updated_time_;
}
inline void ShopBuyManage::set_updated_time(::google::protobuf::int64 value) {
  set_has_updated_time();
  updated_time_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ShopBuyManage.updated_time)
}

// -------------------------------------------------------------------

// ShopProductMark

// required int32 product_id = 1;
inline bool ShopProductMark::has_product_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShopProductMark::set_has_product_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShopProductMark::clear_has_product_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShopProductMark::clear_product_id() {
  product_id_ = 0;
  clear_has_product_id();
}
inline ::google::protobuf::int32 ShopProductMark::product_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ShopProductMark.product_id)
  return product_id_;
}
inline void ShopProductMark::set_product_id(::google::protobuf::int32 value) {
  set_has_product_id();
  product_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ShopProductMark.product_id)
}

// required .b2.protocol.commondata.Shop.MarkType mark_type = 2;
inline bool ShopProductMark::has_mark_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShopProductMark::set_has_mark_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShopProductMark::clear_has_mark_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShopProductMark::clear_mark_type() {
  mark_type_ = 0;
  clear_has_mark_type();
}
inline ::b2::protocol::commondata::Shop_MarkType ShopProductMark::mark_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ShopProductMark.mark_type)
  return static_cast< ::b2::protocol::commondata::Shop_MarkType >(mark_type_);
}
inline void ShopProductMark::set_mark_type(::b2::protocol::commondata::Shop_MarkType value) {
  assert(::b2::protocol::commondata::Shop_MarkType_IsValid(value));
  set_has_mark_type();
  mark_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ShopProductMark.mark_type)
}

// optional int64 sales_start_time = 10;
inline bool ShopProductMark::has_sales_start_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ShopProductMark::set_has_sales_start_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ShopProductMark::clear_has_sales_start_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ShopProductMark::clear_sales_start_time() {
  sales_start_time_ = GOOGLE_LONGLONG(0);
  clear_has_sales_start_time();
}
inline ::google::protobuf::int64 ShopProductMark::sales_start_time() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ShopProductMark.sales_start_time)
  return sales_start_time_;
}
inline void ShopProductMark::set_sales_start_time(::google::protobuf::int64 value) {
  set_has_sales_start_time();
  sales_start_time_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ShopProductMark.sales_start_time)
}

// optional int64 sales_end_time = 11;
inline bool ShopProductMark::has_sales_end_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ShopProductMark::set_has_sales_end_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ShopProductMark::clear_has_sales_end_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ShopProductMark::clear_sales_end_time() {
  sales_end_time_ = GOOGLE_LONGLONG(0);
  clear_has_sales_end_time();
}
inline ::google::protobuf::int64 ShopProductMark::sales_end_time() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ShopProductMark.sales_end_time)
  return sales_end_time_;
}
inline void ShopProductMark::set_sales_end_time(::google::protobuf::int64 value) {
  set_has_sales_end_time();
  sales_end_time_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ShopProductMark.sales_end_time)
}

// -------------------------------------------------------------------

// MarketPurchaseInfo

// required int32 product_id = 1;
inline bool MarketPurchaseInfo::has_product_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MarketPurchaseInfo::set_has_product_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MarketPurchaseInfo::clear_has_product_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MarketPurchaseInfo::clear_product_id() {
  product_id_ = 0;
  clear_has_product_id();
}
inline ::google::protobuf::int32 MarketPurchaseInfo::product_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.MarketPurchaseInfo.product_id)
  return product_id_;
}
inline void MarketPurchaseInfo::set_product_id(::google::protobuf::int32 value) {
  set_has_product_id();
  product_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.MarketPurchaseInfo.product_id)
}

// required string market_product_id = 2;
inline bool MarketPurchaseInfo::has_market_product_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MarketPurchaseInfo::set_has_market_product_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MarketPurchaseInfo::clear_has_market_product_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MarketPurchaseInfo::clear_market_product_id() {
  if (market_product_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    market_product_id_->clear();
  }
  clear_has_market_product_id();
}
inline const ::std::string& MarketPurchaseInfo::market_product_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.MarketPurchaseInfo.market_product_id)
  return *market_product_id_;
}
inline void MarketPurchaseInfo::set_market_product_id(const ::std::string& value) {
  set_has_market_product_id();
  if (market_product_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    market_product_id_ = new ::std::string;
  }
  market_product_id_->assign(value);
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.MarketPurchaseInfo.market_product_id)
}
inline void MarketPurchaseInfo::set_market_product_id(const char* value) {
  set_has_market_product_id();
  if (market_product_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    market_product_id_ = new ::std::string;
  }
  market_product_id_->assign(value);
  // @@protoc_insertion_point(field_set_char:b2.protocol.commondata.MarketPurchaseInfo.market_product_id)
}
inline void MarketPurchaseInfo::set_market_product_id(const char* value, size_t size) {
  set_has_market_product_id();
  if (market_product_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    market_product_id_ = new ::std::string;
  }
  market_product_id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:b2.protocol.commondata.MarketPurchaseInfo.market_product_id)
}
inline ::std::string* MarketPurchaseInfo::mutable_market_product_id() {
  set_has_market_product_id();
  if (market_product_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    market_product_id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.MarketPurchaseInfo.market_product_id)
  return market_product_id_;
}
inline ::std::string* MarketPurchaseInfo::release_market_product_id() {
  clear_has_market_product_id();
  if (market_product_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = market_product_id_;
    market_product_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MarketPurchaseInfo::set_allocated_market_product_id(::std::string* market_product_id) {
  if (market_product_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete market_product_id_;
  }
  if (market_product_id) {
    set_has_market_product_id();
    market_product_id_ = market_product_id;
  } else {
    clear_has_market_product_id();
    market_product_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.commondata.MarketPurchaseInfo.market_product_id)
}

// required string developer_payload = 3;
inline bool MarketPurchaseInfo::has_developer_payload() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MarketPurchaseInfo::set_has_developer_payload() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MarketPurchaseInfo::clear_has_developer_payload() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MarketPurchaseInfo::clear_developer_payload() {
  if (developer_payload_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    developer_payload_->clear();
  }
  clear_has_developer_payload();
}
inline const ::std::string& MarketPurchaseInfo::developer_payload() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.MarketPurchaseInfo.developer_payload)
  return *developer_payload_;
}
inline void MarketPurchaseInfo::set_developer_payload(const ::std::string& value) {
  set_has_developer_payload();
  if (developer_payload_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    developer_payload_ = new ::std::string;
  }
  developer_payload_->assign(value);
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.MarketPurchaseInfo.developer_payload)
}
inline void MarketPurchaseInfo::set_developer_payload(const char* value) {
  set_has_developer_payload();
  if (developer_payload_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    developer_payload_ = new ::std::string;
  }
  developer_payload_->assign(value);
  // @@protoc_insertion_point(field_set_char:b2.protocol.commondata.MarketPurchaseInfo.developer_payload)
}
inline void MarketPurchaseInfo::set_developer_payload(const char* value, size_t size) {
  set_has_developer_payload();
  if (developer_payload_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    developer_payload_ = new ::std::string;
  }
  developer_payload_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:b2.protocol.commondata.MarketPurchaseInfo.developer_payload)
}
inline ::std::string* MarketPurchaseInfo::mutable_developer_payload() {
  set_has_developer_payload();
  if (developer_payload_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    developer_payload_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.MarketPurchaseInfo.developer_payload)
  return developer_payload_;
}
inline ::std::string* MarketPurchaseInfo::release_developer_payload() {
  clear_has_developer_payload();
  if (developer_payload_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = developer_payload_;
    developer_payload_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MarketPurchaseInfo::set_allocated_developer_payload(::std::string* developer_payload) {
  if (developer_payload_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete developer_payload_;
  }
  if (developer_payload) {
    set_has_developer_payload();
    developer_payload_ = developer_payload;
  } else {
    clear_has_developer_payload();
    developer_payload_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.commondata.MarketPurchaseInfo.developer_payload)
}

// required .b2.protocol.commondata.MarketPurchaseInfo.STATE purchase_state = 4;
inline bool MarketPurchaseInfo::has_purchase_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MarketPurchaseInfo::set_has_purchase_state() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MarketPurchaseInfo::clear_has_purchase_state() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MarketPurchaseInfo::clear_purchase_state() {
  purchase_state_ = 1;
  clear_has_purchase_state();
}
inline ::b2::protocol::commondata::MarketPurchaseInfo_STATE MarketPurchaseInfo::purchase_state() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.MarketPurchaseInfo.purchase_state)
  return static_cast< ::b2::protocol::commondata::MarketPurchaseInfo_STATE >(purchase_state_);
}
inline void MarketPurchaseInfo::set_purchase_state(::b2::protocol::commondata::MarketPurchaseInfo_STATE value) {
  assert(::b2::protocol::commondata::MarketPurchaseInfo_STATE_IsValid(value));
  set_has_purchase_state();
  purchase_state_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.MarketPurchaseInfo.purchase_state)
}

// required int32 bonus_increase_rate = 5;
inline bool MarketPurchaseInfo::has_bonus_increase_rate() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MarketPurchaseInfo::set_has_bonus_increase_rate() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MarketPurchaseInfo::clear_has_bonus_increase_rate() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MarketPurchaseInfo::clear_bonus_increase_rate() {
  bonus_increase_rate_ = 0;
  clear_has_bonus_increase_rate();
}
inline ::google::protobuf::int32 MarketPurchaseInfo::bonus_increase_rate() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.MarketPurchaseInfo.bonus_increase_rate)
  return bonus_increase_rate_;
}
inline void MarketPurchaseInfo::set_bonus_increase_rate(::google::protobuf::int32 value) {
  set_has_bonus_increase_rate();
  bonus_increase_rate_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.MarketPurchaseInfo.bonus_increase_rate)
}

// -------------------------------------------------------------------

// CollectionItem

// required int32 item_template_id = 1;
inline bool CollectionItem::has_item_template_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CollectionItem::set_has_item_template_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CollectionItem::clear_has_item_template_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CollectionItem::clear_item_template_id() {
  item_template_id_ = 0;
  clear_has_item_template_id();
}
inline ::google::protobuf::int32 CollectionItem::item_template_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.CollectionItem.item_template_id)
  return item_template_id_;
}
inline void CollectionItem::set_item_template_id(::google::protobuf::int32 value) {
  set_has_item_template_id();
  item_template_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.CollectionItem.item_template_id)
}

// required .b2.protocol.commondata.CollectionItemState collect_state = 2;
inline bool CollectionItem::has_collect_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CollectionItem::set_has_collect_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CollectionItem::clear_has_collect_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CollectionItem::clear_collect_state() {
  collect_state_ = 1;
  clear_has_collect_state();
}
inline ::b2::protocol::commondata::CollectionItemState CollectionItem::collect_state() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.CollectionItem.collect_state)
  return static_cast< ::b2::protocol::commondata::CollectionItemState >(collect_state_);
}
inline void CollectionItem::set_collect_state(::b2::protocol::commondata::CollectionItemState value) {
  assert(::b2::protocol::commondata::CollectionItemState_IsValid(value));
  set_has_collect_state();
  collect_state_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.CollectionItem.collect_state)
}

// required bool is_new_item = 3;
inline bool CollectionItem::has_is_new_item() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CollectionItem::set_has_is_new_item() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CollectionItem::clear_has_is_new_item() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CollectionItem::clear_is_new_item() {
  is_new_item_ = false;
  clear_has_is_new_item();
}
inline bool CollectionItem::is_new_item() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.CollectionItem.is_new_item)
  return is_new_item_;
}
inline void CollectionItem::set_is_new_item(bool value) {
  set_has_is_new_item();
  is_new_item_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.CollectionItem.is_new_item)
}

// -------------------------------------------------------------------

// CollectionSetItem

// required .b2.protocol.commondata.GroupPrefix group_id = 1;
inline bool CollectionSetItem::has_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CollectionSetItem::set_has_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CollectionSetItem::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CollectionSetItem::clear_group_id() {
  group_id_ = 1;
  clear_has_group_id();
}
inline ::b2::protocol::commondata::GroupPrefix CollectionSetItem::group_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.CollectionSetItem.group_id)
  return static_cast< ::b2::protocol::commondata::GroupPrefix >(group_id_);
}
inline void CollectionSetItem::set_group_id(::b2::protocol::commondata::GroupPrefix value) {
  assert(::b2::protocol::commondata::GroupPrefix_IsValid(value));
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.CollectionSetItem.group_id)
}

// required int32 grade = 2;
inline bool CollectionSetItem::has_grade() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CollectionSetItem::set_has_grade() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CollectionSetItem::clear_has_grade() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CollectionSetItem::clear_grade() {
  grade_ = 0;
  clear_has_grade();
}
inline ::google::protobuf::int32 CollectionSetItem::grade() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.CollectionSetItem.grade)
  return grade_;
}
inline void CollectionSetItem::set_grade(::google::protobuf::int32 value) {
  set_has_grade();
  grade_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.CollectionSetItem.grade)
}

// required .b2.protocol.commondata.Character.TYPE character_type = 3;
inline bool CollectionSetItem::has_character_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CollectionSetItem::set_has_character_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CollectionSetItem::clear_has_character_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CollectionSetItem::clear_character_type() {
  character_type_ = 1;
  clear_has_character_type();
}
inline ::b2::protocol::commondata::Character_TYPE CollectionSetItem::character_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.CollectionSetItem.character_type)
  return static_cast< ::b2::protocol::commondata::Character_TYPE >(character_type_);
}
inline void CollectionSetItem::set_character_type(::b2::protocol::commondata::Character_TYPE value) {
  assert(::b2::protocol::commondata::Character_TYPE_IsValid(value));
  set_has_character_type();
  character_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.CollectionSetItem.character_type)
}

// -------------------------------------------------------------------

// RaidRankingReward

// required int32 ranking = 1;
inline bool RaidRankingReward::has_ranking() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RaidRankingReward::set_has_ranking() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RaidRankingReward::clear_has_ranking() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RaidRankingReward::clear_ranking() {
  ranking_ = 0;
  clear_has_ranking();
}
inline ::google::protobuf::int32 RaidRankingReward::ranking() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.RaidRankingReward.ranking)
  return ranking_;
}
inline void RaidRankingReward::set_ranking(::google::protobuf::int32 value) {
  set_has_ranking();
  ranking_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.RaidRankingReward.ranking)
}

// required int32 item_template_id = 2;
inline bool RaidRankingReward::has_item_template_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RaidRankingReward::set_has_item_template_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RaidRankingReward::clear_has_item_template_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RaidRankingReward::clear_item_template_id() {
  item_template_id_ = 0;
  clear_has_item_template_id();
}
inline ::google::protobuf::int32 RaidRankingReward::item_template_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.RaidRankingReward.item_template_id)
  return item_template_id_;
}
inline void RaidRankingReward::set_item_template_id(::google::protobuf::int32 value) {
  set_has_item_template_id();
  item_template_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.RaidRankingReward.item_template_id)
}

// required int32 item_count = 3;
inline bool RaidRankingReward::has_item_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RaidRankingReward::set_has_item_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RaidRankingReward::clear_has_item_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RaidRankingReward::clear_item_count() {
  item_count_ = 0;
  clear_has_item_count();
}
inline ::google::protobuf::int32 RaidRankingReward::item_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.RaidRankingReward.item_count)
  return item_count_;
}
inline void RaidRankingReward::set_item_count(::google::protobuf::int32 value) {
  set_has_item_count();
  item_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.RaidRankingReward.item_count)
}

// required bool is_bonus = 4;
inline bool RaidRankingReward::has_is_bonus() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RaidRankingReward::set_has_is_bonus() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RaidRankingReward::clear_has_is_bonus() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RaidRankingReward::clear_is_bonus() {
  is_bonus_ = false;
  clear_has_is_bonus();
}
inline bool RaidRankingReward::is_bonus() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.RaidRankingReward.is_bonus)
  return is_bonus_;
}
inline void RaidRankingReward::set_is_bonus(bool value) {
  set_has_is_bonus();
  is_bonus_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.RaidRankingReward.is_bonus)
}

// -------------------------------------------------------------------

// EventAttendanceStatus

// required int32 event_id = 1;
inline bool EventAttendanceStatus::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EventAttendanceStatus::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EventAttendanceStatus::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EventAttendanceStatus::clear_event_id() {
  event_id_ = 0;
  clear_has_event_id();
}
inline ::google::protobuf::int32 EventAttendanceStatus::event_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.EventAttendanceStatus.event_id)
  return event_id_;
}
inline void EventAttendanceStatus::set_event_id(::google::protobuf::int32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.EventAttendanceStatus.event_id)
}

// required int32 attendance_day = 2;
inline bool EventAttendanceStatus::has_attendance_day() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EventAttendanceStatus::set_has_attendance_day() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EventAttendanceStatus::clear_has_attendance_day() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EventAttendanceStatus::clear_attendance_day() {
  attendance_day_ = 0;
  clear_has_attendance_day();
}
inline ::google::protobuf::int32 EventAttendanceStatus::attendance_day() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.EventAttendanceStatus.attendance_day)
  return attendance_day_;
}
inline void EventAttendanceStatus::set_attendance_day(::google::protobuf::int32 value) {
  set_has_attendance_day();
  attendance_day_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.EventAttendanceStatus.attendance_day)
}

// required int64 last_attendance_time = 3;
inline bool EventAttendanceStatus::has_last_attendance_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EventAttendanceStatus::set_has_last_attendance_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EventAttendanceStatus::clear_has_last_attendance_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EventAttendanceStatus::clear_last_attendance_time() {
  last_attendance_time_ = GOOGLE_LONGLONG(0);
  clear_has_last_attendance_time();
}
inline ::google::protobuf::int64 EventAttendanceStatus::last_attendance_time() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.EventAttendanceStatus.last_attendance_time)
  return last_attendance_time_;
}
inline void EventAttendanceStatus::set_last_attendance_time(::google::protobuf::int64 value) {
  set_has_last_attendance_time();
  last_attendance_time_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.EventAttendanceStatus.last_attendance_time)
}

// required int64 next_attendance_time = 4;
inline bool EventAttendanceStatus::has_next_attendance_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EventAttendanceStatus::set_has_next_attendance_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EventAttendanceStatus::clear_has_next_attendance_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EventAttendanceStatus::clear_next_attendance_time() {
  next_attendance_time_ = GOOGLE_LONGLONG(0);
  clear_has_next_attendance_time();
}
inline ::google::protobuf::int64 EventAttendanceStatus::next_attendance_time() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.EventAttendanceStatus.next_attendance_time)
  return next_attendance_time_;
}
inline void EventAttendanceStatus::set_next_attendance_time(::google::protobuf::int64 value) {
  set_has_next_attendance_time();
  next_attendance_time_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.EventAttendanceStatus.next_attendance_time)
}

// -------------------------------------------------------------------

// BeginnerAttendanceStatus

// required int32 attendance_day = 1;
inline bool BeginnerAttendanceStatus::has_attendance_day() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BeginnerAttendanceStatus::set_has_attendance_day() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BeginnerAttendanceStatus::clear_has_attendance_day() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BeginnerAttendanceStatus::clear_attendance_day() {
  attendance_day_ = 0;
  clear_has_attendance_day();
}
inline ::google::protobuf::int32 BeginnerAttendanceStatus::attendance_day() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.BeginnerAttendanceStatus.attendance_day)
  return attendance_day_;
}
inline void BeginnerAttendanceStatus::set_attendance_day(::google::protobuf::int32 value) {
  set_has_attendance_day();
  attendance_day_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.BeginnerAttendanceStatus.attendance_day)
}

// required int64 last_attendance_time = 2;
inline bool BeginnerAttendanceStatus::has_last_attendance_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BeginnerAttendanceStatus::set_has_last_attendance_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BeginnerAttendanceStatus::clear_has_last_attendance_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BeginnerAttendanceStatus::clear_last_attendance_time() {
  last_attendance_time_ = GOOGLE_LONGLONG(0);
  clear_has_last_attendance_time();
}
inline ::google::protobuf::int64 BeginnerAttendanceStatus::last_attendance_time() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.BeginnerAttendanceStatus.last_attendance_time)
  return last_attendance_time_;
}
inline void BeginnerAttendanceStatus::set_last_attendance_time(::google::protobuf::int64 value) {
  set_has_last_attendance_time();
  last_attendance_time_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.BeginnerAttendanceStatus.last_attendance_time)
}

// required int64 next_attendance_time = 3;
inline bool BeginnerAttendanceStatus::has_next_attendance_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BeginnerAttendanceStatus::set_has_next_attendance_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BeginnerAttendanceStatus::clear_has_next_attendance_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BeginnerAttendanceStatus::clear_next_attendance_time() {
  next_attendance_time_ = GOOGLE_LONGLONG(0);
  clear_has_next_attendance_time();
}
inline ::google::protobuf::int64 BeginnerAttendanceStatus::next_attendance_time() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.BeginnerAttendanceStatus.next_attendance_time)
  return next_attendance_time_;
}
inline void BeginnerAttendanceStatus::set_next_attendance_time(::google::protobuf::int64 value) {
  set_has_next_attendance_time();
  next_attendance_time_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.BeginnerAttendanceStatus.next_attendance_time)
}

// required int32 total_attendance_days = 5;
inline bool BeginnerAttendanceStatus::has_total_attendance_days() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BeginnerAttendanceStatus::set_has_total_attendance_days() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BeginnerAttendanceStatus::clear_has_total_attendance_days() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BeginnerAttendanceStatus::clear_total_attendance_days() {
  total_attendance_days_ = 0;
  clear_has_total_attendance_days();
}
inline ::google::protobuf::int32 BeginnerAttendanceStatus::total_attendance_days() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.BeginnerAttendanceStatus.total_attendance_days)
  return total_attendance_days_;
}
inline void BeginnerAttendanceStatus::set_total_attendance_days(::google::protobuf::int32 value) {
  set_has_total_attendance_days();
  total_attendance_days_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.BeginnerAttendanceStatus.total_attendance_days)
}

// required int64 finish_time = 6;
inline bool BeginnerAttendanceStatus::has_finish_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BeginnerAttendanceStatus::set_has_finish_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BeginnerAttendanceStatus::clear_has_finish_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BeginnerAttendanceStatus::clear_finish_time() {
  finish_time_ = GOOGLE_LONGLONG(0);
  clear_has_finish_time();
}
inline ::google::protobuf::int64 BeginnerAttendanceStatus::finish_time() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.BeginnerAttendanceStatus.finish_time)
  return finish_time_;
}
inline void BeginnerAttendanceStatus::set_finish_time(::google::protobuf::int64 value) {
  set_has_finish_time();
  finish_time_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.BeginnerAttendanceStatus.finish_time)
}

// -------------------------------------------------------------------

// DuelRewardBoxStatus

// required bool is_reward_state = 1;
inline bool DuelRewardBoxStatus::has_is_reward_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DuelRewardBoxStatus::set_has_is_reward_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DuelRewardBoxStatus::clear_has_is_reward_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DuelRewardBoxStatus::clear_is_reward_state() {
  is_reward_state_ = false;
  clear_has_is_reward_state();
}
inline bool DuelRewardBoxStatus::is_reward_state() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.DuelRewardBoxStatus.is_reward_state)
  return is_reward_state_;
}
inline void DuelRewardBoxStatus::set_is_reward_state(bool value) {
  set_has_is_reward_state();
  is_reward_state_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.DuelRewardBoxStatus.is_reward_state)
}

// required .b2.protocol.commondata.RewardBoxGrade box_grade = 2;
inline bool DuelRewardBoxStatus::has_box_grade() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DuelRewardBoxStatus::set_has_box_grade() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DuelRewardBoxStatus::clear_has_box_grade() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DuelRewardBoxStatus::clear_box_grade() {
  box_grade_ = 0;
  clear_has_box_grade();
}
inline ::b2::protocol::commondata::RewardBoxGrade DuelRewardBoxStatus::box_grade() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.DuelRewardBoxStatus.box_grade)
  return static_cast< ::b2::protocol::commondata::RewardBoxGrade >(box_grade_);
}
inline void DuelRewardBoxStatus::set_box_grade(::b2::protocol::commondata::RewardBoxGrade value) {
  assert(::b2::protocol::commondata::RewardBoxGrade_IsValid(value));
  set_has_box_grade();
  box_grade_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.DuelRewardBoxStatus.box_grade)
}

// required int32 win_count = 3;
inline bool DuelRewardBoxStatus::has_win_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DuelRewardBoxStatus::set_has_win_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DuelRewardBoxStatus::clear_has_win_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DuelRewardBoxStatus::clear_win_count() {
  win_count_ = 0;
  clear_has_win_count();
}
inline ::google::protobuf::int32 DuelRewardBoxStatus::win_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.DuelRewardBoxStatus.win_count)
  return win_count_;
}
inline void DuelRewardBoxStatus::set_win_count(::google::protobuf::int32 value) {
  set_has_win_count();
  win_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.DuelRewardBoxStatus.win_count)
}

// required int32 upgrade_win_count = 4;
inline bool DuelRewardBoxStatus::has_upgrade_win_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DuelRewardBoxStatus::set_has_upgrade_win_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DuelRewardBoxStatus::clear_has_upgrade_win_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DuelRewardBoxStatus::clear_upgrade_win_count() {
  upgrade_win_count_ = 0;
  clear_has_upgrade_win_count();
}
inline ::google::protobuf::int32 DuelRewardBoxStatus::upgrade_win_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.DuelRewardBoxStatus.upgrade_win_count)
  return upgrade_win_count_;
}
inline void DuelRewardBoxStatus::set_upgrade_win_count(::google::protobuf::int32 value) {
  set_has_upgrade_win_count();
  upgrade_win_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.DuelRewardBoxStatus.upgrade_win_count)
}

// required int32 defeat_count = 5;
inline bool DuelRewardBoxStatus::has_defeat_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DuelRewardBoxStatus::set_has_defeat_count() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DuelRewardBoxStatus::clear_has_defeat_count() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DuelRewardBoxStatus::clear_defeat_count() {
  defeat_count_ = 0;
  clear_has_defeat_count();
}
inline ::google::protobuf::int32 DuelRewardBoxStatus::defeat_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.DuelRewardBoxStatus.defeat_count)
  return defeat_count_;
}
inline void DuelRewardBoxStatus::set_defeat_count(::google::protobuf::int32 value) {
  set_has_defeat_count();
  defeat_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.DuelRewardBoxStatus.defeat_count)
}

// -------------------------------------------------------------------

// MatchResult

// required int64 account_id = 1;
inline bool MatchResult::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MatchResult::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MatchResult::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MatchResult::clear_account_id() {
  account_id_ = GOOGLE_LONGLONG(0);
  clear_has_account_id();
}
inline ::google::protobuf::int64 MatchResult::account_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.MatchResult.account_id)
  return account_id_;
}
inline void MatchResult::set_account_id(::google::protobuf::int64 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.MatchResult.account_id)
}

// required string match_token = 2;
inline bool MatchResult::has_match_token() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MatchResult::set_has_match_token() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MatchResult::clear_has_match_token() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MatchResult::clear_match_token() {
  if (match_token_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    match_token_->clear();
  }
  clear_has_match_token();
}
inline const ::std::string& MatchResult::match_token() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.MatchResult.match_token)
  return *match_token_;
}
inline void MatchResult::set_match_token(const ::std::string& value) {
  set_has_match_token();
  if (match_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    match_token_ = new ::std::string;
  }
  match_token_->assign(value);
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.MatchResult.match_token)
}
inline void MatchResult::set_match_token(const char* value) {
  set_has_match_token();
  if (match_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    match_token_ = new ::std::string;
  }
  match_token_->assign(value);
  // @@protoc_insertion_point(field_set_char:b2.protocol.commondata.MatchResult.match_token)
}
inline void MatchResult::set_match_token(const char* value, size_t size) {
  set_has_match_token();
  if (match_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    match_token_ = new ::std::string;
  }
  match_token_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:b2.protocol.commondata.MatchResult.match_token)
}
inline ::std::string* MatchResult::mutable_match_token() {
  set_has_match_token();
  if (match_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    match_token_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.MatchResult.match_token)
  return match_token_;
}
inline ::std::string* MatchResult::release_match_token() {
  clear_has_match_token();
  if (match_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = match_token_;
    match_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MatchResult::set_allocated_match_token(::std::string* match_token) {
  if (match_token_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete match_token_;
  }
  if (match_token) {
    set_has_match_token();
    match_token_ = match_token;
  } else {
    clear_has_match_token();
    match_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.commondata.MatchResult.match_token)
}

// required .b2.protocol.commondata.MatchResult.TYPE result = 3;
inline bool MatchResult::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MatchResult::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MatchResult::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MatchResult::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::b2::protocol::commondata::MatchResult_TYPE MatchResult::result() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.MatchResult.result)
  return static_cast< ::b2::protocol::commondata::MatchResult_TYPE >(result_);
}
inline void MatchResult::set_result(::b2::protocol::commondata::MatchResult_TYPE value) {
  assert(::b2::protocol::commondata::MatchResult_TYPE_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.MatchResult.result)
}

// -------------------------------------------------------------------

// UnitySkillMission

// required .b2.protocol.commondata.Character.TYPE main_character_type = 1;
inline bool UnitySkillMission::has_main_character_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UnitySkillMission::set_has_main_character_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UnitySkillMission::clear_has_main_character_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UnitySkillMission::clear_main_character_type() {
  main_character_type_ = 1;
  clear_has_main_character_type();
}
inline ::b2::protocol::commondata::Character_TYPE UnitySkillMission::main_character_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.UnitySkillMission.main_character_type)
  return static_cast< ::b2::protocol::commondata::Character_TYPE >(main_character_type_);
}
inline void UnitySkillMission::set_main_character_type(::b2::protocol::commondata::Character_TYPE value) {
  assert(::b2::protocol::commondata::Character_TYPE_IsValid(value));
  set_has_main_character_type();
  main_character_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.UnitySkillMission.main_character_type)
}

// required .b2.protocol.commondata.Character.TYPE unity_character_type = 2;
inline bool UnitySkillMission::has_unity_character_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UnitySkillMission::set_has_unity_character_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UnitySkillMission::clear_has_unity_character_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UnitySkillMission::clear_unity_character_type() {
  unity_character_type_ = 1;
  clear_has_unity_character_type();
}
inline ::b2::protocol::commondata::Character_TYPE UnitySkillMission::unity_character_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.UnitySkillMission.unity_character_type)
  return static_cast< ::b2::protocol::commondata::Character_TYPE >(unity_character_type_);
}
inline void UnitySkillMission::set_unity_character_type(::b2::protocol::commondata::Character_TYPE value) {
  assert(::b2::protocol::commondata::Character_TYPE_IsValid(value));
  set_has_unity_character_type();
  unity_character_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.UnitySkillMission.unity_character_type)
}

// required int32 step = 3;
inline bool UnitySkillMission::has_step() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UnitySkillMission::set_has_step() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UnitySkillMission::clear_has_step() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UnitySkillMission::clear_step() {
  step_ = 0;
  clear_has_step();
}
inline ::google::protobuf::int32 UnitySkillMission::step() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.UnitySkillMission.step)
  return step_;
}
inline void UnitySkillMission::set_step(::google::protobuf::int32 value) {
  set_has_step();
  step_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.UnitySkillMission.step)
}

// required .b2.protocol.commondata.MissionInfo.MissionStateType state = 4;
inline bool UnitySkillMission::has_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UnitySkillMission::set_has_state() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UnitySkillMission::clear_has_state() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UnitySkillMission::clear_state() {
  state_ = 1;
  clear_has_state();
}
inline ::b2::protocol::commondata::MissionInfo_MissionStateType UnitySkillMission::state() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.UnitySkillMission.state)
  return static_cast< ::b2::protocol::commondata::MissionInfo_MissionStateType >(state_);
}
inline void UnitySkillMission::set_state(::b2::protocol::commondata::MissionInfo_MissionStateType value) {
  assert(::b2::protocol::commondata::MissionInfo_MissionStateType_IsValid(value));
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.UnitySkillMission.state)
}

// -------------------------------------------------------------------

// UnitySkill

// required .b2.protocol.commondata.Character.TYPE main_character_type = 1;
inline bool UnitySkill::has_main_character_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UnitySkill::set_has_main_character_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UnitySkill::clear_has_main_character_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UnitySkill::clear_main_character_type() {
  main_character_type_ = 1;
  clear_has_main_character_type();
}
inline ::b2::protocol::commondata::Character_TYPE UnitySkill::main_character_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.UnitySkill.main_character_type)
  return static_cast< ::b2::protocol::commondata::Character_TYPE >(main_character_type_);
}
inline void UnitySkill::set_main_character_type(::b2::protocol::commondata::Character_TYPE value) {
  assert(::b2::protocol::commondata::Character_TYPE_IsValid(value));
  set_has_main_character_type();
  main_character_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.UnitySkill.main_character_type)
}

// required .b2.protocol.commondata.Character.TYPE unity_character_type = 2;
inline bool UnitySkill::has_unity_character_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UnitySkill::set_has_unity_character_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UnitySkill::clear_has_unity_character_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UnitySkill::clear_unity_character_type() {
  unity_character_type_ = 1;
  clear_has_unity_character_type();
}
inline ::b2::protocol::commondata::Character_TYPE UnitySkill::unity_character_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.UnitySkill.unity_character_type)
  return static_cast< ::b2::protocol::commondata::Character_TYPE >(unity_character_type_);
}
inline void UnitySkill::set_unity_character_type(::b2::protocol::commondata::Character_TYPE value) {
  assert(::b2::protocol::commondata::Character_TYPE_IsValid(value));
  set_has_unity_character_type();
  unity_character_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.UnitySkill.unity_character_type)
}

// required int32 step = 3;
inline bool UnitySkill::has_step() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UnitySkill::set_has_step() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UnitySkill::clear_has_step() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UnitySkill::clear_step() {
  step_ = 0;
  clear_has_step();
}
inline ::google::protobuf::int32 UnitySkill::step() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.UnitySkill.step)
  return step_;
}
inline void UnitySkill::set_step(::google::protobuf::int32 value) {
  set_has_step();
  step_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.UnitySkill.step)
}

// -------------------------------------------------------------------

// UnitySkillAwakenMission

// required .b2.protocol.commondata.Character.TYPE character_type = 1;
inline bool UnitySkillAwakenMission::has_character_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UnitySkillAwakenMission::set_has_character_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UnitySkillAwakenMission::clear_has_character_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UnitySkillAwakenMission::clear_character_type() {
  character_type_ = 1;
  clear_has_character_type();
}
inline ::b2::protocol::commondata::Character_TYPE UnitySkillAwakenMission::character_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.UnitySkillAwakenMission.character_type)
  return static_cast< ::b2::protocol::commondata::Character_TYPE >(character_type_);
}
inline void UnitySkillAwakenMission::set_character_type(::b2::protocol::commondata::Character_TYPE value) {
  assert(::b2::protocol::commondata::Character_TYPE_IsValid(value));
  set_has_character_type();
  character_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.UnitySkillAwakenMission.character_type)
}

// required int32 mission_id = 2;
inline bool UnitySkillAwakenMission::has_mission_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UnitySkillAwakenMission::set_has_mission_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UnitySkillAwakenMission::clear_has_mission_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UnitySkillAwakenMission::clear_mission_id() {
  mission_id_ = 0;
  clear_has_mission_id();
}
inline ::google::protobuf::int32 UnitySkillAwakenMission::mission_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.UnitySkillAwakenMission.mission_id)
  return mission_id_;
}
inline void UnitySkillAwakenMission::set_mission_id(::google::protobuf::int32 value) {
  set_has_mission_id();
  mission_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.UnitySkillAwakenMission.mission_id)
}

// required int32 try_count = 3;
inline bool UnitySkillAwakenMission::has_try_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UnitySkillAwakenMission::set_has_try_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UnitySkillAwakenMission::clear_has_try_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UnitySkillAwakenMission::clear_try_count() {
  try_count_ = 0;
  clear_has_try_count();
}
inline ::google::protobuf::int32 UnitySkillAwakenMission::try_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.UnitySkillAwakenMission.try_count)
  return try_count_;
}
inline void UnitySkillAwakenMission::set_try_count(::google::protobuf::int32 value) {
  set_has_try_count();
  try_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.UnitySkillAwakenMission.try_count)
}

// required bool completed = 4;
inline bool UnitySkillAwakenMission::has_completed() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UnitySkillAwakenMission::set_has_completed() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UnitySkillAwakenMission::clear_has_completed() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UnitySkillAwakenMission::clear_completed() {
  completed_ = false;
  clear_has_completed();
}
inline bool UnitySkillAwakenMission::completed() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.UnitySkillAwakenMission.completed)
  return completed_;
}
inline void UnitySkillAwakenMission::set_completed(bool value) {
  set_has_completed();
  completed_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.UnitySkillAwakenMission.completed)
}

// -------------------------------------------------------------------

// ContentsModeInfo

// required .b2.protocol.commondata.ContentsMode mode = 1;
inline bool ContentsModeInfo::has_mode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContentsModeInfo::set_has_mode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContentsModeInfo::clear_has_mode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContentsModeInfo::clear_mode() {
  mode_ = 1;
  clear_has_mode();
}
inline ::b2::protocol::commondata::ContentsMode ContentsModeInfo::mode() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ContentsModeInfo.mode)
  return static_cast< ::b2::protocol::commondata::ContentsMode >(mode_);
}
inline void ContentsModeInfo::set_mode(::b2::protocol::commondata::ContentsMode value) {
  assert(::b2::protocol::commondata::ContentsMode_IsValid(value));
  set_has_mode();
  mode_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ContentsModeInfo.mode)
}

// required .b2.protocol.commondata.ContentsModeState state = 2;
inline bool ContentsModeInfo::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ContentsModeInfo::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ContentsModeInfo::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ContentsModeInfo::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::b2::protocol::commondata::ContentsModeState ContentsModeInfo::state() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ContentsModeInfo.state)
  return static_cast< ::b2::protocol::commondata::ContentsModeState >(state_);
}
inline void ContentsModeInfo::set_state(::b2::protocol::commondata::ContentsModeState value) {
  assert(::b2::protocol::commondata::ContentsModeState_IsValid(value));
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ContentsModeInfo.state)
}

// -------------------------------------------------------------------

// ContentsOpen

// required int32 mode_id = 1;
inline bool ContentsOpen::has_mode_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContentsOpen::set_has_mode_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContentsOpen::clear_has_mode_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContentsOpen::clear_mode_id() {
  mode_id_ = 0;
  clear_has_mode_id();
}
inline ::google::protobuf::int32 ContentsOpen::mode_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ContentsOpen.mode_id)
  return mode_id_;
}
inline void ContentsOpen::set_mode_id(::google::protobuf::int32 value) {
  set_has_mode_id();
  mode_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ContentsOpen.mode_id)
}

// required bool opened = 2;
inline bool ContentsOpen::has_opened() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ContentsOpen::set_has_opened() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ContentsOpen::clear_has_opened() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ContentsOpen::clear_opened() {
  opened_ = false;
  clear_has_opened();
}
inline bool ContentsOpen::opened() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ContentsOpen.opened)
  return opened_;
}
inline void ContentsOpen::set_opened(bool value) {
  set_has_opened();
  opened_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ContentsOpen.opened)
}

// required int32 stage_id = 3;
inline bool ContentsOpen::has_stage_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ContentsOpen::set_has_stage_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ContentsOpen::clear_has_stage_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ContentsOpen::clear_stage_id() {
  stage_id_ = 0;
  clear_has_stage_id();
}
inline ::google::protobuf::int32 ContentsOpen::stage_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ContentsOpen.stage_id)
  return stage_id_;
}
inline void ContentsOpen::set_stage_id(::google::protobuf::int32 value) {
  set_has_stage_id();
  stage_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ContentsOpen.stage_id)
}

// required int32 tutorial_id = 4;
inline bool ContentsOpen::has_tutorial_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ContentsOpen::set_has_tutorial_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ContentsOpen::clear_has_tutorial_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ContentsOpen::clear_tutorial_id() {
  tutorial_id_ = 0;
  clear_has_tutorial_id();
}
inline ::google::protobuf::int32 ContentsOpen::tutorial_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.ContentsOpen.tutorial_id)
  return tutorial_id_;
}
inline void ContentsOpen::set_tutorial_id(::google::protobuf::int32 value) {
  set_has_tutorial_id();
  tutorial_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.ContentsOpen.tutorial_id)
}

// -------------------------------------------------------------------

// CharacterPower

// required .b2.protocol.commondata.Character.TYPE character_type = 1;
inline bool CharacterPower::has_character_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharacterPower::set_has_character_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharacterPower::clear_has_character_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharacterPower::clear_character_type() {
  character_type_ = 1;
  clear_has_character_type();
}
inline ::b2::protocol::commondata::Character_TYPE CharacterPower::character_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.CharacterPower.character_type)
  return static_cast< ::b2::protocol::commondata::Character_TYPE >(character_type_);
}
inline void CharacterPower::set_character_type(::b2::protocol::commondata::Character_TYPE value) {
  assert(::b2::protocol::commondata::Character_TYPE_IsValid(value));
  set_has_character_type();
  character_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.CharacterPower.character_type)
}

// required int32 total_power = 2;
inline bool CharacterPower::has_total_power() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharacterPower::set_has_total_power() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharacterPower::clear_has_total_power() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharacterPower::clear_total_power() {
  total_power_ = 0;
  clear_has_total_power();
}
inline ::google::protobuf::int32 CharacterPower::total_power() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.CharacterPower.total_power)
  return total_power_;
}
inline void CharacterPower::set_total_power(::google::protobuf::int32 value) {
  set_has_total_power();
  total_power_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.CharacterPower.total_power)
}

// -------------------------------------------------------------------

// AssaultBattleInfo

// optional int32 kill_count = 1;
inline bool AssaultBattleInfo::has_kill_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AssaultBattleInfo::set_has_kill_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AssaultBattleInfo::clear_has_kill_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AssaultBattleInfo::clear_kill_count() {
  kill_count_ = 0;
  clear_has_kill_count();
}
inline ::google::protobuf::int32 AssaultBattleInfo::kill_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.AssaultBattleInfo.kill_count)
  return kill_count_;
}
inline void AssaultBattleInfo::set_kill_count(::google::protobuf::int32 value) {
  set_has_kill_count();
  kill_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.AssaultBattleInfo.kill_count)
}

// optional int32 death_count = 2;
inline bool AssaultBattleInfo::has_death_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AssaultBattleInfo::set_has_death_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AssaultBattleInfo::clear_has_death_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AssaultBattleInfo::clear_death_count() {
  death_count_ = 0;
  clear_has_death_count();
}
inline ::google::protobuf::int32 AssaultBattleInfo::death_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.AssaultBattleInfo.death_count)
  return death_count_;
}
inline void AssaultBattleInfo::set_death_count(::google::protobuf::int32 value) {
  set_has_death_count();
  death_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.AssaultBattleInfo.death_count)
}

// optional int32 damage = 3;
inline bool AssaultBattleInfo::has_damage() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AssaultBattleInfo::set_has_damage() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AssaultBattleInfo::clear_has_damage() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AssaultBattleInfo::clear_damage() {
  damage_ = 0;
  clear_has_damage();
}
inline ::google::protobuf::int32 AssaultBattleInfo::damage() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.AssaultBattleInfo.damage)
  return damage_;
}
inline void AssaultBattleInfo::set_damage(::google::protobuf::int32 value) {
  set_has_damage();
  damage_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.AssaultBattleInfo.damage)
}

// -------------------------------------------------------------------

// RoomCharacter

// optional .b2.protocol.commondata.Character.TYPE character_type = 1;
inline bool RoomCharacter::has_character_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoomCharacter::set_has_character_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoomCharacter::clear_has_character_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoomCharacter::clear_character_type() {
  character_type_ = 1;
  clear_has_character_type();
}
inline ::b2::protocol::commondata::Character_TYPE RoomCharacter::character_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.RoomCharacter.character_type)
  return static_cast< ::b2::protocol::commondata::Character_TYPE >(character_type_);
}
inline void RoomCharacter::set_character_type(::b2::protocol::commondata::Character_TYPE value) {
  assert(::b2::protocol::commondata::Character_TYPE_IsValid(value));
  set_has_character_type();
  character_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.RoomCharacter.character_type)
}

// optional int32 character_power = 2;
inline bool RoomCharacter::has_character_power() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoomCharacter::set_has_character_power() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoomCharacter::clear_has_character_power() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoomCharacter::clear_character_power() {
  character_power_ = 0;
  clear_has_character_power();
}
inline ::google::protobuf::int32 RoomCharacter::character_power() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.RoomCharacter.character_power)
  return character_power_;
}
inline void RoomCharacter::set_character_power(::google::protobuf::int32 value) {
  set_has_character_power();
  character_power_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.RoomCharacter.character_power)
}

// optional int32 character_level = 3;
inline bool RoomCharacter::has_character_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoomCharacter::set_has_character_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoomCharacter::clear_has_character_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoomCharacter::clear_character_level() {
  character_level_ = 0;
  clear_has_character_level();
}
inline ::google::protobuf::int32 RoomCharacter::character_level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.RoomCharacter.character_level)
  return character_level_;
}
inline void RoomCharacter::set_character_level(::google::protobuf::int32 value) {
  set_has_character_level();
  character_level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.RoomCharacter.character_level)
}

// -------------------------------------------------------------------

// AdminMessage

// required string message = 1;
inline bool AdminMessage::has_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AdminMessage::set_has_message() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AdminMessage::clear_has_message() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AdminMessage::clear_message() {
  if (message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_->clear();
  }
  clear_has_message();
}
inline const ::std::string& AdminMessage::message() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.AdminMessage.message)
  return *message_;
}
inline void AdminMessage::set_message(const ::std::string& value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(value);
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.AdminMessage.message)
}
inline void AdminMessage::set_message(const char* value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(value);
  // @@protoc_insertion_point(field_set_char:b2.protocol.commondata.AdminMessage.message)
}
inline void AdminMessage::set_message(const char* value, size_t size) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:b2.protocol.commondata.AdminMessage.message)
}
inline ::std::string* AdminMessage::mutable_message() {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.AdminMessage.message)
  return message_;
}
inline ::std::string* AdminMessage::release_message() {
  clear_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = message_;
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AdminMessage::set_allocated_message(::std::string* message) {
  if (message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete message_;
  }
  if (message) {
    set_has_message();
    message_ = message;
  } else {
    clear_has_message();
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.commondata.AdminMessage.message)
}

// required int32 display_time = 2;
inline bool AdminMessage::has_display_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AdminMessage::set_has_display_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AdminMessage::clear_has_display_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AdminMessage::clear_display_time() {
  display_time_ = 0;
  clear_has_display_time();
}
inline ::google::protobuf::int32 AdminMessage::display_time() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.AdminMessage.display_time)
  return display_time_;
}
inline void AdminMessage::set_display_time(::google::protobuf::int32 value) {
  set_has_display_time();
  display_time_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.AdminMessage.display_time)
}

// -------------------------------------------------------------------

// PointEventStatus

// required int32 event_id = 1;
inline bool PointEventStatus::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PointEventStatus::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PointEventStatus::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PointEventStatus::clear_event_id() {
  event_id_ = 0;
  clear_has_event_id();
}
inline ::google::protobuf::int32 PointEventStatus::event_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.PointEventStatus.event_id)
  return event_id_;
}
inline void PointEventStatus::set_event_id(::google::protobuf::int32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.PointEventStatus.event_id)
}

// required int32 point = 2;
inline bool PointEventStatus::has_point() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PointEventStatus::set_has_point() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PointEventStatus::clear_has_point() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PointEventStatus::clear_point() {
  point_ = 0;
  clear_has_point();
}
inline ::google::protobuf::int32 PointEventStatus::point() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.PointEventStatus.point)
  return point_;
}
inline void PointEventStatus::set_point(::google::protobuf::int32 value) {
  set_has_point();
  point_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.PointEventStatus.point)
}

// required int32 reward_state_value = 3;
inline bool PointEventStatus::has_reward_state_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PointEventStatus::set_has_reward_state_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PointEventStatus::clear_has_reward_state_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PointEventStatus::clear_reward_state_value() {
  reward_state_value_ = 0;
  clear_has_reward_state_value();
}
inline ::google::protobuf::int32 PointEventStatus::reward_state_value() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.PointEventStatus.reward_state_value)
  return reward_state_value_;
}
inline void PointEventStatus::set_reward_state_value(::google::protobuf::int32 value) {
  set_has_reward_state_value();
  reward_state_value_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.PointEventStatus.reward_state_value)
}

// -------------------------------------------------------------------

// PointShopEventStatus

// required int32 event_id = 1;
inline bool PointShopEventStatus::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PointShopEventStatus::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PointShopEventStatus::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PointShopEventStatus::clear_event_id() {
  event_id_ = 0;
  clear_has_event_id();
}
inline ::google::protobuf::int32 PointShopEventStatus::event_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.PointShopEventStatus.event_id)
  return event_id_;
}
inline void PointShopEventStatus::set_event_id(::google::protobuf::int32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.PointShopEventStatus.event_id)
}

// required int32 point = 2;
inline bool PointShopEventStatus::has_point() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PointShopEventStatus::set_has_point() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PointShopEventStatus::clear_has_point() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PointShopEventStatus::clear_point() {
  point_ = 0;
  clear_has_point();
}
inline ::google::protobuf::int32 PointShopEventStatus::point() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.PointShopEventStatus.point)
  return point_;
}
inline void PointShopEventStatus::set_point(::google::protobuf::int32 value) {
  set_has_point();
  point_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.PointShopEventStatus.point)
}

// -------------------------------------------------------------------

// PointShopEventRewardHistory

// required int32 event_id = 1;
inline bool PointShopEventRewardHistory::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PointShopEventRewardHistory::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PointShopEventRewardHistory::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PointShopEventRewardHistory::clear_event_id() {
  event_id_ = 0;
  clear_has_event_id();
}
inline ::google::protobuf::int32 PointShopEventRewardHistory::event_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.PointShopEventRewardHistory.event_id)
  return event_id_;
}
inline void PointShopEventRewardHistory::set_event_id(::google::protobuf::int32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.PointShopEventRewardHistory.event_id)
}

// required int32 index = 2;
inline bool PointShopEventRewardHistory::has_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PointShopEventRewardHistory::set_has_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PointShopEventRewardHistory::clear_has_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PointShopEventRewardHistory::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 PointShopEventRewardHistory::index() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.PointShopEventRewardHistory.index)
  return index_;
}
inline void PointShopEventRewardHistory::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.PointShopEventRewardHistory.index)
}

// required int32 total_reward_count = 3;
inline bool PointShopEventRewardHistory::has_total_reward_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PointShopEventRewardHistory::set_has_total_reward_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PointShopEventRewardHistory::clear_has_total_reward_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PointShopEventRewardHistory::clear_total_reward_count() {
  total_reward_count_ = 0;
  clear_has_total_reward_count();
}
inline ::google::protobuf::int32 PointShopEventRewardHistory::total_reward_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.PointShopEventRewardHistory.total_reward_count)
  return total_reward_count_;
}
inline void PointShopEventRewardHistory::set_total_reward_count(::google::protobuf::int32 value) {
  set_has_total_reward_count();
  total_reward_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.PointShopEventRewardHistory.total_reward_count)
}

// -------------------------------------------------------------------

// GemPurchaseEventStatus

// required int32 event_id = 1;
inline bool GemPurchaseEventStatus::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GemPurchaseEventStatus::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GemPurchaseEventStatus::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GemPurchaseEventStatus::clear_event_id() {
  event_id_ = 0;
  clear_has_event_id();
}
inline ::google::protobuf::int32 GemPurchaseEventStatus::event_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GemPurchaseEventStatus.event_id)
  return event_id_;
}
inline void GemPurchaseEventStatus::set_event_id(::google::protobuf::int32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GemPurchaseEventStatus.event_id)
}

// required int32 gem_count = 2;
inline bool GemPurchaseEventStatus::has_gem_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GemPurchaseEventStatus::set_has_gem_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GemPurchaseEventStatus::clear_has_gem_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GemPurchaseEventStatus::clear_gem_count() {
  gem_count_ = 0;
  clear_has_gem_count();
}
inline ::google::protobuf::int32 GemPurchaseEventStatus::gem_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GemPurchaseEventStatus.gem_count)
  return gem_count_;
}
inline void GemPurchaseEventStatus::set_gem_count(::google::protobuf::int32 value) {
  set_has_gem_count();
  gem_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GemPurchaseEventStatus.gem_count)
}

// required int32 reward_state_value = 3;
inline bool GemPurchaseEventStatus::has_reward_state_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GemPurchaseEventStatus::set_has_reward_state_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GemPurchaseEventStatus::clear_has_reward_state_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GemPurchaseEventStatus::clear_reward_state_value() {
  reward_state_value_ = 0;
  clear_has_reward_state_value();
}
inline ::google::protobuf::int32 GemPurchaseEventStatus::reward_state_value() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.GemPurchaseEventStatus.reward_state_value)
  return reward_state_value_;
}
inline void GemPurchaseEventStatus::set_reward_state_value(::google::protobuf::int32 value) {
  set_has_reward_state_value();
  reward_state_value_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.GemPurchaseEventStatus.reward_state_value)
}

// -------------------------------------------------------------------

// LevelUpEventInfo

// required int32 event_id = 1;
inline bool LevelUpEventInfo::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LevelUpEventInfo::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LevelUpEventInfo::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LevelUpEventInfo::clear_event_id() {
  event_id_ = 0;
  clear_has_event_id();
}
inline ::google::protobuf::int32 LevelUpEventInfo::event_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.LevelUpEventInfo.event_id)
  return event_id_;
}
inline void LevelUpEventInfo::set_event_id(::google::protobuf::int32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.LevelUpEventInfo.event_id)
}

// required int32 index = 2;
inline bool LevelUpEventInfo::has_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LevelUpEventInfo::set_has_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LevelUpEventInfo::clear_has_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LevelUpEventInfo::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 LevelUpEventInfo::index() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.LevelUpEventInfo.index)
  return index_;
}
inline void LevelUpEventInfo::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.LevelUpEventInfo.index)
}

// required int32 state = 3;
inline bool LevelUpEventInfo::has_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LevelUpEventInfo::set_has_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LevelUpEventInfo::clear_has_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LevelUpEventInfo::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 LevelUpEventInfo::state() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.LevelUpEventInfo.state)
  return state_;
}
inline void LevelUpEventInfo::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.LevelUpEventInfo.state)
}

// -------------------------------------------------------------------

// SeasonMissionInfo

// required int32 event_id = 1;
inline bool SeasonMissionInfo::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SeasonMissionInfo::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SeasonMissionInfo::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SeasonMissionInfo::clear_event_id() {
  event_id_ = 0;
  clear_has_event_id();
}
inline ::google::protobuf::int32 SeasonMissionInfo::event_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.SeasonMissionInfo.event_id)
  return event_id_;
}
inline void SeasonMissionInfo::set_event_id(::google::protobuf::int32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.SeasonMissionInfo.event_id)
}

// required int32 day = 2;
inline bool SeasonMissionInfo::has_day() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SeasonMissionInfo::set_has_day() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SeasonMissionInfo::clear_has_day() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SeasonMissionInfo::clear_day() {
  day_ = 0;
  clear_has_day();
}
inline ::google::protobuf::int32 SeasonMissionInfo::day() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.SeasonMissionInfo.day)
  return day_;
}
inline void SeasonMissionInfo::set_day(::google::protobuf::int32 value) {
  set_has_day();
  day_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.SeasonMissionInfo.day)
}

// required int32 index = 3;
inline bool SeasonMissionInfo::has_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SeasonMissionInfo::set_has_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SeasonMissionInfo::clear_has_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SeasonMissionInfo::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 SeasonMissionInfo::index() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.SeasonMissionInfo.index)
  return index_;
}
inline void SeasonMissionInfo::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.SeasonMissionInfo.index)
}

// required int32 progress_count = 4;
inline bool SeasonMissionInfo::has_progress_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SeasonMissionInfo::set_has_progress_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SeasonMissionInfo::clear_has_progress_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SeasonMissionInfo::clear_progress_count() {
  progress_count_ = 0;
  clear_has_progress_count();
}
inline ::google::protobuf::int32 SeasonMissionInfo::progress_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.SeasonMissionInfo.progress_count)
  return progress_count_;
}
inline void SeasonMissionInfo::set_progress_count(::google::protobuf::int32 value) {
  set_has_progress_count();
  progress_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.SeasonMissionInfo.progress_count)
}

// required .b2.protocol.commondata.MissionInfo.MissionStateType state = 5;
inline bool SeasonMissionInfo::has_state() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SeasonMissionInfo::set_has_state() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SeasonMissionInfo::clear_has_state() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SeasonMissionInfo::clear_state() {
  state_ = 1;
  clear_has_state();
}
inline ::b2::protocol::commondata::MissionInfo_MissionStateType SeasonMissionInfo::state() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.SeasonMissionInfo.state)
  return static_cast< ::b2::protocol::commondata::MissionInfo_MissionStateType >(state_);
}
inline void SeasonMissionInfo::set_state(::b2::protocol::commondata::MissionInfo_MissionStateType value) {
  assert(::b2::protocol::commondata::MissionInfo_MissionStateType_IsValid(value));
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.SeasonMissionInfo.state)
}

// -------------------------------------------------------------------

// SeasonMissionEventStatus

// required int32 event_id = 1;
inline bool SeasonMissionEventStatus::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SeasonMissionEventStatus::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SeasonMissionEventStatus::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SeasonMissionEventStatus::clear_event_id() {
  event_id_ = 0;
  clear_has_event_id();
}
inline ::google::protobuf::int32 SeasonMissionEventStatus::event_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.SeasonMissionEventStatus.event_id)
  return event_id_;
}
inline void SeasonMissionEventStatus::set_event_id(::google::protobuf::int32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.SeasonMissionEventStatus.event_id)
}

// required int32 attendance_day = 2;
inline bool SeasonMissionEventStatus::has_attendance_day() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SeasonMissionEventStatus::set_has_attendance_day() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SeasonMissionEventStatus::clear_has_attendance_day() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SeasonMissionEventStatus::clear_attendance_day() {
  attendance_day_ = 0;
  clear_has_attendance_day();
}
inline ::google::protobuf::int32 SeasonMissionEventStatus::attendance_day() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.SeasonMissionEventStatus.attendance_day)
  return attendance_day_;
}
inline void SeasonMissionEventStatus::set_attendance_day(::google::protobuf::int32 value) {
  set_has_attendance_day();
  attendance_day_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.SeasonMissionEventStatus.attendance_day)
}

// required int64 next_attendance_time = 3;
inline bool SeasonMissionEventStatus::has_next_attendance_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SeasonMissionEventStatus::set_has_next_attendance_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SeasonMissionEventStatus::clear_has_next_attendance_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SeasonMissionEventStatus::clear_next_attendance_time() {
  next_attendance_time_ = GOOGLE_LONGLONG(0);
  clear_has_next_attendance_time();
}
inline ::google::protobuf::int64 SeasonMissionEventStatus::next_attendance_time() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.SeasonMissionEventStatus.next_attendance_time)
  return next_attendance_time_;
}
inline void SeasonMissionEventStatus::set_next_attendance_time(::google::protobuf::int64 value) {
  set_has_next_attendance_time();
  next_attendance_time_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.SeasonMissionEventStatus.next_attendance_time)
}

// -------------------------------------------------------------------

// StageClearEventStatus

// required int32 event_id = 1;
inline bool StageClearEventStatus::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StageClearEventStatus::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StageClearEventStatus::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StageClearEventStatus::clear_event_id() {
  event_id_ = 0;
  clear_has_event_id();
}
inline ::google::protobuf::int32 StageClearEventStatus::event_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.StageClearEventStatus.event_id)
  return event_id_;
}
inline void StageClearEventStatus::set_event_id(::google::protobuf::int32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.StageClearEventStatus.event_id)
}

// required int32 index = 2;
inline bool StageClearEventStatus::has_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StageClearEventStatus::set_has_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StageClearEventStatus::clear_has_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StageClearEventStatus::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 StageClearEventStatus::index() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.StageClearEventStatus.index)
  return index_;
}
inline void StageClearEventStatus::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.StageClearEventStatus.index)
}

// required int32 state = 3;
inline bool StageClearEventStatus::has_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StageClearEventStatus::set_has_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StageClearEventStatus::clear_has_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StageClearEventStatus::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 StageClearEventStatus::state() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.StageClearEventStatus.state)
  return state_;
}
inline void StageClearEventStatus::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.StageClearEventStatus.state)
}

// -------------------------------------------------------------------

// BlockChatUser

// required int64 account_id = 1;
inline bool BlockChatUser::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BlockChatUser::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BlockChatUser::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BlockChatUser::clear_account_id() {
  account_id_ = GOOGLE_LONGLONG(0);
  clear_has_account_id();
}
inline ::google::protobuf::int64 BlockChatUser::account_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.BlockChatUser.account_id)
  return account_id_;
}
inline void BlockChatUser::set_account_id(::google::protobuf::int64 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.BlockChatUser.account_id)
}

// required string nickname = 2;
inline bool BlockChatUser::has_nickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BlockChatUser::set_has_nickname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BlockChatUser::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BlockChatUser::clear_nickname() {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_->clear();
  }
  clear_has_nickname();
}
inline const ::std::string& BlockChatUser::nickname() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.BlockChatUser.nickname)
  return *nickname_;
}
inline void BlockChatUser::set_nickname(const ::std::string& value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.BlockChatUser.nickname)
}
inline void BlockChatUser::set_nickname(const char* value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set_char:b2.protocol.commondata.BlockChatUser.nickname)
}
inline void BlockChatUser::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:b2.protocol.commondata.BlockChatUser.nickname)
}
inline ::std::string* BlockChatUser::mutable_nickname() {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.BlockChatUser.nickname)
  return nickname_;
}
inline ::std::string* BlockChatUser::release_nickname() {
  clear_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = nickname_;
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BlockChatUser::set_allocated_nickname(::std::string* nickname) {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nickname_;
  }
  if (nickname) {
    set_has_nickname();
    nickname_ = nickname;
  } else {
    clear_has_nickname();
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.commondata.BlockChatUser.nickname)
}

// -------------------------------------------------------------------

// TenLotteryEventStatus

// required int32 event_id = 1;
inline bool TenLotteryEventStatus::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TenLotteryEventStatus::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TenLotteryEventStatus::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TenLotteryEventStatus::clear_event_id() {
  event_id_ = 0;
  clear_has_event_id();
}
inline ::google::protobuf::int32 TenLotteryEventStatus::event_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.TenLotteryEventStatus.event_id)
  return event_id_;
}
inline void TenLotteryEventStatus::set_event_id(::google::protobuf::int32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.TenLotteryEventStatus.event_id)
}

// required int32 lottery_count = 2;
inline bool TenLotteryEventStatus::has_lottery_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TenLotteryEventStatus::set_has_lottery_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TenLotteryEventStatus::clear_has_lottery_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TenLotteryEventStatus::clear_lottery_count() {
  lottery_count_ = 0;
  clear_has_lottery_count();
}
inline ::google::protobuf::int32 TenLotteryEventStatus::lottery_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.TenLotteryEventStatus.lottery_count)
  return lottery_count_;
}
inline void TenLotteryEventStatus::set_lottery_count(::google::protobuf::int32 value) {
  set_has_lottery_count();
  lottery_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.TenLotteryEventStatus.lottery_count)
}

// repeated int32 rewarded_indexs = 3;
inline int TenLotteryEventStatus::rewarded_indexs_size() const {
  return rewarded_indexs_.size();
}
inline void TenLotteryEventStatus::clear_rewarded_indexs() {
  rewarded_indexs_.Clear();
}
inline ::google::protobuf::int32 TenLotteryEventStatus::rewarded_indexs(int index) const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.TenLotteryEventStatus.rewarded_indexs)
  return rewarded_indexs_.Get(index);
}
inline void TenLotteryEventStatus::set_rewarded_indexs(int index, ::google::protobuf::int32 value) {
  rewarded_indexs_.Set(index, value);
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.TenLotteryEventStatus.rewarded_indexs)
}
inline void TenLotteryEventStatus::add_rewarded_indexs(::google::protobuf::int32 value) {
  rewarded_indexs_.Add(value);
  // @@protoc_insertion_point(field_add:b2.protocol.commondata.TenLotteryEventStatus.rewarded_indexs)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TenLotteryEventStatus::rewarded_indexs() const {
  // @@protoc_insertion_point(field_list:b2.protocol.commondata.TenLotteryEventStatus.rewarded_indexs)
  return rewarded_indexs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TenLotteryEventStatus::mutable_rewarded_indexs() {
  // @@protoc_insertion_point(field_mutable_list:b2.protocol.commondata.TenLotteryEventStatus.rewarded_indexs)
  return &rewarded_indexs_;
}

// -------------------------------------------------------------------

// HallOfFame

// required .b2.protocol.commondata.ContentsMode mode = 1;
inline bool HallOfFame::has_mode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HallOfFame::set_has_mode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HallOfFame::clear_has_mode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HallOfFame::clear_mode() {
  mode_ = 1;
  clear_has_mode();
}
inline ::b2::protocol::commondata::ContentsMode HallOfFame::mode() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.HallOfFame.mode)
  return static_cast< ::b2::protocol::commondata::ContentsMode >(mode_);
}
inline void HallOfFame::set_mode(::b2::protocol::commondata::ContentsMode value) {
  assert(::b2::protocol::commondata::ContentsMode_IsValid(value));
  set_has_mode();
  mode_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.HallOfFame.mode)
}

// required int32 ranking = 2;
inline bool HallOfFame::has_ranking() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HallOfFame::set_has_ranking() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HallOfFame::clear_has_ranking() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HallOfFame::clear_ranking() {
  ranking_ = 0;
  clear_has_ranking();
}
inline ::google::protobuf::int32 HallOfFame::ranking() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.HallOfFame.ranking)
  return ranking_;
}
inline void HallOfFame::set_ranking(::google::protobuf::int32 value) {
  set_has_ranking();
  ranking_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.HallOfFame.ranking)
}

// required int64 account_id = 3;
inline bool HallOfFame::has_account_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HallOfFame::set_has_account_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HallOfFame::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HallOfFame::clear_account_id() {
  account_id_ = GOOGLE_LONGLONG(0);
  clear_has_account_id();
}
inline ::google::protobuf::int64 HallOfFame::account_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.HallOfFame.account_id)
  return account_id_;
}
inline void HallOfFame::set_account_id(::google::protobuf::int64 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.HallOfFame.account_id)
}

// required int32 praised_count = 4;
inline bool HallOfFame::has_praised_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HallOfFame::set_has_praised_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HallOfFame::clear_has_praised_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HallOfFame::clear_praised_count() {
  praised_count_ = 0;
  clear_has_praised_count();
}
inline ::google::protobuf::int32 HallOfFame::praised_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.HallOfFame.praised_count)
  return praised_count_;
}
inline void HallOfFame::set_praised_count(::google::protobuf::int32 value) {
  set_has_praised_count();
  praised_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.HallOfFame.praised_count)
}

// required int32 match_grade = 10;
inline bool HallOfFame::has_match_grade() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void HallOfFame::set_has_match_grade() {
  _has_bits_[0] |= 0x00000010u;
}
inline void HallOfFame::clear_has_match_grade() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void HallOfFame::clear_match_grade() {
  match_grade_ = 0;
  clear_has_match_grade();
}
inline ::google::protobuf::int32 HallOfFame::match_grade() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.HallOfFame.match_grade)
  return match_grade_;
}
inline void HallOfFame::set_match_grade(::google::protobuf::int32 value) {
  set_has_match_grade();
  match_grade_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.HallOfFame.match_grade)
}

// required int32 match_start_count = 11;
inline bool HallOfFame::has_match_start_count() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void HallOfFame::set_has_match_start_count() {
  _has_bits_[0] |= 0x00000020u;
}
inline void HallOfFame::clear_has_match_start_count() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void HallOfFame::clear_match_start_count() {
  match_start_count_ = 0;
  clear_has_match_start_count();
}
inline ::google::protobuf::int32 HallOfFame::match_start_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.HallOfFame.match_start_count)
  return match_start_count_;
}
inline void HallOfFame::set_match_start_count(::google::protobuf::int32 value) {
  set_has_match_start_count();
  match_start_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.HallOfFame.match_start_count)
}

// required int32 mvp_count = 12;
inline bool HallOfFame::has_mvp_count() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void HallOfFame::set_has_mvp_count() {
  _has_bits_[0] |= 0x00000040u;
}
inline void HallOfFame::clear_has_mvp_count() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void HallOfFame::clear_mvp_count() {
  mvp_count_ = 0;
  clear_has_mvp_count();
}
inline ::google::protobuf::int32 HallOfFame::mvp_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.HallOfFame.mvp_count)
  return mvp_count_;
}
inline void HallOfFame::set_mvp_count(::google::protobuf::int32 value) {
  set_has_mvp_count();
  mvp_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.HallOfFame.mvp_count)
}

// -------------------------------------------------------------------

// HallOfFameUser

// required .b2.protocol.commondata.User user = 1;
inline bool HallOfFameUser::has_user() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HallOfFameUser::set_has_user() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HallOfFameUser::clear_has_user() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HallOfFameUser::clear_user() {
  if (user_ != NULL) user_->::b2::protocol::commondata::User::Clear();
  clear_has_user();
}
inline const ::b2::protocol::commondata::User& HallOfFameUser::user() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.HallOfFameUser.user)
  return user_ != NULL ? *user_ : *default_instance_->user_;
}
inline ::b2::protocol::commondata::User* HallOfFameUser::mutable_user() {
  set_has_user();
  if (user_ == NULL) user_ = new ::b2::protocol::commondata::User;
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.HallOfFameUser.user)
  return user_;
}
inline ::b2::protocol::commondata::User* HallOfFameUser::release_user() {
  clear_has_user();
  ::b2::protocol::commondata::User* temp = user_;
  user_ = NULL;
  return temp;
}
inline void HallOfFameUser::set_allocated_user(::b2::protocol::commondata::User* user) {
  delete user_;
  user_ = user;
  if (user) {
    set_has_user();
  } else {
    clear_has_user();
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.commondata.HallOfFameUser.user)
}

// repeated .b2.protocol.commondata.Item equip_items = 3;
inline int HallOfFameUser::equip_items_size() const {
  return equip_items_.size();
}
inline void HallOfFameUser::clear_equip_items() {
  equip_items_.Clear();
}
inline const ::b2::protocol::commondata::Item& HallOfFameUser::equip_items(int index) const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.HallOfFameUser.equip_items)
  return equip_items_.Get(index);
}
inline ::b2::protocol::commondata::Item* HallOfFameUser::mutable_equip_items(int index) {
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.HallOfFameUser.equip_items)
  return equip_items_.Mutable(index);
}
inline ::b2::protocol::commondata::Item* HallOfFameUser::add_equip_items() {
  // @@protoc_insertion_point(field_add:b2.protocol.commondata.HallOfFameUser.equip_items)
  return equip_items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Item >&
HallOfFameUser::equip_items() const {
  // @@protoc_insertion_point(field_list:b2.protocol.commondata.HallOfFameUser.equip_items)
  return equip_items_;
}
inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Item >*
HallOfFameUser::mutable_equip_items() {
  // @@protoc_insertion_point(field_mutable_list:b2.protocol.commondata.HallOfFameUser.equip_items)
  return &equip_items_;
}

// repeated .b2.protocol.commondata.Costume equip_costumes = 4;
inline int HallOfFameUser::equip_costumes_size() const {
  return equip_costumes_.size();
}
inline void HallOfFameUser::clear_equip_costumes() {
  equip_costumes_.Clear();
}
inline const ::b2::protocol::commondata::Costume& HallOfFameUser::equip_costumes(int index) const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.HallOfFameUser.equip_costumes)
  return equip_costumes_.Get(index);
}
inline ::b2::protocol::commondata::Costume* HallOfFameUser::mutable_equip_costumes(int index) {
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.HallOfFameUser.equip_costumes)
  return equip_costumes_.Mutable(index);
}
inline ::b2::protocol::commondata::Costume* HallOfFameUser::add_equip_costumes() {
  // @@protoc_insertion_point(field_add:b2.protocol.commondata.HallOfFameUser.equip_costumes)
  return equip_costumes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Costume >&
HallOfFameUser::equip_costumes() const {
  // @@protoc_insertion_point(field_list:b2.protocol.commondata.HallOfFameUser.equip_costumes)
  return equip_costumes_;
}
inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Costume >*
HallOfFameUser::mutable_equip_costumes() {
  // @@protoc_insertion_point(field_mutable_list:b2.protocol.commondata.HallOfFameUser.equip_costumes)
  return &equip_costumes_;
}

// repeated .b2.protocol.commondata.Totem equip_totems = 5;
inline int HallOfFameUser::equip_totems_size() const {
  return equip_totems_.size();
}
inline void HallOfFameUser::clear_equip_totems() {
  equip_totems_.Clear();
}
inline const ::b2::protocol::commondata::Totem& HallOfFameUser::equip_totems(int index) const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.HallOfFameUser.equip_totems)
  return equip_totems_.Get(index);
}
inline ::b2::protocol::commondata::Totem* HallOfFameUser::mutable_equip_totems(int index) {
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.HallOfFameUser.equip_totems)
  return equip_totems_.Mutable(index);
}
inline ::b2::protocol::commondata::Totem* HallOfFameUser::add_equip_totems() {
  // @@protoc_insertion_point(field_add:b2.protocol.commondata.HallOfFameUser.equip_totems)
  return equip_totems_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Totem >&
HallOfFameUser::equip_totems() const {
  // @@protoc_insertion_point(field_list:b2.protocol.commondata.HallOfFameUser.equip_totems)
  return equip_totems_;
}
inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Totem >*
HallOfFameUser::mutable_equip_totems() {
  // @@protoc_insertion_point(field_mutable_list:b2.protocol.commondata.HallOfFameUser.equip_totems)
  return &equip_totems_;
}

// optional int32 wing_grade = 10;
inline bool HallOfFameUser::has_wing_grade() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void HallOfFameUser::set_has_wing_grade() {
  _has_bits_[0] |= 0x00000010u;
}
inline void HallOfFameUser::clear_has_wing_grade() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void HallOfFameUser::clear_wing_grade() {
  wing_grade_ = 0;
  clear_has_wing_grade();
}
inline ::google::protobuf::int32 HallOfFameUser::wing_grade() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.HallOfFameUser.wing_grade)
  return wing_grade_;
}
inline void HallOfFameUser::set_wing_grade(::google::protobuf::int32 value) {
  set_has_wing_grade();
  wing_grade_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.HallOfFameUser.wing_grade)
}

// optional int32 wing_Level = 11;
inline bool HallOfFameUser::has_wing_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void HallOfFameUser::set_has_wing_level() {
  _has_bits_[0] |= 0x00000020u;
}
inline void HallOfFameUser::clear_has_wing_level() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void HallOfFameUser::clear_wing_level() {
  wing_level_ = 0;
  clear_has_wing_level();
}
inline ::google::protobuf::int32 HallOfFameUser::wing_level() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.HallOfFameUser.wing_Level)
  return wing_level_;
}
inline void HallOfFameUser::set_wing_level(::google::protobuf::int32 value) {
  set_has_wing_level();
  wing_level_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.HallOfFameUser.wing_Level)
}

// optional bool wing_visible = 12;
inline bool HallOfFameUser::has_wing_visible() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void HallOfFameUser::set_has_wing_visible() {
  _has_bits_[0] |= 0x00000040u;
}
inline void HallOfFameUser::clear_has_wing_visible() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void HallOfFameUser::clear_wing_visible() {
  wing_visible_ = false;
  clear_has_wing_visible();
}
inline bool HallOfFameUser::wing_visible() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.HallOfFameUser.wing_visible)
  return wing_visible_;
}
inline void HallOfFameUser::set_wing_visible(bool value) {
  set_has_wing_visible();
  wing_visible_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.HallOfFameUser.wing_visible)
}

// optional bool helmet_visible = 13;
inline bool HallOfFameUser::has_helmet_visible() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void HallOfFameUser::set_has_helmet_visible() {
  _has_bits_[0] |= 0x00000080u;
}
inline void HallOfFameUser::clear_has_helmet_visible() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void HallOfFameUser::clear_helmet_visible() {
  helmet_visible_ = false;
  clear_has_helmet_visible();
}
inline bool HallOfFameUser::helmet_visible() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.HallOfFameUser.helmet_visible)
  return helmet_visible_;
}
inline void HallOfFameUser::set_helmet_visible(bool value) {
  set_has_helmet_visible();
  helmet_visible_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.HallOfFameUser.helmet_visible)
}

// optional bool costume_weapon_visible = 14;
inline bool HallOfFameUser::has_costume_weapon_visible() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void HallOfFameUser::set_has_costume_weapon_visible() {
  _has_bits_[0] |= 0x00000100u;
}
inline void HallOfFameUser::clear_has_costume_weapon_visible() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void HallOfFameUser::clear_costume_weapon_visible() {
  costume_weapon_visible_ = false;
  clear_has_costume_weapon_visible();
}
inline bool HallOfFameUser::costume_weapon_visible() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.HallOfFameUser.costume_weapon_visible)
  return costume_weapon_visible_;
}
inline void HallOfFameUser::set_costume_weapon_visible(bool value) {
  set_has_costume_weapon_visible();
  costume_weapon_visible_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.HallOfFameUser.costume_weapon_visible)
}

// optional bool costume_hat_visible = 15;
inline bool HallOfFameUser::has_costume_hat_visible() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void HallOfFameUser::set_has_costume_hat_visible() {
  _has_bits_[0] |= 0x00000200u;
}
inline void HallOfFameUser::clear_has_costume_hat_visible() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void HallOfFameUser::clear_costume_hat_visible() {
  costume_hat_visible_ = false;
  clear_has_costume_hat_visible();
}
inline bool HallOfFameUser::costume_hat_visible() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.HallOfFameUser.costume_hat_visible)
  return costume_hat_visible_;
}
inline void HallOfFameUser::set_costume_hat_visible(bool value) {
  set_has_costume_hat_visible();
  costume_hat_visible_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.HallOfFameUser.costume_hat_visible)
}

// optional bool costume_armor_visible = 16;
inline bool HallOfFameUser::has_costume_armor_visible() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void HallOfFameUser::set_has_costume_armor_visible() {
  _has_bits_[0] |= 0x00000400u;
}
inline void HallOfFameUser::clear_has_costume_armor_visible() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void HallOfFameUser::clear_costume_armor_visible() {
  costume_armor_visible_ = false;
  clear_has_costume_armor_visible();
}
inline bool HallOfFameUser::costume_armor_visible() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.HallOfFameUser.costume_armor_visible)
  return costume_armor_visible_;
}
inline void HallOfFameUser::set_costume_armor_visible(bool value) {
  set_has_costume_armor_visible();
  costume_armor_visible_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.HallOfFameUser.costume_armor_visible)
}

// -------------------------------------------------------------------

// HallOfFameReward

// required .b2.protocol.commondata.ContentsMode mode = 1;
inline bool HallOfFameReward::has_mode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HallOfFameReward::set_has_mode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HallOfFameReward::clear_has_mode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HallOfFameReward::clear_mode() {
  mode_ = 1;
  clear_has_mode();
}
inline ::b2::protocol::commondata::ContentsMode HallOfFameReward::mode() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.HallOfFameReward.mode)
  return static_cast< ::b2::protocol::commondata::ContentsMode >(mode_);
}
inline void HallOfFameReward::set_mode(::b2::protocol::commondata::ContentsMode value) {
  assert(::b2::protocol::commondata::ContentsMode_IsValid(value));
  set_has_mode();
  mode_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.HallOfFameReward.mode)
}

// required int32 ranking = 2;
inline bool HallOfFameReward::has_ranking() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HallOfFameReward::set_has_ranking() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HallOfFameReward::clear_has_ranking() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HallOfFameReward::clear_ranking() {
  ranking_ = 0;
  clear_has_ranking();
}
inline ::google::protobuf::int32 HallOfFameReward::ranking() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.HallOfFameReward.ranking)
  return ranking_;
}
inline void HallOfFameReward::set_ranking(::google::protobuf::int32 value) {
  set_has_ranking();
  ranking_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.HallOfFameReward.ranking)
}

// repeated .b2.protocol.commondata.Reward rewards = 3;
inline int HallOfFameReward::rewards_size() const {
  return rewards_.size();
}
inline void HallOfFameReward::clear_rewards() {
  rewards_.Clear();
}
inline const ::b2::protocol::commondata::Reward& HallOfFameReward::rewards(int index) const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.HallOfFameReward.rewards)
  return rewards_.Get(index);
}
inline ::b2::protocol::commondata::Reward* HallOfFameReward::mutable_rewards(int index) {
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.HallOfFameReward.rewards)
  return rewards_.Mutable(index);
}
inline ::b2::protocol::commondata::Reward* HallOfFameReward::add_rewards() {
  // @@protoc_insertion_point(field_add:b2.protocol.commondata.HallOfFameReward.rewards)
  return rewards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward >&
HallOfFameReward::rewards() const {
  // @@protoc_insertion_point(field_list:b2.protocol.commondata.HallOfFameReward.rewards)
  return rewards_;
}
inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Reward >*
HallOfFameReward::mutable_rewards() {
  // @@protoc_insertion_point(field_mutable_list:b2.protocol.commondata.HallOfFameReward.rewards)
  return &rewards_;
}

// -------------------------------------------------------------------

// HallOfFamePraise

// required .b2.protocol.commondata.ContentsMode mode = 1;
inline bool HallOfFamePraise::has_mode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HallOfFamePraise::set_has_mode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HallOfFamePraise::clear_has_mode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HallOfFamePraise::clear_mode() {
  mode_ = 1;
  clear_has_mode();
}
inline ::b2::protocol::commondata::ContentsMode HallOfFamePraise::mode() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.HallOfFamePraise.mode)
  return static_cast< ::b2::protocol::commondata::ContentsMode >(mode_);
}
inline void HallOfFamePraise::set_mode(::b2::protocol::commondata::ContentsMode value) {
  assert(::b2::protocol::commondata::ContentsMode_IsValid(value));
  set_has_mode();
  mode_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.HallOfFamePraise.mode)
}

// required int32 praise_count = 2;
inline bool HallOfFamePraise::has_praise_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HallOfFamePraise::set_has_praise_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HallOfFamePraise::clear_has_praise_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HallOfFamePraise::clear_praise_count() {
  praise_count_ = 0;
  clear_has_praise_count();
}
inline ::google::protobuf::int32 HallOfFamePraise::praise_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.HallOfFamePraise.praise_count)
  return praise_count_;
}
inline void HallOfFamePraise::set_praise_count(::google::protobuf::int32 value) {
  set_has_praise_count();
  praise_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.HallOfFamePraise.praise_count)
}

// required int32 max_count = 3;
inline bool HallOfFamePraise::has_max_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HallOfFamePraise::set_has_max_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HallOfFamePraise::clear_has_max_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HallOfFamePraise::clear_max_count() {
  max_count_ = 0;
  clear_has_max_count();
}
inline ::google::protobuf::int32 HallOfFamePraise::max_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.HallOfFamePraise.max_count)
  return max_count_;
}
inline void HallOfFamePraise::set_max_count(::google::protobuf::int32 value) {
  set_has_max_count();
  max_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.HallOfFamePraise.max_count)
}

// required int64 target_account_id = 4;
inline bool HallOfFamePraise::has_target_account_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HallOfFamePraise::set_has_target_account_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HallOfFamePraise::clear_has_target_account_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HallOfFamePraise::clear_target_account_id() {
  target_account_id_ = GOOGLE_LONGLONG(0);
  clear_has_target_account_id();
}
inline ::google::protobuf::int64 HallOfFamePraise::target_account_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.HallOfFamePraise.target_account_id)
  return target_account_id_;
}
inline void HallOfFamePraise::set_target_account_id(::google::protobuf::int64 value) {
  set_has_target_account_id();
  target_account_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.HallOfFamePraise.target_account_id)
}

// -------------------------------------------------------------------

// SpendGemEventStatus

// required int32 event_id = 1;
inline bool SpendGemEventStatus::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SpendGemEventStatus::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SpendGemEventStatus::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SpendGemEventStatus::clear_event_id() {
  event_id_ = 0;
  clear_has_event_id();
}
inline ::google::protobuf::int32 SpendGemEventStatus::event_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.SpendGemEventStatus.event_id)
  return event_id_;
}
inline void SpendGemEventStatus::set_event_id(::google::protobuf::int32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.SpendGemEventStatus.event_id)
}

// required int32 spend_gem_count = 2;
inline bool SpendGemEventStatus::has_spend_gem_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SpendGemEventStatus::set_has_spend_gem_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SpendGemEventStatus::clear_has_spend_gem_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SpendGemEventStatus::clear_spend_gem_count() {
  spend_gem_count_ = 0;
  clear_has_spend_gem_count();
}
inline ::google::protobuf::int32 SpendGemEventStatus::spend_gem_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.SpendGemEventStatus.spend_gem_count)
  return spend_gem_count_;
}
inline void SpendGemEventStatus::set_spend_gem_count(::google::protobuf::int32 value) {
  set_has_spend_gem_count();
  spend_gem_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.SpendGemEventStatus.spend_gem_count)
}

// required int32 reward_state_value = 3;
inline bool SpendGemEventStatus::has_reward_state_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SpendGemEventStatus::set_has_reward_state_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SpendGemEventStatus::clear_has_reward_state_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SpendGemEventStatus::clear_reward_state_value() {
  reward_state_value_ = 0;
  clear_has_reward_state_value();
}
inline ::google::protobuf::int32 SpendGemEventStatus::reward_state_value() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.SpendGemEventStatus.reward_state_value)
  return reward_state_value_;
}
inline void SpendGemEventStatus::set_reward_state_value(::google::protobuf::int32 value) {
  set_has_reward_state_value();
  reward_state_value_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.SpendGemEventStatus.reward_state_value)
}

// -------------------------------------------------------------------

// TenLotterySavingsStatus

// required int32 event_id = 1;
inline bool TenLotterySavingsStatus::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TenLotterySavingsStatus::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TenLotterySavingsStatus::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TenLotterySavingsStatus::clear_event_id() {
  event_id_ = 0;
  clear_has_event_id();
}
inline ::google::protobuf::int32 TenLotterySavingsStatus::event_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.TenLotterySavingsStatus.event_id)
  return event_id_;
}
inline void TenLotterySavingsStatus::set_event_id(::google::protobuf::int32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.TenLotterySavingsStatus.event_id)
}

// required int32 current_point = 2;
inline bool TenLotterySavingsStatus::has_current_point() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TenLotterySavingsStatus::set_has_current_point() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TenLotterySavingsStatus::clear_has_current_point() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TenLotterySavingsStatus::clear_current_point() {
  current_point_ = 0;
  clear_has_current_point();
}
inline ::google::protobuf::int32 TenLotterySavingsStatus::current_point() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.TenLotterySavingsStatus.current_point)
  return current_point_;
}
inline void TenLotterySavingsStatus::set_current_point(::google::protobuf::int32 value) {
  set_has_current_point();
  current_point_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.TenLotterySavingsStatus.current_point)
}

// -------------------------------------------------------------------

// DiceEventMission

// required int32 event_type = 1;
inline bool DiceEventMission::has_event_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DiceEventMission::set_has_event_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DiceEventMission::clear_has_event_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DiceEventMission::clear_event_type() {
  event_type_ = 0;
  clear_has_event_type();
}
inline ::google::protobuf::int32 DiceEventMission::event_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.DiceEventMission.event_type)
  return event_type_;
}
inline void DiceEventMission::set_event_type(::google::protobuf::int32 value) {
  set_has_event_type();
  event_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.DiceEventMission.event_type)
}

// required int32 progress_count = 2;
inline bool DiceEventMission::has_progress_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DiceEventMission::set_has_progress_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DiceEventMission::clear_has_progress_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DiceEventMission::clear_progress_count() {
  progress_count_ = 0;
  clear_has_progress_count();
}
inline ::google::protobuf::int32 DiceEventMission::progress_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.DiceEventMission.progress_count)
  return progress_count_;
}
inline void DiceEventMission::set_progress_count(::google::protobuf::int32 value) {
  set_has_progress_count();
  progress_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.DiceEventMission.progress_count)
}

// required int32 state = 3;
inline bool DiceEventMission::has_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DiceEventMission::set_has_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DiceEventMission::clear_has_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DiceEventMission::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 DiceEventMission::state() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.DiceEventMission.state)
  return state_;
}
inline void DiceEventMission::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.DiceEventMission.state)
}

// -------------------------------------------------------------------

// DiceEventStatus

// required int32 event_id = 1;
inline bool DiceEventStatus::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DiceEventStatus::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DiceEventStatus::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DiceEventStatus::clear_event_id() {
  event_id_ = 0;
  clear_has_event_id();
}
inline ::google::protobuf::int32 DiceEventStatus::event_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.DiceEventStatus.event_id)
  return event_id_;
}
inline void DiceEventStatus::set_event_id(::google::protobuf::int32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.DiceEventStatus.event_id)
}

// required int32 point = 2;
inline bool DiceEventStatus::has_point() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DiceEventStatus::set_has_point() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DiceEventStatus::clear_has_point() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DiceEventStatus::clear_point() {
  point_ = 0;
  clear_has_point();
}
inline ::google::protobuf::int32 DiceEventStatus::point() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.DiceEventStatus.point)
  return point_;
}
inline void DiceEventStatus::set_point(::google::protobuf::int32 value) {
  set_has_point();
  point_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.DiceEventStatus.point)
}

// required int32 free_dice = 3;
inline bool DiceEventStatus::has_free_dice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DiceEventStatus::set_has_free_dice() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DiceEventStatus::clear_has_free_dice() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DiceEventStatus::clear_free_dice() {
  free_dice_ = 0;
  clear_has_free_dice();
}
inline ::google::protobuf::int32 DiceEventStatus::free_dice() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.DiceEventStatus.free_dice)
  return free_dice_;
}
inline void DiceEventStatus::set_free_dice(::google::protobuf::int32 value) {
  set_has_free_dice();
  free_dice_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.DiceEventStatus.free_dice)
}

// required int32 position = 4;
inline bool DiceEventStatus::has_position() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DiceEventStatus::set_has_position() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DiceEventStatus::clear_has_position() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DiceEventStatus::clear_position() {
  position_ = 0;
  clear_has_position();
}
inline ::google::protobuf::int32 DiceEventStatus::position() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.DiceEventStatus.position)
  return position_;
}
inline void DiceEventStatus::set_position(::google::protobuf::int32 value) {
  set_has_position();
  position_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.DiceEventStatus.position)
}

// repeated .b2.protocol.commondata.DiceEventMission missions = 5;
inline int DiceEventStatus::missions_size() const {
  return missions_.size();
}
inline void DiceEventStatus::clear_missions() {
  missions_.Clear();
}
inline const ::b2::protocol::commondata::DiceEventMission& DiceEventStatus::missions(int index) const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.DiceEventStatus.missions)
  return missions_.Get(index);
}
inline ::b2::protocol::commondata::DiceEventMission* DiceEventStatus::mutable_missions(int index) {
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.DiceEventStatus.missions)
  return missions_.Mutable(index);
}
inline ::b2::protocol::commondata::DiceEventMission* DiceEventStatus::add_missions() {
  // @@protoc_insertion_point(field_add:b2.protocol.commondata.DiceEventStatus.missions)
  return missions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::DiceEventMission >&
DiceEventStatus::missions() const {
  // @@protoc_insertion_point(field_list:b2.protocol.commondata.DiceEventStatus.missions)
  return missions_;
}
inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::DiceEventMission >*
DiceEventStatus::mutable_missions() {
  // @@protoc_insertion_point(field_mutable_list:b2.protocol.commondata.DiceEventStatus.missions)
  return &missions_;
}

// required int32 finish_count = 6;
inline bool DiceEventStatus::has_finish_count() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DiceEventStatus::set_has_finish_count() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DiceEventStatus::clear_has_finish_count() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DiceEventStatus::clear_finish_count() {
  finish_count_ = 0;
  clear_has_finish_count();
}
inline ::google::protobuf::int32 DiceEventStatus::finish_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.DiceEventStatus.finish_count)
  return finish_count_;
}
inline void DiceEventStatus::set_finish_count(::google::protobuf::int32 value) {
  set_has_finish_count();
  finish_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.DiceEventStatus.finish_count)
}

// required int32 buy_point_count = 7;
inline bool DiceEventStatus::has_buy_point_count() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DiceEventStatus::set_has_buy_point_count() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DiceEventStatus::clear_has_buy_point_count() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DiceEventStatus::clear_buy_point_count() {
  buy_point_count_ = 0;
  clear_has_buy_point_count();
}
inline ::google::protobuf::int32 DiceEventStatus::buy_point_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.DiceEventStatus.buy_point_count)
  return buy_point_count_;
}
inline void DiceEventStatus::set_buy_point_count(::google::protobuf::int32 value) {
  set_has_buy_point_count();
  buy_point_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.DiceEventStatus.buy_point_count)
}

// required int32 roll_dice_count = 8;
inline bool DiceEventStatus::has_roll_dice_count() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DiceEventStatus::set_has_roll_dice_count() {
  _has_bits_[0] |= 0x00000080u;
}
inline void DiceEventStatus::clear_has_roll_dice_count() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void DiceEventStatus::clear_roll_dice_count() {
  roll_dice_count_ = 0;
  clear_has_roll_dice_count();
}
inline ::google::protobuf::int32 DiceEventStatus::roll_dice_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.DiceEventStatus.roll_dice_count)
  return roll_dice_count_;
}
inline void DiceEventStatus::set_roll_dice_count(::google::protobuf::int32 value) {
  set_has_roll_dice_count();
  roll_dice_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.DiceEventStatus.roll_dice_count)
}

// required int32 mileage_reward_value = 9;
inline bool DiceEventStatus::has_mileage_reward_value() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void DiceEventStatus::set_has_mileage_reward_value() {
  _has_bits_[0] |= 0x00000100u;
}
inline void DiceEventStatus::clear_has_mileage_reward_value() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void DiceEventStatus::clear_mileage_reward_value() {
  mileage_reward_value_ = 0;
  clear_has_mileage_reward_value();
}
inline ::google::protobuf::int32 DiceEventStatus::mileage_reward_value() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.DiceEventStatus.mileage_reward_value)
  return mileage_reward_value_;
}
inline void DiceEventStatus::set_mileage_reward_value(::google::protobuf::int32 value) {
  set_has_mileage_reward_value();
  mileage_reward_value_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.DiceEventStatus.mileage_reward_value)
}

// -------------------------------------------------------------------

// DonationPointRewardState

// required int32 index = 1;
inline bool DonationPointRewardState::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DonationPointRewardState::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DonationPointRewardState::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DonationPointRewardState::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 DonationPointRewardState::index() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.DonationPointRewardState.index)
  return index_;
}
inline void DonationPointRewardState::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.DonationPointRewardState.index)
}

// required bool rewarded = 2;
inline bool DonationPointRewardState::has_rewarded() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DonationPointRewardState::set_has_rewarded() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DonationPointRewardState::clear_has_rewarded() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DonationPointRewardState::clear_rewarded() {
  rewarded_ = false;
  clear_has_rewarded();
}
inline bool DonationPointRewardState::rewarded() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.DonationPointRewardState.rewarded)
  return rewarded_;
}
inline void DonationPointRewardState::set_rewarded(bool value) {
  set_has_rewarded();
  rewarded_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.DonationPointRewardState.rewarded)
}

// -------------------------------------------------------------------

// DonationPresent

// required int32 item_template_id = 1;
inline bool DonationPresent::has_item_template_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DonationPresent::set_has_item_template_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DonationPresent::clear_has_item_template_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DonationPresent::clear_item_template_id() {
  item_template_id_ = 0;
  clear_has_item_template_id();
}
inline ::google::protobuf::int32 DonationPresent::item_template_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.DonationPresent.item_template_id)
  return item_template_id_;
}
inline void DonationPresent::set_item_template_id(::google::protobuf::int32 value) {
  set_has_item_template_id();
  item_template_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.DonationPresent.item_template_id)
}

// required int32 amount = 2;
inline bool DonationPresent::has_amount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DonationPresent::set_has_amount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DonationPresent::clear_has_amount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DonationPresent::clear_amount() {
  amount_ = 0;
  clear_has_amount();
}
inline ::google::protobuf::int32 DonationPresent::amount() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.DonationPresent.amount)
  return amount_;
}
inline void DonationPresent::set_amount(::google::protobuf::int32 value) {
  set_has_amount();
  amount_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.DonationPresent.amount)
}

// required .b2.protocol.commondata.DonationConsumableType donation_consumable_type = 3;
inline bool DonationPresent::has_donation_consumable_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DonationPresent::set_has_donation_consumable_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DonationPresent::clear_has_donation_consumable_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DonationPresent::clear_donation_consumable_type() {
  donation_consumable_type_ = 1;
  clear_has_donation_consumable_type();
}
inline ::b2::protocol::commondata::DonationConsumableType DonationPresent::donation_consumable_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.DonationPresent.donation_consumable_type)
  return static_cast< ::b2::protocol::commondata::DonationConsumableType >(donation_consumable_type_);
}
inline void DonationPresent::set_donation_consumable_type(::b2::protocol::commondata::DonationConsumableType value) {
  assert(::b2::protocol::commondata::DonationConsumableType_IsValid(value));
  set_has_donation_consumable_type();
  donation_consumable_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.DonationPresent.donation_consumable_type)
}

// -------------------------------------------------------------------

// DonationJobState

// required int32 donation_id = 1;
inline bool DonationJobState::has_donation_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DonationJobState::set_has_donation_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DonationJobState::clear_has_donation_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DonationJobState::clear_donation_id() {
  donation_id_ = 0;
  clear_has_donation_id();
}
inline ::google::protobuf::int32 DonationJobState::donation_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.DonationJobState.donation_id)
  return donation_id_;
}
inline void DonationJobState::set_donation_id(::google::protobuf::int32 value) {
  set_has_donation_id();
  donation_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.DonationJobState.donation_id)
}

// required .b2.protocol.commondata.DonationJobState.TYPE current_state = 2;
inline bool DonationJobState::has_current_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DonationJobState::set_has_current_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DonationJobState::clear_has_current_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DonationJobState::clear_current_state() {
  current_state_ = 1;
  clear_has_current_state();
}
inline ::b2::protocol::commondata::DonationJobState_TYPE DonationJobState::current_state() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.DonationJobState.current_state)
  return static_cast< ::b2::protocol::commondata::DonationJobState_TYPE >(current_state_);
}
inline void DonationJobState::set_current_state(::b2::protocol::commondata::DonationJobState_TYPE value) {
  assert(::b2::protocol::commondata::DonationJobState_TYPE_IsValid(value));
  set_has_current_state();
  current_state_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.DonationJobState.current_state)
}

// required bool completed = 3;
inline bool DonationJobState::has_completed() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DonationJobState::set_has_completed() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DonationJobState::clear_has_completed() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DonationJobState::clear_completed() {
  completed_ = false;
  clear_has_completed();
}
inline bool DonationJobState::completed() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.DonationJobState.completed)
  return completed_;
}
inline void DonationJobState::set_completed(bool value) {
  set_has_completed();
  completed_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.DonationJobState.completed)
}

// -------------------------------------------------------------------

// FactoryLimitStatus

// required int32 limit_id = 1;
inline bool FactoryLimitStatus::has_limit_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FactoryLimitStatus::set_has_limit_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FactoryLimitStatus::clear_has_limit_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FactoryLimitStatus::clear_limit_id() {
  limit_id_ = 0;
  clear_has_limit_id();
}
inline ::google::protobuf::int32 FactoryLimitStatus::limit_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.FactoryLimitStatus.limit_id)
  return limit_id_;
}
inline void FactoryLimitStatus::set_limit_id(::google::protobuf::int32 value) {
  set_has_limit_id();
  limit_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.FactoryLimitStatus.limit_id)
}

// required .b2.protocol.commondata.FactoryLimitType limit_type = 2;
inline bool FactoryLimitStatus::has_limit_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FactoryLimitStatus::set_has_limit_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FactoryLimitStatus::clear_has_limit_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FactoryLimitStatus::clear_limit_type() {
  limit_type_ = 1;
  clear_has_limit_type();
}
inline ::b2::protocol::commondata::FactoryLimitType FactoryLimitStatus::limit_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.FactoryLimitStatus.limit_type)
  return static_cast< ::b2::protocol::commondata::FactoryLimitType >(limit_type_);
}
inline void FactoryLimitStatus::set_limit_type(::b2::protocol::commondata::FactoryLimitType value) {
  assert(::b2::protocol::commondata::FactoryLimitType_IsValid(value));
  set_has_limit_type();
  limit_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.FactoryLimitStatus.limit_type)
}

// required .b2.protocol.commondata.FactoryLimitTimeType limit_time_type = 3;
inline bool FactoryLimitStatus::has_limit_time_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FactoryLimitStatus::set_has_limit_time_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FactoryLimitStatus::clear_has_limit_time_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FactoryLimitStatus::clear_limit_time_type() {
  limit_time_type_ = 1;
  clear_has_limit_time_type();
}
inline ::b2::protocol::commondata::FactoryLimitTimeType FactoryLimitStatus::limit_time_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.FactoryLimitStatus.limit_time_type)
  return static_cast< ::b2::protocol::commondata::FactoryLimitTimeType >(limit_time_type_);
}
inline void FactoryLimitStatus::set_limit_time_type(::b2::protocol::commondata::FactoryLimitTimeType value) {
  assert(::b2::protocol::commondata::FactoryLimitTimeType_IsValid(value));
  set_has_limit_time_type();
  limit_time_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.FactoryLimitStatus.limit_time_type)
}

// required int32 left_count = 4;
inline bool FactoryLimitStatus::has_left_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FactoryLimitStatus::set_has_left_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FactoryLimitStatus::clear_has_left_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FactoryLimitStatus::clear_left_count() {
  left_count_ = 0;
  clear_has_left_count();
}
inline ::google::protobuf::int32 FactoryLimitStatus::left_count() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.FactoryLimitStatus.left_count)
  return left_count_;
}
inline void FactoryLimitStatus::set_left_count(::google::protobuf::int32 value) {
  set_has_left_count();
  left_count_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.FactoryLimitStatus.left_count)
}

// -------------------------------------------------------------------

// FactoryPeriodicStatus

// required int32 factory_id = 1;
inline bool FactoryPeriodicStatus::has_factory_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FactoryPeriodicStatus::set_has_factory_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FactoryPeriodicStatus::clear_has_factory_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FactoryPeriodicStatus::clear_factory_id() {
  factory_id_ = 0;
  clear_has_factory_id();
}
inline ::google::protobuf::int32 FactoryPeriodicStatus::factory_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.FactoryPeriodicStatus.factory_id)
  return factory_id_;
}
inline void FactoryPeriodicStatus::set_factory_id(::google::protobuf::int32 value) {
  set_has_factory_id();
  factory_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.FactoryPeriodicStatus.factory_id)
}

// required int64 preview_time = 2;
inline bool FactoryPeriodicStatus::has_preview_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FactoryPeriodicStatus::set_has_preview_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FactoryPeriodicStatus::clear_has_preview_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FactoryPeriodicStatus::clear_preview_time() {
  preview_time_ = GOOGLE_LONGLONG(0);
  clear_has_preview_time();
}
inline ::google::protobuf::int64 FactoryPeriodicStatus::preview_time() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.FactoryPeriodicStatus.preview_time)
  return preview_time_;
}
inline void FactoryPeriodicStatus::set_preview_time(::google::protobuf::int64 value) {
  set_has_preview_time();
  preview_time_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.FactoryPeriodicStatus.preview_time)
}

// required int64 start_time = 3;
inline bool FactoryPeriodicStatus::has_start_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FactoryPeriodicStatus::set_has_start_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FactoryPeriodicStatus::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FactoryPeriodicStatus::clear_start_time() {
  start_time_ = GOOGLE_LONGLONG(0);
  clear_has_start_time();
}
inline ::google::protobuf::int64 FactoryPeriodicStatus::start_time() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.FactoryPeriodicStatus.start_time)
  return start_time_;
}
inline void FactoryPeriodicStatus::set_start_time(::google::protobuf::int64 value) {
  set_has_start_time();
  start_time_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.FactoryPeriodicStatus.start_time)
}

// required int64 end_time = 4;
inline bool FactoryPeriodicStatus::has_end_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FactoryPeriodicStatus::set_has_end_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FactoryPeriodicStatus::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FactoryPeriodicStatus::clear_end_time() {
  end_time_ = GOOGLE_LONGLONG(0);
  clear_has_end_time();
}
inline ::google::protobuf::int64 FactoryPeriodicStatus::end_time() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.FactoryPeriodicStatus.end_time)
  return end_time_;
}
inline void FactoryPeriodicStatus::set_end_time(::google::protobuf::int64 value) {
  set_has_end_time();
  end_time_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.FactoryPeriodicStatus.end_time)
}

// -------------------------------------------------------------------

// FactoryResult

// required .b2.protocol.commondata.FactoryResultType factory_result_type = 1;
inline bool FactoryResult::has_factory_result_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FactoryResult::set_has_factory_result_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FactoryResult::clear_has_factory_result_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FactoryResult::clear_factory_result_type() {
  factory_result_type_ = 1;
  clear_has_factory_result_type();
}
inline ::b2::protocol::commondata::FactoryResultType FactoryResult::factory_result_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.FactoryResult.factory_result_type)
  return static_cast< ::b2::protocol::commondata::FactoryResultType >(factory_result_type_);
}
inline void FactoryResult::set_factory_result_type(::b2::protocol::commondata::FactoryResultType value) {
  assert(::b2::protocol::commondata::FactoryResultType_IsValid(value));
  set_has_factory_result_type();
  factory_result_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.FactoryResult.factory_result_type)
}

// optional .b2.protocol.commondata.Item make_item = 2;
inline bool FactoryResult::has_make_item() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FactoryResult::set_has_make_item() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FactoryResult::clear_has_make_item() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FactoryResult::clear_make_item() {
  if (make_item_ != NULL) make_item_->::b2::protocol::commondata::Item::Clear();
  clear_has_make_item();
}
inline const ::b2::protocol::commondata::Item& FactoryResult::make_item() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.FactoryResult.make_item)
  return make_item_ != NULL ? *make_item_ : *default_instance_->make_item_;
}
inline ::b2::protocol::commondata::Item* FactoryResult::mutable_make_item() {
  set_has_make_item();
  if (make_item_ == NULL) make_item_ = new ::b2::protocol::commondata::Item;
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.FactoryResult.make_item)
  return make_item_;
}
inline ::b2::protocol::commondata::Item* FactoryResult::release_make_item() {
  clear_has_make_item();
  ::b2::protocol::commondata::Item* temp = make_item_;
  make_item_ = NULL;
  return temp;
}
inline void FactoryResult::set_allocated_make_item(::b2::protocol::commondata::Item* make_item) {
  delete make_item_;
  make_item_ = make_item;
  if (make_item) {
    set_has_make_item();
  } else {
    clear_has_make_item();
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.commondata.FactoryResult.make_item)
}

// optional .b2.protocol.commondata.Item bonus_item = 3;
inline bool FactoryResult::has_bonus_item() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FactoryResult::set_has_bonus_item() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FactoryResult::clear_has_bonus_item() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FactoryResult::clear_bonus_item() {
  if (bonus_item_ != NULL) bonus_item_->::b2::protocol::commondata::Item::Clear();
  clear_has_bonus_item();
}
inline const ::b2::protocol::commondata::Item& FactoryResult::bonus_item() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.FactoryResult.bonus_item)
  return bonus_item_ != NULL ? *bonus_item_ : *default_instance_->bonus_item_;
}
inline ::b2::protocol::commondata::Item* FactoryResult::mutable_bonus_item() {
  set_has_bonus_item();
  if (bonus_item_ == NULL) bonus_item_ = new ::b2::protocol::commondata::Item;
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.FactoryResult.bonus_item)
  return bonus_item_;
}
inline ::b2::protocol::commondata::Item* FactoryResult::release_bonus_item() {
  clear_has_bonus_item();
  ::b2::protocol::commondata::Item* temp = bonus_item_;
  bonus_item_ = NULL;
  return temp;
}
inline void FactoryResult::set_allocated_bonus_item(::b2::protocol::commondata::Item* bonus_item) {
  delete bonus_item_;
  bonus_item_ = bonus_item;
  if (bonus_item) {
    set_has_bonus_item();
  } else {
    clear_has_bonus_item();
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.commondata.FactoryResult.bonus_item)
}

// repeated .b2.protocol.commondata.Item refund_item = 4;
inline int FactoryResult::refund_item_size() const {
  return refund_item_.size();
}
inline void FactoryResult::clear_refund_item() {
  refund_item_.Clear();
}
inline const ::b2::protocol::commondata::Item& FactoryResult::refund_item(int index) const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.FactoryResult.refund_item)
  return refund_item_.Get(index);
}
inline ::b2::protocol::commondata::Item* FactoryResult::mutable_refund_item(int index) {
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.FactoryResult.refund_item)
  return refund_item_.Mutable(index);
}
inline ::b2::protocol::commondata::Item* FactoryResult::add_refund_item() {
  // @@protoc_insertion_point(field_add:b2.protocol.commondata.FactoryResult.refund_item)
  return refund_item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Item >&
FactoryResult::refund_item() const {
  // @@protoc_insertion_point(field_list:b2.protocol.commondata.FactoryResult.refund_item)
  return refund_item_;
}
inline ::google::protobuf::RepeatedPtrField< ::b2::protocol::commondata::Item >*
FactoryResult::mutable_refund_item() {
  // @@protoc_insertion_point(field_mutable_list:b2.protocol.commondata.FactoryResult.refund_item)
  return &refund_item_;
}

// -------------------------------------------------------------------

// UnsealBoxReward

// required .b2.protocol.commondata.RewardType reward_type = 1;
inline bool UnsealBoxReward::has_reward_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UnsealBoxReward::set_has_reward_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UnsealBoxReward::clear_has_reward_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UnsealBoxReward::clear_reward_type() {
  reward_type_ = 1;
  clear_has_reward_type();
}
inline ::b2::protocol::commondata::RewardType UnsealBoxReward::reward_type() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.UnsealBoxReward.reward_type)
  return static_cast< ::b2::protocol::commondata::RewardType >(reward_type_);
}
inline void UnsealBoxReward::set_reward_type(::b2::protocol::commondata::RewardType value) {
  assert(::b2::protocol::commondata::RewardType_IsValid(value));
  set_has_reward_type();
  reward_type_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.UnsealBoxReward.reward_type)
}

// optional int32 amount = 2;
inline bool UnsealBoxReward::has_amount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UnsealBoxReward::set_has_amount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UnsealBoxReward::clear_has_amount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UnsealBoxReward::clear_amount() {
  amount_ = 0;
  clear_has_amount();
}
inline ::google::protobuf::int32 UnsealBoxReward::amount() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.UnsealBoxReward.amount)
  return amount_;
}
inline void UnsealBoxReward::set_amount(::google::protobuf::int32 value) {
  set_has_amount();
  amount_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.UnsealBoxReward.amount)
}

// optional int64 template_id = 3;
inline bool UnsealBoxReward::has_template_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UnsealBoxReward::set_has_template_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UnsealBoxReward::clear_has_template_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UnsealBoxReward::clear_template_id() {
  template_id_ = GOOGLE_LONGLONG(0);
  clear_has_template_id();
}
inline ::google::protobuf::int64 UnsealBoxReward::template_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.UnsealBoxReward.template_id)
  return template_id_;
}
inline void UnsealBoxReward::set_template_id(::google::protobuf::int64 value) {
  set_has_template_id();
  template_id_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.UnsealBoxReward.template_id)
}

// optional int32 effect_grade = 4;
inline bool UnsealBoxReward::has_effect_grade() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UnsealBoxReward::set_has_effect_grade() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UnsealBoxReward::clear_has_effect_grade() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UnsealBoxReward::clear_effect_grade() {
  effect_grade_ = 0;
  clear_has_effect_grade();
}
inline ::google::protobuf::int32 UnsealBoxReward::effect_grade() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.UnsealBoxReward.effect_grade)
  return effect_grade_;
}
inline void UnsealBoxReward::set_effect_grade(::google::protobuf::int32 value) {
  set_has_effect_grade();
  effect_grade_ = value;
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.UnsealBoxReward.effect_grade)
}

// optional .b2.protocol.commondata.Item item = 5;
inline bool UnsealBoxReward::has_item() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UnsealBoxReward::set_has_item() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UnsealBoxReward::clear_has_item() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UnsealBoxReward::clear_item() {
  if (item_ != NULL) item_->::b2::protocol::commondata::Item::Clear();
  clear_has_item();
}
inline const ::b2::protocol::commondata::Item& UnsealBoxReward::item() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.UnsealBoxReward.item)
  return item_ != NULL ? *item_ : *default_instance_->item_;
}
inline ::b2::protocol::commondata::Item* UnsealBoxReward::mutable_item() {
  set_has_item();
  if (item_ == NULL) item_ = new ::b2::protocol::commondata::Item;
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.UnsealBoxReward.item)
  return item_;
}
inline ::b2::protocol::commondata::Item* UnsealBoxReward::release_item() {
  clear_has_item();
  ::b2::protocol::commondata::Item* temp = item_;
  item_ = NULL;
  return temp;
}
inline void UnsealBoxReward::set_allocated_item(::b2::protocol::commondata::Item* item) {
  delete item_;
  item_ = item;
  if (item) {
    set_has_item();
  } else {
    clear_has_item();
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.commondata.UnsealBoxReward.item)
}

// optional .b2.protocol.commondata.Totem totem = 6;
inline bool UnsealBoxReward::has_totem() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UnsealBoxReward::set_has_totem() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UnsealBoxReward::clear_has_totem() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UnsealBoxReward::clear_totem() {
  if (totem_ != NULL) totem_->::b2::protocol::commondata::Totem::Clear();
  clear_has_totem();
}
inline const ::b2::protocol::commondata::Totem& UnsealBoxReward::totem() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.UnsealBoxReward.totem)
  return totem_ != NULL ? *totem_ : *default_instance_->totem_;
}
inline ::b2::protocol::commondata::Totem* UnsealBoxReward::mutable_totem() {
  set_has_totem();
  if (totem_ == NULL) totem_ = new ::b2::protocol::commondata::Totem;
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.UnsealBoxReward.totem)
  return totem_;
}
inline ::b2::protocol::commondata::Totem* UnsealBoxReward::release_totem() {
  clear_has_totem();
  ::b2::protocol::commondata::Totem* temp = totem_;
  totem_ = NULL;
  return temp;
}
inline void UnsealBoxReward::set_allocated_totem(::b2::protocol::commondata::Totem* totem) {
  delete totem_;
  totem_ = totem;
  if (totem) {
    set_has_totem();
  } else {
    clear_has_totem();
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.commondata.UnsealBoxReward.totem)
}

// optional .b2.protocol.commondata.Aether aether = 7;
inline bool UnsealBoxReward::has_aether() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void UnsealBoxReward::set_has_aether() {
  _has_bits_[0] |= 0x00000040u;
}
inline void UnsealBoxReward::clear_has_aether() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void UnsealBoxReward::clear_aether() {
  if (aether_ != NULL) aether_->::b2::protocol::commondata::Aether::Clear();
  clear_has_aether();
}
inline const ::b2::protocol::commondata::Aether& UnsealBoxReward::aether() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.UnsealBoxReward.aether)
  return aether_ != NULL ? *aether_ : *default_instance_->aether_;
}
inline ::b2::protocol::commondata::Aether* UnsealBoxReward::mutable_aether() {
  set_has_aether();
  if (aether_ == NULL) aether_ = new ::b2::protocol::commondata::Aether;
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.UnsealBoxReward.aether)
  return aether_;
}
inline ::b2::protocol::commondata::Aether* UnsealBoxReward::release_aether() {
  clear_has_aether();
  ::b2::protocol::commondata::Aether* temp = aether_;
  aether_ = NULL;
  return temp;
}
inline void UnsealBoxReward::set_allocated_aether(::b2::protocol::commondata::Aether* aether) {
  delete aether_;
  aether_ = aether;
  if (aether) {
    set_has_aether();
  } else {
    clear_has_aether();
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.commondata.UnsealBoxReward.aether)
}

// -------------------------------------------------------------------

// WorldLocation

// required .b2.protocol.commondata.Endpoint channel_endpoint = 1;
inline bool WorldLocation::has_channel_endpoint() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorldLocation::set_has_channel_endpoint() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorldLocation::clear_has_channel_endpoint() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorldLocation::clear_channel_endpoint() {
  if (channel_endpoint_ != NULL) channel_endpoint_->::b2::protocol::commondata::Endpoint::Clear();
  clear_has_channel_endpoint();
}
inline const ::b2::protocol::commondata::Endpoint& WorldLocation::channel_endpoint() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.WorldLocation.channel_endpoint)
  return channel_endpoint_ != NULL ? *channel_endpoint_ : *default_instance_->channel_endpoint_;
}
inline ::b2::protocol::commondata::Endpoint* WorldLocation::mutable_channel_endpoint() {
  set_has_channel_endpoint();
  if (channel_endpoint_ == NULL) channel_endpoint_ = new ::b2::protocol::commondata::Endpoint;
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.WorldLocation.channel_endpoint)
  return channel_endpoint_;
}
inline ::b2::protocol::commondata::Endpoint* WorldLocation::release_channel_endpoint() {
  clear_has_channel_endpoint();
  ::b2::protocol::commondata::Endpoint* temp = channel_endpoint_;
  channel_endpoint_ = NULL;
  return temp;
}
inline void WorldLocation::set_allocated_channel_endpoint(::b2::protocol::commondata::Endpoint* channel_endpoint) {
  delete channel_endpoint_;
  channel_endpoint_ = channel_endpoint;
  if (channel_endpoint) {
    set_has_channel_endpoint();
  } else {
    clear_has_channel_endpoint();
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.commondata.WorldLocation.channel_endpoint)
}

// required string world_id = 2;
inline bool WorldLocation::has_world_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorldLocation::set_has_world_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorldLocation::clear_has_world_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorldLocation::clear_world_id() {
  if (world_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    world_id_->clear();
  }
  clear_has_world_id();
}
inline const ::std::string& WorldLocation::world_id() const {
  // @@protoc_insertion_point(field_get:b2.protocol.commondata.WorldLocation.world_id)
  return *world_id_;
}
inline void WorldLocation::set_world_id(const ::std::string& value) {
  set_has_world_id();
  if (world_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    world_id_ = new ::std::string;
  }
  world_id_->assign(value);
  // @@protoc_insertion_point(field_set:b2.protocol.commondata.WorldLocation.world_id)
}
inline void WorldLocation::set_world_id(const char* value) {
  set_has_world_id();
  if (world_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    world_id_ = new ::std::string;
  }
  world_id_->assign(value);
  // @@protoc_insertion_point(field_set_char:b2.protocol.commondata.WorldLocation.world_id)
}
inline void WorldLocation::set_world_id(const char* value, size_t size) {
  set_has_world_id();
  if (world_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    world_id_ = new ::std::string;
  }
  world_id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:b2.protocol.commondata.WorldLocation.world_id)
}
inline ::std::string* WorldLocation::mutable_world_id() {
  set_has_world_id();
  if (world_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    world_id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:b2.protocol.commondata.WorldLocation.world_id)
  return world_id_;
}
inline ::std::string* WorldLocation::release_world_id() {
  clear_has_world_id();
  if (world_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = world_id_;
    world_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void WorldLocation::set_allocated_world_id(::std::string* world_id) {
  if (world_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete world_id_;
  }
  if (world_id) {
    set_has_world_id();
    world_id_ = world_id;
  } else {
    clear_has_world_id();
    world_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:b2.protocol.commondata.WorldLocation.world_id)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace commondata
}  // namespace protocol
}  // namespace b2

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::b2::protocol::commondata::GlobalAccount_TYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::GlobalAccount_TYPE>() {
  return ::b2::protocol::commondata::GlobalAccount_TYPE_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::GlobalAccount_STATUS> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::GlobalAccount_STATUS>() {
  return ::b2::protocol::commondata::GlobalAccount_STATUS_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::Character_TYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::Character_TYPE>() {
  return ::b2::protocol::commondata::Character_TYPE_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::LightCharacter_TYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::LightCharacter_TYPE>() {
  return ::b2::protocol::commondata::LightCharacter_TYPE_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::Item_TYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::Item_TYPE>() {
  return ::b2::protocol::commondata::Item_TYPE_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::Item_CharacterType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::Item_CharacterType>() {
  return ::b2::protocol::commondata::Item_CharacterType_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::Costume_TYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::Costume_TYPE>() {
  return ::b2::protocol::commondata::Costume_TYPE_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::Costume_CharacterType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::Costume_CharacterType>() {
  return ::b2::protocol::commondata::Costume_CharacterType_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::Totem_CharacterType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::Totem_CharacterType>() {
  return ::b2::protocol::commondata::Totem_CharacterType_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::TotemRefineState_Refinestatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::TotemRefineState_Refinestatus>() {
  return ::b2::protocol::commondata::TotemRefineState_Refinestatus_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::Inventory_TYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::Inventory_TYPE>() {
  return ::b2::protocol::commondata::Inventory_TYPE_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::Aether_TYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::Aether_TYPE>() {
  return ::b2::protocol::commondata::Aether_TYPE_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::Aether_TIER> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::Aether_TIER>() {
  return ::b2::protocol::commondata::Aether_TIER_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::Aether_CharacterType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::Aether_CharacterType>() {
  return ::b2::protocol::commondata::Aether_CharacterType_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::Aether_SetOptionType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::Aether_SetOptionType>() {
  return ::b2::protocol::commondata::Aether_SetOptionType_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::QuestInfo_QuestSlotType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::QuestInfo_QuestSlotType>() {
  return ::b2::protocol::commondata::QuestInfo_QuestSlotType_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::MissionInfo_MissionType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::MissionInfo_MissionType>() {
  return ::b2::protocol::commondata::MissionInfo_MissionType_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::MissionInfo_MissionStateType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::MissionInfo_MissionStateType>() {
  return ::b2::protocol::commondata::MissionInfo_MissionStateType_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::Guild_JoinOption> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::Guild_JoinOption>() {
  return ::b2::protocol::commondata::Guild_JoinOption_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::Guild_InviteState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::Guild_InviteState>() {
  return ::b2::protocol::commondata::Guild_InviteState_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::GuildMember_Rank> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::GuildMember_Rank>() {
  return ::b2::protocol::commondata::GuildMember_Rank_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::BattleFormation_TYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::BattleFormation_TYPE>() {
  return ::b2::protocol::commondata::BattleFormation_TYPE_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::BattleFormation_BuffType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::BattleFormation_BuffType>() {
  return ::b2::protocol::commondata::BattleFormation_BuffType_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::GuildBattleEntry_TYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::GuildBattleEntry_TYPE>() {
  return ::b2::protocol::commondata::GuildBattleEntry_TYPE_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::GuildBattleResult_TYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::GuildBattleResult_TYPE>() {
  return ::b2::protocol::commondata::GuildBattleResult_TYPE_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::GuildBattleState_TYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::GuildBattleState_TYPE>() {
  return ::b2::protocol::commondata::GuildBattleState_TYPE_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::MatchMaking_TYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::MatchMaking_TYPE>() {
  return ::b2::protocol::commondata::MatchMaking_TYPE_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::MatchMaking_STATE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::MatchMaking_STATE>() {
  return ::b2::protocol::commondata::MatchMaking_STATE_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::Invitation_TYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::Invitation_TYPE>() {
  return ::b2::protocol::commondata::Invitation_TYPE_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::MatchInfo_TYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::MatchInfo_TYPE>() {
  return ::b2::protocol::commondata::MatchInfo_TYPE_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::Room_TYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::Room_TYPE>() {
  return ::b2::protocol::commondata::Room_TYPE_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::Room_ACCESS> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::Room_ACCESS>() {
  return ::b2::protocol::commondata::Room_ACCESS_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::Shop_DrawPriceType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::Shop_DrawPriceType>() {
  return ::b2::protocol::commondata::Shop_DrawPriceType_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::Shop_MileageType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::Shop_MileageType>() {
  return ::b2::protocol::commondata::Shop_MileageType_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::Shop_BuyPriceType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::Shop_BuyPriceType>() {
  return ::b2::protocol::commondata::Shop_BuyPriceType_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::Shop_ProductType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::Shop_ProductType>() {
  return ::b2::protocol::commondata::Shop_ProductType_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::Shop_MarkType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::Shop_MarkType>() {
  return ::b2::protocol::commondata::Shop_MarkType_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::Shop_ShopType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::Shop_ShopType>() {
  return ::b2::protocol::commondata::Shop_ShopType_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::Shop_RestrictType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::Shop_RestrictType>() {
  return ::b2::protocol::commondata::Shop_RestrictType_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::MarketPurchaseInfo_STATE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::MarketPurchaseInfo_STATE>() {
  return ::b2::protocol::commondata::MarketPurchaseInfo_STATE_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::MatchResult_TYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::MatchResult_TYPE>() {
  return ::b2::protocol::commondata::MatchResult_TYPE_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::DonationJobState_TYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::DonationJobState_TYPE>() {
  return ::b2::protocol::commondata::DonationJobState_TYPE_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::StatusCode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::StatusCode>() {
  return ::b2::protocol::commondata::StatusCode_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::FriendInviteRewardType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::FriendInviteRewardType>() {
  return ::b2::protocol::commondata::FriendInviteRewardType_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::ItemQuality> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::ItemQuality>() {
  return ::b2::protocol::commondata::ItemQuality_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::SealSlotOpenPriceType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::SealSlotOpenPriceType>() {
  return ::b2::protocol::commondata::SealSlotOpenPriceType_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::SealPriceType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::SealPriceType>() {
  return ::b2::protocol::commondata::SealPriceType_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::TotemEquipSlot> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::TotemEquipSlot>() {
  return ::b2::protocol::commondata::TotemEquipSlot_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::EquipPosition> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::EquipPosition>() {
  return ::b2::protocol::commondata::EquipPosition_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::GroupPrefix> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::GroupPrefix>() {
  return ::b2::protocol::commondata::GroupPrefix_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::QuestType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::QuestType>() {
  return ::b2::protocol::commondata::QuestType_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::MainQuestType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::MainQuestType>() {
  return ::b2::protocol::commondata::MainQuestType_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::RewardType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::RewardType>() {
  return ::b2::protocol::commondata::RewardType_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::RewardPushType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::RewardPushType>() {
  return ::b2::protocol::commondata::RewardPushType_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::StageBuffOptionFlags> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::StageBuffOptionFlags>() {
  return ::b2::protocol::commondata::StageBuffOptionFlags_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::StageRepeatMode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::StageRepeatMode>() {
  return ::b2::protocol::commondata::StageRepeatMode_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::StageDifficulty> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::StageDifficulty>() {
  return ::b2::protocol::commondata::StageDifficulty_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::StageClearProperty> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::StageClearProperty>() {
  return ::b2::protocol::commondata::StageClearProperty_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::MailCategory> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::MailCategory>() {
  return ::b2::protocol::commondata::MailCategory_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::MailAttachType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::MailAttachType>() {
  return ::b2::protocol::commondata::MailAttachType_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::MailPresentAttachType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::MailPresentAttachType>() {
  return ::b2::protocol::commondata::MailPresentAttachType_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::MailSourceType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::MailSourceType>() {
  return ::b2::protocol::commondata::MailSourceType_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::MailSenderType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::MailSenderType>() {
  return ::b2::protocol::commondata::MailSenderType_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::DayOfWeek> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::DayOfWeek>() {
  return ::b2::protocol::commondata::DayOfWeek_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::AttributeChange> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::AttributeChange>() {
  return ::b2::protocol::commondata::AttributeChange_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::ModeType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::ModeType>() {
  return ::b2::protocol::commondata::ModeType_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::EquipCategory> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::EquipCategory>() {
  return ::b2::protocol::commondata::EquipCategory_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::LotteryGrade> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::LotteryGrade>() {
  return ::b2::protocol::commondata::LotteryGrade_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::CollectionItemState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::CollectionItemState>() {
  return ::b2::protocol::commondata::CollectionItemState_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::CollectionCategory> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::CollectionCategory>() {
  return ::b2::protocol::commondata::CollectionCategory_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::RaidType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::RaidType>() {
  return ::b2::protocol::commondata::RaidType_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::DailyAttendanceType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::DailyAttendanceType>() {
  return ::b2::protocol::commondata::DailyAttendanceType_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::DuelMode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::DuelMode>() {
  return ::b2::protocol::commondata::DuelMode_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::RewardBoxGrade> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::RewardBoxGrade>() {
  return ::b2::protocol::commondata::RewardBoxGrade_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::ItemGetRouteType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::ItemGetRouteType>() {
  return ::b2::protocol::commondata::ItemGetRouteType_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::UnitySkillEventType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::UnitySkillEventType>() {
  return ::b2::protocol::commondata::UnitySkillEventType_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::ContentsModeState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::ContentsModeState>() {
  return ::b2::protocol::commondata::ContentsModeState_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::ContentsMode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::ContentsMode>() {
  return ::b2::protocol::commondata::ContentsMode_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::EventCategory> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::EventCategory>() {
  return ::b2::protocol::commondata::EventCategory_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::HotTimeBuffType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::HotTimeBuffType>() {
  return ::b2::protocol::commondata::HotTimeBuffType_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::ReportModeType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::ReportModeType>() {
  return ::b2::protocol::commondata::ReportModeType_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::DiceEventCellType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::DiceEventCellType>() {
  return ::b2::protocol::commondata::DiceEventCellType_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::DonationConsumableType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::DonationConsumableType>() {
  return ::b2::protocol::commondata::DonationConsumableType_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::DonationCostType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::DonationCostType>() {
  return ::b2::protocol::commondata::DonationCostType_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::FairyType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::FairyType>() {
  return ::b2::protocol::commondata::FairyType_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::TotemGrade> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::TotemGrade>() {
  return ::b2::protocol::commondata::TotemGrade_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::TotemBasePrefix> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::TotemBasePrefix>() {
  return ::b2::protocol::commondata::TotemBasePrefix_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::TotemRefinePrefix> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::TotemRefinePrefix>() {
  return ::b2::protocol::commondata::TotemRefinePrefix_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::TotemRefineCostType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::TotemRefineCostType>() {
  return ::b2::protocol::commondata::TotemRefineCostType_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::ExchangePriceType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::ExchangePriceType>() {
  return ::b2::protocol::commondata::ExchangePriceType_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::FactoryResultType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::FactoryResultType>() {
  return ::b2::protocol::commondata::FactoryResultType_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::FactoryLimitType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::FactoryLimitType>() {
  return ::b2::protocol::commondata::FactoryLimitType_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::FactoryLimitTimeType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::FactoryLimitTimeType>() {
  return ::b2::protocol::commondata::FactoryLimitTimeType_descriptor();
}
template <> struct is_proto_enum< ::b2::protocol::commondata::FactoryVisibleType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::b2::protocol::commondata::FactoryVisibleType>() {
  return ::b2::protocol::commondata::FactoryVisibleType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CommonData_2eproto__INCLUDED
